[{"path":"Parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"class seedu.meal360.Parser {","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"~ Ui ui","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"+ String combineWords(String[],int,int)","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"+ HashMap\u003cString,Integer\u003e parseIngredientName(String[])","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"+ Recipe parseAddRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"+ Recipe parseEditRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"+ String parseDeleteRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"+ String parseTagRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"+ String parseAddRecipeTag(String,RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"+ String parseRemoveRecipeTag(String,RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"+ RecipeList parseListRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"+ Recipe parseViewRecipe(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"+ Recipe parseViewRecipe(String,RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"+ Recipe parseRandomRecipe(RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"+ WeeklyPlan parseWeeklyPlan(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"- WeeklyPlan parseEditSingleWeeklyPlan(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"- WeeklyPlan parseEditMultiWeeklyPlan(String[],RecipeList)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"- StringBuilder getRecipeNames(String[],ArrayList\u003cString\u003e,StringBuilder,int,int)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"+ LocalDate parseDate(String)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"+ void parseAddUserIngredients(String[],IngredientList)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"+ void parseDeleteUserIngredients(String[],IngredientList)","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"TopGun2001":24}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"# Meal360","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"Given below are instructions on how to use Meal360, a simple CLI meal planner application.","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/meal360/Meal360.java` file, right-click it, and choose `Run Meal360.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"   \u003e Task :compileJava UP-TO-DATE","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"   \u003e Task :processResources UP-TO-DATE","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"   \u003e Task :classes UP-TO-DATE","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"   \u003e Task :Meal360.main()","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"   Welcome to Meal360, your ultimate Recipe Manager!","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"   __  __          _ ____  __  __","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"   |  \\/  |___ __ _| |__ / / / /  \\","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"   | |\\/| / -_) _` | ||_ \\/ _ \\ () |","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"   |_|  |_\\___\\__,_|_|___/\\___/\\__/","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"   ","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"   | Loading recipes...                                                                               |","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"   | Recipes loaded successfully.                                                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"   | Loading weekly plan...                                                                           |","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"   | Weekly plan loaded successfully.                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"   | Loading ingredients...                                                                           |","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"   | Ingredients loaded successfully.                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"   Type `bye` and press enter to end the program.","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"* A JUnit test (`src/test/java/seedu/meal360/Meal360Test.java`) is included in this project. ","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"`/docs` folder contains the project documentation.","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"![Developer Guide](https://github.com/AY2223S2-CS2113-F10-3/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"![User Guide](https://github.com/AY2223S2-CS2113-F10-3/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":45,"jaredoong":30}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.9\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"    mainClass \u003d \"seedu.meal360.Meal360\"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    archiveBaseName \u003d \"meal360\"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"jar {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"    manifest {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"        attributes \"Main-Class\": \"seedu.meal360.Meal360\"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"    from {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"tasks.withType(Copy).all { duplicatesStrategy \u0027exclude\u0027 }","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"sourceSets {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"    main.java.srcDirs \u0027src/main/java\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"    main.resources.srcDirs \u0027src/main/resources\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"    test.java.srcDirs \u0027src/test/java\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"    test.resources.srcDirs \u0027src/test/resources\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"-":44,"jaredoong":23}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"| Display                                                    |        Name        |             Github Profile             |             Portfolio             |","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"|------------------------------------------------------------|:------------------:|:--------------------------------------:|:---------------------------------:|","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)        | Suresh Abijith Ram |     [Github](https://github.com/)      |  [Portfolio](team/topgun2001.md)  |","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"| ![](https://avatars.githubusercontent.com/u/101538126?v\u003d4) |    Lu Bingyuan     | [Github](https://github.com/notbingsu) |  [Portfolio](team/notbingsu.md)   |","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"gurmankalkat"},"content":"| ![](https://avatars.githubusercontent.com/gurmankalkat)    |   Gurman Kalkat    |     [Github](https://github.com/)      | [Portfolio](team/gurmankalkat.md) |","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"| ![](https://avatars.githubusercontent.com/u/88151966?v\u003d4)  |  Nita Chenvisuwat  | [Github](https://github.com/junenita)  |   [Portfolio](team/junenita.md)   |","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"| ![](https://avatars.githubusercontent.com/u/88092096?v\u003d4)  |     Jared Oong     | [Github](https://github.com/jaredoong) |  [Portfolio](team/jaredoong.md)   |","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"notbingsu":2,"JuneNita":1,"gurmankalkat":2,"-":1,"jaredoong":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"- [Design](#design)","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    - [Meal360 Component](#meal360-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    - [UI Component](#ui-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    - [Parser Component](#parser-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    - [RecipeList Component](#recipelist-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"    - [WeeklyPlan Component](#weeklyplan-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    - [Database Component](#database-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"    - [IngredientList Component](#ingredientlist-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"    - [Add Recipes Feature](#add-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    - [Edit Recipes Feature](#edit-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"    - [Categorise/Tag Recipes Feature](#categorisetag-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    - [List Recipes Feature](#list-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"    - [Delete Recipes Feature](#delete-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    - [Add Ingredients Feature](#add-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"    - [Delete Ingredients Feature](#delete-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    - [List Ingredients Feature](#list-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"    - [Edit Weekly Meal Plan Feature](#edit-weekly-meal-plan-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"    - [List Weekly Plan Feature](#list-weekly-plan-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"    - [Mark Recipe as Done Feature](#mark-recipe-as-done-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"    - [Product scope](#product-scope)","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"    - [User Stories](#user-stories)","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"    - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"    - [Glossary](#glossary)","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"    - [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"- [GSON](https://github.com/google/gson) library used for saving and loading databases easily in","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"  JSON format.","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"## Setting up, getting started","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"- Refer to the","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"  instructions [here](https://github.com/AY2223S2-CS2113-F10-3/tp/blob/master/README.md).","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"JuneNita"},"content":"## Design","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"- [Architecture](#architecture)","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"- [Meal360 Component](#meal360-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"- [UI Component](#ui-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"- [Parser Component](#parser-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"- [RecipeList Component](#recipelist-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"- [WeeklyPlan Component](#weeklyplan-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"- [Database Component](#database-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"- [IngredientList Component](#ingredientlist-component)","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"### Architecture","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"The Architecture Diagram below shows a high-level design of the Meal360 application:","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"![](./UML/Architecture/ArchitectureUML.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"**How the architecture components interact with each other:**","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"Based on the user input, only certain components will be called to execute the command. For example,","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"if the user inputs `view 1`, the `Parser` component will call the `RecipeList` component to retrieve","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"the recipe at index 0, following which the `Ui` component will then display it to the user. The","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"sequence diagram below shows how the","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"interaction described above:","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"![](./UML/Architecture/ArchitectureExampleUML.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"Depending on whether the user input is to make changes to the recipes, ingredients, or weekly plan,","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"the `Parser` component will call the `RecipeList`, `Ingredient`, and/or `WeeklyPlan` component","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"respectively. The class diagrams below shows the subsystems for recipes, ingredients and weekly","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"plan. For the class diagrams, `Meal360` and the `Ui` component are not shown for simplicity.","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"Additionally, methods irrelevant to the subsystem shown are also omitted for simplicity.","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"1. Recipe related","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"![](./UML/Architecture/RecipeRelated.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"2. Ingredient related","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"![](./UML/Architecture/IngredientRelated.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"jaredoong"},"content":"3. WeeklyPlan related","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"![](./UML/Architecture/WeeklyPlanRelated.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"### Meal360 Component","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"jaredoong"},"content":"API: `Meal360.java`","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"jaredoong"},"content":"The (partial) class diagram below shows the structure of the `Meal360` component:","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"jaredoong"},"content":"![](./UML/Meal360/Meal360ClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"The `Meal360` component:","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"notbingsu"},"content":"- initializes the databases for the recipes, ingredients, and weekly plan upon program startup.","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"notbingsu"},"content":"- receives the user input once initialization is complete.","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"notbingsu"},"content":"- passes the user input to the `Parser` component.","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"notbingsu"},"content":"- receives the output from the `Parser` component and passes it to the `Ui` component to be","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"  displayed","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"jaredoong"},"content":"  to the user.","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"notbingsu"},"content":"- saves the databases for the recipes, ingredients, and weekly plan upon receiving the `bye`","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"jaredoong"},"content":"  command.","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"notbingsu"},"content":"- terminates the program once the databases have been saved.","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"jaredoong"},"content":"### UI Component","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"JuneNita"},"content":"API: `Ui.java`","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"jaredoong"},"content":"The `Ui` component:","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"jaredoong"},"content":"![](./UML/Ui/UiClassDiagram.drawio.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"notbingsu"},"content":"- displays the welcome message upon startup of the program.","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"notbingsu"},"content":"- formats all the output to be displayed to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"notbingsu"},"content":"- provides the user with information on whether command was executed successfully or not.","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"notbingsu"},"content":"- displays the error message if the command was not executed successfully.","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"notbingsu"},"content":"- displays the goodbye message upon receiving the `bye` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"notbingsu"},"content":"The sequence diagram below shows how the `Ui` component works together with `Parser`","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"notbingsu"},"content":"when the user inputs `list`.","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"jaredoong"},"content":"![](./UML/Ui/commandList.drawio.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"jaredoong"},"content":"### Parser Component","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"JuneNita"},"content":"API: `Parser.java`","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"jaredoong"},"content":"The `Parser` component:","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"![](./UML/Parser/ParserClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"notbingsu"},"content":"- receives the user input from the `Meal360` component","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"notbingsu"},"content":"- checks and filters input string","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"notbingsu"},"content":"- catches `exceptions` and throws error messages via `UI` to","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"notbingsu"},"content":"    1. prompts user to enter valid input","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"notbingsu"},"content":"    2. prevent `Meal360` from crashing upon invalid input","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"jaredoong"},"content":"- interacts with the `RecipeList`, `WeeklyPlan`, and/or `Ingredient` components to execute the","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"jaredoong"},"content":"  commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"notbingsu"},"content":"The sequence diagram below shows how `Parser` filters user input dates and parses them","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"notbingsu"},"content":"as valid `LocalDate` objects.","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"jaredoong"},"content":"![](./UML/Parser/parseDate.drawio.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"jaredoong"},"content":"### RecipeList Component","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"API: `RecipeList.java` and `Recipe.java`","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"jaredoong"},"content":"![](./UML/RecipeList/RecipeListClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"jaredoong"},"content":"`Recipe` is a class with the following characteristics:","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"notbingsu"},"content":"- contains `name` and `ingredients` attribute","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"notbingsu"},"content":"- store the ingredients details the user has added in `ingredients`","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"jaredoong"},"content":"The `RecipeList` component:","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"notbingsu"},"content":"- extends from `ArrayList\u003cRecipe\u003e`","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"notbingsu"},"content":"- stores the recipes the user has added as `Recipe` objects","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"notbingsu"},"content":"- allows users to add their own recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"notbingsu"},"content":"- allows users to delete the existing recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"notbingsu"},"content":"- allows users to edit the existing recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"notbingsu"},"content":"- allows users to view the entire list of recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"notbingsu"},"content":"- allows users to view the ingredients required for a recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"notbingsu"},"content":"- allows users to add and remove recipes from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"notbingsu"},"content":"- allows users to random a recipe from all the recipes that users have","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"jaredoong"},"content":"### WeeklyPlan Component","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"jaredoong"},"content":"API: `WeeklyPlan.java`","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"jaredoong"},"content":"![](./UML/WeeklyPlan/WeeklyPlanClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"jaredoong"},"content":"The `WeeklyPlan` component:","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"notbingsu"},"content":"- extends from `HashMap\u003cString, Integer\u003e`","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"notbingsu"},"content":"- stores the names of recipes that the user plans to prepare for the week as `String`","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"notbingsu"},"content":"- stores the number of times the user plans to prepare each recipe as `Integer`","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"notbingsu"},"content":"- allows users to add single or multiple recipes from the weekly plan","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"notbingsu"},"content":"- allows users to delete single, multiple, or all recipes from the weekly plan","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"gurmankalkat"},"content":"- allows users to see all ingredients for the week","lastModifiedDate":"2023-04-09"},{"lineNumber":190,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"jaredoong"},"content":"How the `WeeklyPlan` component works:","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"jaredoong"},"content":"1. When the user enters an input with the first word being `weekly`, the input is passed to","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"jaredoong"},"content":"   the `Parser` component.","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"jaredoong"},"content":"2. Based on the second argument, the `Parser` component will call the appropriate method in the","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"jaredoong"},"content":"   `Parser` component.","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"jaredoong"},"content":"3. `Parser` component then returns a `WeeklyPlan` object to indicate the recipe(s) to be added or","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"jaredoong"},"content":"   deleted from the weekly plan.","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"jaredoong"},"content":"4. `WeeklyPlan` component then uses either `addPlans` or `deletePlans` method to add or delete","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"jaredoong"},"content":"   the recipe(s) from the weekly plan, `clearPlan` to clear the entire plan for the week,","lastModifiedDate":"2023-04-10"},{"lineNumber":201,"author":{"gitId":"jaredoong"},"content":"   and `checkValidity` to","lastModifiedDate":"2023-04-10"},{"lineNumber":202,"author":{"gitId":"gurmankalkat"},"content":"   check the validness of the weekly plan (i.e. make sure all recipes are valid).","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"jaredoong"},"content":"The sequence diagram below shows how the `WeeklyPlan` component works when the user","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"jaredoong"},"content":"inputs `weekly /add burger 1`:","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"jaredoong"},"content":"![](./UML/WeeklyPlan/AddWeeklyPlanUML.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"jaredoong"},"content":"### Database Component","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"jaredoong"},"content":"API: `Database.java`","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"jaredoong"},"content":"![](./UML/Database/DatabaseClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"jaredoong"},"content":"The `Database` component:","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"notbingsu"},"content":"- stores the recipes, ingredients, and weeklyplan in a local database in json format","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"notbingsu"},"content":"- loads up automatically upon startup of program","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"notbingsu"},"content":"- saves automatically upon exit of program","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"notbingsu"},"content":"- comes with a default database of 10 recipes for new users","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"jaredoong"},"content":"How the `Database` component works at start up for the recipes:","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"jaredoong"},"content":"1. Upon starting up the program, the `Database` component will check for the existence of a","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"jaredoong"},"content":"   database file in the local directory.","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"jaredoong"},"content":"2. If the database file exists, the `Database` component will load the recipes from the database","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"jaredoong"},"content":"   file into a `RecipeList` and return this `RecipeList`.","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"jaredoong"},"content":"3. If the database file does not exist, the `Database` component will check if the parent directory,","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"jaredoong"},"content":"   and create any missing directories and files as necessary.","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"jaredoong"},"content":"4. If the database file does not exist or if the file was empty, the `Database` component will","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"jaredoong"},"content":"   create a new `RecipeList`","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"jaredoong"},"content":"   with 10 default recipes and return this `RecipeList`.","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"notbingsu"},"content":"- The loading of the ingredients and weekly plan works in a similar manner, except that the default","lastModifiedDate":"2023-04-08"},{"lineNumber":234,"author":{"gitId":"jaredoong"},"content":"  ingredient list and weekly plan are empty.","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":236,"author":{"gitId":"jaredoong"},"content":"The activity diagram below shows how the `Database` component works at start up:","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"jaredoong"},"content":"![](./UML/Database/DatabaseStartupUML.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":238,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":239,"author":{"gitId":"jaredoong"},"content":"### IngredientList Component","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"jaredoong"},"content":"API: `IngredientList.java` and `Ingredient.java`","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"jaredoong"},"content":"![](./UML/IngredientList/IngredientListClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"jaredoong"},"content":"`Ingredient` is a class with the following characteristics:","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"jaredoong"},"content":"- contains `name`, `quantity`, and `expiryDate` attribute.","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"jaredoong"},"content":"- store the ingredients details the user has added in per ingredient.","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"jaredoong"},"content":"The `IngredientList` component:","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"jaredoong"},"content":"- extends from `HashMap\u003cString, Ingredient\u003e`","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"jaredoong"},"content":"- stores the ingredients the user has added as `Ingredient` objects","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"jaredoong"},"content":"- allows users to add their own ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"jaredoong"},"content":"- allows users to delete the existing ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"jaredoong"},"content":"- allows users to view the entire list of ingredients that they have","lastModifiedDate":"2023-04-08"},{"lineNumber":257,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"jaredoong"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"JuneNita"},"content":"## Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"notbingsu"},"content":"- [Categorise/Tag Recipes Feature](#categorisetag-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"notbingsu"},"content":"- [List Recipes Feature](#list-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"notbingsu"},"content":"- [Delete Recipes Feature](#delete-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"notbingsu"},"content":"- [Add Recipes Feature](#add-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"notbingsu"},"content":"- [Edit Recipes Feature](#edit-recipes-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"notbingsu"},"content":"- [Random a Recipe Feature](#random-a-recipe-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"notbingsu"},"content":"- [Add Ingredients Feature](#add-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"notbingsu"},"content":"- [Delete Ingredients Feature](#delete-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"notbingsu"},"content":"- [List Ingredients Feature](#list-ingredients-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":271,"author":{"gitId":"notbingsu"},"content":"- [Edit Weekly Meal Plan Feature](#edit-weekly-meal-plan-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":272,"author":{"gitId":"notbingsu"},"content":"- [Mark Recipe as Done Feature](#mark-recipe-as-done-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"JuneNita"},"content":"### Categorise/Tag Recipes Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"notbingsu"},"content":"- add single or multiples recipes into a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"notbingsu"},"content":"- remove single or multiples recipes from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":278,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"JuneNita"},"content":"It is implemented through the following step:","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":281,"author":{"gitId":"JuneNita"},"content":"1. When the user enters an input with the first word being `tag`, the input is passed to","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"JuneNita"},"content":"   the `Parser` component.","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"JuneNita"},"content":"2. In `Parser`, `parseTagRecipe()` is executed to identify whether user want to add recipes","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"JuneNita"},"content":"   to a tag (`\u003c\u003c`), or remove recipes from a tag(`\u003e\u003e`). Then,","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"notbingsu"},"content":"    - If `isAddTag`, user want to add recipes to a tag, `parseAddRecipeTag()` will be executed to","lastModifiedDate":"2023-04-08"},{"lineNumber":286,"author":{"gitId":"jaredoong"},"content":"      extract","lastModifiedDate":"2023-04-07"},{"lineNumber":287,"author":{"gitId":"jaredoong"},"content":"      the all the recipes to be added, separated by `\u0026\u0026`, and pass those recipes and tag label","lastModifiedDate":"2023-04-07"},{"lineNumber":288,"author":{"gitId":"jaredoong"},"content":"      to `RecipeList`","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"JuneNita"},"content":"      component.","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"notbingsu"},"content":"    - If `isRemoveTag`, user want to remove recipes from a tag, `parseRemoveRecipeTag()` will be","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"jaredoong"},"content":"      executed to","lastModifiedDate":"2023-04-07"},{"lineNumber":292,"author":{"gitId":"jaredoong"},"content":"      extract the all the recipes to be removed, separated by `\u0026\u0026`, and pass those recipes and tag","lastModifiedDate":"2023-04-07"},{"lineNumber":293,"author":{"gitId":"jaredoong"},"content":"      label to","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"JuneNita"},"content":"      `RecipeList` component.","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"notbingsu"},"content":"    - If user enter invalid command, an error message will be thrown.","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"JuneNita"},"content":"3. In `RecipeList`,","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"notbingsu"},"content":"    - If user want to add recipes to a tag, `addRecipeToTag()` is executed to add recipes in","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"JuneNita"},"content":"      to the tag.","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"notbingsu"},"content":"    - If user want to remove recipes to a tag, `removeRecipeFromTag()` is executed to remove recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":300,"author":{"gitId":"JuneNita"},"content":"      from the tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"JuneNita"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"jaredoong"},"content":"![](./UML/Implementation/TagFunction/TagFunction.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"JuneNita"},"content":"### List Recipes Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"notbingsu"},"content":"- list all recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":309,"author":{"gitId":"notbingsu"},"content":"- list recipe with filters (name, ingredients, tags)","lastModifiedDate":"2023-04-08"},{"lineNumber":310,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"JuneNita"},"content":"It is implemented through the following step:","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"JuneNita"},"content":"1. When the user enters an input with the first word being `list`, the input is passed to","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"JuneNita"},"content":"   the `Parser` component.","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"JuneNita"},"content":"2. In `Parser`, `parseListRecipe()` is executed to first identify whether user want to filter","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"JuneNita"},"content":"   by tag (`/t`).","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"notbingsu"},"content":"    - If user filters the recipes by tag (`/t`), `isTag` is set to `true`.","lastModifiedDate":"2023-04-08"},{"lineNumber":319,"author":{"gitId":"notbingsu"},"content":"    - Otherwise, `isTag` is set to `false`.","lastModifiedDate":"2023-04-08"},{"lineNumber":320,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"JuneNita"},"content":"   Then, it will extract all the filters separated by `\u0026\u0026`, if any. All the filters are","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"JuneNita"},"content":"   extracted out and passed to `RecipeList`component.","lastModifiedDate":"2023-03-29"},{"lineNumber":323,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"JuneNita"},"content":"3. In `RecipeList`, `listRecipes()` is executed to first identify whether user want to","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"JuneNita"},"content":"   filter by tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"notbingsu"},"content":"    - If `isTag` is true, `listTagRecipes()` is called to filter all recipes that meet","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"jaredoong"},"content":"      all the filters by tag, and return the `recipeList` containing all relevant recipes","lastModifiedDate":"2023-04-07"},{"lineNumber":328,"author":{"gitId":"jaredoong"},"content":"      to `listRecipes()`","lastModifiedDate":"2023-04-07"},{"lineNumber":329,"author":{"gitId":"JuneNita"},"content":"      and `ParserRecipe()`, respectively.","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"notbingsu"},"content":"    - If user `isTag` is false, it filters all recipes that meet all the filters by name","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"JuneNita"},"content":"      and ingredients, and return `recipeList` containing all relevant recipes to","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"JuneNita"},"content":"      `ParselistRecipe()`.","lastModifiedDate":"2023-03-29"},{"lineNumber":333,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"JuneNita"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":336,"author":{"gitId":"jaredoong"},"content":"![](./UML/Implementation/ListFunction/ListFunction.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":337,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"notbingsu"},"content":"### List Available Recipes Feature","lastModifiedDate":"2023-04-09"},{"lineNumber":339,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":340,"author":{"gitId":"notbingsu"},"content":"- list all recipes that have sufficient ingredients","lastModifiedDate":"2023-04-09"},{"lineNumber":341,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":342,"author":{"gitId":"notbingsu"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-09"},{"lineNumber":343,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":344,"author":{"gitId":"jaredoong"},"content":"1. When the user enters and input `available`, an instance of `RecipeList` availableRecipes is","lastModifiedDate":"2023-04-10"},{"lineNumber":345,"author":{"gitId":"jaredoong"},"content":"   created","lastModifiedDate":"2023-04-10"},{"lineNumber":346,"author":{"gitId":"jaredoong"},"content":"2. This instance of recipe calls the `availableRecipes()` method in `RecipeList` on the current","lastModifiedDate":"2023-04-10"},{"lineNumber":347,"author":{"gitId":"jaredoong"},"content":"   recipeList which","lastModifiedDate":"2023-04-10"},{"lineNumber":348,"author":{"gitId":"notbingsu"},"content":"   returns a `RecipeList` object containing all available `Recipes`","lastModifiedDate":"2023-04-09"},{"lineNumber":349,"author":{"gitId":"jaredoong"},"content":"3. `availableRecipes()` method iterates through `recipeList` and calls the `isAvailable()` method on","lastModifiedDate":"2023-04-10"},{"lineNumber":350,"author":{"gitId":"jaredoong"},"content":"   each `Recipe`,","lastModifiedDate":"2023-04-10"},{"lineNumber":351,"author":{"gitId":"notbingsu"},"content":"   appending the available recipes to `availableRecipes`","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"notbingsu"},"content":"4. `isAvailable()` method","lastModifiedDate":"2023-04-09"},{"lineNumber":353,"author":{"gitId":"notbingsu"},"content":"    - iterates through the `ingredients` Hashmap of each `Recipe`","lastModifiedDate":"2023-04-09"},{"lineNumber":354,"author":{"gitId":"jaredoong"},"content":"    - compares the quantity required for each recipe to the amount of the same `Ingredient` in","lastModifiedDate":"2023-04-10"},{"lineNumber":355,"author":{"gitId":"jaredoong"},"content":"      the `ingredientList`,","lastModifiedDate":"2023-04-10"},{"lineNumber":356,"author":{"gitId":"jaredoong"},"content":"    - returns `true` if the quantity in the `ingredientList` is more than or equal to the quantity","lastModifiedDate":"2023-04-10"},{"lineNumber":357,"author":{"gitId":"jaredoong"},"content":"      required","lastModifiedDate":"2023-04-10"},{"lineNumber":358,"author":{"gitId":"notbingsu"},"content":"5. The `listAvailableRecipes()` method is then called in `Ui` to print `availableRecipes`","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"notbingsu"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-04-09"},{"lineNumber":361,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":362,"author":{"gitId":"notbingsu"},"content":"![](./UML/Implementation/ListAvailableFunction/availableSequenceDiagram.drawio.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":363,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":364,"author":{"gitId":"gurmankalkat"},"content":"\u003c!-- @@author gurmankalkat --\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":365,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":366,"author":{"gitId":"gurmankalkat"},"content":"### Delete Recipes Feature","lastModifiedDate":"2023-03-25"},{"lineNumber":367,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":368,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-03-25"},{"lineNumber":369,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":370,"author":{"gitId":"gurmankalkat"},"content":"- deletes a single recipe by name or recipe\u0027s index in recipe list","lastModifiedDate":"2023-04-08"},{"lineNumber":371,"author":{"gitId":"gurmankalkat"},"content":"- deletes a range of recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":372,"author":{"gitId":"gurmankalkat"},"content":"- deletes all recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":373,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":374,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following step:","lastModifiedDate":"2023-03-25"},{"lineNumber":375,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":376,"author":{"gitId":"gurmankalkat"},"content":"1. When the user enters an input with the first word being `delete`, the input is passed to","lastModifiedDate":"2023-03-25"},{"lineNumber":377,"author":{"gitId":"gurmankalkat"},"content":"   the `Parser` component.","lastModifiedDate":"2023-03-25"},{"lineNumber":378,"author":{"gitId":"gurmankalkat"},"content":"2. In `Parser`, `parseDeleteRecipe()` is executed to identify whether the user wants to delete all","lastModifiedDate":"2023-04-07"},{"lineNumber":379,"author":{"gitId":"gurmankalkat"},"content":"   recipes, a single","lastModifiedDate":"2023-04-07"},{"lineNumber":380,"author":{"gitId":"gurmankalkat"},"content":"   recipe, or range of recipes.","lastModifiedDate":"2023-03-25"},{"lineNumber":381,"author":{"gitId":"gurmankalkat"},"content":"3. In `RecipeList`, `deleteRecipe()` is executed to delete the recipe at whatever index is passed as","lastModifiedDate":"2023-04-07"},{"lineNumber":382,"author":{"gitId":"gurmankalkat"},"content":"   a parameter,","lastModifiedDate":"2023-04-07"},{"lineNumber":383,"author":{"gitId":"gurmankalkat"},"content":"   and return the `Recipe` object at that index/the one just deleted.","lastModifiedDate":"2023-03-25"},{"lineNumber":384,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":385,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/DeleteFunction/DeleteFunction.jpg)","lastModifiedDate":"2023-04-08"},{"lineNumber":386,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":387,"author":{"gitId":"gurmankalkat"},"content":"\u003c!-- @@author gurmankalkat --\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":388,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":389,"author":{"gitId":"gurmankalkat"},"content":"### Add Recipes Feature","lastModifiedDate":"2023-03-25"},{"lineNumber":390,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":391,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-03-25"},{"lineNumber":392,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":393,"author":{"gitId":"gurmankalkat"},"content":"- Add a single recipe in 1 line and followed by all the ingredients in next another line after being","lastModifiedDate":"2023-04-08"},{"lineNumber":394,"author":{"gitId":"gurmankalkat"},"content":"  prompted.","lastModifiedDate":"2023-04-07"},{"lineNumber":395,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":396,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-03-25"},{"lineNumber":397,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":398,"author":{"gitId":"gurmankalkat"},"content":"1. When the user enters an input with the first word being `add`, the input is passed to","lastModifiedDate":"2023-04-07"},{"lineNumber":399,"author":{"gitId":"gurmankalkat"},"content":"   the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":400,"author":{"gitId":"gurmankalkat"},"content":"2. In `Parser`, the `parseAddRecipe` is executed to identify whether the recipe is an already","lastModifiedDate":"2023-04-07"},{"lineNumber":401,"author":{"gitId":"gurmankalkat"},"content":"   existing recipe or","lastModifiedDate":"2023-04-07"},{"lineNumber":402,"author":{"gitId":"gurmankalkat"},"content":"   it\u0027s a new recipe that is being added.","lastModifiedDate":"2023-03-25"},{"lineNumber":403,"author":{"gitId":"gurmankalkat"},"content":"3. After the user enters the ingredients in 1 line, the input is passed to `parseIngredientName`","lastModifiedDate":"2023-04-07"},{"lineNumber":404,"author":{"gitId":"gurmankalkat"},"content":"   which returns a","lastModifiedDate":"2023-04-07"},{"lineNumber":405,"author":{"gitId":"gurmankalkat"},"content":"   hashmap\u003cstring,integer\u003e with the ingredient name as \u0027key\u0027 and quantity as \u0027value\u0027.","lastModifiedDate":"2023-03-25"},{"lineNumber":406,"author":{"gitId":"gurmankalkat"},"content":"4. After the recipe name and ingredients are accepted and processed, the input is sent","lastModifiedDate":"2023-04-07"},{"lineNumber":407,"author":{"gitId":"gurmankalkat"},"content":"   to `recipeList.addRecipe()`","lastModifiedDate":"2023-04-07"},{"lineNumber":408,"author":{"gitId":"gurmankalkat"},"content":"   to store the new recipe data.","lastModifiedDate":"2023-03-25"},{"lineNumber":409,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":410,"author":{"gitId":"gurmankalkat"},"content":"![](UML/Implementation/addRecipe/AddRecipe.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":411,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":412,"author":{"gitId":"gurmankalkat"},"content":"### Edit Recipes Feature","lastModifiedDate":"2023-03-25"},{"lineNumber":413,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":414,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-03-25"},{"lineNumber":415,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":416,"author":{"gitId":"gurmankalkat"},"content":"- There are 3 ways to edit:","lastModifiedDate":"2023-04-08"},{"lineNumber":417,"author":{"gitId":"gurmankalkat"},"content":"    - Edit all ingredients.","lastModifiedDate":"2023-04-08"},{"lineNumber":418,"author":{"gitId":"gurmankalkat"},"content":"    - Edit 1 particular ingredient.","lastModifiedDate":"2023-04-08"},{"lineNumber":419,"author":{"gitId":"gurmankalkat"},"content":"    - Add new ingredient.","lastModifiedDate":"2023-04-08"},{"lineNumber":420,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":421,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-03-25"},{"lineNumber":422,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":423,"author":{"gitId":"gurmankalkat"},"content":"1. When the user enters an input with the first word being `edit`, the input is passed to","lastModifiedDate":"2023-04-07"},{"lineNumber":424,"author":{"gitId":"gurmankalkat"},"content":"   the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":425,"author":{"gitId":"gurmankalkat"},"content":"2. In `Parser`, the `parseEditRecipe` is executed to identify whether the recipe is an already","lastModifiedDate":"2023-04-07"},{"lineNumber":426,"author":{"gitId":"gurmankalkat"},"content":"   existing recipe to make edits.","lastModifiedDate":"2023-04-07"},{"lineNumber":427,"author":{"gitId":"gurmankalkat"},"content":"3. The user will then be prompted with 3 options as mentioned above to make edits to the recipe","lastModifiedDate":"2023-04-07"},{"lineNumber":428,"author":{"gitId":"gurmankalkat"},"content":"   ingredients.","lastModifiedDate":"2023-04-07"},{"lineNumber":429,"author":{"gitId":"gurmankalkat"},"content":"4. After the new ingredients are accepted and processed, the input is sent","lastModifiedDate":"2023-04-07"},{"lineNumber":430,"author":{"gitId":"gurmankalkat"},"content":"   to `recipeList.editRecipe()`","lastModifiedDate":"2023-04-07"},{"lineNumber":431,"author":{"gitId":"gurmankalkat"},"content":"   to update the new recipe data.","lastModifiedDate":"2023-03-25"},{"lineNumber":432,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":433,"author":{"gitId":"gurmankalkat"},"content":"![](UML/Implementation/editRecipe/EditRecipe.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":434,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":435,"author":{"gitId":"gurmankalkat"},"content":"### Random a Recipe Feature","lastModifiedDate":"2023-03-29"},{"lineNumber":436,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":437,"author":{"gitId":"gurmankalkat"},"content":"- randomly pick a recipe and display to the user","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":439,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following step:","lastModifiedDate":"2023-03-29"},{"lineNumber":440,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":441,"author":{"gitId":"gurmankalkat"},"content":"1. When the user enters an input with the first word being `random`, the `Parser`","lastModifiedDate":"2023-03-29"},{"lineNumber":442,"author":{"gitId":"gurmankalkat"},"content":"   component will be executed.","lastModifiedDate":"2023-03-29"},{"lineNumber":443,"author":{"gitId":"gurmankalkat"},"content":"2. In `Parser`, `parseRandomRecipe()` is executed and call `randomRecipe()` in","lastModifiedDate":"2023-03-29"},{"lineNumber":444,"author":{"gitId":"gurmankalkat"},"content":"   `RecipeList` component.","lastModifiedDate":"2023-03-29"},{"lineNumber":445,"author":{"gitId":"gurmankalkat"},"content":"3. In `RecipeList`, `randomRecipe()` is executed to random a recipe and return a","lastModifiedDate":"2023-03-29"},{"lineNumber":446,"author":{"gitId":"gurmankalkat"},"content":"   `recipe` to `parseRandomRecipe()`.","lastModifiedDate":"2023-03-29"},{"lineNumber":447,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":448,"author":{"gitId":"gurmankalkat"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-03-29"},{"lineNumber":449,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":450,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/RandomFunction/RandomFunction.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":451,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":452,"author":{"gitId":"gurmankalkat"},"content":"### Add Ingredients Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":453,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":454,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":455,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":456,"author":{"gitId":"gurmankalkat"},"content":"- allows for adding only 1 ingredient at a time.","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"gurmankalkat"},"content":"- ingredient needs to have its name, quantity and expiry date specified.","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":459,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":460,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":461,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first word being `add_i`, the input is passed to","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"gurmankalkat"},"content":"  the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":463,"author":{"gitId":"gurmankalkat"},"content":"- In `Parser`, the `parseAddUserIngredient` is executed to identify whether all the required","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"gurmankalkat"},"content":"  parameters are provided.","lastModifiedDate":"2023-04-07"},{"lineNumber":465,"author":{"gitId":"gurmankalkat"},"content":"- If any of the parameters are missing/invalid, the user will be alerted with a relevant error","lastModifiedDate":"2023-04-08"},{"lineNumber":466,"author":{"gitId":"gurmankalkat"},"content":"  message.","lastModifiedDate":"2023-04-07"},{"lineNumber":467,"author":{"gitId":"gurmankalkat"},"content":"- If all the parameters are valid, the input is sent to `IngredientList` component.","lastModifiedDate":"2023-04-08"},{"lineNumber":468,"author":{"gitId":"gurmankalkat"},"content":"- In `IngredientList`, `addIngredient()` is executed to first check if the ingredient already","lastModifiedDate":"2023-04-08"},{"lineNumber":469,"author":{"gitId":"gurmankalkat"},"content":"  exists in the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":470,"author":{"gitId":"gurmankalkat"},"content":"- If the ingredient already exists, the quantity of the ingredient will be updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":471,"author":{"gitId":"gurmankalkat"},"content":"- If the ingredient does not exist, the ingredient will be added to the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":472,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":473,"author":{"gitId":"gurmankalkat"},"content":"The simplified sequence diagram below shows how this feature works assuming all inputs are correct:","lastModifiedDate":"2023-04-07"},{"lineNumber":474,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":475,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/AddIngredientFunction/AddIngredientFunction.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":476,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":477,"author":{"gitId":"gurmankalkat"},"content":"### Delete Ingredients Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":478,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":479,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":480,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":481,"author":{"gitId":"gurmankalkat"},"content":"- allows for deleting only 1 ingredient at a time.","lastModifiedDate":"2023-04-08"},{"lineNumber":482,"author":{"gitId":"gurmankalkat"},"content":"- ingredient needs to have its name and quantity specified.","lastModifiedDate":"2023-04-08"},{"lineNumber":483,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":484,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":485,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":486,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first word being `del_i`, the input is passed to","lastModifiedDate":"2023-04-08"},{"lineNumber":487,"author":{"gitId":"gurmankalkat"},"content":"  the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":488,"author":{"gitId":"gurmankalkat"},"content":"- In `Parser`, the `parseDeleteUserIngredient` is executed to identify whether all the required","lastModifiedDate":"2023-04-08"},{"lineNumber":489,"author":{"gitId":"gurmankalkat"},"content":"  parameters are provided.","lastModifiedDate":"2023-04-07"},{"lineNumber":490,"author":{"gitId":"gurmankalkat"},"content":"- If any of the parameters are missing/invalid, the user will be alerted with a relevant error","lastModifiedDate":"2023-04-08"},{"lineNumber":491,"author":{"gitId":"gurmankalkat"},"content":"  message.","lastModifiedDate":"2023-04-07"},{"lineNumber":492,"author":{"gitId":"gurmankalkat"},"content":"- If all the parameters are valid, the input is sent to `IngredientList` component.","lastModifiedDate":"2023-04-08"},{"lineNumber":493,"author":{"gitId":"gurmankalkat"},"content":"- In `IngredientList`, `deleteIngredient()` is executed to first check if the ingredient exists in","lastModifiedDate":"2023-04-08"},{"lineNumber":494,"author":{"gitId":"gurmankalkat"},"content":"  the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":495,"author":{"gitId":"gurmankalkat"},"content":"- If the ingredient does not exist, the user will be alerted with a relevant error message.","lastModifiedDate":"2023-04-08"},{"lineNumber":496,"author":{"gitId":"gurmankalkat"},"content":"- If the ingredient exists and the new quantity is more than 0, the quantity of the ingredient will","lastModifiedDate":"2023-04-08"},{"lineNumber":497,"author":{"gitId":"gurmankalkat"},"content":"  be updated. Otherwise, the ingredient would be deleted entirely from the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":498,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":499,"author":{"gitId":"gurmankalkat"},"content":"The sequence diagram of deleting an ingredient is similar to adding an ingredient.","lastModifiedDate":"2023-04-07"},{"lineNumber":500,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":501,"author":{"gitId":"gurmankalkat"},"content":"### List Ingredients Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":502,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":503,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":504,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":505,"author":{"gitId":"gurmankalkat"},"content":"- allows for listing all ingredients in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":506,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":507,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":508,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":509,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first word being `view_ingredients`, the list of user","lastModifiedDate":"2023-04-08"},{"lineNumber":510,"author":{"gitId":"gurmankalkat"},"content":"  ingredients that is represented by `userIngredients` is passed to the `Ui` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":511,"author":{"gitId":"gurmankalkat"},"content":"- In `Ui`, `printUserIngredients()` first checks if the list is empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":512,"author":{"gitId":"gurmankalkat"},"content":"- If the list is empty, the user will be alerted with a relevant message and the function exits.","lastModifiedDate":"2023-04-08"},{"lineNumber":513,"author":{"gitId":"gurmankalkat"},"content":"- If the list is not empty, the list of ingredients will be printed out, with information regarding","lastModifiedDate":"2023-04-08"},{"lineNumber":514,"author":{"gitId":"gurmankalkat"},"content":"  the names, quanntity, and expiry date of each ingredient displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":515,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":516,"author":{"gitId":"gurmankalkat"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-04-07"},{"lineNumber":517,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":518,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/ViewIngredientFunction/ViewIngredientFunction.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":519,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":520,"author":{"gitId":"gurmankalkat"},"content":"### Edit Weekly Meal Plan Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":521,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":522,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":523,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":524,"author":{"gitId":"gurmankalkat"},"content":"- allows for adding single recipe to the weekly meal plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":525,"author":{"gitId":"gurmankalkat"},"content":"- allows for deleting single recipe from the weekly meal plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":526,"author":{"gitId":"gurmankalkat"},"content":"- allow for adding multiple recipes to the weekly meal plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":527,"author":{"gitId":"gurmankalkat"},"content":"- allow for deleting multiple recipes from the weekly meal plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":528,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":529,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":530,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":531,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first word being `weekly`, the input is passed to","lastModifiedDate":"2023-04-08"},{"lineNumber":532,"author":{"gitId":"gurmankalkat"},"content":"  the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":533,"author":{"gitId":"gurmankalkat"},"content":"- In `Parser`, the `parseWeeklyMealPlan` is executed to identify whether the user wants to","lastModifiedDate":"2023-04-08"},{"lineNumber":534,"author":{"gitId":"gurmankalkat"},"content":"  add/delete only one or multiple recipes.","lastModifiedDate":"2023-04-07"},{"lineNumber":535,"author":{"gitId":"gurmankalkat"},"content":"- If the user wants to add/delete only one recipe, parseEditSingleWeeklyPlan() is executed.","lastModifiedDate":"2023-04-08"},{"lineNumber":536,"author":{"gitId":"gurmankalkat"},"content":"- If the user wants to add/delete multiple recipes, parseEditMultiWeeklyPlan() is executed.","lastModifiedDate":"2023-04-08"},{"lineNumber":537,"author":{"gitId":"gurmankalkat"},"content":"- `parseEditSingleWeeklyPlan()` and `parseEditMultiWeeklyPlan()` checks if the command parameters","lastModifiedDate":"2023-04-08"},{"lineNumber":538,"author":{"gitId":"gurmankalkat"},"content":"  are valid first, then it returns the","lastModifiedDate":"2023-04-07"},{"lineNumber":539,"author":{"gitId":"gurmankalkat"},"content":"  name and quantity of the recipes specified by the user. If the command parameters are invalid or","lastModifiedDate":"2023-04-07"},{"lineNumber":540,"author":{"gitId":"gurmankalkat"},"content":"  the recipe is not a valid recipe, a relevant error message will be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":541,"author":{"gitId":"gurmankalkat"},"content":"- In `Meal360`, the second argument of the user input is then use to determine whether the user","lastModifiedDate":"2023-04-08"},{"lineNumber":542,"author":{"gitId":"gurmankalkat"},"content":"  wants to add or delete the recipes.","lastModifiedDate":"2023-04-07"},{"lineNumber":543,"author":{"gitId":"gurmankalkat"},"content":"- If the user wants to add the recipes, the list of recipe(s) would be passed to the `WeeklyPlan`","lastModifiedDate":"2023-04-08"},{"lineNumber":544,"author":{"gitId":"gurmankalkat"},"content":"  component to execute `addPlans()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":545,"author":{"gitId":"gurmankalkat"},"content":"- If the user wants to delete the recipes, the list of recipe(s) would be passed to the `WeeklyPlan`","lastModifiedDate":"2023-04-08"},{"lineNumber":546,"author":{"gitId":"gurmankalkat"},"content":"  component to execute `deletePlans()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":547,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":548,"author":{"gitId":"gurmankalkat"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-04-07"},{"lineNumber":549,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":550,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/EditWeeklyPlan/EditWeeklyPlan.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":551,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":552,"author":{"gitId":"gurmankalkat"},"content":"### List Weekly Plan Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":553,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":554,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":555,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":556,"author":{"gitId":"gurmankalkat"},"content":"- allows for listing all recipes that are in the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":557,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":558,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":559,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":560,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first word being `weeklyplan`, the list of user","lastModifiedDate":"2023-04-08"},{"lineNumber":561,"author":{"gitId":"gurmankalkat"},"content":"  ingredients that is represented by `userIngredients` is passed to the `Ui` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":562,"author":{"gitId":"gurmankalkat"},"content":"- In `Ui`, `printUserIngredients()` first checks if the list is empty.","lastModifiedDate":"2023-04-08"},{"lineNumber":563,"author":{"gitId":"gurmankalkat"},"content":"- If the list is empty, the user will be alerted with a relevant message and the function exits.","lastModifiedDate":"2023-04-08"},{"lineNumber":564,"author":{"gitId":"gurmankalkat"},"content":"- If the list is not empty, the list of ingredients will be printed out, with information regarding","lastModifiedDate":"2023-04-08"},{"lineNumber":565,"author":{"gitId":"gurmankalkat"},"content":"  the names, quantity, and expiry date of each ingredient displayed.","lastModifiedDate":"2023-04-10"},{"lineNumber":566,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":567,"author":{"gitId":"gurmankalkat"},"content":"The sequence diagram below shows how this feature works:","lastModifiedDate":"2023-04-07"},{"lineNumber":568,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":569,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/ViewWeeklyPlan/ViewWeeklyPlan.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":570,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":571,"author":{"gitId":"gurmankalkat"},"content":"### Mark Recipe as Done Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":572,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":573,"author":{"gitId":"gurmankalkat"},"content":"The current implementation:","lastModifiedDate":"2023-04-07"},{"lineNumber":574,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":575,"author":{"gitId":"gurmankalkat"},"content":"- allows for marking a recipe in the weekly plan as done.","lastModifiedDate":"2023-04-08"},{"lineNumber":576,"author":{"gitId":"gurmankalkat"},"content":"- marking a recipe as done automatically removes the recipe and one set of its ingredients from the","lastModifiedDate":"2023-04-08"},{"lineNumber":577,"author":{"gitId":"gurmankalkat"},"content":"  weekly plan.","lastModifiedDate":"2023-04-07"},{"lineNumber":578,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":579,"author":{"gitId":"gurmankalkat"},"content":"It is implemented through the following steps:","lastModifiedDate":"2023-04-07"},{"lineNumber":580,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":581,"author":{"gitId":"gurmankalkat"},"content":"- When the user enters an input with the first two word being `weekly` and `/done` respectively, the","lastModifiedDate":"2023-04-08"},{"lineNumber":582,"author":{"gitId":"gurmankalkat"},"content":"  input is passed to the `Parser` component.","lastModifiedDate":"2023-04-07"},{"lineNumber":583,"author":{"gitId":"gurmankalkat"},"content":"- In `Parser`, the `parseMarkDone` is executed, which then send the input to `Recipe` component to","lastModifiedDate":"2023-04-08"},{"lineNumber":584,"author":{"gitId":"gurmankalkat"},"content":"  obtain the list of ingredients of the recipe using `getIngredients()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":585,"author":{"gitId":"gurmankalkat"},"content":"- The list of ingredients is then passed to `IngredientList` component to check if the user has all","lastModifiedDate":"2023-04-08"},{"lineNumber":586,"author":{"gitId":"gurmankalkat"},"content":"  the necessary ingredients using `findIngredientCount()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":587,"author":{"gitId":"gurmankalkat"},"content":"- If the user does not have all the necessary ingredients, the user will be alerted with a relevant","lastModifiedDate":"2023-04-08"},{"lineNumber":588,"author":{"gitId":"gurmankalkat"},"content":"  error message.","lastModifiedDate":"2023-04-07"},{"lineNumber":589,"author":{"gitId":"gurmankalkat"},"content":"- If the user has all the necessary ingredients, the `IngredientList` component will then remove the","lastModifiedDate":"2023-04-08"},{"lineNumber":590,"author":{"gitId":"gurmankalkat"},"content":"  ingredients from the list using `deleteIngredient()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":591,"author":{"gitId":"gurmankalkat"},"content":"- The `WeeklyPlan` component will then remove the recipe from the weekly plan using `remove()` if no","lastModifiedDate":"2023-04-08"},{"lineNumber":592,"author":{"gitId":"gurmankalkat"},"content":"  counts of the recipe is left, otherwise it will reduce the count of the recipe by 1 using `put()`.","lastModifiedDate":"2023-04-07"},{"lineNumber":593,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":594,"author":{"gitId":"gurmankalkat"},"content":"The simplified sequence diagram below shows how this feature works assuming no counts of the recipe","lastModifiedDate":"2023-04-07"},{"lineNumber":595,"author":{"gitId":"gurmankalkat"},"content":"is left after the deletion:","lastModifiedDate":"2023-04-07"},{"lineNumber":596,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":597,"author":{"gitId":"gurmankalkat"},"content":"![](./UML/Implementation/MarkDoneWeeklyPlan/MarkDoneWeeklyPlan.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":598,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":599,"author":{"gitId":"gurmankalkat"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":600,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":601,"author":{"gitId":"gurmankalkat"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-23"},{"lineNumber":602,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":603,"author":{"gitId":"gurmankalkat"},"content":"### Product scope","lastModifiedDate":"2023-03-23"},{"lineNumber":604,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":605,"author":{"gitId":"gurmankalkat"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":606,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":607,"author":{"gitId":"gurmankalkat"},"content":"- has a need to manage a significant number of recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":608,"author":{"gitId":"gurmankalkat"},"content":"- has a need to manage a significant number of ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":609,"author":{"gitId":"gurmankalkat"},"content":"- has a need to manage their meal plan on a weekly basis","lastModifiedDate":"2023-04-08"},{"lineNumber":610,"author":{"gitId":"gurmankalkat"},"content":"- can type fast","lastModifiedDate":"2023-04-08"},{"lineNumber":611,"author":{"gitId":"gurmankalkat"},"content":"- prefers typing to mouse input","lastModifiedDate":"2023-04-08"},{"lineNumber":612,"author":{"gitId":"gurmankalkat"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-04-08"},{"lineNumber":613,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":614,"author":{"gitId":"gurmankalkat"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":615,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":616,"author":{"gitId":"gurmankalkat"},"content":"Allows management of recipes, ingredients and weekly meal plan faster than a typical mouse/GUI","lastModifiedDate":"2023-03-24"},{"lineNumber":617,"author":{"gitId":"gurmankalkat"},"content":"driven app.","lastModifiedDate":"2023-03-23"},{"lineNumber":618,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":619,"author":{"gitId":"gurmankalkat"},"content":"### User Stories","lastModifiedDate":"2023-03-23"},{"lineNumber":620,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":621,"author":{"gitId":"gurmankalkat"},"content":"| Version | As a ... | I want to ...                                     | So that I can ...                                                 |","lastModifiedDate":"2020-05-24"},{"lineNumber":622,"author":{"gitId":"gurmankalkat"},"content":"|---------|----------|---------------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":623,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | add my own recipes to the list                    | refer to them when next time                                      |","lastModifiedDate":"2023-03-24"},{"lineNumber":624,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | edit the existing recipe                          |                                                                   |","lastModifiedDate":"2023-03-24"},{"lineNumber":625,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | delete a recipe from the list                     | clear the unused recipes                                          |","lastModifiedDate":"2023-03-24"},{"lineNumber":626,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | view ingredients of the recipe                    | know what is needed to be prepared                                |","lastModifiedDate":"2023-03-24"},{"lineNumber":627,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | list all recipes I have                           | know what I have some idea of what to cook                        |","lastModifiedDate":"2023-03-24"},{"lineNumber":628,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | find the recipe that contain specific ingredients | find specific recipe without having to go through the entire list |","lastModifiedDate":"2023-03-24"},{"lineNumber":629,"author":{"gitId":"gurmankalkat"},"content":"| v1.0    | user     | exit from the program                             |                                                                   |","lastModifiedDate":"2023-03-24"},{"lineNumber":630,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | new user | list all the command that can be used             | know what command I can use                                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":631,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | add meals I plan to make for the week             | refer to the weekly meals plan next time                          |","lastModifiedDate":"2023-03-24"},{"lineNumber":632,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | delete meals I plan to make for the week          | remove some meals from the weekly plan if I change my mind        |","lastModifiedDate":"2023-03-24"},{"lineNumber":633,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | categorise recipes using tags                     | group recipes with similar theme together                         |","lastModifiedDate":"2023-03-24"},{"lineNumber":634,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | list the recipes by tag                           | list recipes that are under the specific category                 |","lastModifiedDate":"2023-03-24"},{"lineNumber":635,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | random a recipe                                   | have a suggestion when do not know what to cook                   |","lastModifiedDate":"2023-03-30"},{"lineNumber":636,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | know what ingredients I have                      | know what ingredients I need to buy                               |","lastModifiedDate":"2023-04-07"},{"lineNumber":637,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | add the ingredients I have                        | easily track the ingredients I have                               |","lastModifiedDate":"2023-04-07"},{"lineNumber":638,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | delete the ingredients I have                     | easily track the ingredients I have                               |","lastModifiedDate":"2023-04-07"},{"lineNumber":639,"author":{"gitId":"gurmankalkat"},"content":"| v2.0    | user     | be able to cross recipes off my weekly plan       | have a neater weekly plan                                         |","lastModifiedDate":"2023-04-07"},{"lineNumber":640,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":641,"author":{"gitId":"gurmankalkat"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-03-23"},{"lineNumber":642,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":643,"author":{"gitId":"gurmankalkat"},"content":"1. Should work on any _mainstream OS_ as long as it has Java 11 or above installed.","lastModifiedDate":"2023-04-08"},{"lineNumber":644,"author":{"gitId":"gurmankalkat"},"content":"2. The number of recipes and user ingredients is limited to only 1000 items each.","lastModifiedDate":"2023-04-07"},{"lineNumber":645,"author":{"gitId":"gurmankalkat"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system","lastModifiedDate":"2023-04-07"},{"lineNumber":646,"author":{"gitId":"gurmankalkat"},"content":"   admin commands) should be able to accomplish most of the tasks faster using commands than","lastModifiedDate":"2023-04-07"},{"lineNumber":647,"author":{"gitId":"gurmankalkat"},"content":"   using the mouse, especially for the more advanced commands that allow for editing multiple items","lastModifiedDate":"2023-04-07"},{"lineNumber":648,"author":{"gitId":"gurmankalkat"},"content":"   at once.","lastModifiedDate":"2023-04-07"},{"lineNumber":649,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":650,"author":{"gitId":"gurmankalkat"},"content":"### Glossary","lastModifiedDate":"2023-03-23"},{"lineNumber":651,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":652,"author":{"gitId":"gurmankalkat"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-04-08"},{"lineNumber":653,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":654,"author":{"gitId":"gurmankalkat"},"content":"### Instructions for manual testing","lastModifiedDate":"2023-03-23"},{"lineNumber":655,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":656,"author":{"gitId":"gurmankalkat"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-04-07"},{"lineNumber":657,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":658,"author":{"gitId":"gurmankalkat"},"content":"#### Launch and Shutdown","lastModifiedDate":"2023-04-07"},{"lineNumber":659,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":660,"author":{"gitId":"gurmankalkat"},"content":"1. Initial launch","lastModifiedDate":"2023-04-07"},{"lineNumber":661,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":662,"author":{"gitId":"gurmankalkat"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-04-07"},{"lineNumber":663,"author":{"gitId":"gurmankalkat"},"content":"    2. Run the jar file using the command `java -jar meal360.jar`. The GUI similar to the below","lastModifiedDate":"2023-04-07"},{"lineNumber":664,"author":{"gitId":"gurmankalkat"},"content":"       should appear in a few seconds. The app comes with a smaall sample data of 10 recipes to","lastModifiedDate":"2023-04-07"},{"lineNumber":665,"author":{"gitId":"gurmankalkat"},"content":"       allow for easy testing.","lastModifiedDate":"2023-04-07"},{"lineNumber":666,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":667,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":668,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":669,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":670,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":671,"author":{"gitId":"gurmankalkat"},"content":"    Welcome to Meal360, your ultimate Recipe Manager!","lastModifiedDate":"2023-04-07"},{"lineNumber":672,"author":{"gitId":"gurmankalkat"},"content":"    __  __          _ ____  __  __","lastModifiedDate":"2023-04-07"},{"lineNumber":673,"author":{"gitId":"gurmankalkat"},"content":"    |  \\/  |___ __ _| |__ / / / /  \\","lastModifiedDate":"2023-04-07"},{"lineNumber":674,"author":{"gitId":"gurmankalkat"},"content":"    | |\\/| / -_) _` | ||_ \\/ _ \\ () |","lastModifiedDate":"2023-04-07"},{"lineNumber":675,"author":{"gitId":"gurmankalkat"},"content":"    |_|  |_\\___\\__,_|_|___/\\___/\\__/","lastModifiedDate":"2023-04-07"},{"lineNumber":676,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":677,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":678,"author":{"gitId":"gurmankalkat"},"content":"    | Loading recipes...                                                                               |","lastModifiedDate":"2023-04-07"},{"lineNumber":679,"author":{"gitId":"gurmankalkat"},"content":"    | Recipes loaded successfully.                                                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":680,"author":{"gitId":"gurmankalkat"},"content":"    | Loading weekly plan...                                                                           |","lastModifiedDate":"2023-04-07"},{"lineNumber":681,"author":{"gitId":"gurmankalkat"},"content":"    | Weekly plan loaded successfully.                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":682,"author":{"gitId":"gurmankalkat"},"content":"    | Loading ingredients...                                                                           |","lastModifiedDate":"2023-04-07"},{"lineNumber":683,"author":{"gitId":"gurmankalkat"},"content":"    | Ingredients loaded successfully.                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":684,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":685,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":686,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":687,"author":{"gitId":"gurmankalkat"},"content":"2. Shutdown","lastModifiedDate":"2023-04-07"},{"lineNumber":688,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":689,"author":{"gitId":"gurmankalkat"},"content":"    1. A user input of `bye` allows the user to exit the app. The app will then save the data for","lastModifiedDate":"2023-04-07"},{"lineNumber":690,"author":{"gitId":"gurmankalkat"},"content":"       recipes, ingredients and weekly meal plan automatically before exiting.","lastModifiedDate":"2023-04-07"},{"lineNumber":691,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":692,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":693,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":694,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":695,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":696,"author":{"gitId":"gurmankalkat"},"content":"   | Saving recipes...                                                                                |","lastModifiedDate":"2023-04-07"},{"lineNumber":697,"author":{"gitId":"gurmankalkat"},"content":"   | Recipes saved successfully.                                                                      |","lastModifiedDate":"2023-04-07"},{"lineNumber":698,"author":{"gitId":"gurmankalkat"},"content":"   | Saving weekly plan...                                                                            |","lastModifiedDate":"2023-04-07"},{"lineNumber":699,"author":{"gitId":"gurmankalkat"},"content":"   | Weekly plan saved successfully.                                                                  |","lastModifiedDate":"2023-04-07"},{"lineNumber":700,"author":{"gitId":"gurmankalkat"},"content":"   | Saving ingredients...                                                                            |","lastModifiedDate":"2023-04-07"},{"lineNumber":701,"author":{"gitId":"gurmankalkat"},"content":"   | Ingredients saved successfully.                                                                  |","lastModifiedDate":"2023-04-07"},{"lineNumber":702,"author":{"gitId":"gurmankalkat"},"content":"   | Bye. Hope to see you again soon!                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":703,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":704,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":705,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":706,"author":{"gitId":"gurmankalkat"},"content":"#### Ingredients","lastModifiedDate":"2023-04-07"},{"lineNumber":707,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":708,"author":{"gitId":"gurmankalkat"},"content":"1. Test case: `add_i /n fish /c 10 /d 10/10/2024`","lastModifiedDate":"2023-04-07"},{"lineNumber":709,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The ingredient `fish` with quantity `10` and expiry date `10/10/2024` should be added","lastModifiedDate":"2023-04-07"},{"lineNumber":710,"author":{"gitId":"gurmankalkat"},"content":"   into the user ingredients list. A success message should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":711,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":712,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":713,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":714,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":715,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":716,"author":{"gitId":"gurmankalkat"},"content":"    | Ingredient successfully added!                                                                   |","lastModifiedDate":"2023-04-07"},{"lineNumber":717,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":718,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":719,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":720,"author":{"gitId":"gurmankalkat"},"content":"2. Test case: `del_i /n fish /c 5`","lastModifiedDate":"2023-04-07"},{"lineNumber":721,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The ingredient `fish` with quantity `5` should be deleted from the user ingredients.","lastModifiedDate":"2023-04-07"},{"lineNumber":722,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":723,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":724,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":725,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":726,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":727,"author":{"gitId":"gurmankalkat"},"content":"    | Ingredient successfully deleted!                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":728,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":729,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":730,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":731,"author":{"gitId":"gurmankalkat"},"content":"3. Test case: `view_ingredients`","lastModifiedDate":"2023-04-07"},{"lineNumber":732,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The list of ingredients should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":733,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":734,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":735,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":736,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":737,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":738,"author":{"gitId":"gurmankalkat"},"content":"   | Here is your ingredient list:                                                                    |","lastModifiedDate":"2023-04-07"},{"lineNumber":739,"author":{"gitId":"gurmankalkat"},"content":"   | fish (5) [by:10/10/2024]                                                                         |","lastModifiedDate":"2023-04-07"},{"lineNumber":740,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":741,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":742,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":743,"author":{"gitId":"gurmankalkat"},"content":"#### Weekly Plan","lastModifiedDate":"2023-04-07"},{"lineNumber":744,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":745,"author":{"gitId":"gurmankalkat"},"content":"1. Test case: `weekly /add avocado toast 2`","lastModifiedDate":"2023-04-07"},{"lineNumber":746,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The recipe `avocado toast` should be added into the weekly plan with count `2`.","lastModifiedDate":"2023-04-07"},{"lineNumber":747,"author":{"gitId":"gurmankalkat"},"content":"   A success message should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":748,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":749,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":750,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":751,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":752,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":753,"author":{"gitId":"gurmankalkat"},"content":"   |  I\u0027ve added the recipes to your weekly plan!                                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":754,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":755,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":756,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":757,"author":{"gitId":"gurmankalkat"},"content":"2. Test case: `weekly /delete avocado toast 1`","lastModifiedDate":"2023-04-07"},{"lineNumber":758,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The recipe `avocado toast` should be deleted from the weekly plan with count `1`.","lastModifiedDate":"2023-04-07"},{"lineNumber":759,"author":{"gitId":"gurmankalkat"},"content":"   A success message should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":760,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":761,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":762,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":763,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":764,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":765,"author":{"gitId":"gurmankalkat"},"content":"   | I\u0027ve deleted the recipes from your weekly plan!                                                  |","lastModifiedDate":"2023-04-07"},{"lineNumber":766,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":767,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":768,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":769,"author":{"gitId":"gurmankalkat"},"content":"3. Test case: `weeklyplan`","lastModifiedDate":"2023-04-07"},{"lineNumber":770,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The list of recipes in the weekly plan should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":771,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":772,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":773,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":774,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":775,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":776,"author":{"gitId":"gurmankalkat"},"content":"   | Here is your weekly plan:                                                                        |","lastModifiedDate":"2023-04-07"},{"lineNumber":777,"author":{"gitId":"gurmankalkat"},"content":"   | avocado toast x1                                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":778,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":779,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":780,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":781,"author":{"gitId":"gurmankalkat"},"content":"4. Test case: `weekly /multiadd /r chicken rice /q 3 /r seafood paella /q 1`","lastModifiedDate":"2023-04-07"},{"lineNumber":782,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The recipes `chicken rice` and `seafood paella` should be added into the weekly plan","lastModifiedDate":"2023-04-07"},{"lineNumber":783,"author":{"gitId":"gurmankalkat"},"content":"   with count `3` and `1` respectively. A success message should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":784,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":785,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":786,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":787,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":788,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":789,"author":{"gitId":"gurmankalkat"},"content":"   |  I\u0027ve added the recipes to your weekly plan!                                                     |","lastModifiedDate":"2023-04-07"},{"lineNumber":790,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":791,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":792,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":793,"author":{"gitId":"gurmankalkat"},"content":"5. Test case: `weekly /multidelete /r chicken rice /q 2 /r seafood paella /q 1`","lastModifiedDate":"2023-04-07"},{"lineNumber":794,"author":{"gitId":"gurmankalkat"},"content":"   Expected: The recipes `chicken rice` and `seafood paella` should be deleted from the weekly plan","lastModifiedDate":"2023-04-07"},{"lineNumber":795,"author":{"gitId":"gurmankalkat"},"content":"   with count `2` and `1` respectively. A success message should be displayed.","lastModifiedDate":"2023-04-07"},{"lineNumber":796,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":797,"author":{"gitId":"gurmankalkat"},"content":"   Expected output:","lastModifiedDate":"2023-04-07"},{"lineNumber":798,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":799,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":800,"author":{"gitId":"gurmankalkat"},"content":"   | I\u0027ve deleted the recipes from your weekly plan!                                                  |","lastModifiedDate":"2023-04-07"},{"lineNumber":801,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":802,"author":{"gitId":"gurmankalkat"},"content":"   \u003e\u003e\u003e weeklyplan","lastModifiedDate":"2023-04-07"},{"lineNumber":803,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":804,"author":{"gitId":"gurmankalkat"},"content":"   | Here is your weekly plan:                                                                        |","lastModifiedDate":"2023-04-07"},{"lineNumber":805,"author":{"gitId":"gurmankalkat"},"content":"   | chicken rice x1                                                                                  |","lastModifiedDate":"2023-04-07"},{"lineNumber":806,"author":{"gitId":"gurmankalkat"},"content":"   | avocado toast x1                                                                                 |","lastModifiedDate":"2023-04-07"},{"lineNumber":807,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-07"},{"lineNumber":808,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-07"},{"lineNumber":809,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":810,"author":{"gitId":"gurmankalkat"},"content":"#### Tag/Categorize Recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":811,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":812,"author":{"gitId":"gurmankalkat"},"content":"1. Remove recipe from an unknown tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":813,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Make sure that `unknowntag` has never been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":814,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 1: `tag unknowntag \u003e\u003e recipe1`","lastModifiedDate":"2023-04-08"},{"lineNumber":815,"author":{"gitId":"gurmankalkat"},"content":"    * Expected: An error message is shown.","lastModifiedDate":"2023-04-08"},{"lineNumber":816,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 1:","lastModifiedDate":"2023-04-08"},{"lineNumber":817,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":818,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":819,"author":{"gitId":"gurmankalkat"},"content":"    | There is no \"unknowntag\" tag found. Please make sure you have entered the correct tag.           |","lastModifiedDate":"2023-04-08"},{"lineNumber":820,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":821,"author":{"gitId":"gurmankalkat"},"content":"    ```","lastModifiedDate":"2023-04-08"},{"lineNumber":822,"author":{"gitId":"gurmankalkat"},"content":"2. Add tag command with an unknown recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":823,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Make sure that there is no recipe named `unknown` in the list, and","lastModifiedDate":"2023-04-08"},{"lineNumber":824,"author":{"gitId":"gurmankalkat"},"content":"      a recipe named `recipe1` using the `add` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":825,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 2: `tag testtag \u003c\u003c recipe1 \u0026\u0026 unknown`","lastModifiedDate":"2023-04-08"},{"lineNumber":826,"author":{"gitId":"gurmankalkat"},"content":"    * Expected: An error message is showed. `recipe1` is added to `testtag` but `unknown` is not","lastModifiedDate":"2023-04-08"},{"lineNumber":827,"author":{"gitId":"gurmankalkat"},"content":"      added.","lastModifiedDate":"2023-04-08"},{"lineNumber":828,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 2:","lastModifiedDate":"2023-04-08"},{"lineNumber":829,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":830,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":831,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":832,"author":{"gitId":"gurmankalkat"},"content":"   | Unable to find the recipe: \"unknown\" in the tag.                                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":833,"author":{"gitId":"gurmankalkat"},"content":"   | All the recipe before \"unknown\" (if any) are successfully added from the tag.                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":834,"author":{"gitId":"gurmankalkat"},"content":"   ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":835,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":836,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":837,"author":{"gitId":"gurmankalkat"},"content":"3. Remove tag command with an unknown recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":838,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Complete test case 2","lastModifiedDate":"2023-04-08"},{"lineNumber":839,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 3: `tag testtag \u003e\u003e recipe1 \u0026\u0026 unknown`","lastModifiedDate":"2023-04-08"},{"lineNumber":840,"author":{"gitId":"gurmankalkat"},"content":"    * Expected: An error message is showed. `recipe1` is removed `testtag` but `unknown` is not","lastModifiedDate":"2023-04-08"},{"lineNumber":841,"author":{"gitId":"gurmankalkat"},"content":"      removed.","lastModifiedDate":"2023-04-08"},{"lineNumber":842,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 3:","lastModifiedDate":"2023-04-08"},{"lineNumber":843,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":844,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":845,"author":{"gitId":"gurmankalkat"},"content":"    | Unable to find the recipe: \"unknown\" in the tag.                                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":846,"author":{"gitId":"gurmankalkat"},"content":"    | All the recipe before \"unknown\" (if any) are successfully removed from the tag.                  |","lastModifiedDate":"2023-04-08"},{"lineNumber":847,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":848,"author":{"gitId":"gurmankalkat"},"content":"    ```","lastModifiedDate":"2023-04-08"},{"lineNumber":849,"author":{"gitId":"gurmankalkat"},"content":"4. Successfully add a recipes into a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":850,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Add recipe named `recipe2` using the `add` command","lastModifiedDate":"2023-04-08"},{"lineNumber":851,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 4: `tag testtag \u003c\u003c recipe2`","lastModifiedDate":"2023-04-08"},{"lineNumber":852,"author":{"gitId":"gurmankalkat"},"content":"    * Expected: `recipe2` is added to `testtag`.","lastModifiedDate":"2023-04-08"},{"lineNumber":853,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 4:","lastModifiedDate":"2023-04-08"},{"lineNumber":854,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":855,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":856,"author":{"gitId":"gurmankalkat"},"content":"    | You have successfully added the recipe(s) to \"testtag\" tag.                                      |","lastModifiedDate":"2023-04-08"},{"lineNumber":857,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":858,"author":{"gitId":"gurmankalkat"},"content":"    ```","lastModifiedDate":"2023-04-08"},{"lineNumber":859,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":860,"author":{"gitId":"gurmankalkat"},"content":"5. Successfully remove a recipe from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":861,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Complete test case 4","lastModifiedDate":"2023-04-08"},{"lineNumber":862,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 5: `tag testTag \u003e\u003e recipe2`","lastModifiedDate":"2023-04-08"},{"lineNumber":863,"author":{"gitId":"gurmankalkat"},"content":"    * Expected: `recipe2` is removed `testtag`.","lastModifiedDate":"2023-04-08"},{"lineNumber":864,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 5:","lastModifiedDate":"2023-04-08"},{"lineNumber":865,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":866,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":867,"author":{"gitId":"gurmankalkat"},"content":"    | You have successfully removed the recipe(s) from \"testtag\" tag.                                  |","lastModifiedDate":"2023-04-08"},{"lineNumber":868,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":869,"author":{"gitId":"gurmankalkat"},"content":"    ```","lastModifiedDate":"2023-04-08"},{"lineNumber":870,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":871,"author":{"gitId":"gurmankalkat"},"content":"#### List Recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":872,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":873,"author":{"gitId":"gurmankalkat"},"content":"1. Listing recipes when there is no recipe in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":874,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Empty the list of recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":875,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 1: `list`","lastModifiedDate":"2023-04-08"},{"lineNumber":876,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 1:","lastModifiedDate":"2023-04-08"},{"lineNumber":877,"author":{"gitId":"gurmankalkat"},"content":"    ```","lastModifiedDate":"2023-04-08"},{"lineNumber":878,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":879,"author":{"gitId":"gurmankalkat"},"content":"    | There is nothing to list.                                                                        |","lastModifiedDate":"2023-04-08"},{"lineNumber":880,"author":{"gitId":"gurmankalkat"},"content":"    ----------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-08"},{"lineNumber":881,"author":{"gitId":"gurmankalkat"},"content":"   ```","lastModifiedDate":"2023-04-08"},{"lineNumber":882,"author":{"gitId":"gurmankalkat"},"content":"2. List all recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":883,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Add one or more recipes using the `add` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":884,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 2: `list`","lastModifiedDate":"2023-04-08"},{"lineNumber":885,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 2: An ordered list of recipes is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":886,"author":{"gitId":"gurmankalkat"},"content":"      The recipes\u0027 name that are added are listed out along with the number of ingredients needed.","lastModifiedDate":"2023-04-08"},{"lineNumber":887,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":888,"author":{"gitId":"gurmankalkat"},"content":"3. List specific recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":889,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 3: `list a`","lastModifiedDate":"2023-04-08"},{"lineNumber":890,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 3:","lastModifiedDate":"2023-04-08"},{"lineNumber":891,"author":{"gitId":"gurmankalkat"},"content":"        * An ordered list of recipes that contain `a` in their name or ingredients is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":892,"author":{"gitId":"gurmankalkat"},"content":"          The recipes\u0027 name that are added are listed out along with the number of ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":893,"author":{"gitId":"gurmankalkat"},"content":"          needed.","lastModifiedDate":"2023-04-08"},{"lineNumber":894,"author":{"gitId":"gurmankalkat"},"content":"        * If there is no recipe or ingredient that contain `a` the expected output is identical","lastModifiedDate":"2023-04-08"},{"lineNumber":895,"author":{"gitId":"gurmankalkat"},"content":"          to expected output 1.","lastModifiedDate":"2023-04-08"},{"lineNumber":896,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":897,"author":{"gitId":"gurmankalkat"},"content":"4. List recipes from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":898,"author":{"gitId":"gurmankalkat"},"content":"    * Prerequisite: Create a recipe named `recipefortag` using `add` command, and add the recipe to","lastModifiedDate":"2023-04-08"},{"lineNumber":899,"author":{"gitId":"gurmankalkat"},"content":"      `testtag1` using `tag` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":900,"author":{"gitId":"gurmankalkat"},"content":"    * Test case 4: `list /t testtag1`","lastModifiedDate":"2023-04-08"},{"lineNumber":901,"author":{"gitId":"gurmankalkat"},"content":"    * Expected output 4: An ordered list of recipes that are in `testtag1` are listed out,","lastModifiedDate":"2023-04-08"},{"lineNumber":902,"author":{"gitId":"gurmankalkat"},"content":"      including `recipefortag`.","lastModifiedDate":"2023-04-08"},{"lineNumber":903,"author":{"gitId":"gurmankalkat"},"content":"      The recipes\u0027 name that are added are listed out along with the number of ingredients needed.","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"notbingsu":124,"JuneNita":45,"gurmankalkat":542,"-":6,"jaredoong":184,"TopGun2001":2}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"# Meal360","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"jaredoong":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"* [Features](#features)","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"___","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"## Quick Start","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"2. Down the latest version of `Meal360`","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"   from [here](https://github.com/AY2223S2-CS2113-F10-3/tp/releases).","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"3. Upon the first launch, the app will create a `database` folder in the same directory as the","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"   `tp.jar` file. This folder will contain all the data files that the app will use. Please do not","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"   touch these files to ensure smooth operation of the app.","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"4. To allow for immediate testing of features, the app comes preloaded with 10 recipes.","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"5. Take note that changes to the ingredient list, recipe list, and weekly meal plan would be saved","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"   only when exiting the program properly using `bye` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"___","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"* [Add Recipes](#add-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"* [Edit Recipes](#edit-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"* [Delete Recipes](#delete-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"* [View recipes](#view-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"* [List Relevant Recipes](#list-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"* [Tag/Categorize Recipes](#tagcategorize-recipes)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"* [Add Single Recipe To Weekly Plan](#add-single-recipe-to-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"* [Add Multiple Recipe To Weekly Plan](#add-multiple-recipes-to-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"* [Remove Single Recipe From Weekly Plan](#delete-single-recipe-from-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"* [Remove Multiple Recipe From Weekly Plan](#delete-multiple-recipes-from-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"* [Clear Weekly Plan](#clear-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"* [Mark Recipe In Weekly Plan As Done](#mark-recipe-in-weekly-plan-as-done)","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"* [View Weekly Plan Ingredients](#view-weekly-plan-ingredients)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"* [View User Ingredients](#view-user-ingredients)","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"* [View Weekly Plan](#view-weekly-plan)","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"* [Random A Recipe](#random-a-recipe)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"* [Exit Program](#exit-the-program)","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"* [Add User Ingredient](#add-user-ingredient)","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"* [Delete User Ingredient](#delete-user-ingredient)","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"### HOW TO ADD INGREDIENTS TO A RECIPE:","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"* Please follow the below-mentioned format.","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"gurmankalkat"},"content":"Format: `ingredient1_name\u003dingredient1_quantity and ingredient2_name\u003dingredient2_quantity ...`","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"Examples of usage:","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"* `chicken\u003d100 meat and oil\u003d200`","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"* `white rice\u003d300 vegetables\u003d400 pepper,chilli and seeds\u003d500`","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"* Type the ingredient name followed by equal sign and quantity in positive integer values.","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"* After the ingredients are key-in in, please type `done` in the next line to finish the process.","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"    * **exception:** for editing ingredients partially, you just have to key in the 1 new ingredient","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"      and the recipe","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"      manager knows that you have entered 1 ingredient. No need to type `done`.","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"### Add Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"Add new recipes to your list.","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"Format: `add /r [RECIPE_NAME]`","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"* `RECIPE_NAME` is basically a string.","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"* Type the recipe name after typing `/r `.","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"Example of usage:","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"`add /r chicken rice`","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"`add /r noodles`","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"### Edit Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"Edit recipes in your list partially, fully or add new ingredients to already existing recipe.","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"Format: `edit /r [RECIPE_NAME]`","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"* `RECIPE_NAME` is basically a string.","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"TopGun2001"},"content":"* Type the recipe name after typing `/r `.","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"TopGun2001"},"content":"* If you want to edit fully: press 1, edit partially: press 2, or add new ingredients: press 3.","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"TopGun2001"},"content":"* Follow the proper format while editing/adding ingredients.","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"Example of usage:","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"TopGun2001"},"content":"`edit /r chicken rice`","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"TopGun2001"},"content":"`edit /r noodles`","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"TopGun2001"},"content":"### List Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"JuneNita"},"content":"List all recipes or filtered list recipes by the name or ingredients.","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"JuneNita"},"content":"Format: `list [/t] [KEYWORD \u0026\u0026 KEYWORD \u0026\u0026 ...]`","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"JuneNita"},"content":"* The `KEYWORD` and `/t` are optional.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"JuneNita"},"content":"* `KEYWORD` can be a name of recipe or ingredients or tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"JuneNita"},"content":"* If user want to list recipes from tags `/t` is required. When `/t` is used,","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"JuneNita"},"content":"  at least one `KEYWORD`, replacing by the tag name, is required.","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"JuneNita"},"content":"* To list all recipes, do not add `KEYWORD` and `/t`.","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"JuneNita"},"content":"* Use `\u0026\u0026` to list all the recipe that contain **all** specified `KEYWORD`.","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"JuneNita"},"content":"Example of usage:","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"JuneNita"},"content":"* `list` lists all the recipes.","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"JuneNita"},"content":"* `list pizza` lists recipes that contain \u0027pizza\u0027 in the name or ingredients.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"JuneNita"},"content":"* `list milk \u0026\u0026 egg` lists recipes that contain __both__ \u0027milk\u0027 and \u0027egg\u0027 in the","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"JuneNita"},"content":"  name or ingredients.","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"JuneNita"},"content":"* `list /t western` lists the recipes that are in \u0027western\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"JuneNita"},"content":"* `list /t western \u0026\u0026 chinese` lists recipes that is under __both__ \u0027western\u0027 and","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"JuneNita"},"content":"  \u0027chinese\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"TopGun2001"},"content":"### View Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"Views the list of ingredients and their quantities for a recipe.","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jaredoong"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jaredoong"},"content":"* Views the recipe at the specified `INDEX`.","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jaredoong"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jaredoong"},"content":"* The index **must be a positive integer** 1,2,3, ...","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jaredoong"},"content":"`view 1`","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"### Delete Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"gurmankalkat"},"content":"Deletes one, a range, or all recipes currently in list.","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"gurmankalkat"},"content":"Format: `delete INDEX/RANGE` or `delete /r NAME`","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"gurmankalkat"},"content":"* Deletes the recipe(s) specified by the user either through the recipe index or name.","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"gurmankalkat"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"gurmankalkat"},"content":"* The name refers to the recipe name in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"gurmankalkat"},"content":"*","lastModifiedDate":"2023-04-10"},{"lineNumber":157,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"gurmankalkat"},"content":"Example of usage:","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"gurmankalkat"},"content":"`delete 1`","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"gurmankalkat"},"content":"`delete 1-3`","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"gurmankalkat"},"content":"`delete /r pizza`","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"gurmankalkat"},"content":"`delete /r all`","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"TopGun2001"},"content":"### Tag/Categorize Recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"JuneNita"},"content":"__Categorize recipes into a specific tag__","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"JuneNita"},"content":"Adding one or more recipes into a tag, so that users can organize the recipes into categories","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"JuneNita"},"content":"Format: `tag LABEL \u003c\u003c [RECIPE_NAME \u0026\u0026 RECIPE_NAME \u0026\u0026 ...]`","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"JuneNita"},"content":"* `LABEL` is required, and replace with the tag label that user want to","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"JuneNita"},"content":"  add the recipes into. This is case-sensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"JuneNita"},"content":"* At least one `RECIPE_NAME` is required.","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"JuneNita"},"content":"* To add multiple recipes into the tag, use `\u0026\u0026` followed by next `RECIPE_NAME`.","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"JuneNita"},"content":"Example of usage:","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"JuneNita"},"content":"* `tag western \u003c\u003c burger` adds burger into \u0027western\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"JuneNita"},"content":"* `tag junk foods \u003c\u003c burger \u0026\u0026 hotdog` adds burger and hotdog into \u0027junk foods\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"JuneNita"},"content":"* `tag breakfast \u003c\u003c milk \u0026\u0026 boiled egg \u0026\u0026 bread` adds milk, boiled egg and","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"JuneNita"},"content":"  bread into \u0027breakfast\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"TopGun2001"},"content":"__Removing recipes from a tag__","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"JuneNita"},"content":"Remove recipes from a specific tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"JuneNita"},"content":"Format: `tag LABEL \u003e\u003e [RECIPE_NAME \u0026\u0026 RECIPE_NAME \u0026\u0026 ...]`","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"JuneNita"},"content":"* `LABEL` is required, and replace with the tag label that user want to","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"JuneNita"},"content":"  remove the recipes from. This is case-sensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"JuneNita"},"content":"* At least one `RECIPE_NAME` is required.","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"JuneNita"},"content":"* To remove multiple recipes from the tag, use `\u0026\u0026` followed by next `RECIPE_NAME`.","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"JuneNita"},"content":"Example of usage:","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"JuneNita"},"content":"* `tag western\u003e\u003e burger` removes burger from \u0027western\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"JuneNita"},"content":"* `tag junk foods \u003e\u003e burger \u0026\u0026 hotdog` remove burger and hotdog from \u0027junk foods\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"JuneNita"},"content":"* `tag breakfast \u003e\u003e milk \u0026\u0026 boilded egg \u0026\u0026 bread` removes milk, boiled egg, and bread","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"JuneNita"},"content":"  from \u0027breakfast\u0027 tag.","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"TopGun2001"},"content":"### Add single recipe to weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"jaredoong"},"content":"Adds an existing recipe to this week\u0027s plan.","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"jaredoong"},"content":"Format: `weekly /add RECIPE_NAME QUANTITY`","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"jaredoong"},"content":"* Adds the specified `RECIPE_ NAME` to this week\u0027s plan`QUANTITY` number of times, with quantity","lastModifiedDate":"2023-04-01"},{"lineNumber":214,"author":{"gitId":"jaredoong"},"content":"  representing the number of days the user plans to prepare the recipe within the week.","lastModifiedDate":"2023-04-01"},{"lineNumber":215,"author":{"gitId":"jaredoong"},"content":"* The recipe name refers to the name of the recipe shown in the displayed recipe list.","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-02"},{"lineNumber":218,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"jaredoong"},"content":"* `weekly /add pizza 2` adds pizza to this week\u0027s plan twice.","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"jaredoong"},"content":"* `weekly /add burger 1` adds burger to this week\u0027s plan once.","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":226,"author":{"gitId":"TopGun2001"},"content":"### Add multiple recipes to weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"jaredoong"},"content":"Adds multiple existing recipe to this week\u0027s plan.","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"jaredoong"},"content":"Format: `weekly /multiadd [/r RECIPE_NAME /q QUANTITY]`","lastModifiedDate":"2023-04-01"},{"lineNumber":231,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"jaredoong"},"content":"* Adds the specified `RECIPE NAME` to this week\u0027s plan`QUANTITY` number of times.","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"jaredoong"},"content":"* At least one pair of `RECIPE_NAME` and `QUANTITY` is required.","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"jaredoong"},"content":"* Each `RECIPE_NAME` and `QUANTITY` requires `/r` and `/q` before it respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"jaredoong"},"content":"* The recipe name refers to the name of the recipe shown in the displayed recipe list.","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"jaredoong"},"content":"* If the same recipe is specified multiple times, only the **last** quantity specified","lastModifiedDate":"2023-04-01"},{"lineNumber":239,"author":{"gitId":"jaredoong"},"content":"  will be used.","lastModifiedDate":"2023-04-01"},{"lineNumber":240,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"jaredoong"},"content":"* `weekly /multiadd /r pizza /q 2 /r burger /q 9` adds pizza twice and burger once to this week\u0027s","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"jaredoong"},"content":"  plan.","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"TopGun2001"},"content":"### Delete single recipe from weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":249,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"jaredoong"},"content":"Deletes an existing recipe from this week\u0027s plan.","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"jaredoong"},"content":"Format: `weekly /delete RECIPE_NAME QUANTITY`","lastModifiedDate":"2023-04-03"},{"lineNumber":253,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"jaredoong"},"content":"* Deletes the specified `RECIPE_NAME` from this week\u0027s plan `QUANTITY` number of times.","lastModifiedDate":"2023-04-03"},{"lineNumber":255,"author":{"gitId":"jaredoong"},"content":"* The recipe name refers to the name of the recipe shown in the displayed recipe list.","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-04-02"},{"lineNumber":257,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-02"},{"lineNumber":258,"author":{"gitId":"jaredoong"},"content":"* Indicating a quantity more than the current quantity deletes the recipe completely from","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"jaredoong"},"content":"  this week\u0027s plan.","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"jaredoong"},"content":"* `weekly /delete pizza 1` removes pizza from this week\u0027s plan once.","lastModifiedDate":"2023-04-03"},{"lineNumber":264,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"TopGun2001"},"content":"### Delete multiple recipes from weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"jaredoong"},"content":"Deletes multiple existing recipe from this week\u0027s plan.","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"jaredoong"},"content":"Format: `weekly /multidelete [/r RECIPE_NAME /q QUANTITY]`","lastModifiedDate":"2023-04-01"},{"lineNumber":272,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"jaredoong"},"content":"* Deletes the specified `RECIPE_NAME` from this week\u0027s plan`QUANTITY` number of times.","lastModifiedDate":"2023-04-01"},{"lineNumber":274,"author":{"gitId":"jaredoong"},"content":"* At least one pair of `RECIPE_NAME` and `QUANTITY` is required.","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"jaredoong"},"content":"* Each `RECIPE_NAME` and `QUANTITY` requires `/r` and `/q` before it respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"jaredoong"},"content":"* The recipe name refers to the name of the recipe shown in the displayed recipe list.","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-02"},{"lineNumber":279,"author":{"gitId":"jaredoong"},"content":"* Indicating a quantity more than the current quantity deletes the recipe completely from","lastModifiedDate":"2023-04-03"},{"lineNumber":280,"author":{"gitId":"jaredoong"},"content":"  this week\u0027s plan.","lastModifiedDate":"2023-04-03"},{"lineNumber":281,"author":{"gitId":"jaredoong"},"content":"* If the same recipe is specified multiple times, only the **last** quantity specified","lastModifiedDate":"2023-04-01"},{"lineNumber":282,"author":{"gitId":"jaredoong"},"content":"  will be used.","lastModifiedDate":"2023-04-01"},{"lineNumber":283,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"jaredoong"},"content":"* `weekly /multidelete /r pizza /q 2 /r burger /q 9` deletes pizza twice and burger once from this","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"jaredoong"},"content":"  week\u0027s","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"jaredoong"},"content":"  plan.","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"TopGun2001"},"content":"### Clear weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":293,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"gurmankalkat"},"content":"Clears this week\u0027s plan by removing all recipes listed in weekly plan.","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"gurmankalkat"},"content":"Format: `weekly /clear`","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":299,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":300,"author":{"gitId":"TopGun2001"},"content":"### Mark recipe in weekly plan as done","lastModifiedDate":"2023-04-09"},{"lineNumber":301,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":302,"author":{"gitId":"jaredoong"},"content":"Mark a recipe in the weekly plan as completed. A single count of the recipe and its corresponding","lastModifiedDate":"2023-04-03"},{"lineNumber":303,"author":{"gitId":"jaredoong"},"content":"ingredients will be removed from the weekly plan and the list of ingredients.","lastModifiedDate":"2023-04-03"},{"lineNumber":304,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"jaredoong"},"content":"Format: `weekly /done RECIPE_NAME`","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"jaredoong"},"content":"* This command executes only if the user has sufficient ingredients to prepare the recipe.","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"jaredoong"},"content":"* This command executes only if the recipe is in the weekly plan.","lastModifiedDate":"2023-04-03"},{"lineNumber":309,"author":{"gitId":"jaredoong"},"content":"* The recipe name refers to the name of the recipe shown in the displayed recipe list.","lastModifiedDate":"2023-04-03"},{"lineNumber":310,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":311,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-04-03"},{"lineNumber":312,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":313,"author":{"gitId":"jaredoong"},"content":"* `weekly /done pizza` will mark pizza as done in the weekly plan, assuming the user has `pizza` in","lastModifiedDate":"2023-04-03"},{"lineNumber":314,"author":{"gitId":"jaredoong"},"content":"  the weekly plan and there are sufficient ingredients.","lastModifiedDate":"2023-04-03"},{"lineNumber":315,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":316,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"TopGun2001"},"content":"### View weekly plan","lastModifiedDate":"2023-04-09"},{"lineNumber":319,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"jaredoong"},"content":"View this week\u0027s plan.","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"jaredoong"},"content":"Format: `weeklyplan`","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"TopGun2001"},"content":"### View weekly plan ingredients","lastModifiedDate":"2023-04-09"},{"lineNumber":327,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"gurmankalkat"},"content":"View this week\u0027s ingredients.","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"gurmankalkat"},"content":"Format: `weeklyingredients`","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"TopGun2001"},"content":"### Random a recipe","lastModifiedDate":"2023-04-09"},{"lineNumber":335,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"JuneNita"},"content":"Random a recipe from all the recipes that user have, and show the list of","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"JuneNita"},"content":"ingredients and their quantities for a recipe.","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"JuneNita"},"content":"Format: `random`","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"TopGun2001"},"content":"### Exit the program","lastModifiedDate":"2023-04-09"},{"lineNumber":344,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":345,"author":{"gitId":"TopGun2001"},"content":"Exits the program.","lastModifiedDate":"2023-04-09"},{"lineNumber":346,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":347,"author":{"gitId":"jaredoong"},"content":"Format: `bye`","lastModifiedDate":"2023-03-14"},{"lineNumber":348,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":349,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":350,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":351,"author":{"gitId":"TopGun2001"},"content":"### Add user ingredient","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":353,"author":{"gitId":"jaredoong"},"content":"Add user\u0027s ingredients into the ingredient list.","lastModifiedDate":"2023-03-31"},{"lineNumber":354,"author":{"gitId":"jaredoong"},"content":"Format : `add_i /n INGREDIENT_NAME /c QUANTITY /d DATE`","lastModifiedDate":"2023-03-31"},{"lineNumber":355,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-03"},{"lineNumber":358,"author":{"gitId":"jaredoong"},"content":"* The date **must be in the format of DD/MM/YYYY**","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"jaredoong"},"content":"* If the ingredient already exists in the list, the quantity will be added to the existing quantity,","lastModifiedDate":"2023-04-03"},{"lineNumber":360,"author":{"gitId":"jaredoong"},"content":"  while the expiry date will be updated to reflect the expiry date of the new addition.","lastModifiedDate":"2023-04-03"},{"lineNumber":361,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":362,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":363,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":364,"author":{"gitId":"jaredoong"},"content":"* `add_i /n chicken /c 1 /d 01/01/2020` adds chicken with quantity 1 and expiry date 01/01/2020","lastModifiedDate":"2023-03-31"},{"lineNumber":365,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":367,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":368,"author":{"gitId":"TopGun2001"},"content":"### Delete user ingredient","lastModifiedDate":"2023-04-09"},{"lineNumber":369,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":370,"author":{"gitId":"jaredoong"},"content":"Delete user\u0027s ingredients from the ingredient list.","lastModifiedDate":"2023-03-31"},{"lineNumber":371,"author":{"gitId":"jaredoong"},"content":"Format : `del_i /n INGREDIENT_NAME /c QUANTITY`","lastModifiedDate":"2023-03-31"},{"lineNumber":372,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":373,"author":{"gitId":"jaredoong"},"content":"* The quantity has to be **less than or equal** to the quantity of the ingredient in the list.","lastModifiedDate":"2023-03-31"},{"lineNumber":374,"author":{"gitId":"jaredoong"},"content":"* The quantity **must be a positive","lastModifiedDate":"2023-03-31"},{"lineNumber":375,"author":{"gitId":"jaredoong"},"content":"  integer** between 1 and 1000.","lastModifiedDate":"2023-04-03"},{"lineNumber":376,"author":{"gitId":"jaredoong"},"content":"* Indicating a quantity more than the current quantity deletes the ingredient completely from","lastModifiedDate":"2023-04-03"},{"lineNumber":377,"author":{"gitId":"jaredoong"},"content":"  the list.","lastModifiedDate":"2023-04-03"},{"lineNumber":378,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"jaredoong"},"content":"Example of usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":381,"author":{"gitId":"jaredoong"},"content":"* `del_i /n chicken /c 1` deletes chicken with quantity 1","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":383,"author":{"gitId":"JuneNita"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":384,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":385,"author":{"gitId":"TopGun2001"},"content":"### View user ingredients","lastModifiedDate":"2023-04-09"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":387,"author":{"gitId":"jaredoong"},"content":"View user\u0027s ingredients from the ingredient list.","lastModifiedDate":"2023-03-31"},{"lineNumber":388,"author":{"gitId":"jaredoong"},"content":"Format : `view_ingredients`","lastModifiedDate":"2023-03-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":390,"author":{"gitId":"JuneNita"},"content":"---","lastModifiedDate":"2023-04-08"},{"lineNumber":391,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":393,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"TopGun2001"},"content":"| Action                             | Format, Examples                                                                                            | ","lastModifiedDate":"2023-04-09"},{"lineNumber":395,"author":{"gitId":"jaredoong"},"content":"|------------------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"TopGun2001"},"content":"| Add recipe                         | `add /r [RECIPE_NAME]`\u003cbr/\u003ee.g `add /r chicken rice`                                                        |","lastModifiedDate":"2023-04-09"},{"lineNumber":397,"author":{"gitId":"TopGun2001"},"content":"| Edit recipe                        | `edit /r [RECIPE_NAME]`\u003cbr/\u003ee.g `edit /r chicken rice`                                                      |","lastModifiedDate":"2023-04-09"},{"lineNumber":398,"author":{"gitId":"JuneNita"},"content":"| List recipe                        | `list [/t] [KEYWORD]`\u003cbr/\u003ee.g `list pizza`                                                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":399,"author":{"gitId":"jaredoong"},"content":"| View recipe                        | `view INDEX`\u003cbr/\u003ee.g `view 1`                                                                               |","lastModifiedDate":"2023-03-14"},{"lineNumber":400,"author":{"gitId":"JuneNita"},"content":"| Add tag/Categorise to recipes      | `tag LABEL \u003c\u003c RECIPE_NAME`\u003cbr/\u003ee.g `tag western \u003c\u003c pizza`                                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":401,"author":{"gitId":"JuneNita"},"content":"| Remove tag/Categorise from recipes | `tag LABEL \u003e\u003e RECIPE_NAME`\u003cbr/\u003ee.g `tag western \u003e\u003e pizza`                                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":402,"author":{"gitId":"JuneNita"},"content":"| Random a recipe                    | `random`                                                                                                    |","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"jaredoong"},"content":"| Add to weekly plan                 | `weekly /add RECIPE_NAME QUANTITY`\u003cbr/\u003ee.g `weekly /add pizza 2`                                            |","lastModifiedDate":"2023-04-06"},{"lineNumber":404,"author":{"gitId":"jaredoong"},"content":"| Add multiple to weekly plan        | `weekly /multiadd [/r RECIPE_NAME /q QUANTITY]` \u003cbr/\u003ee.g `weekly /multiadd /r pizza /q 1 /r burger /q 3`    |","lastModifiedDate":"2023-04-06"},{"lineNumber":405,"author":{"gitId":"jaredoong"},"content":"| Delete from weekly plan            | `weekly /delete RECIPE_NAME`\u003cbr/\u003ee.g `weekly /delete pizza`                                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":406,"author":{"gitId":"jaredoong"},"content":"| Delete multiple from weekly plan   | `weekly /multidelete [/r RECIPE_NAME /q QUANTITY]` \u003cbr/\u003ee.g `weekly /multiadd /r pizza /q 1 /r burger /q 4` |","lastModifiedDate":"2023-04-03"},{"lineNumber":407,"author":{"gitId":"jaredoong"},"content":"| Clear weekly plan                  | `weekly /clear`                                                                                             |","lastModifiedDate":"2023-04-03"},{"lineNumber":408,"author":{"gitId":"jaredoong"},"content":"| Mark recipe in weekly plan as done | `weekly /done RECIPE_NAME`\u003cbr/\u003e e.g `weekly /done pizza`                                                    |","lastModifiedDate":"2023-04-03"},{"lineNumber":409,"author":{"gitId":"jaredoong"},"content":"| View weekly plan                   | `weeklyplan`                                                                                                |","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"jaredoong"},"content":"| View weekly ingredients            | `weeklyingredients`                                                                                         |","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"jaredoong"},"content":"| View user ingredients              | `view_ingredients`                                                                                          |","lastModifiedDate":"2023-03-31"},{"lineNumber":412,"author":{"gitId":"TopGun2001"},"content":"| Add user ingredient                | `add_i /n NAME /c COUNT /d DATE` \u003cbr/\u003ee.g `add_i /n Rice /c 100 /d 04/09/2023`                              |","lastModifiedDate":"2023-04-09"},{"lineNumber":413,"author":{"gitId":"TopGun2001"},"content":"| Delete user ingredient             | `del_i /n NAME /c COUNT` \u003cbr/\u003ee.g `delete_i /n Rice /c 50`                                                  |","lastModifiedDate":"2023-04-09"},{"lineNumber":414,"author":{"gitId":"jaredoong"},"content":"| Exit the program                   | `bye`                                                                                                       |","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"JuneNita":110,"gurmankalkat":28,"-":15,"jaredoong":178,"TopGun2001":83}},{"path":"docs/team/gurmankalkat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gurmankalkat"},"content":"# Gurman Kalkat - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"gurmankalkat"},"content":"## Project: Meal360","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"gurmankalkat"},"content":"### Overview","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"gurmankalkat"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"gurmankalkat"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"gurmankalkat"},"content":"you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"gurmankalkat"},"content":"apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"gurmankalkat"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"gurmankalkat"},"content":"* __Code contributed__: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dgurmankalkat\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"gurmankalkat"},"content":"* __Enhancements implemented:__","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"gurmankalkat"},"content":"    * Added `delete` feature to give users the ability to delete a recipe in the list by its index or name","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"gurmankalkat"},"content":"      * [#20](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/20)","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"gurmankalkat"},"content":"    * Added `weeklyingredients` feature to list out all ingredients needed for the week based on user\u0027s weeklyplan","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"gurmankalkat"},"content":"      * [#50](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/50)","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"gurmankalkat"},"content":"    * Added `weekly /clear` feature to be able to clear the entire weeklyplan","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"gurmankalkat"},"content":"      * [#50](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/50)","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"gurmankalkat"},"content":"    * Updated `delete` feature so use can delete all or a range of recipes","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"gurmankalkat"},"content":"      * [#34](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/34)","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"gurmankalkat"},"content":"    * Added exception handler for `delete` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"gurmankalkat"},"content":"      * [#34](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/34)","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"gurmankalkat"},"content":"    * Wrote tests for `delete`, `weeklyingredients` and `weekly /clear` features","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"gurmankalkat"},"content":"      * [#50](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/50)","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"gurmankalkat"},"content":"      * [#20](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/20/files)","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"gurmankalkat"},"content":"    * Updated `add` feature so users can input all ingredients in one line and processed accurately","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"gurmankalkat"},"content":"      * [137](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/137)","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"gurmankalkat"},"content":"      ","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"gurmankalkat"},"content":"* __Documentation__:","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"gurmankalkat"},"content":"    * User Guide","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"gurmankalkat"},"content":"        * Added documentation for `delete`, `weeklyingredients`, and `weekly /clear` features","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"gurmankalkat"},"content":"        * Updated documentation for `add`","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"gurmankalkat"},"content":"    * Developer Guide","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"gurmankalkat"},"content":"        * Added documentation for `delete` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"gurmankalkat"},"content":"        * Added UML diagrams for `delete` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"gurmankalkat"},"content":"      ","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"gurmankalkat"},"content":"* __Contributions to the team-based tasks__:","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"gurmankalkat"},"content":"  * Maintaining \u0026 solving issues in tracker","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"gurmankalkat"},"content":"    * [#124](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/124)","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"gurmankalkat"},"content":"      * Solves issues: [#112](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/112),","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"gurmankalkat"},"content":"        [#108](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/108),","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"gurmankalkat"},"content":"        [#92](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/92),","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"gurmankalkat"},"content":"        [#91](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/91)","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"gurmankalkat"},"content":"    * [#137](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/137)","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"gurmankalkat"},"content":"      * Solves issues: [#79](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/79),","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"gurmankalkat"},"content":"        [#76](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/76),","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"gurmankalkat"},"content":"        [#78](https://github.com/AY2223S2-CS2113-F10-3/tp/issues/78)","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"gurmankalkat"},"content":"    * PRs reviewed: [#4](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/4),","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"gurmankalkat"},"content":"      [#15](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/15),","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"gurmankalkat"},"content":"      [#39](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/39), ","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"gurmankalkat"},"content":"      [#125](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/125),","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"gurmankalkat"},"content":"      [#127](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/127),","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"gurmankalkat"},"content":"      [#135](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/135)","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"gurmankalkat"},"content":"* __Contributions beyond the project team__:  ","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"gurmankalkat"},"content":"  * Bugs \u0026 suggestions in PE-Dry Run: [#1](https://github.com/gurmankalkat/ped/issues/1),","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"gurmankalkat"},"content":"  [#2](https://github.com/gurmankalkat/ped/issues/2),","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"gurmankalkat"},"content":"  [#3](https://github.com/gurmankalkat/ped/issues/3),","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"gurmankalkat"},"content":"  [#4](https://github.com/gurmankalkat/ped/issues/4),","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"gurmankalkat"},"content":"  [#5](https://github.com/gurmankalkat/ped/issues/5)","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"gurmankalkat":66}},{"path":"docs/team/jaredoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"# Jared Oong - Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"## Overview","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"* __Code","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"  contributed__ : [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003djaredoong\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"* __Functions/enhancements implemented__:","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"    * Added viewing of ingredients needed for a recipe based on index in recipe","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"      list. ([#15](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/15))","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to add single/multiple recipes to the weekly","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"      plan. ([#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30),","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"      [#48](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/48))","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to remove single/multiple recipes from the weekly","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"      plan. ([#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30),","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"      [#48](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/48))","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to view the weekly","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"      plan. ([#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30))","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to mark recipes in the weekly plan as","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"      done. ([#74](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/74))","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to add user ingredients to the ingredient","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"      list. ([#64](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/64))","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to remove user ingredients from the ingredient","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"      list. ([#64](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/64))","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    * Added functionality to view the ingredient","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"      list. ([#64](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/64))","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"    * Added loading and saving to","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"      databases. ([#39](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/39))","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"* __Contributions to the UG__ ([#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30),","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"  [#74](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/74)):","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    * Added documentation for the following commands:","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"        * Recipe related: `view INDEX`","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"        * Weekly meal plan related: `weekly /add RECIPE_NAME QUANTITY`","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"          , `weekly /multiadd [/r RECIPE_NAME /q QUANTITY]`","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"          , `weekly /delete RECIPE_NAME`, `weekly /multidelete [/r RECIPE_NAME /q QUANTITY]`","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"          , `weekly /done RECIPE_NAME`, `weeklyplan`","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"        * Ingredient related: `view_ingredients`, `add_i /n NAME /c COUNT /d DATE`","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"          , `del_i /n NAME /c COUNT`","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"* __Contributions to the DG__ ([#48](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/48)","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"  , [#123](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/123)","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"  ,[#129](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/129)):","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"    * Updated DG with anchor links for easier navigation.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"    * Added documentation for the overall Architecture.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"    * Added documentation for the following components:","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"        * `Meal360`, `RecipeList`, `IngredientList`,","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"          `WeeklyPlan`, `Database`","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"    * Added documentation for the following classes:","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"        * `Database`, `WeeklyPlan`","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"    * Added documentation for the following implementations:","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"        * Add Ingredient Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"        * Delete Ingredient Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"        * List Ingredient Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"        * Edit Weekly Meal Plan Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"        * List Weekly Plan Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"        * Mark Recipe as Done Feature","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"* __Contributions to the team-based tasks__:","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"    * Setting up of GitHub team org/repo","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"    * Maintaining issue tracker","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"    * Release management (`v1.0`, `v2.0`)","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"* __Review/mentoring contributions__:","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"    * [#14](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/14),","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"      [#26](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/26),","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"      [#29](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/29),","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"      [#31](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/31),","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"      [#32](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/32),","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"      [#34](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/34),","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"      [#35](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/35),","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"      [#45](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/45),","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"      [#47](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/47),","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"      [#51](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/51),","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"      [#60](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/60),","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"      [#67](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/67),","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"      [#68](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/68),","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"      [#69](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/69),","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"      [#70](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/70),","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"      [#71](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/71),","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"      [#121](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/121),","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"      [#122](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/122),","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"      [#130](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/130),","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"      [#133](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/133)","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"* __Tools__:","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"    * Integrated third party library (GSON) to save and load data from","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"      databases. ([#39](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/39))","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"jaredoong":89}},{"path":"docs/team/junenita.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"# JuneNita - Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"## Project: Meal360","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"### Overview","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a Command ","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"If you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"* __Code contributed__: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003djunenita\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"* __Enhancements implemented__","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"  * Added `list` feature to list all recipes users have","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"JuneNita"},"content":"  * Updated `list` feature to list relevant recipes by names or the ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"JuneNita"},"content":"  * Added `tag` feature to categorise recipe that users have into groups","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"JuneNita"},"content":"    * Categorise recipes into a specific tag","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"JuneNita"},"content":"    * Removing recipes from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"JuneNita"},"content":"  * Updated `list` feature to be able to list menu in specific tags","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"  * Added `random` feature to random a recipe for users","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"JuneNita"},"content":"  * Added exception handler for `list`, `tag`, and `random` features","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"JuneNita"},"content":"  * Wrote tests for `list`, `tag` and `random` features","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"JuneNita"},"content":"  * Added custom exceptions class.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"JuneNita"},"content":"    * `NoRecipeException`","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"JuneNita"},"content":"    * `RecipeNotFoundInTagException`","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"JuneNita"},"content":"    * `TagNotFoundException`","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"JuneNita"},"content":"* __Documentation__:","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"JuneNita"},"content":"  * User Guide","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `list` feature","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `tag` feature","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"JuneNita"},"content":"      * Categorise recipes into a specific tag","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"JuneNita"},"content":"      * Removing recipes from a tag","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `random` features","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"JuneNita"},"content":"  * Developer Guide","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `list` feature","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `tag` feature","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"JuneNita"},"content":"    * Added documentation for `random` features","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"JuneNita"},"content":"    * Added UML diagrams for `list`, `tag`, and `random` features","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"JuneNita"},"content":"    * Added instruction for manual testing for list recipes and tag recipes","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"JuneNita"},"content":"* __Contributions to the team-based tasks__:","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"JuneNita"},"content":"  * Maintaining issue tracker","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"JuneNita"},"content":"  * Updated User Stories in Developer Guide","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"JuneNita"},"content":"* __Review/Mentoring contributions__:","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"JuneNita"},"content":"  * PRs reviewed: [#20](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/20),","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"JuneNita"},"content":"  [#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30),","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"JuneNita"},"content":"  [#48](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/48),","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"JuneNita"},"content":"  [#53](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/53),","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"JuneNita"},"content":"  [#64](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/64),","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"JuneNita"},"content":"  [#120](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/120),","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"JuneNita"},"content":"  [#123](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/123),","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"JuneNita"},"content":"  [#124](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/124),","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"JuneNita"},"content":"  [#129](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/129)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"JuneNita":51}},{"path":"docs/team/notbingsu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"# Lu Bingyuan - Project Portfolio Page","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"## Project: Meal360","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"Meal360 is a desktop app for managing your recipes and weekly meal plans, optimized for use via a Command","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"If you can type fast, Meal360 can get your recipe management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"* Code","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"  contributed: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dnotbingsu\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"* __Enhancements implemented__","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    * Added edit recipe function to allow users to rewrite recipe","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"      ingredients ([#22](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/22))","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"    * Improved `edit` recipe function, added 3rd option for users to add additional ingredients to existing","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"      recipe ([#37](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/37))","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    * Added `Ingredient` class ([#44](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/44))","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"    * Added `IngredientList` class ([#44](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/44))","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"    * Added `available` function to allow users to view","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"      available `Recipe` ([#66](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/66))","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"    * Update `help` function to include all available functions in","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"      list ([#142](![img.png](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/142)))","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"    * Added checks for `add` recipe method to check for","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"notbingsu"},"content":"        - empty ingredient name","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"        - empty ingredient count","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"        - negative ingredient count\\","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"          ([#130](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/130))","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"* __Documentation__:\u003d","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"    * Developer Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"        * Added architecture and description for `Ui`","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"          component ([#130](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/130))","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"        * Added architecture and description for `Parser`","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"          component ([#130](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/130))","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"        * Added `available` feature to implementation","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"          component ([#147](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/147))","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"        * Added class diagram for `Ui`","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"        * Added sequence diagram for `Ui`","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"        * Added sequence diagram for `Parser`","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"        * Added sequence diagram for `List available Recipes`","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"* __Contributions to the team-based tasks__:","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"    * Maintaining issue tracker","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"notbingsu"},"content":"* __Review/Mentoring contributions__:","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"notbingsu"},"content":"    * PRs reviewed: ([#64](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/64)),","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"      ([#74](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/74))","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"* __Contributions beyond the project team:__","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"    * PE Dry run","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"notbingsu"},"content":"    * Reported bugs and documented how they were","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"      generated ([#1](https://github.com/notbingsu/ped/issues/1)),","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"      ([#2](https://github.com/notbingsu/ped/issues/2)),","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"notbingsu"},"content":"      ([#3](https://github.com/notbingsu/ped/issues/3)),","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"      ([#4](https://github.com/notbingsu/ped/issues/4)),","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"      ([#5](https://github.com/notbingsu/ped/issues/5)),","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"notbingsu"},"content":"      ([#6](https://github.com/notbingsu/ped/issues/6)),","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"notbingsu"},"content":"      ([#7](https://github.com/notbingsu/ped/issues/7)),","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"notbingsu"},"content":"      ([#8](https://github.com/notbingsu/ped/issues/8)),","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"notbingsu"},"content":"      ([#9](https://github.com/notbingsu/ped/issues/9)),","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"notbingsu"},"content":"      ([#10](https://github.com/notbingsu/ped/issues/10))","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"  ","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"notbingsu":61}},{"path":"docs/team/topgun2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"# Suresh Abijith Ram - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"TopGun2001"},"content":"## Project: Meal360","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"### Overview","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"Meal360 is a desktop app for managing your recipes, optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, Meal360 can get your recipe management","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"TopGun2001"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"TopGun2001"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"TopGun2001"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"* __Code contributed__: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dtopgun2001\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"* __Functions / Enhancements implemented__","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"    * Implemented `add` feature for adding of new recipes to the user\u0027s recipe list.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"      ([#26](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/26))","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"    * Implemented `edit` feature for editing already existing recipes in user\u0027s recipe list.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"      ([#32](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/32))","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"    * Implemented `help` feature for displaying all types of user commands for execution.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"      ([#28](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/28))","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    * Implemented `combineWords` feature for trimming words with excess white space characters and joining them to","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"    form a single sentence for recipe names and ingredient names.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"      ([#51](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/51))","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"    * Implemented enhancement feature of accepting ingredients in a single line.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"      ([#51](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/51))","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"* __Contributions to User Guide__ ([#69](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/69),","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"  [#139](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/139)):","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"    * Added anchor links for quick jump to respective tabs.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"    * Added documentation for the following:","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"        * HOW TO ADD INGREDIENTS TO A RECIPE?","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"        * `add`","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"        * `edit`","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"        * `help`","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"* __Contributions to Developer Guide__ ([#54](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/54),[#139](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/139)):","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"    * Added anchor links for quick jump to respective tabs.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"    * Added documentation for the following classes:","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"TopGun2001"},"content":"        * `Parser`","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"    * Added documentation for the following:","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"        * `Add Recipes` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"        * `Edit Recipes` feature","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"        * `edit`","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"        * `help`","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"TopGun2001"},"content":"* __Pull Requests reviewed for Team Project:__","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"TopGun2001"},"content":"    * Gave comments on code quality and code suggestions.","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"TopGun2001"},"content":"        * ([#15](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/15)),","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"TopGun2001"},"content":"          ([#20](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/20)),","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"TopGun2001"},"content":"          ([#23](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/23)),","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"TopGun2001"},"content":"          ([#29](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/29)),","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"TopGun2001"},"content":"          ([#30](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/30)),","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"TopGun2001"},"content":"          ([#31](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/31)),","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"TopGun2001"},"content":"          ([#48](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/48)),","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"TopGun2001"},"content":"          ([#47](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/47)),","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"TopGun2001"},"content":"          ([#56](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/56)),","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"TopGun2001"},"content":"          ([#127](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/127)),","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"TopGun2001"},"content":"          ([#129](https://github.com/AY2223S2-CS2113-F10-3/tp/pull/129))","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"TopGun2001"},"content":"* __Community__:","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"TopGun2001"},"content":"    *   Reported bugs and suggestions for other teams during Practical Dry-Run.([I](https://github.com/TopGun2001/ped/issues))","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"TopGun2001"},"content":"        * Bugs: ([#1](https://github.com/TopGun2001/ped/issues/1)),([#2](https://github.com/TopGun2001/ped/issues/2)),","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"TopGun2001"},"content":"        ([#3](https://github.com/TopGun2001/ped/issues/3)),([#5](https://github.com/TopGun2001/ped/issues/5)),","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"TopGun2001"},"content":"        ([#7](https://github.com/TopGun2001/ped/issues/7))","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"        * Suggestions: ([#4](https://github.com/TopGun2001/ped/issues/4)),([#6](https://github.com/TopGun2001/ped/issues/6)),","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"        ([#10](https://github.com/TopGun2001/ped/issues/10))","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"TopGun2001":70}},{"path":"src/main/java/seedu/meal360/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"notbingsu"},"content":"public class Ingredient {","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    public String ingredientName;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    public Integer ingredientCount;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    public LocalDate expiryDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"    public Boolean isExpired;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"    public Ingredient(String ingredientName, Integer ingredientCount, String expiryDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        this.ingredientCount \u003d ingredientCount;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"        // parse expiry date using parseDate method","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"        this.expiryDate \u003d parser.parseDate(expiryDate);","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"        this.updateExpired();","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"    public Ingredient(String ingredient, int newCount, LocalDate expiryDate) {","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"        this.ingredientName \u003d ingredient;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"        this.ingredientCount \u003d newCount;","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"        this.updateExpired();","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"notbingsu"},"content":"    public void updateExpired() {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"        if (expiryDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"            isExpired \u003d true;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"            isExpired \u003d false;","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"notbingsu":24,"jaredoong":11}},{"path":"src/main/java/seedu/meal360/IngredientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"notbingsu"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"notbingsu"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"notbingsu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.IngredientNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"public class IngredientList extends HashMap\u003cString, Ingredient\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"notbingsu"},"content":"    // public method to find count of ingredient","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"    public Integer findIngredientCount(String ingredientName) throws IngredientNotFoundException {","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"        if (this.containsKey(ingredientName)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"            return this.get(ingredientName).ingredientCount;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"        throw new IngredientNotFoundException(\"Ingredient not found\");","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"    // public method to find expiry date of ingredient","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    public LocalDate findExpiryDate(String ingredientName) throws IngredientNotFoundException {","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"        if (this.containsKey(ingredientName)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"            return this.get(ingredientName).expiryDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"        throw new IngredientNotFoundException(\"Ingredient not found\");","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"     * Adds an ingredient to the ingredient list. If the ingredient already exists, the count of the","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"     * ingredient is updated, and the expiry date is also updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"     * @param ingredient Ingredient to be added.","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"        if (this.containsKey(ingredient.ingredientName)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"            int currentCount \u003d this.get(ingredient.ingredientName).ingredientCount;","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"            int newCount \u003d currentCount + ingredient.ingredientCount;","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"            this.put(ingredient.ingredientName,","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"                    new Ingredient(ingredient.ingredientName, newCount, ingredient.expiryDate));","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"            this.put(ingredient.ingredientName, ingredient);","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"    public void editIngredient(Ingredient ingredient, Integer ingredientCount, String expiryDate)","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"            throws IngredientNotFoundException {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"notbingsu"},"content":"        if (this.containsKey(ingredient.ingredientName)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"notbingsu"},"content":"            ingredient.ingredientCount \u003d ingredientCount;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"notbingsu"},"content":"            ingredient.expiryDate \u003d parser.parseDate(expiryDate);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"            ingredient.isExpired \u003d ingredient.expiryDate.isBefore(LocalDate.now());","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"notbingsu"},"content":"            super.put(ingredient.ingredientName, ingredient);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"        throw new IngredientNotFoundException(\"Ingredient not found\");","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"     * Deletes an ingredient from the ingredient list. If the ingredient count is greater than the count to be","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"     * deleted, the count of the ingredient is updated. If the ingredient count is equal or less than to the","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"     * count to be deleted, the ingredient is removed from the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"     * @param ingredient Ingredient to be deleted.","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"     * @throws IngredientNotFoundException If the ingredient is not found in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"    public void deleteIngredient(Ingredient ingredient) throws IngredientNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"        String ingredientName \u003d ingredient.ingredientName;","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"        int ingredientCount \u003d ingredient.ingredientCount;","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"        if (this.containsKey(ingredientName)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"            int currentCount \u003d this.get(ingredientName).ingredientCount;","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"            int newCount \u003d currentCount - ingredientCount;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"            if (newCount \u003e 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"                this.put(ingredientName,","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"                        new Ingredient(ingredientName, newCount, this.get(ingredientName).expiryDate));","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"                this.remove(ingredientName);","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"            throw new IngredientNotFoundException(\"Ingredient not found\");","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"notbingsu"},"content":"    // private indexed list of ingredients, count and expiry date","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"notbingsu"},"content":"    private String listIngredients() {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"notbingsu"},"content":"        String ingredientList \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"notbingsu"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"notbingsu"},"content":"        for (Ingredient ingredient : this.values()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"notbingsu"},"content":"            ingredientList +\u003d String.format(\"%d. %s (count: %d, expires on %s)\", index,","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"notbingsu"},"content":"                    ingredient.ingredientName, ingredient.ingredientCount, ingredient.expiryDate);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"notbingsu"},"content":"        return ingredientList;","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"notbingsu"},"content":"    // public method to print ingredients in list with indexing","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"notbingsu"},"content":"    public void printIngredients() {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"notbingsu"},"content":"        System.out.println(listIngredients());","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"notbingsu"},"content":"    // public method to print expired ingredients and expiry date","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"notbingsu"},"content":"    // if no expired ingredients, print \"No expired ingredients\"","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"notbingsu"},"content":"    public void printExpiredIngredients() {","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"notbingsu"},"content":"        String expiredIngredients \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"notbingsu"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"notbingsu"},"content":"        for (Ingredient ingredient : this.values()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"            if (ingredient.isExpired) {","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"notbingsu"},"content":"                expiredIngredients +\u003d String.format(\"%d. %s (expires on %s)\", index,","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"notbingsu"},"content":"                        ingredient.ingredientName, ingredient.expiryDate);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"notbingsu"},"content":"        if (expiredIngredients.equals(\"\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"jaredoong"},"content":"            System.out.println(\"No expired ingredients.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"notbingsu"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"notbingsu"},"content":"            System.out.println(expiredIngredients);","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"notbingsu"},"content":"    // public method to clear all ingredients","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"notbingsu"},"content":"    public void clearIngredients() {","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"notbingsu"},"content":"        this.clear();","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"notbingsu"},"content":"    // public method to clear expired ingredients","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"notbingsu"},"content":"    public void clearExpiredIngredients() {","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"notbingsu"},"content":"        for (Ingredient ingredient : this.values()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"jaredoong"},"content":"            if (ingredient.isExpired) {","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"notbingsu"},"content":"                this.remove(ingredient.ingredientName);","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"notbingsu"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"notbingsu":79,"jaredoong":51}},{"path":"src/main/java/seedu/meal360/Meal360.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.IngredientNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.InvalidRecipeNameException;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.InvalidValueException;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.NoRecipeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.RecipeNotFoundInTagException;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.TagNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.storage.Database;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"TopGun2001"},"content":"public class Meal360 {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"TopGun2001"},"content":"     * Main entry-point for the java.duke.Meal360 application.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"    private static Boolean canExit \u003d false;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"TopGun2001"},"content":"    private static final Database database \u003d new Database();","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"TopGun2001"},"content":"    private static RecipeList recipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    private static WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    private static IngredientList userIngredients \u003d new IngredientList();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to execute when the application is started.","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"     * It loads in the recipes, weekly plan and ingredients if they exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     **/","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"    public static void startApp() {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"        ui.printSeparator();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"        ui.printSeparator();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"        // Load databases","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Loading recipes...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"            recipeList \u003d database.loadRecipesDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Recipes loaded successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error loading recipes, loading default recipes instead.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"            recipeList \u003d database.defaultRecipeList();","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Loading weekly plan...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan \u003d database.loadWeeklyPlanDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"            boolean isClean \u003d weeklyPlan.checkValidity(recipeList);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"            if (!isClean) {","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(\"Weekly plan has invalid recipes, removing them...\");","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Weekly plan loaded successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error loading weekly plan, loading default empty weekly plan instead.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Loading ingredients...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"            userIngredients \u003d database.loadUserIngredientsDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Ingredients loaded successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error loading ingredients, loading default empty list of ingredients instead.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"            userIngredients \u003d new IngredientList();","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"        ui.printSeparator();","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to receive the user input and perform the","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"TopGun2001"},"content":"     * required tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"TopGun2001"},"content":"     **/","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"    public static void receiveInput(String input) {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"        String[] command \u003d parser.cleanUserInput(input);","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"            canExit \u003d true;","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"        } else if (command[0].equals(\"delete\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"gurmankalkat"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"gurmankalkat"},"content":"            try {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"gurmankalkat"},"content":"                String deletedRecipe \u003d parser.parseDeleteRecipe(command, recipeList);","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"Noted. I\u0027ve removed this recipe:\");","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"gurmankalkat"},"content":"                ui.printMessage(deletedRecipe);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"Now you have \" + recipeList.size() + \" recipes in the list.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"gurmankalkat"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"gurmankalkat"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"gurmankalkat"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"gurmankalkat"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"gurmankalkat"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"gurmankalkat"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"        } else if (command[0].equals(\"view\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"TopGun2001"},"content":"                Recipe recipe \u003d parser.parseViewRecipe(command, recipeList);","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"TopGun2001"},"content":"                ui.printRecipe(recipe);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"jaredoong"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"TopGun2001"},"content":"        } else if (command[0].equals(\"list\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"JuneNita"},"content":"            try {","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"JuneNita"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"JuneNita"},"content":"                RecipeList recipeListToPrint \u003d parser.parseListRecipe(command, recipeList);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"JuneNita"},"content":"                ui.listRecipe(recipeListToPrint);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"JuneNita"},"content":"            } catch (TagNotFoundException | NoRecipeException | IllegalArgumentException | IndexOutOfBoundsException","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"JuneNita"},"content":"                     | NullPointerException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"JuneNita"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"JuneNita"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"        } else if (command[0].equals(\"add\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"            try {","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"                Recipe newRecipe \u003d parser.parseAddRecipe(command, recipeList);","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"I\u0027ve added this new recipe:\" + newRecipe.getName());","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"Now you have \" + recipeList.size() + \" recipes in the list.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"TopGun2001"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"jaredoong"},"content":"                String errorMessage \u003d \"Please enter a valid recipe name.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"jaredoong"},"content":"                String errorMessage \u003d \"Recipe already exists. Add a new recipe.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"notbingsu"},"content":"        } else if (command[0].equals(\"edit\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"            try {","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"TopGun2001"},"content":"                Recipe recipeToEdit \u003d parser.parseEditRecipe(command, recipeList);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"TopGun2001"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"I\u0027ve edited this recipe:\" + recipeToEdit.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"                String errorMessage \u003d String.format(","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"TopGun2001"},"content":"                        \"Please enter a valid recipe number. You entered %s, \" + \"which is not a number.\",","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"TopGun2001"},"content":"                        command[1]);","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"TopGun2001"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"jaredoong"},"content":"                String errorMessage \u003d \"Please enter a valid recipe name.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"TopGun2001"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"                String errorMessage \u003d String.format(","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"TopGun2001"},"content":"                        \"Please enter a valid recipe number. You entered %s, \" + \"which is out of bounds.\",","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"TopGun2001"},"content":"                        command[1]);","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"TopGun2001"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"jaredoong"},"content":"                String errorMessage \u003d \"Recipe doesn\u0027t exist for editing.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(errorMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"JuneNita"},"content":"        } else if (command[0].equals(\"tag\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"JuneNita"},"content":"            try {","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"JuneNita"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"JuneNita"},"content":"                String returnMessage \u003d parser.parseTagRecipe(command, recipeList);","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"JuneNita"},"content":"                ui.printTagMessage(returnMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"notbingsu"},"content":"            } catch (IllegalArgumentException | IndexOutOfBoundsException | NullPointerException","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"notbingsu"},"content":"                     | RecipeNotFoundInTagException | TagNotFoundException | NoRecipeException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"JuneNita"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"JuneNita"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"JuneNita"},"content":"        } else if (command[0].equals(\"random\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"JuneNita"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"JuneNita"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"JuneNita"},"content":"                Recipe randomRecipe \u003d parser.parseRandomRecipe(recipeList);","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"JuneNita"},"content":"                ui.printRandomMessage();","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"JuneNita"},"content":"                ui.printRecipe(randomRecipe);","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"JuneNita"},"content":"            } catch (NoRecipeException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"JuneNita"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"jaredoong"},"content":"        } else if (command[0].equals(\"weekly\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"jaredoong"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"jaredoong"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"jaredoong"},"content":"                WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipeList);","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"jaredoong"},"content":"                switch (command[1]) {","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"jaredoong"},"content":"                case \"/add\":","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"                case \"/multiadd\":","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"jaredoong"},"content":"                    weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"jaredoong"},"content":"                    ui.printMessage(\"I\u0027ve added the recipes to your weekly plan!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"jaredoong"},"content":"                    break;","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"jaredoong"},"content":"                case \"/delete\":","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"jaredoong"},"content":"                case \"/multidelete\":","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"jaredoong"},"content":"                    weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"jaredoong"},"content":"                    ui.printMessage(\"I\u0027ve deleted the recipes from your weekly plan!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"jaredoong"},"content":"                    break;","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"jaredoong"},"content":"                case \"/clear\":","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"gurmankalkat"},"content":"                    weeklyPlan.clearPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"gurmankalkat"},"content":"                    ui.printMessage(\"I\u0027ve cleared your entire weekly plan!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"jaredoong"},"content":"                    break;","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"jaredoong"},"content":"                case \"/done\":","lastModifiedDate":"2023-04-03"},{"lineNumber":197,"author":{"gitId":"jaredoong"},"content":"                    String recipeName \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan,","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"jaredoong"},"content":"                            recipeList);","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"jaredoong"},"content":"                    weeklyPlan.markDone(recipeName, recipeList, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"jaredoong"},"content":"                    ui.printMessage(\"I\u0027ve recorded that you\u0027ve done this recipe!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":201,"author":{"gitId":"jaredoong"},"content":"                    ui.printMessage(\"Ingredients list has been updated accordingly!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":202,"author":{"gitId":"jaredoong"},"content":"                    break;","lastModifiedDate":"2023-04-03"},{"lineNumber":203,"author":{"gitId":"jaredoong"},"content":"                default:","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"jaredoong"},"content":"                    ui.printMessage(\"Please enter a valid command.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"jaredoong"},"content":"                    break;","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"notbingsu"},"content":"            } catch (IllegalArgumentException | InvalidValueException | InvalidRecipeNameException","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"notbingsu"},"content":"                     | ArrayIndexOutOfBoundsException | IngredientNotFoundException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"notbingsu"},"content":"        } else if (command[0].equals(\"available\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"notbingsu"},"content":"            // list recipes with ingredients all in ingredient list","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"notbingsu"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"notbingsu"},"content":"            RecipeList availableRecipes \u003d recipeList.availableRecipes();","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"notbingsu"},"content":"            ui.listAvailableRecipes(availableRecipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-31"},{"lineNumber":218,"author":{"gitId":"gurmankalkat"},"content":"        } else if (command[0].equals(\"weeklyingredients\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"gurmankalkat"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"gurmankalkat"},"content":"            ui.printWeeklyIngredients(weeklyPlan, recipeList);","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"gurmankalkat"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"jaredoong"},"content":"        } else if (command[0].equals(\"weeklyplan\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"jaredoong"},"content":"            ui.printWeeklyPlan(weeklyPlan);","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"jaredoong"},"content":"        } else if (command[0].equals(\"add_i\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"jaredoong"},"content":"            try {","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"jaredoong"},"content":"                Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"jaredoong"},"content":"                userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(\"Ingredient successfully added!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"jaredoong"},"content":"            } catch (IllegalArgumentException | IndexOutOfBoundsException | InvalidValueException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":233,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"jaredoong"},"content":"        } else if (command[0].equals(\"del_i\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"jaredoong"},"content":"            try {","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"jaredoong"},"content":"                Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"jaredoong"},"content":"                userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(\"Ingredients successfully deleted!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"notbingsu"},"content":"            } catch (IllegalArgumentException | IndexOutOfBoundsException | IngredientNotFoundException","lastModifiedDate":"2023-04-09"},{"lineNumber":243,"author":{"gitId":"notbingsu"},"content":"                     | InvalidValueException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":244,"author":{"gitId":"jaredoong"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"jaredoong"},"content":"        } else if (command[0].equals(\"view_ingredients\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"jaredoong"},"content":"            ui.printUserIngredients(userIngredients);","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"TopGun2001"},"content":"        } else if (command[0].equals(\"help\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"jaredoong"},"content":"            ui.printHelp();","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"jaredoong"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":263,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to exit the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":264,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":265,"author":{"gitId":"TopGun2001"},"content":"     * It saves the recipes, weekly plan and ingredients if any entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":267,"author":{"gitId":"TopGun2001"},"content":"     **/","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"TopGun2001"},"content":"    public static void exitApp() {","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"jaredoong"},"content":"        ui.printSeparator();","lastModifiedDate":"2023-03-19"},{"lineNumber":270,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":271,"author":{"gitId":"jaredoong"},"content":"        // Save database","lastModifiedDate":"2023-03-19"},{"lineNumber":272,"author":{"gitId":"jaredoong"},"content":"        ui.printMessage(\"Saving recipes...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":274,"author":{"gitId":"jaredoong"},"content":"            database.saveRecipesDatabase(recipeList);","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Recipes saved successfully.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"jaredoong"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error saving database.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":278,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":279,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":280,"author":{"gitId":"jaredoong"},"content":"        // Save weekly plan","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"jaredoong"},"content":"        ui.printMessage(\"Saving weekly plan...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"jaredoong"},"content":"            database.saveWeeklyPlanDatabase(weeklyPlan);","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Weekly plan saved successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"jaredoong"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error saving weekly plan.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"jaredoong"},"content":"        // Save ingredients","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"jaredoong"},"content":"        ui.printMessage(\"Saving ingredients...\");","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"jaredoong"},"content":"            database.saveIngredientsDatabase(userIngredients);","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Ingredients saved successfully.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"jaredoong"},"content":"        } catch (IOException error) {","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"jaredoong"},"content":"            ui.printMessage(\"Error saving ingredients.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"TopGun2001"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":299,"author":{"gitId":"jaredoong"},"content":"        ui.printSeparator();","lastModifiedDate":"2023-03-19"},{"lineNumber":300,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":301,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":302,"author":{"gitId":"TopGun2001"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-10"},{"lineNumber":303,"author":{"gitId":"TopGun2001"},"content":"        startApp();","lastModifiedDate":"2023-03-10"},{"lineNumber":304,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":305,"author":{"gitId":"TopGun2001"},"content":"        String line;","lastModifiedDate":"2023-03-10"},{"lineNumber":306,"author":{"gitId":"TopGun2001"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-10"},{"lineNumber":307,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":308,"author":{"gitId":"TopGun2001"},"content":"        do {","lastModifiedDate":"2023-03-10"},{"lineNumber":309,"author":{"gitId":"TopGun2001"},"content":"            line \u003d userInput.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":310,"author":{"gitId":"TopGun2001"},"content":"            receiveInput(line);","lastModifiedDate":"2023-03-10"},{"lineNumber":311,"author":{"gitId":"TopGun2001"},"content":"        } while (!canExit);","lastModifiedDate":"2023-03-10"},{"lineNumber":312,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":313,"author":{"gitId":"TopGun2001"},"content":"        exitApp();","lastModifiedDate":"2023-03-10"},{"lineNumber":314,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":315,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"notbingsu":12,"JuneNita":30,"gurmankalkat":16,"jaredoong":158,"TopGun2001":99}},{"path":"src/main/java/seedu/meal360/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TopGun2001"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"TopGun2001"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"TopGun2001"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"TopGun2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.IngredientNotFoundException;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.InvalidRecipeNameException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.InvalidValueException;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.NoRecipeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.RecipeNotFoundInTagException;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.TagNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"notbingsu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"TopGun2001"},"content":"public class Parser {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"TopGun2001"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"gurmankalkat"},"content":"    String recipeErrorMessage \u003d \"Wrong Format or Invalid Quantity. Please enter ingredients properly \" +","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"gurmankalkat"},"content":"            \"[eg:chicken\u003d100] and \\\"done\\\" when finished entering ingredients!\";","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to combine multiple words into a single sentence","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"TopGun2001"},"content":"     * after trimming the spaces.","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"TopGun2001"},"content":"     * @author AbijithRam","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"TopGun2001"},"content":"     * @param input the user input,","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"TopGun2001"},"content":"     * @param startIndex index to start from","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"     * @param length length of substring","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"     * @return an array of strings representing the user input","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"    public String combineWords(String[] input, int startIndex, int length) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"        StringBuilder word \u003d new StringBuilder(input[startIndex].trim());","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"TopGun2001"},"content":"        for (int i \u003d startIndex + 1; i \u003c length; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"            word.append(\" \").append(input[i].trim());","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"TopGun2001"},"content":"        return word.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input into an array of strings. Trims away leading and trailing whitespaces, and","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"     * converts all words to lowercase.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"     * @param input the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"     * @return an array of strings representing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"    public String[] cleanUserInput(String input) {","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"        input \u003d input.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"        return input.trim().split(\" \");","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"notbingsu"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"notbingsu"},"content":"     * Parses an array of strings representing ingredients and their quantities.","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"notbingsu"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"notbingsu"},"content":"     * @param commands an array of strings in the format \"name\u003dquantity\"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"notbingsu"},"content":"     * @return a map of ingredient names to their quantities","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException if an ingredient quantity is negative or an ingredient name is empty","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"notbingsu"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"notbingsu"},"content":"    public HashMap\u003cString, Integer\u003e parseIngredientName(String[] commands) {","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"TopGun2001"},"content":"        HashMap\u003cString, Integer\u003e ingredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"TopGun2001"},"content":"        int flag \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"notbingsu"},"content":"        String currentIngredient \u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"notbingsu"},"content":"        for (String command : commands) {","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"notbingsu"},"content":"            int indexOfEqual \u003d command.indexOf(\"\u003d\");","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"TopGun2001"},"content":"            if (indexOfEqual \u003d\u003d -1) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"notbingsu"},"content":"                if (command.isEmpty()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"notbingsu"},"content":"                    continue;","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"notbingsu"},"content":"                if (currentIngredient !\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"notbingsu"},"content":"                    currentIngredient +\u003d \" \" + command;","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"TopGun2001"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"                    currentIngredient \u003d command;","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"TopGun2001"},"content":"                flag++;","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"TopGun2001"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"TopGun2001"},"content":"                if (flag \u003e 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"notbingsu"},"content":"                    currentIngredient +\u003d \" \" + command.substring(0, indexOfEqual);","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"TopGun2001"},"content":"                    flag \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"TopGun2001"},"content":"                } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"notbingsu"},"content":"                    currentIngredient \u003d command.substring(0, indexOfEqual);","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"notbingsu"},"content":"                String quantityString \u003d command.substring(indexOfEqual + 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"notbingsu"},"content":"                if (quantityString.isEmpty()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"notbingsu"},"content":"                    throw new IllegalArgumentException(\"Ingredient quantity cannot be empty\");","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"notbingsu"},"content":"                int quantity \u003d Integer.parseInt(quantityString);","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"notbingsu"},"content":"                if (quantity \u003c 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"notbingsu"},"content":"                    throw new IllegalArgumentException(\"Ingredient quantity cannot be negative\");","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"notbingsu"},"content":"                if (currentIngredient.isEmpty()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"notbingsu"},"content":"                    throw new IllegalArgumentException(\"Ingredient name cannot be empty\");","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"notbingsu"},"content":"                ingredients.put(currentIngredient, quantity);","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"TopGun2001"},"content":"        return ingredients;","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to add in a recipe to the user\u0027s","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"TopGun2001"},"content":"     * recipe list.","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"TopGun2001"},"content":"     * The method will also check if a recipe already exists or not","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"TopGun2001"},"content":"     * to prevent duplicate recipes.","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"TopGun2001"},"content":"     * @author AbijithRam","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"     * @param input the user input,","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"TopGun2001"},"content":"     * @param recipeList the recipe list of the user containing all recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"     * @return Recipe the recipe that has been added","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"TopGun2001"},"content":"    public Recipe parseAddRecipe(String[] input, RecipeList recipeList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"TopGun2001"},"content":"        int addedIngredient \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"TopGun2001"},"content":"        String recipeName \u003d combineWords(input, 2, input.length);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"        if (recipeList.findByName(recipeName) !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"TopGun2001"},"content":"        } else if (!Objects.equals(input[1], \"/r\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"TopGun2001"},"content":"        HashMap\u003cString, Integer\u003e ingredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"TopGun2001"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"notbingsu"},"content":"        System.out.println(\"Please Enter The Ingredients \u0026 Quantity (enter \\\"done\\\" when complete): \");","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"        while (true) {","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"TopGun2001"},"content":"            try {","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"TopGun2001"},"content":"                String line \u003d userInput.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"TopGun2001"},"content":"                if (line.equals(\"done\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"TopGun2001"},"content":"                    if (addedIngredient \u003d\u003d 0 || ingredients.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"gurmankalkat"},"content":"                        ui.printMessage(","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"gurmankalkat"},"content":"                                \"Add at least 1 ingredient before entering \u0027done\u0027! [eg: chicken\u003d100]\");","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"TopGun2001"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"TopGun2001"},"content":"                        break;","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"TopGun2001"},"content":"                } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"TopGun2001"},"content":"                    addedIngredient \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"gurmankalkat"},"content":"                    String[] command \u003d line.trim().split(\" and \");","lastModifiedDate":"2023-04-09"},{"lineNumber":149,"author":{"gitId":"TopGun2001"},"content":"                    ingredients \u003d parseIngredientName(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"gurmankalkat"},"content":"                    boolean ingredientsInCorrectFormat \u003d true;","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"TopGun2001"},"content":"                    for (String s : command) {","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"TopGun2001"},"content":"                        if (!s.contains(\"\u003d\")) {","lastModifiedDate":"2023-04-09"},{"lineNumber":153,"author":{"gitId":"gurmankalkat"},"content":"                            ingredientsInCorrectFormat \u003d false;","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"TopGun2001"},"content":"                            break;","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"gurmankalkat"},"content":"                        }","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"gurmankalkat"},"content":"                    }","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"gurmankalkat"},"content":"                    if (ingredients.size() \u003d\u003d 0 || !ingredientsInCorrectFormat) {","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"TopGun2001"},"content":"                        ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"notbingsu"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"TopGun2001"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":165,"author":{"gitId":"gurmankalkat"},"content":"                ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"TopGun2001"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"TopGun2001"},"content":"        Recipe newRecipe \u003d new Recipe(recipeName, ingredients);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"TopGun2001"},"content":"        recipeList.addRecipe(newRecipe);","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"TopGun2001"},"content":"        return newRecipe;","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to edit an already existing recipe","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"TopGun2001"},"content":"     * to the user\u0027s recipe list.","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"TopGun2001"},"content":"     * There are 3 types of editing operations:","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"TopGun2001"},"content":"     * 1. Edit the ingredient list fully.","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"TopGun2001"},"content":"     * 2. edit the ingredient list partially (1 recipe at a time).","lastModifiedDate":"2023-04-09"},{"lineNumber":181,"author":{"gitId":"TopGun2001"},"content":"     * 3. Add new ingredients to the ingredient list.","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"TopGun2001"},"content":"     * @author AbijithRam","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"TopGun2001"},"content":"     * @param input the user input,","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"TopGun2001"},"content":"     * @param recipeList the recipe list of the user containing all recipes","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"TopGun2001"},"content":"     * @return Recipe the recipe that has been edited","lastModifiedDate":"2023-04-09"},{"lineNumber":188,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":189,"author":{"gitId":"notbingsu"},"content":"    public Recipe parseEditRecipe(String[] input, RecipeList recipeList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"TopGun2001"},"content":"        int addedIngredient \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"TopGun2001"},"content":"        String recipeName \u003d combineWords(input, 2, input.length);","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"notbingsu"},"content":"        Recipe recipeToEdit;","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"TopGun2001"},"content":"        HashMap\u003cString, Integer\u003e ingredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"TopGun2001"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"notbingsu"},"content":"        if (recipeList.findByName(recipeName) \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"notbingsu"},"content":"            return null;","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"TopGun2001"},"content":"        recipeToEdit \u003d recipeList.findByName(recipeName);","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"TopGun2001"},"content":"        System.out.println(\"Do you want to edit recipe fully or partially?\");","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"jaredoong"},"content":"        System.out.println(\"Press 1 for full edit | Press 2 for partial edit | Press 3 to add ingredients\");","lastModifiedDate":"2023-04-01"},{"lineNumber":201,"author":{"gitId":"TopGun2001"},"content":"        int index;","lastModifiedDate":"2023-04-07"},{"lineNumber":202,"author":{"gitId":"TopGun2001"},"content":"        Scanner getNum \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":203,"author":{"gitId":"TopGun2001"},"content":"        while (true) {","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"TopGun2001"},"content":"            try {","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"TopGun2001"},"content":"                index \u003d Integer.parseInt(getNum.nextLine());","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"TopGun2001"},"content":"                if (index \u003c 1 || index \u003e 3) {","lastModifiedDate":"2023-04-07"},{"lineNumber":207,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":208,"author":{"gitId":"TopGun2001"},"content":"                    ui.printMessage(\"Index cannot be negative or out of bounds!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":210,"author":{"gitId":"TopGun2001"},"content":"                } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"TopGun2001"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":212,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"TopGun2001"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":214,"author":{"gitId":"TopGun2001"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"TopGun2001"},"content":"                ui.printMessage(\"Enter valid index for respective editing options!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"TopGun2001"},"content":"                ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"TopGun2001"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"Please Enter New Ingredients \u0026 Quantity: \");","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"notbingsu"},"content":"            while (true) {","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"TopGun2001"},"content":"                try {","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"notbingsu"},"content":"                    String line \u003d userInput.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"notbingsu"},"content":"                    if (line.equals(\"done\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"TopGun2001"},"content":"                        if (addedIngredient \u003d\u003d 0 || ingredients.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"jaredoong"},"content":"                            ui.printMessage(","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"jaredoong"},"content":"                                    \"Add at least 1 ingredient before entering \u0027done\u0027! [eg: chicken\u003d100]\");","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"TopGun2001"},"content":"                        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"notbingsu"},"content":"                            break;","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"notbingsu"},"content":"                        }","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"TopGun2001"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"TopGun2001"},"content":"                        addedIngredient \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"notbingsu"},"content":"                        String[] command \u003d line.trim().split(\" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"TopGun2001"},"content":"                        ingredients \u003d parseIngredientName(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"TopGun2001"},"content":"                        if (ingredients.size() !\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":238,"author":{"gitId":"notbingsu"},"content":"                            recipeList.editRecipe(recipeToEdit, ingredients);","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"TopGun2001"},"content":"                        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":240,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"TopGun2001"},"content":"                            ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"TopGun2001"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"TopGun2001"},"content":"                } catch (IllegalArgumentException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":247,"author":{"gitId":"TopGun2001"},"content":"                    ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":248,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":249,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":250,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"TopGun2001"},"content":"        } else if (index \u003d\u003d 2) {","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"These are the ingredients for the recipe:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"TopGun2001"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"TopGun2001"},"content":"            Recipe recipe \u003d parseViewRecipe(recipeName, recipeList);","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"TopGun2001"},"content":"            ui.printRecipe(recipe);","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"TopGun2001"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Which ingredient do you want to change?\");","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"TopGun2001"},"content":"            int ingredientIndex \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":259,"author":{"gitId":"TopGun2001"},"content":"            Scanner getIndex \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"TopGun2001"},"content":"            while (true) {","lastModifiedDate":"2023-04-07"},{"lineNumber":261,"author":{"gitId":"TopGun2001"},"content":"                try {","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"TopGun2001"},"content":"                    ingredientIndex \u003d Integer.parseInt(getIndex.nextLine());","lastModifiedDate":"2023-04-07"},{"lineNumber":263,"author":{"gitId":"TopGun2001"},"content":"                    if (ingredientIndex \u003c\u003d 0 || ingredientIndex \u003e recipe.getNumOfIngredients()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":264,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":265,"author":{"gitId":"TopGun2001"},"content":"                        ui.printMessage(\"Index cannot be negative or out of bounds!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":266,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":267,"author":{"gitId":"TopGun2001"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":268,"author":{"gitId":"TopGun2001"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":270,"author":{"gitId":"TopGun2001"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":271,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"TopGun2001"},"content":"                    ui.printMessage(\"Enter valid ingredient index!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":273,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":275,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"TopGun2001"},"content":"            ingredientIndex -\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"TopGun2001"},"content":"            int count \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"TopGun2001"},"content":"            String ingredientToRemove \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"TopGun2001"},"content":"            for (String ingredient : recipeToEdit.getIngredients().keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"TopGun2001"},"content":"                if (ingredientIndex \u003d\u003d count) {","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"TopGun2001"},"content":"                    ingredientToRemove \u003d ingredient;","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"TopGun2001"},"content":"                    System.out.println(\"Ingredient to be changed:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":284,"author":{"gitId":"jaredoong"},"content":"                    String toPrint \u003d String.format(\"%s(%d)\", ingredient,","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"jaredoong"},"content":"                            recipeToEdit.getIngredients().get(ingredient));","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"TopGun2001"},"content":"                    System.out.println(ui.formatMessage(toPrint));","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"TopGun2001"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"TopGun2001"},"content":"                count++;","lastModifiedDate":"2023-03-14"},{"lineNumber":291,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Please enter the new ingredient:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":293,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"TopGun2001"},"content":"            while (true) {","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"TopGun2001"},"content":"                try {","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"TopGun2001"},"content":"                    String line \u003d userInput.nextLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":297,"author":{"gitId":"TopGun2001"},"content":"                    String command \u003d line.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"TopGun2001"},"content":"                    int indexOfEqual \u003d command.indexOf(\"\u003d\");","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"TopGun2001"},"content":"                    if (command.charAt(indexOfEqual + 1) \u003d\u003d \u0027-\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":300,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":301,"author":{"gitId":"TopGun2001"},"content":"                        ui.printMessage(\"Invalid ingredient quantity!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":302,"author":{"gitId":"TopGun2001"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":303,"author":{"gitId":"TopGun2001"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":304,"author":{"gitId":"TopGun2001"},"content":"                        String newIngredientName \u003d command.substring(0, indexOfEqual);","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"TopGun2001"},"content":"                        int newIngredientQuantity \u003d Integer.parseInt(command.substring(indexOfEqual + 1));","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"TopGun2001"},"content":"                        recipeToEdit.getIngredients().remove(ingredientToRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"TopGun2001"},"content":"                        recipeToEdit.getIngredients().put(newIngredientName, newIngredientQuantity);","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"TopGun2001"},"content":"                        recipeList.editRecipe(recipeToEdit, recipeToEdit.getIngredients());","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"TopGun2001"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":310,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"TopGun2001"},"content":"                } catch (IllegalArgumentException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"TopGun2001"},"content":"                    ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"TopGun2001"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"TopGun2001"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":318,"author":{"gitId":"TopGun2001"},"content":"            HashMap\u003cString, Integer\u003e newIngredientList \u003d recipeToEdit.getIngredients();","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"notbingsu"},"content":"            System.out.println(\"These are the current ingredients:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":320,"author":{"gitId":"notbingsu"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-17"},{"lineNumber":321,"author":{"gitId":"notbingsu"},"content":"            Recipe recipe \u003d parseViewRecipe(recipeName, recipeList);","lastModifiedDate":"2023-03-17"},{"lineNumber":322,"author":{"gitId":"notbingsu"},"content":"            ui.printRecipe(recipe);","lastModifiedDate":"2023-03-17"},{"lineNumber":323,"author":{"gitId":"notbingsu"},"content":"            ui.printSeparator();","lastModifiedDate":"2023-03-17"},{"lineNumber":324,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(\"Please Enter Additional Ingredients \u0026 Quantity: \");","lastModifiedDate":"2023-04-07"},{"lineNumber":325,"author":{"gitId":"notbingsu"},"content":"            while (true) {","lastModifiedDate":"2023-03-17"},{"lineNumber":326,"author":{"gitId":"TopGun2001"},"content":"                try {","lastModifiedDate":"2023-04-07"},{"lineNumber":327,"author":{"gitId":"notbingsu"},"content":"                    String line \u003d userInput.nextLine();","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"notbingsu"},"content":"                    if (line.equals(\"done\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"notbingsu"},"content":"                        ui.printSeparator();","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"TopGun2001"},"content":"                        if (addedIngredient \u003d\u003d 0 || ingredients.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":331,"author":{"gitId":"jaredoong"},"content":"                            ui.printMessage(","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"jaredoong"},"content":"                                    \"Add at least 1 ingredient before entering \u0027done\u0027! [eg: chicken\u003d100]\");","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":334,"author":{"gitId":"TopGun2001"},"content":"                        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":335,"author":{"gitId":"notbingsu"},"content":"                            break;","lastModifiedDate":"2023-03-17"},{"lineNumber":336,"author":{"gitId":"TopGun2001"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":337,"author":{"gitId":"notbingsu"},"content":"                    } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":338,"author":{"gitId":"TopGun2001"},"content":"                        addedIngredient \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":339,"author":{"gitId":"notbingsu"},"content":"                        String[] command \u003d line.trim().split(\" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":340,"author":{"gitId":"TopGun2001"},"content":"                        ingredients \u003d parseIngredientName(command);","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"TopGun2001"},"content":"                        newIngredientList.putAll(ingredients);","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"TopGun2001"},"content":"                        if (ingredients.size() !\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":343,"author":{"gitId":"TopGun2001"},"content":"                            recipeList.editRecipe(recipeToEdit, newIngredientList);","lastModifiedDate":"2023-04-07"},{"lineNumber":344,"author":{"gitId":"TopGun2001"},"content":"                        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":345,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":346,"author":{"gitId":"TopGun2001"},"content":"                            ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":347,"author":{"gitId":"TopGun2001"},"content":"                            ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"TopGun2001"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":349,"author":{"gitId":"TopGun2001"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":350,"author":{"gitId":"TopGun2001"},"content":"                } catch (IllegalArgumentException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":351,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":352,"author":{"gitId":"TopGun2001"},"content":"                    ui.printMessage(recipeErrorMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":353,"author":{"gitId":"TopGun2001"},"content":"                    ui.printSeparator();","lastModifiedDate":"2023-04-07"},{"lineNumber":354,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":355,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":356,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"notbingsu"},"content":"        return recipeToEdit;","lastModifiedDate":"2023-03-10"},{"lineNumber":358,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":359,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":360,"author":{"gitId":"gurmankalkat"},"content":"    //@@author gurmankalkat","lastModifiedDate":"2023-04-10"},{"lineNumber":361,"author":{"gitId":"gurmankalkat"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":362,"author":{"gitId":"gurmankalkat"},"content":"     * This method deletes a single, range, or all recipes.","lastModifiedDate":"2023-04-10"},{"lineNumber":363,"author":{"gitId":"gurmankalkat"},"content":"     *","lastModifiedDate":"2023-04-10"},{"lineNumber":364,"author":{"gitId":"gurmankalkat"},"content":"     * @author gurmankalkat","lastModifiedDate":"2023-04-10"},{"lineNumber":365,"author":{"gitId":"gurmankalkat"},"content":"     * @param input array containing string of inputs","lastModifiedDate":"2023-04-10"},{"lineNumber":366,"author":{"gitId":"gurmankalkat"},"content":"     * @param recipeList list containing all recipes data","lastModifiedDate":"2023-04-10"},{"lineNumber":367,"author":{"gitId":"gurmankalkat"},"content":"     * @return a String of the recipe name deleted","lastModifiedDate":"2023-04-10"},{"lineNumber":368,"author":{"gitId":"gurmankalkat"},"content":"     * @throws ArrayIndexOutOfBoundsException If users enters an invalid recipe name.","lastModifiedDate":"2023-04-10"},{"lineNumber":369,"author":{"gitId":"gurmankalkat"},"content":"     * @throws RecipeNotFoundInTagException If users entered a recipe index or range that is out of bounds.","lastModifiedDate":"2023-04-10"},{"lineNumber":370,"author":{"gitId":"gurmankalkat"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":371,"author":{"gitId":"gurmankalkat"},"content":"    public String parseDeleteRecipe(String[] input, RecipeList recipeList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":372,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":373,"author":{"gitId":"gurmankalkat"},"content":"            // make sure user inputted recipe name or number","lastModifiedDate":"2023-04-10"},{"lineNumber":374,"author":{"gitId":"gurmankalkat"},"content":"            if (!input[1].equals(\"/r\") \u0026\u0026 !input[1].contains(\"-\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":375,"author":{"gitId":"gurmankalkat"},"content":"                Integer.parseInt(input[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":376,"author":{"gitId":"gurmankalkat"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":377,"author":{"gitId":"gurmankalkat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":378,"author":{"gitId":"gurmankalkat"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range in the \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":379,"author":{"gitId":"gurmankalkat"},"content":"                    \"correct format.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":380,"author":{"gitId":"gurmankalkat"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":381,"author":{"gitId":"gurmankalkat"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range in \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":382,"author":{"gitId":"gurmankalkat"},"content":"                    \"the correct format.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":383,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":384,"author":{"gitId":"gurmankalkat"},"content":"        if (input[1].contains(\"/r\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":385,"author":{"gitId":"gurmankalkat"},"content":"            // skip over /r in recipe name","lastModifiedDate":"2023-03-10"},{"lineNumber":386,"author":{"gitId":"gurmankalkat"},"content":"            String recipeToDelete \u003d \"\";","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"gurmankalkat"},"content":"            for (int i \u003d 2; i \u003c input.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"gurmankalkat"},"content":"                recipeToDelete +\u003d input[i] + \" \";","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"gurmankalkat"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"gurmankalkat"},"content":"            recipeToDelete \u003d recipeToDelete.trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":391,"author":{"gitId":"gurmankalkat"},"content":"            if (recipeToDelete.equals(\"all\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":392,"author":{"gitId":"gurmankalkat"},"content":"                String allRecipes \u003d \"\";","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"gurmankalkat"},"content":"                int index \u003d 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":394,"author":{"gitId":"gurmankalkat"},"content":"                while (recipeList.size() !\u003d 0) {","lastModifiedDate":"2023-03-16"},{"lineNumber":395,"author":{"gitId":"gurmankalkat"},"content":"                    allRecipes +\u003d recipeList.deleteRecipe(index).getName() + \", \";","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":397,"author":{"gitId":"gurmankalkat"},"content":"                allRecipes \u003d allRecipes.substring(0, allRecipes.length() - 2);","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"gurmankalkat"},"content":"                return allRecipes;","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"gurmankalkat"},"content":"            } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":400,"author":{"gitId":"gurmankalkat"},"content":"                int recipeIndex \u003d 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":401,"author":{"gitId":"gurmankalkat"},"content":"                boolean recipeFound \u003d false;","lastModifiedDate":"2023-04-10"},{"lineNumber":402,"author":{"gitId":"gurmankalkat"},"content":"                for (Recipe recipe : recipeList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":403,"author":{"gitId":"gurmankalkat"},"content":"                    // find index of recipe we want to delete","lastModifiedDate":"2023-03-10"},{"lineNumber":404,"author":{"gitId":"gurmankalkat"},"content":"                    if (recipe.getName().equals(recipeToDelete)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":405,"author":{"gitId":"gurmankalkat"},"content":"                        recipeFound \u003d true;","lastModifiedDate":"2023-04-10"},{"lineNumber":406,"author":{"gitId":"gurmankalkat"},"content":"                        break;","lastModifiedDate":"2023-03-10"},{"lineNumber":407,"author":{"gitId":"gurmankalkat"},"content":"                    }","lastModifiedDate":"2023-03-10"},{"lineNumber":408,"author":{"gitId":"gurmankalkat"},"content":"                    recipeIndex++;","lastModifiedDate":"2023-03-10"},{"lineNumber":409,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":410,"author":{"gitId":"gurmankalkat"},"content":"                if (!recipeFound) {","lastModifiedDate":"2023-04-10"},{"lineNumber":411,"author":{"gitId":"gurmankalkat"},"content":"                    throw new ArrayIndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range in \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":412,"author":{"gitId":"gurmankalkat"},"content":"                            \"the correct format.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":413,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-04-10"},{"lineNumber":414,"author":{"gitId":"gurmankalkat"},"content":"                return recipeList.deleteRecipe(recipeIndex).getName();","lastModifiedDate":"2023-03-16"},{"lineNumber":415,"author":{"gitId":"gurmankalkat"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":416,"author":{"gitId":"gurmankalkat"},"content":"        // user inputted index of recipe in list","lastModifiedDate":"2023-03-10"},{"lineNumber":417,"author":{"gitId":"gurmankalkat"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":418,"author":{"gitId":"gurmankalkat"},"content":"            // deleting a range of recipes","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"gurmankalkat"},"content":"            if (input[1].length() \u003e\u003d 3 \u0026\u0026 input[1].contains(\"-\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":420,"author":{"gitId":"gurmankalkat"},"content":"                String[] range \u003d input[1].trim().split(\"-\");","lastModifiedDate":"2023-04-07"},{"lineNumber":421,"author":{"gitId":"gurmankalkat"},"content":"                if (range.length !\u003d 2) {","lastModifiedDate":"2023-04-10"},{"lineNumber":422,"author":{"gitId":"gurmankalkat"},"content":"                    throw new ArrayIndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range in \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":423,"author":{"gitId":"gurmankalkat"},"content":"                            \"the correct format.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":424,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-04-10"},{"lineNumber":425,"author":{"gitId":"gurmankalkat"},"content":"                int startIndex \u003d Integer.parseInt(range[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":426,"author":{"gitId":"gurmankalkat"},"content":"                int endIndex \u003d Integer.parseInt(range[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":427,"author":{"gitId":"gurmankalkat"},"content":"                startIndex -\u003d 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":428,"author":{"gitId":"gurmankalkat"},"content":"                endIndex -\u003d 1;","lastModifiedDate":"2023-03-16"},{"lineNumber":429,"author":{"gitId":"gurmankalkat"},"content":"                if (startIndex \u003c 0 || endIndex \u003e\u003d recipeList.size() || endIndex \u003c startIndex) {","lastModifiedDate":"2023-04-07"},{"lineNumber":430,"author":{"gitId":"gurmankalkat"},"content":"                    throw new IndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":431,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":432,"author":{"gitId":"gurmankalkat"},"content":"                int newSize \u003d recipeList.size() - ((endIndex - startIndex) + 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":433,"author":{"gitId":"gurmankalkat"},"content":"                String rangeRecipes \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":434,"author":{"gitId":"gurmankalkat"},"content":"                while (recipeList.size() !\u003d newSize) {","lastModifiedDate":"2023-03-16"},{"lineNumber":435,"author":{"gitId":"gurmankalkat"},"content":"                    rangeRecipes +\u003d recipeList.deleteRecipe(startIndex).getName() + \", \";","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":437,"author":{"gitId":"gurmankalkat"},"content":"                rangeRecipes \u003d String.valueOf(","lastModifiedDate":"2023-04-01"},{"lineNumber":438,"author":{"gitId":"gurmankalkat"},"content":"                        new StringBuilder(rangeRecipes.substring(0, rangeRecipes.length() - 2)));","lastModifiedDate":"2023-04-01"},{"lineNumber":439,"author":{"gitId":"gurmankalkat"},"content":"                return rangeRecipes;","lastModifiedDate":"2023-03-31"},{"lineNumber":440,"author":{"gitId":"gurmankalkat"},"content":"            // deleting a single recipe","lastModifiedDate":"2023-04-10"},{"lineNumber":441,"author":{"gitId":"gurmankalkat"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":442,"author":{"gitId":"gurmankalkat"},"content":"                int recipeIndex \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-04-08"},{"lineNumber":443,"author":{"gitId":"gurmankalkat"},"content":"                if (recipeIndex \u003c\u003d 0 || recipeIndex \u003e recipeList.size()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":444,"author":{"gitId":"gurmankalkat"},"content":"                    throw new IndexOutOfBoundsException(\"Please enter a valid recipe number, name, or range.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":445,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-04-10"},{"lineNumber":446,"author":{"gitId":"gurmankalkat"},"content":"                recipeIndex \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":447,"author":{"gitId":"gurmankalkat"},"content":"                // need to subtract 1 since list is 1-based","lastModifiedDate":"2023-03-16"},{"lineNumber":448,"author":{"gitId":"gurmankalkat"},"content":"                return recipeList.deleteRecipe(recipeIndex - 1).getName();","lastModifiedDate":"2023-03-16"},{"lineNumber":449,"author":{"gitId":"gurmankalkat"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":450,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":451,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":452,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":453,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":454,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":455,"author":{"gitId":"JuneNita"},"content":"     * Extract inputs from users whether it is adding recipes to a tag or removing recipe from a tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":456,"author":{"gitId":"JuneNita"},"content":"     * Then, proceed to add or remove the recipes from the tag, and returns a string whether","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"JuneNita"},"content":"     * the recipes are successfully add to or remove from the tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":459,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":460,"author":{"gitId":"JuneNita"},"content":"     * @param inputs array containing string of inputs","lastModifiedDate":"2023-04-08"},{"lineNumber":461,"author":{"gitId":"JuneNita"},"content":"     * @param recipeList list containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"JuneNita"},"content":"     * @return a string whether successfully added or remove recipes from the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":463,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If users entered invalid recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"JuneNita"},"content":"     * @throws RecipeNotFoundInTagException If users try to remove a recipe that is not in the tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":465,"author":{"gitId":"JuneNita"},"content":"     * @throws TagNotFoundException If users try to remove recipes from a tag that has not been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":466,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":467,"author":{"gitId":"JuneNita"},"content":"    public String parseTagRecipe(String[] inputs, RecipeList recipeList)","lastModifiedDate":"2023-04-08"},{"lineNumber":468,"author":{"gitId":"JuneNita"},"content":"            throws RecipeNotFoundInTagException, TagNotFoundException, NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":469,"author":{"gitId":"JuneNita"},"content":"        String returnMessage;","lastModifiedDate":"2023-04-07"},{"lineNumber":470,"author":{"gitId":"JuneNita"},"content":"        String tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":471,"author":{"gitId":"JuneNita"},"content":"        boolean isOnlyTagWordInCommand \u003d inputs.length \u003d\u003d 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"JuneNita"},"content":"        boolean isAddTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":473,"author":{"gitId":"JuneNita"},"content":"        boolean isRemoveTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":474,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":475,"author":{"gitId":"JuneNita"},"content":"        if (isOnlyTagWordInCommand) {","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalArgumentException(\"Please indicate at least a tag and a recipe.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":477,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":478,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":479,"author":{"gitId":"JuneNita"},"content":"        StringBuilder commandString \u003d new StringBuilder(inputs[1]);","lastModifiedDate":"2023-03-22"},{"lineNumber":480,"author":{"gitId":"JuneNita"},"content":"        for (int i \u003d 2; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":481,"author":{"gitId":"JuneNita"},"content":"            commandString.append(\" \").append(inputs[i]);","lastModifiedDate":"2023-03-22"},{"lineNumber":482,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":483,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":484,"author":{"gitId":"JuneNita"},"content":"        isAddTag \u003d commandString.indexOf(\"\u003e\u003e\") \u003d\u003d -1 \u0026\u0026 commandString.indexOf(\"\u003c\u003c\") !\u003d -1;","lastModifiedDate":"2023-03-29"},{"lineNumber":485,"author":{"gitId":"JuneNita"},"content":"        isRemoveTag \u003d commandString.indexOf(\"\u003c\u003c\") \u003d\u003d -1 \u0026\u0026 commandString.indexOf(\"\u003e\u003e\") !\u003d -1;","lastModifiedDate":"2023-03-29"},{"lineNumber":486,"author":{"gitId":"JuneNita"},"content":"        if (!(isAddTag || isRemoveTag)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":487,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":488,"author":{"gitId":"JuneNita"},"content":"        } else if (isAddTag) {","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"JuneNita"},"content":"            tag \u003d parseAddRecipeTag(commandString.toString(), recipeList);","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"JuneNita"},"content":"            returnMessage \u003d \"add \" + tag;","lastModifiedDate":"2023-04-07"},{"lineNumber":491,"author":{"gitId":"JuneNita"},"content":"        } else if (isRemoveTag) {","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"JuneNita"},"content":"            tag \u003d parseRemoveRecipeTag(commandString.toString(), recipeList);","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"JuneNita"},"content":"            returnMessage \u003d \"remove \" + tag;","lastModifiedDate":"2023-04-07"},{"lineNumber":494,"author":{"gitId":"JuneNita"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalArgumentException(\"Invalid command.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":496,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":497,"author":{"gitId":"JuneNita"},"content":"        return returnMessage;","lastModifiedDate":"2023-04-07"},{"lineNumber":498,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":499,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":500,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":501,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":502,"author":{"gitId":"JuneNita"},"content":"     * Extract the tag label and recipes. Then, proceed to add the recipes to the tag,","lastModifiedDate":"2023-04-08"},{"lineNumber":503,"author":{"gitId":"JuneNita"},"content":"     * and returns the tag label that users modified","lastModifiedDate":"2023-04-08"},{"lineNumber":504,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":505,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":506,"author":{"gitId":"JuneNita"},"content":"     * @param command string contain tag label and recipes that users want to add","lastModifiedDate":"2023-04-08"},{"lineNumber":507,"author":{"gitId":"JuneNita"},"content":"     * @param recipeList list containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":508,"author":{"gitId":"JuneNita"},"content":"     * @return tag label that is modified","lastModifiedDate":"2023-04-08"},{"lineNumber":509,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If users entered invalid recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":510,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":511,"author":{"gitId":"JuneNita"},"content":"    public String parseAddRecipeTag(String command, RecipeList recipeList) throws NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":512,"author":{"gitId":"JuneNita"},"content":"        String tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":513,"author":{"gitId":"JuneNita"},"content":"        Recipe recipe;","lastModifiedDate":"2023-03-29"},{"lineNumber":514,"author":{"gitId":"JuneNita"},"content":"        String[] recipesToTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":515,"author":{"gitId":"JuneNita"},"content":"        boolean isUnableToFindTheRecipe;","lastModifiedDate":"2023-03-29"},{"lineNumber":516,"author":{"gitId":"JuneNita"},"content":"        String[] args \u003d command.trim().split(\"\u003c\u003c\");","lastModifiedDate":"2023-03-23"},{"lineNumber":517,"author":{"gitId":"JuneNita"},"content":"        boolean isNotEnoughArgs \u003d args.length \u003c 2 || args[0].equals(\"\") || args[1].equals(\"\");","lastModifiedDate":"2023-03-29"},{"lineNumber":518,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":519,"author":{"gitId":"JuneNita"},"content":"        if (isNotEnoughArgs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":520,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":521,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":522,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":523,"author":{"gitId":"JuneNita"},"content":"        tag \u003d args[0].trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":524,"author":{"gitId":"JuneNita"},"content":"        recipesToTag \u003d args[1].split(\"\u0026\u0026\");","lastModifiedDate":"2023-03-29"},{"lineNumber":525,"author":{"gitId":"JuneNita"},"content":"        for (String recipeName : recipesToTag) {","lastModifiedDate":"2023-03-22"},{"lineNumber":526,"author":{"gitId":"JuneNita"},"content":"            recipeName \u003d recipeName.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":527,"author":{"gitId":"JuneNita"},"content":"            recipe \u003d recipeList.findByName(recipeName);","lastModifiedDate":"2023-03-29"},{"lineNumber":528,"author":{"gitId":"JuneNita"},"content":"            isUnableToFindTheRecipe \u003d recipe \u003d\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":529,"author":{"gitId":"JuneNita"},"content":"            if (isUnableToFindTheRecipe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":530,"author":{"gitId":"JuneNita"},"content":"                String errorMessage1 \u003d \"Unable to find the recipe: \\\"\" + recipeName + \"\\\" in the\" + \" tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"JuneNita"},"content":"                String errorMessage2 \u003d \"All the recipe before \\\"\" + recipeName + \"\\\" (if any) are \"","lastModifiedDate":"2023-03-30"},{"lineNumber":532,"author":{"gitId":"JuneNita"},"content":"                        + \"successfully added from the tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"JuneNita"},"content":"                throw new NoRecipeException(String.format(\"%-97s|\\n| %-97s\", errorMessage1, errorMessage2));","lastModifiedDate":"2023-04-08"},{"lineNumber":534,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":535,"author":{"gitId":"JuneNita"},"content":"            recipeList.addRecipeToTag(tag, recipe);","lastModifiedDate":"2023-03-22"},{"lineNumber":536,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":537,"author":{"gitId":"JuneNita"},"content":"        return tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":538,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":539,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":540,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":541,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":542,"author":{"gitId":"JuneNita"},"content":"     * Extract the tag label and recipes. Then, proceed to remove the recipes from the tag,","lastModifiedDate":"2023-04-08"},{"lineNumber":543,"author":{"gitId":"JuneNita"},"content":"     * and returns the tag label that users modified","lastModifiedDate":"2023-04-08"},{"lineNumber":544,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":545,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":546,"author":{"gitId":"JuneNita"},"content":"     * @param command string contain tag label and recipes that users want to remove","lastModifiedDate":"2023-04-08"},{"lineNumber":547,"author":{"gitId":"JuneNita"},"content":"     * @param recipeList list containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":548,"author":{"gitId":"JuneNita"},"content":"     * @return tag label that is modified","lastModifiedDate":"2023-04-08"},{"lineNumber":549,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If users entered invalid recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":550,"author":{"gitId":"JuneNita"},"content":"     * @throws RecipeNotFoundInTagException If users try to remove a recipe that is not in the tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":551,"author":{"gitId":"JuneNita"},"content":"     * @throws TagNotFoundException If users try to remove recipes from a tag that has not been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":552,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":553,"author":{"gitId":"JuneNita"},"content":"    public String parseRemoveRecipeTag(String command, RecipeList recipeList)","lastModifiedDate":"2023-04-08"},{"lineNumber":554,"author":{"gitId":"JuneNita"},"content":"            throws RecipeNotFoundInTagException, TagNotFoundException, NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":555,"author":{"gitId":"JuneNita"},"content":"        String tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":556,"author":{"gitId":"JuneNita"},"content":"        Recipe recipe;","lastModifiedDate":"2023-03-29"},{"lineNumber":557,"author":{"gitId":"JuneNita"},"content":"        String[] recipesToRemove;","lastModifiedDate":"2023-03-29"},{"lineNumber":558,"author":{"gitId":"JuneNita"},"content":"        boolean isUnableToFindTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":559,"author":{"gitId":"JuneNita"},"content":"        boolean isNoRecipeInTheList;","lastModifiedDate":"2023-03-29"},{"lineNumber":560,"author":{"gitId":"JuneNita"},"content":"        String[] args \u003d command.trim().split(\"\u003e\u003e\");","lastModifiedDate":"2023-03-23"},{"lineNumber":561,"author":{"gitId":"JuneNita"},"content":"        boolean isNotEnoughArgs \u003d args.length \u003c 2 || args[0].equals(\"\") || args[1].equals(\"\");","lastModifiedDate":"2023-03-29"},{"lineNumber":562,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":563,"author":{"gitId":"JuneNita"},"content":"        if (isNotEnoughArgs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":564,"author":{"gitId":"JuneNita"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":565,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":566,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":567,"author":{"gitId":"JuneNita"},"content":"        tag \u003d args[0].trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":568,"author":{"gitId":"JuneNita"},"content":"        isUnableToFindTag \u003d !recipeList.tags.containsKey(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":569,"author":{"gitId":"JuneNita"},"content":"        if (isUnableToFindTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":570,"author":{"gitId":"JuneNita"},"content":"            throw new TagNotFoundException(\"There is no \\\"\" + tag + \"\\\" tag found. Please make sure you have \"","lastModifiedDate":"2023-04-08"},{"lineNumber":571,"author":{"gitId":"JuneNita"},"content":"                    + \"entered the correct tag.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":572,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":573,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":574,"author":{"gitId":"JuneNita"},"content":"        recipesToRemove \u003d args[1].split(\"\u0026\u0026\");","lastModifiedDate":"2023-03-29"},{"lineNumber":575,"author":{"gitId":"JuneNita"},"content":"        for (String recipeName : recipesToRemove) {","lastModifiedDate":"2023-03-29"},{"lineNumber":576,"author":{"gitId":"JuneNita"},"content":"            recipeName \u003d recipeName.trim();","lastModifiedDate":"2023-03-23"},{"lineNumber":577,"author":{"gitId":"JuneNita"},"content":"            recipe \u003d recipeList.findByName(recipeName);","lastModifiedDate":"2023-03-29"},{"lineNumber":578,"author":{"gitId":"JuneNita"},"content":"            isNoRecipeInTheList \u003d recipe \u003d\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":579,"author":{"gitId":"JuneNita"},"content":"            if (isNoRecipeInTheList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":580,"author":{"gitId":"JuneNita"},"content":"                String errorMessage1 \u003d \"Unable to find the recipe: \\\"\" + recipeName + \"\\\" in the\" + \" tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":581,"author":{"gitId":"JuneNita"},"content":"                String errorMessage2 \u003d \"All the recipe before \\\"\" + recipeName + \"\\\" (if any) are \"","lastModifiedDate":"2023-03-30"},{"lineNumber":582,"author":{"gitId":"JuneNita"},"content":"                        + \"successfully removed from the tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":583,"author":{"gitId":"JuneNita"},"content":"                throw new NoRecipeException(String.format(\"%-97s|\\n| %-97s\", errorMessage1, errorMessage2));","lastModifiedDate":"2023-04-08"},{"lineNumber":584,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":585,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":586,"author":{"gitId":"JuneNita"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":587,"author":{"gitId":"JuneNita"},"content":"                recipeList.removeRecipeFromTag(tag, recipe);","lastModifiedDate":"2023-03-23"},{"lineNumber":588,"author":{"gitId":"JuneNita"},"content":"            } catch (IndexOutOfBoundsException | RecipeNotFoundInTagException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":589,"author":{"gitId":"JuneNita"},"content":"                String errorMessage1 \u003d \"Unable to find the recipe: \\\"\" + recipeName + \"\\\" in the\" + \" tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":590,"author":{"gitId":"JuneNita"},"content":"                String errorMessage2 \u003d \"All the recipe before \\\"\" + recipeName + \"\\\" (if any) are \"","lastModifiedDate":"2023-03-30"},{"lineNumber":591,"author":{"gitId":"JuneNita"},"content":"                        + \"successfully removed from the tag.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":592,"author":{"gitId":"JuneNita"},"content":"                throw new RecipeNotFoundInTagException(","lastModifiedDate":"2023-04-08"},{"lineNumber":593,"author":{"gitId":"JuneNita"},"content":"                        String.format(\"%-97s|\\n| %-97s\", errorMessage1, errorMessage2));","lastModifiedDate":"2023-04-08"},{"lineNumber":594,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":595,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":596,"author":{"gitId":"JuneNita"},"content":"        return tag;","lastModifiedDate":"2023-03-22"},{"lineNumber":597,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":598,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":599,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":600,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":601,"author":{"gitId":"JuneNita"},"content":"     * Extract the filters from users\u0027 input. Then, proceed to extract the recipes by the filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":602,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":603,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":604,"author":{"gitId":"JuneNita"},"content":"     * @param inputs array containing string of inputs, including the filter","lastModifiedDate":"2023-04-08"},{"lineNumber":605,"author":{"gitId":"JuneNita"},"content":"     * @param recipeList list containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":606,"author":{"gitId":"JuneNita"},"content":"     * @return list of recipes that are filtered by the input","lastModifiedDate":"2023-04-08"},{"lineNumber":607,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If users entered invalid recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":608,"author":{"gitId":"JuneNita"},"content":"     * @throws TagNotFoundException If users try to remove recipes from a tag that has not been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":609,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":610,"author":{"gitId":"JuneNita"},"content":"    public RecipeList parseListRecipe(String[] inputs, RecipeList recipeList)","lastModifiedDate":"2023-04-08"},{"lineNumber":611,"author":{"gitId":"JuneNita"},"content":"            throws TagNotFoundException, NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":612,"author":{"gitId":"JuneNita"},"content":"        String[] filters;","lastModifiedDate":"2023-03-14"},{"lineNumber":613,"author":{"gitId":"JuneNita"},"content":"        RecipeList recipeListToPrint;","lastModifiedDate":"2023-03-29"},{"lineNumber":614,"author":{"gitId":"JuneNita"},"content":"        boolean hasTagArgs \u003d inputs.length \u003e 2;","lastModifiedDate":"2023-03-29"},{"lineNumber":615,"author":{"gitId":"JuneNita"},"content":"        boolean isOnlyListWordInCommand \u003d inputs.length \u003d\u003d 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":616,"author":{"gitId":"JuneNita"},"content":"        boolean isTag \u003d false;","lastModifiedDate":"2023-03-22"},{"lineNumber":617,"author":{"gitId":"JuneNita"},"content":"        int firstArgsIndex \u003d 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":618,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":619,"author":{"gitId":"JuneNita"},"content":"        if (isOnlyListWordInCommand) {","lastModifiedDate":"2023-03-29"},{"lineNumber":620,"author":{"gitId":"JuneNita"},"content":"            filters \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":621,"author":{"gitId":"JuneNita"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":622,"author":{"gitId":"JuneNita"},"content":"            isTag \u003d inputs[1].equals(\"/t\");","lastModifiedDate":"2023-03-29"},{"lineNumber":623,"author":{"gitId":"JuneNita"},"content":"            if (isTag \u0026\u0026 !hasTagArgs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":624,"author":{"gitId":"JuneNita"},"content":"                throw new TagNotFoundException(\"Please include at least a tag.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":625,"author":{"gitId":"JuneNita"},"content":"            } else if (isTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":626,"author":{"gitId":"JuneNita"},"content":"                firstArgsIndex \u003d 2;","lastModifiedDate":"2023-03-22"},{"lineNumber":627,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":628,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":629,"author":{"gitId":"JuneNita"},"content":"            StringBuilder filterString \u003d new StringBuilder(inputs[firstArgsIndex]);","lastModifiedDate":"2023-03-22"},{"lineNumber":630,"author":{"gitId":"JuneNita"},"content":"            for (int i \u003d firstArgsIndex + 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":631,"author":{"gitId":"JuneNita"},"content":"                filterString.append(\" \").append(inputs[i]);","lastModifiedDate":"2023-03-16"},{"lineNumber":632,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":633,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":634,"author":{"gitId":"JuneNita"},"content":"            filters \u003d filterString.toString().split(\"\u0026\u0026\");","lastModifiedDate":"2023-03-29"},{"lineNumber":635,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":636,"author":{"gitId":"JuneNita"},"content":"        recipeListToPrint \u003d recipeList.listRecipes(filters, isTag);","lastModifiedDate":"2023-03-29"},{"lineNumber":637,"author":{"gitId":"JuneNita"},"content":"        return recipeListToPrint;","lastModifiedDate":"2023-03-29"},{"lineNumber":638,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":639,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":640,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":641,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":642,"author":{"gitId":"jaredoong"},"content":"     * Extract the recipe index that the users wishes to view. Then, proceed to extract the recipe and returns","lastModifiedDate":"2023-04-08"},{"lineNumber":643,"author":{"gitId":"jaredoong"},"content":"     * the recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":644,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":645,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":646,"author":{"gitId":"jaredoong"},"content":"     * @param command string contain `view` and recipe index","lastModifiedDate":"2023-04-08"},{"lineNumber":647,"author":{"gitId":"jaredoong"},"content":"     * @param recipes list containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":648,"author":{"gitId":"jaredoong"},"content":"     * @return recipe that user wishes to view","lastModifiedDate":"2023-04-08"},{"lineNumber":649,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException          If users entered invalid recipe index.","lastModifiedDate":"2023-04-08"},{"lineNumber":650,"author":{"gitId":"jaredoong"},"content":"     * @throws ArrayIndexOutOfBoundsException If users did not enter a recipe index.","lastModifiedDate":"2023-04-08"},{"lineNumber":651,"author":{"gitId":"jaredoong"},"content":"     * @throws IndexOutOfBoundsException      If users entered a recipe index that is out of bounds.","lastModifiedDate":"2023-04-08"},{"lineNumber":652,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":653,"author":{"gitId":"jaredoong"},"content":"    public Recipe parseViewRecipe(String[] command, RecipeList recipes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":654,"author":{"gitId":"jaredoong"},"content":"        assert command[0].equals(\"view\");","lastModifiedDate":"2023-03-13"},{"lineNumber":655,"author":{"gitId":"jaredoong"},"content":"        Recipe requestedRecipe;","lastModifiedDate":"2023-03-23"},{"lineNumber":656,"author":{"gitId":"jaredoong"},"content":"        int recipeIndex \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":657,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":658,"author":{"gitId":"jaredoong"},"content":"            recipeIndex \u003d Integer.parseInt(command[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":659,"author":{"gitId":"jaredoong"},"content":"            requestedRecipe \u003d recipes.get(recipeIndex - 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":660,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-03-23"},{"lineNumber":661,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d String.format(","lastModifiedDate":"2023-03-23"},{"lineNumber":662,"author":{"gitId":"jaredoong"},"content":"                    \"Please enter a valid recipe number. You entered %s, \" + \"which is not a valid number.\",","lastModifiedDate":"2023-04-01"},{"lineNumber":663,"author":{"gitId":"jaredoong"},"content":"                    command[1]);","lastModifiedDate":"2023-03-23"},{"lineNumber":664,"author":{"gitId":"jaredoong"},"content":"            throw new NumberFormatException(errorMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":665,"author":{"gitId":"jaredoong"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-23"},{"lineNumber":666,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d \"Please enter a valid recipe number. You did not enter a recipe number.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":667,"author":{"gitId":"jaredoong"},"content":"            throw new ArrayIndexOutOfBoundsException(errorMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":668,"author":{"gitId":"jaredoong"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2023-03-23"},{"lineNumber":669,"author":{"gitId":"jaredoong"},"content":"            String errorMessage \u003d String.format(","lastModifiedDate":"2023-03-23"},{"lineNumber":670,"author":{"gitId":"jaredoong"},"content":"                    \"Please enter a valid recipe number. You entered %d, \" + \"which is out of bounds.\",","lastModifiedDate":"2023-03-23"},{"lineNumber":671,"author":{"gitId":"jaredoong"},"content":"                    recipeIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":672,"author":{"gitId":"jaredoong"},"content":"            throw new IndexOutOfBoundsException(errorMessage);","lastModifiedDate":"2023-03-23"},{"lineNumber":673,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":674,"author":{"gitId":"jaredoong"},"content":"        return requestedRecipe;","lastModifiedDate":"2023-03-23"},{"lineNumber":675,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":676,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":677,"author":{"gitId":"TopGun2001"},"content":"    //@@author AbijithRam","lastModifiedDate":"2023-04-10"},{"lineNumber":678,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":679,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to find the index of a recipe from","lastModifiedDate":"2023-04-09"},{"lineNumber":680,"author":{"gitId":"TopGun2001"},"content":"     * the recipe list of the user and return the recipe.","lastModifiedDate":"2023-04-09"},{"lineNumber":681,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":682,"author":{"gitId":"TopGun2001"},"content":"     * @author AbijithRam","lastModifiedDate":"2023-04-09"},{"lineNumber":683,"author":{"gitId":"TopGun2001"},"content":"     * @param recipeName name of recipe","lastModifiedDate":"2023-04-09"},{"lineNumber":684,"author":{"gitId":"TopGun2001"},"content":"     * @param recipes recipe list of user","lastModifiedDate":"2023-04-09"},{"lineNumber":685,"author":{"gitId":"TopGun2001"},"content":"     * @return Recipe","lastModifiedDate":"2023-04-09"},{"lineNumber":686,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":687,"author":{"gitId":"TopGun2001"},"content":"    public Recipe parseViewRecipe(String recipeName, RecipeList recipes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":688,"author":{"gitId":"TopGun2001"},"content":"        int recipeIndex \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":689,"author":{"gitId":"TopGun2001"},"content":"        for (Recipe recipe : recipes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":690,"author":{"gitId":"TopGun2001"},"content":"            if (recipe.getName().equals(recipeName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":691,"author":{"gitId":"TopGun2001"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":692,"author":{"gitId":"TopGun2001"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":693,"author":{"gitId":"TopGun2001"},"content":"            recipeIndex++;","lastModifiedDate":"2023-03-14"},{"lineNumber":694,"author":{"gitId":"TopGun2001"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":695,"author":{"gitId":"TopGun2001"},"content":"        return recipes.get(recipeIndex - 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":696,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":697,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":698,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":699,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":700,"author":{"gitId":"JuneNita"},"content":"     * Returns a Recipe object that contain a recipe\u0027s name and ingredients.","lastModifiedDate":"2023-04-08"},{"lineNumber":701,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":702,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":703,"author":{"gitId":"JuneNita"},"content":"     * @param recipes an object containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":704,"author":{"gitId":"JuneNita"},"content":"     * @return a random recipe from the input recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":705,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If recipes.size() \u003d\u003d 0.","lastModifiedDate":"2023-04-08"},{"lineNumber":706,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":707,"author":{"gitId":"JuneNita"},"content":"    public Recipe parseRandomRecipe(RecipeList recipes) throws NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":708,"author":{"gitId":"JuneNita"},"content":"        if (recipes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-29"},{"lineNumber":709,"author":{"gitId":"JuneNita"},"content":"            throw new NoRecipeException(\"There is no recipe in the list for random.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":710,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":711,"author":{"gitId":"JuneNita"},"content":"        return recipes.randomRecipe();","lastModifiedDate":"2023-03-31"},{"lineNumber":712,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":713,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":714,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":715,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":716,"author":{"gitId":"jaredoong"},"content":"     * Checks whether the user wants to edit single, multiple, or clear all the recipes in the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":717,"author":{"gitId":"jaredoong"},"content":"     * Then, return a WeeklyPlan object that contains the recipes that the user wants to add or delete.","lastModifiedDate":"2023-04-08"},{"lineNumber":718,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":719,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":720,"author":{"gitId":"jaredoong"},"content":"     * @param command an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":721,"author":{"gitId":"jaredoong"},"content":"     * @param recipes an object containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":722,"author":{"gitId":"jaredoong"},"content":"     * @return a WeeklyPlan object that contains the recipes that the user wants to add or delete","lastModifiedDate":"2023-04-08"},{"lineNumber":723,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException      If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":724,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidRecipeNameException If users entered invalid recipe name.","lastModifiedDate":"2023-04-08"},{"lineNumber":725,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidValueException      If users entered invalid quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":726,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException   If users did not enter a valid command.","lastModifiedDate":"2023-04-08"},{"lineNumber":727,"author":{"gitId":"jaredoong"},"content":"     **/","lastModifiedDate":"2023-04-08"},{"lineNumber":728,"author":{"gitId":"jaredoong"},"content":"    public WeeklyPlan parseWeeklyPlan(String[] command, RecipeList recipes)","lastModifiedDate":"2023-03-22"},{"lineNumber":729,"author":{"gitId":"jaredoong"},"content":"            throws IllegalArgumentException, NumberFormatException, InvalidRecipeNameException,","lastModifiedDate":"2023-04-08"},{"lineNumber":730,"author":{"gitId":"jaredoong"},"content":"            InvalidValueException {","lastModifiedDate":"2023-04-02"},{"lineNumber":731,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan updatedWeeklyPlan;","lastModifiedDate":"2023-03-22"},{"lineNumber":732,"author":{"gitId":"jaredoong"},"content":"        switch (command[1]) {","lastModifiedDate":"2023-03-23"},{"lineNumber":733,"author":{"gitId":"jaredoong"},"content":"        case \"/add\":","lastModifiedDate":"2023-03-23"},{"lineNumber":734,"author":{"gitId":"jaredoong"},"content":"        case \"/delete\":","lastModifiedDate":"2023-03-23"},{"lineNumber":735,"author":{"gitId":"jaredoong"},"content":"            updatedWeeklyPlan \u003d parseEditSingleWeeklyPlan(command, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":736,"author":{"gitId":"jaredoong"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":737,"author":{"gitId":"jaredoong"},"content":"        case \"/multiadd\":","lastModifiedDate":"2023-03-23"},{"lineNumber":738,"author":{"gitId":"jaredoong"},"content":"        case \"/multidelete\":","lastModifiedDate":"2023-03-23"},{"lineNumber":739,"author":{"gitId":"jaredoong"},"content":"            updatedWeeklyPlan \u003d parseEditMultiWeeklyPlan(command, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":740,"author":{"gitId":"jaredoong"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":741,"author":{"gitId":"jaredoong"},"content":"        case \"/clear\":","lastModifiedDate":"2023-04-01"},{"lineNumber":742,"author":{"gitId":"jaredoong"},"content":"            updatedWeeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-04-01"},{"lineNumber":743,"author":{"gitId":"jaredoong"},"content":"            break;","lastModifiedDate":"2023-04-01"},{"lineNumber":744,"author":{"gitId":"jaredoong"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":745,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2023-03-14"},{"lineNumber":746,"author":{"gitId":"jaredoong"},"content":"                    \"Please indicate if you would want to add to, delete from, or clear the weekly \"","lastModifiedDate":"2023-04-01"},{"lineNumber":747,"author":{"gitId":"jaredoong"},"content":"                            + \"plan.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":748,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":749,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":750,"author":{"gitId":"jaredoong"},"content":"        return updatedWeeklyPlan;","lastModifiedDate":"2023-03-23"},{"lineNumber":751,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":752,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":753,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":754,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":755,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input to extract the single recipe that the user wants to add or delete from the weekly","lastModifiedDate":"2023-04-08"},{"lineNumber":756,"author":{"gitId":"jaredoong"},"content":"     * plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":757,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":758,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":759,"author":{"gitId":"jaredoong"},"content":"     * @param command an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":760,"author":{"gitId":"jaredoong"},"content":"     * @param recipes an object containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":761,"author":{"gitId":"jaredoong"},"content":"     * @return a WeeklyPlan object that contains the single recipe and the quantity that the user wants to add","lastModifiedDate":"2023-04-08"},{"lineNumber":762,"author":{"gitId":"jaredoong"},"content":"     *     or delete","lastModifiedDate":"2023-04-08"},{"lineNumber":763,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException      If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":764,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidRecipeNameException If users entered invalid recipe name.","lastModifiedDate":"2023-04-08"},{"lineNumber":765,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidValueException      If users entered invalid quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":766,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException   If users did not enter a valid command.","lastModifiedDate":"2023-04-08"},{"lineNumber":767,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":768,"author":{"gitId":"jaredoong"},"content":"    private WeeklyPlan parseEditSingleWeeklyPlan(String[] command, RecipeList recipes)","lastModifiedDate":"2023-03-30"},{"lineNumber":769,"author":{"gitId":"jaredoong"},"content":"            throws IllegalArgumentException, NumberFormatException, InvalidValueException,","lastModifiedDate":"2023-04-08"},{"lineNumber":770,"author":{"gitId":"jaredoong"},"content":"            InvalidRecipeNameException {","lastModifiedDate":"2023-04-08"},{"lineNumber":771,"author":{"gitId":"jaredoong"},"content":"        int numDays;","lastModifiedDate":"2023-04-01"},{"lineNumber":772,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":773,"author":{"gitId":"jaredoong"},"content":"        if (command.length \u003c 4) {","lastModifiedDate":"2023-04-02"},{"lineNumber":774,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":775,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":776,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":777,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":778,"author":{"gitId":"jaredoong"},"content":"            numDays \u003d Integer.parseInt(command[command.length - 1]);","lastModifiedDate":"2023-04-01"},{"lineNumber":779,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":780,"author":{"gitId":"jaredoong"},"content":"            throw new NumberFormatException(\"Please enter a number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":781,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":782,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":783,"author":{"gitId":"jaredoong"},"content":"        if (numDays \u003e 1000 || numDays \u003c 1) {","lastModifiedDate":"2023-04-01"},{"lineNumber":784,"author":{"gitId":"jaredoong"},"content":"            throw new InvalidValueException(\"Please enter a number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":785,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":786,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":787,"author":{"gitId":"jaredoong"},"content":"        int nameLastIndex \u003d command.length - 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":788,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan edits \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-30"},{"lineNumber":789,"author":{"gitId":"jaredoong"},"content":"        StringBuilder recipeName \u003d new StringBuilder(command[2]);","lastModifiedDate":"2023-03-14"},{"lineNumber":790,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 3; i \u003c nameLastIndex; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":791,"author":{"gitId":"jaredoong"},"content":"            recipeName.append(\" \").append(command[i]);","lastModifiedDate":"2023-03-14"},{"lineNumber":792,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":793,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":794,"author":{"gitId":"jaredoong"},"content":"        if (recipes.findByName(recipeName.toString().trim()) !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":795,"author":{"gitId":"jaredoong"},"content":"            edits.put(recipeName.toString(), numDays);","lastModifiedDate":"2023-03-30"},{"lineNumber":796,"author":{"gitId":"jaredoong"},"content":"            return edits;","lastModifiedDate":"2023-03-30"},{"lineNumber":797,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":798,"author":{"gitId":"jaredoong"},"content":"            throw new InvalidRecipeNameException(\"Please indicate a valid recipe name.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":799,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":800,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":801,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":802,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":803,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":804,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input to extract the multiple recipes that the user wants to add or delete from the","lastModifiedDate":"2023-04-08"},{"lineNumber":805,"author":{"gitId":"jaredoong"},"content":"     * weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":806,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":807,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":808,"author":{"gitId":"jaredoong"},"content":"     * @param command an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":809,"author":{"gitId":"jaredoong"},"content":"     * @param recipes an object containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":810,"author":{"gitId":"jaredoong"},"content":"     * @return a WeeklyPlan object that contains the multiple recipes and the quantities that the user wants","lastModifiedDate":"2023-04-08"},{"lineNumber":811,"author":{"gitId":"jaredoong"},"content":"     *     to add or delete","lastModifiedDate":"2023-04-08"},{"lineNumber":812,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException      If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":813,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidRecipeNameException If users entered invalid recipe name.","lastModifiedDate":"2023-04-08"},{"lineNumber":814,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidValueException      If users entered invalid quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":815,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException   If users did not enter a valid command.","lastModifiedDate":"2023-04-08"},{"lineNumber":816,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":817,"author":{"gitId":"jaredoong"},"content":"    private WeeklyPlan parseEditMultiWeeklyPlan(String[] command, RecipeList recipes)","lastModifiedDate":"2023-03-30"},{"lineNumber":818,"author":{"gitId":"jaredoong"},"content":"            throws IllegalArgumentException, NumberFormatException, InvalidValueException,","lastModifiedDate":"2023-04-08"},{"lineNumber":819,"author":{"gitId":"jaredoong"},"content":"            InvalidRecipeNameException {","lastModifiedDate":"2023-04-08"},{"lineNumber":820,"author":{"gitId":"jaredoong"},"content":"        int quantity;","lastModifiedDate":"2023-04-02"},{"lineNumber":821,"author":{"gitId":"jaredoong"},"content":"        if (command.length \u003c 6) {","lastModifiedDate":"2023-04-02"},{"lineNumber":822,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":823,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":824,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":825,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan recipesToEdit \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-30"},{"lineNumber":826,"author":{"gitId":"jaredoong"},"content":"        ArrayList\u003cInteger\u003e quantities \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":827,"author":{"gitId":"jaredoong"},"content":"        ArrayList\u003cString\u003e recipeNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":828,"author":{"gitId":"jaredoong"},"content":"        ArrayList\u003cInteger\u003e startIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":829,"author":{"gitId":"jaredoong"},"content":"        ArrayList\u003cInteger\u003e endIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":830,"author":{"gitId":"jaredoong"},"content":"        StringBuilder recipeName \u003d new StringBuilder();","lastModifiedDate":"2023-03-22"},{"lineNumber":831,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":832,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 0; i \u003c command.length; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":833,"author":{"gitId":"jaredoong"},"content":"            if (command[i].equals(\"/r\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":834,"author":{"gitId":"jaredoong"},"content":"                startIndices.add(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":835,"author":{"gitId":"jaredoong"},"content":"            } else if (command[i].equals(\"/q\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":836,"author":{"gitId":"jaredoong"},"content":"                endIndices.add(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":837,"author":{"gitId":"jaredoong"},"content":"                try {","lastModifiedDate":"2023-04-02"},{"lineNumber":838,"author":{"gitId":"jaredoong"},"content":"                    quantity \u003d Integer.parseInt(command[i + 1]);","lastModifiedDate":"2023-04-02"},{"lineNumber":839,"author":{"gitId":"jaredoong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":840,"author":{"gitId":"jaredoong"},"content":"                    throw new NumberFormatException(","lastModifiedDate":"2023-04-02"},{"lineNumber":841,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":842,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-04-02"},{"lineNumber":843,"author":{"gitId":"jaredoong"},"content":"                if (quantity \u003c 1 || quantity \u003e 1000) {","lastModifiedDate":"2023-04-01"},{"lineNumber":844,"author":{"gitId":"jaredoong"},"content":"                    throw new InvalidValueException(","lastModifiedDate":"2023-04-02"},{"lineNumber":845,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":846,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":847,"author":{"gitId":"jaredoong"},"content":"                quantities.add(quantity);","lastModifiedDate":"2023-03-23"},{"lineNumber":848,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":849,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":850,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":851,"author":{"gitId":"jaredoong"},"content":"        // Checks that command is entered in the correct","lastModifiedDate":"2023-03-22"},{"lineNumber":852,"author":{"gitId":"jaredoong"},"content":"        if (startIndices.size() !\u003d endIndices.size() || startIndices.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":853,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Please enter the command in the correct format.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":854,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":855,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":856,"author":{"gitId":"jaredoong"},"content":"        // Building the recipe names","lastModifiedDate":"2023-03-22"},{"lineNumber":857,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 0; i \u003c startIndices.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":858,"author":{"gitId":"jaredoong"},"content":"            int nameStartIndex \u003d startIndices.get(i) + 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":859,"author":{"gitId":"jaredoong"},"content":"            int nameEndIndex \u003d endIndices.get(i) - 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":860,"author":{"gitId":"jaredoong"},"content":"            recipeName \u003d getRecipeNames(command, recipeNames, recipeName, nameStartIndex, nameEndIndex);","lastModifiedDate":"2023-04-01"},{"lineNumber":861,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":862,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":863,"author":{"gitId":"jaredoong"},"content":"        // Add each recipe to the weekly plan","lastModifiedDate":"2023-03-22"},{"lineNumber":864,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":865,"author":{"gitId":"jaredoong"},"content":"            for (int i \u003d 0; i \u003c recipeNames.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":866,"author":{"gitId":"jaredoong"},"content":"                if (recipes.findByName(recipeNames.get(i)) !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":867,"author":{"gitId":"jaredoong"},"content":"                    recipesToEdit.put(recipeNames.get(i), quantities.get(i));","lastModifiedDate":"2023-03-30"},{"lineNumber":868,"author":{"gitId":"jaredoong"},"content":"                } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":869,"author":{"gitId":"jaredoong"},"content":"                    throw new InvalidRecipeNameException(\"Please indicate a valid recipe name.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":870,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":871,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":872,"author":{"gitId":"jaredoong"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2023-03-23"},{"lineNumber":873,"author":{"gitId":"jaredoong"},"content":"            throw new NumberFormatException(","lastModifiedDate":"2023-04-01"},{"lineNumber":874,"author":{"gitId":"jaredoong"},"content":"                    \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":875,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":876,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":877,"author":{"gitId":"jaredoong"},"content":"        return recipesToEdit;","lastModifiedDate":"2023-03-30"},{"lineNumber":878,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":879,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":880,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":881,"author":{"gitId":"jaredoong"},"content":"    private StringBuilder getRecipeNames(String[] command, ArrayList\u003cString\u003e recipeNames,","lastModifiedDate":"2023-03-23"},{"lineNumber":882,"author":{"gitId":"jaredoong"},"content":"            StringBuilder recipeName, int nameStartIndex, int nameEndIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":883,"author":{"gitId":"jaredoong"},"content":"        recipeName.append(command[nameStartIndex].toLowerCase().trim());","lastModifiedDate":"2023-03-23"},{"lineNumber":884,"author":{"gitId":"jaredoong"},"content":"        for (int j \u003d nameStartIndex + 1; j \u003c\u003d nameEndIndex; j++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":885,"author":{"gitId":"jaredoong"},"content":"            recipeName.append(\" \").append(command[j].toLowerCase().trim());","lastModifiedDate":"2023-03-23"},{"lineNumber":886,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":887,"author":{"gitId":"jaredoong"},"content":"        recipeNames.add(recipeName.toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":888,"author":{"gitId":"jaredoong"},"content":"        recipeName \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":889,"author":{"gitId":"jaredoong"},"content":"        return recipeName;","lastModifiedDate":"2023-03-23"},{"lineNumber":890,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":891,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":892,"author":{"gitId":"notbingsu"},"content":"    //@@author notbingsu","lastModifiedDate":"2023-04-10"},{"lineNumber":893,"author":{"gitId":"notbingsu"},"content":"    // parser to read dd/mm/yyyy format as local date catching invalid date format","lastModifiedDate":"2023-03-23"},{"lineNumber":894,"author":{"gitId":"notbingsu"},"content":"    public LocalDate parseDate(String input) {","lastModifiedDate":"2023-03-22"},{"lineNumber":895,"author":{"gitId":"notbingsu"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-23"},{"lineNumber":896,"author":{"gitId":"notbingsu"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":897,"author":{"gitId":"notbingsu"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":898,"author":{"gitId":"notbingsu"},"content":"            date \u003d LocalDate.parse(input, formatter);","lastModifiedDate":"2023-04-08"},{"lineNumber":899,"author":{"gitId":"notbingsu"},"content":"            return date;","lastModifiedDate":"2023-04-08"},{"lineNumber":900,"author":{"gitId":"notbingsu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":901,"author":{"gitId":"notbingsu"},"content":"            throw new IllegalArgumentException(\"Please enter a valid date in the format dd/mm/yyyy.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":902,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":903,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":904,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":905,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":906,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":907,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input to extract the ingredient name, quantity, and expiry date that the user wants to","lastModifiedDate":"2023-04-08"},{"lineNumber":908,"author":{"gitId":"jaredoong"},"content":"     * add to the ingredient list. Returns the Ingredient object that contains parsed data.","lastModifiedDate":"2023-04-08"},{"lineNumber":909,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":910,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":911,"author":{"gitId":"jaredoong"},"content":"     * @param command an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":912,"author":{"gitId":"jaredoong"},"content":"     * @return an Ingredient object that contains the ingredient name, quantity, and expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":913,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException    If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":914,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidValueException    If users entered invalid quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":915,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException If users did not enter a valid command.","lastModifiedDate":"2023-04-08"},{"lineNumber":916,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":917,"author":{"gitId":"jaredoong"},"content":"    public Ingredient parseAddUserIngredients(String[] command)","lastModifiedDate":"2023-04-08"},{"lineNumber":918,"author":{"gitId":"jaredoong"},"content":"            throws NumberFormatException, IllegalArgumentException, InvalidValueException {","lastModifiedDate":"2023-04-08"},{"lineNumber":919,"author":{"gitId":"jaredoong"},"content":"        String ingredientName \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":920,"author":{"gitId":"jaredoong"},"content":"        Integer ingredientCount \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":921,"author":{"gitId":"jaredoong"},"content":"        String expiryDate \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":922,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":923,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":924,"author":{"gitId":"jaredoong"},"content":"            switch (command[i]) {","lastModifiedDate":"2023-03-30"},{"lineNumber":925,"author":{"gitId":"jaredoong"},"content":"            case \"/n\":","lastModifiedDate":"2023-03-30"},{"lineNumber":926,"author":{"gitId":"jaredoong"},"content":"                StringBuilder nameBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-04-03"},{"lineNumber":927,"author":{"gitId":"jaredoong"},"content":"                while (++i \u003c command.length \u0026\u0026 !command[i].startsWith(\"/\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":928,"author":{"gitId":"jaredoong"},"content":"                    if (nameBuilder.length() \u003e 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":929,"author":{"gitId":"jaredoong"},"content":"                        nameBuilder.append(\" \");","lastModifiedDate":"2023-04-03"},{"lineNumber":930,"author":{"gitId":"jaredoong"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":931,"author":{"gitId":"jaredoong"},"content":"                    nameBuilder.append(command[i]);","lastModifiedDate":"2023-04-03"},{"lineNumber":932,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":933,"author":{"gitId":"jaredoong"},"content":"                ingredientName \u003d nameBuilder.toString();","lastModifiedDate":"2023-04-03"},{"lineNumber":934,"author":{"gitId":"jaredoong"},"content":"                i--; // Move back to the previous flag","lastModifiedDate":"2023-04-03"},{"lineNumber":935,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":936,"author":{"gitId":"jaredoong"},"content":"            case \"/c\":","lastModifiedDate":"2023-03-30"},{"lineNumber":937,"author":{"gitId":"jaredoong"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":938,"author":{"gitId":"jaredoong"},"content":"                    ingredientCount \u003d Integer.parseInt(command[++i]);","lastModifiedDate":"2023-03-30"},{"lineNumber":939,"author":{"gitId":"jaredoong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":940,"author":{"gitId":"jaredoong"},"content":"                    throw new NumberFormatException(","lastModifiedDate":"2023-04-03"},{"lineNumber":941,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":942,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":943,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":944,"author":{"gitId":"jaredoong"},"content":"                if (ingredientCount \u003c 1 || ingredientCount \u003e 1000) {","lastModifiedDate":"2023-04-03"},{"lineNumber":945,"author":{"gitId":"jaredoong"},"content":"                    throw new InvalidValueException(","lastModifiedDate":"2023-04-03"},{"lineNumber":946,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":947,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":948,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":949,"author":{"gitId":"jaredoong"},"content":"            case \"/d\":","lastModifiedDate":"2023-03-30"},{"lineNumber":950,"author":{"gitId":"jaredoong"},"content":"                expiryDate \u003d command[++i];","lastModifiedDate":"2023-03-30"},{"lineNumber":951,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":952,"author":{"gitId":"jaredoong"},"content":"            default:","lastModifiedDate":"2023-03-30"},{"lineNumber":953,"author":{"gitId":"jaredoong"},"content":"                throw new IllegalArgumentException(\"Missing required information. Please provide \"","lastModifiedDate":"2023-03-30"},{"lineNumber":954,"author":{"gitId":"jaredoong"},"content":"                        + \"ingredient name, count, and expiry date.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":955,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":956,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":957,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":958,"author":{"gitId":"jaredoong"},"content":"        if (ingredientName \u003d\u003d null || ingredientCount \u003d\u003d null || expiryDate \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":959,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Missing required information. Please use /n, /c, and /d.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":960,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":961,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":962,"author":{"gitId":"jaredoong"},"content":"        return new Ingredient(ingredientName, ingredientCount, expiryDate);","lastModifiedDate":"2023-04-08"},{"lineNumber":963,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":964,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":965,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":966,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":967,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input to extract the ingredient name and quantity that the user wants to delete from","lastModifiedDate":"2023-04-08"},{"lineNumber":968,"author":{"gitId":"jaredoong"},"content":"     * the ingredient list. Returns the Ingredient object that contains parsed data.","lastModifiedDate":"2023-04-08"},{"lineNumber":969,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":970,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":971,"author":{"gitId":"jaredoong"},"content":"     * @param command an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":972,"author":{"gitId":"jaredoong"},"content":"     * @return an Ingredient object that contains the ingredient name, quantity, and dummy expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":973,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException       If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":974,"author":{"gitId":"jaredoong"},"content":"     * @throws IngredientNotFoundException If users entered invalid ingredient name.","lastModifiedDate":"2023-04-08"},{"lineNumber":975,"author":{"gitId":"jaredoong"},"content":"     * @throws InvalidValueException       If users entered invalid quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":976,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException    If users did not enter a valid command.","lastModifiedDate":"2023-04-08"},{"lineNumber":977,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":978,"author":{"gitId":"jaredoong"},"content":"    public Ingredient parseDeleteUserIngredients(String[] command)","lastModifiedDate":"2023-04-08"},{"lineNumber":979,"author":{"gitId":"jaredoong"},"content":"            throws NumberFormatException, IllegalArgumentException, IngredientNotFoundException,","lastModifiedDate":"2023-04-08"},{"lineNumber":980,"author":{"gitId":"jaredoong"},"content":"            InvalidValueException {","lastModifiedDate":"2023-04-08"},{"lineNumber":981,"author":{"gitId":"jaredoong"},"content":"        String ingredientName \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":982,"author":{"gitId":"jaredoong"},"content":"        Integer ingredientCount \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":983,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":984,"author":{"gitId":"jaredoong"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":985,"author":{"gitId":"jaredoong"},"content":"            switch (command[i]) {","lastModifiedDate":"2023-03-30"},{"lineNumber":986,"author":{"gitId":"jaredoong"},"content":"            case \"/n\":","lastModifiedDate":"2023-03-30"},{"lineNumber":987,"author":{"gitId":"jaredoong"},"content":"                StringBuilder nameBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-04-03"},{"lineNumber":988,"author":{"gitId":"jaredoong"},"content":"                while (++i \u003c command.length \u0026\u0026 !command[i].startsWith(\"/\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":989,"author":{"gitId":"jaredoong"},"content":"                    if (nameBuilder.length() \u003e 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":990,"author":{"gitId":"jaredoong"},"content":"                        nameBuilder.append(\" \");","lastModifiedDate":"2023-04-03"},{"lineNumber":991,"author":{"gitId":"jaredoong"},"content":"                    }","lastModifiedDate":"2023-04-03"},{"lineNumber":992,"author":{"gitId":"jaredoong"},"content":"                    nameBuilder.append(command[i]);","lastModifiedDate":"2023-04-03"},{"lineNumber":993,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":994,"author":{"gitId":"jaredoong"},"content":"                ingredientName \u003d nameBuilder.toString();","lastModifiedDate":"2023-04-03"},{"lineNumber":995,"author":{"gitId":"jaredoong"},"content":"                i--; // Move back to the previous flag","lastModifiedDate":"2023-04-03"},{"lineNumber":996,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":997,"author":{"gitId":"jaredoong"},"content":"            case \"/c\":","lastModifiedDate":"2023-03-30"},{"lineNumber":998,"author":{"gitId":"jaredoong"},"content":"                try {","lastModifiedDate":"2023-04-03"},{"lineNumber":999,"author":{"gitId":"jaredoong"},"content":"                    ingredientCount \u003d Integer.parseInt(command[++i]);","lastModifiedDate":"2023-03-30"},{"lineNumber":1000,"author":{"gitId":"jaredoong"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1001,"author":{"gitId":"jaredoong"},"content":"                    throw new NumberFormatException(","lastModifiedDate":"2023-04-03"},{"lineNumber":1002,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1003,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-04-03"},{"lineNumber":1004,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1005,"author":{"gitId":"jaredoong"},"content":"                if (ingredientCount \u003c 1 || ingredientCount \u003e 1000) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1006,"author":{"gitId":"jaredoong"},"content":"                    throw new InvalidValueException(","lastModifiedDate":"2023-04-03"},{"lineNumber":1007,"author":{"gitId":"jaredoong"},"content":"                            \"Please enter a positive number between 1 to 1000 for the quantity.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1008,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":1009,"author":{"gitId":"jaredoong"},"content":"                break;","lastModifiedDate":"2023-03-30"},{"lineNumber":1010,"author":{"gitId":"jaredoong"},"content":"            default:","lastModifiedDate":"2023-03-30"},{"lineNumber":1011,"author":{"gitId":"jaredoong"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-03-30"},{"lineNumber":1012,"author":{"gitId":"jaredoong"},"content":"                        \"Missing required information. Please provide \" + \"ingredient name and count.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":1013,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":1014,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":1015,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1016,"author":{"gitId":"jaredoong"},"content":"        if (ingredientName \u003d\u003d null || ingredientCount \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":1017,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Missing required information. Please use /n and /c.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":1018,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":1019,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1020,"author":{"gitId":"jaredoong"},"content":"        return new Ingredient(ingredientName, ingredientCount, \"01/01/2020\");","lastModifiedDate":"2023-04-08"},{"lineNumber":1021,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":1022,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1023,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":1024,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":1025,"author":{"gitId":"jaredoong"},"content":"     * Parses the user input to extract the recipe which the user wants to mark as done. Returns the recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":1026,"author":{"gitId":"jaredoong"},"content":"     * name to be deleted from the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":1027,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":1028,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":1029,"author":{"gitId":"jaredoong"},"content":"     * @param command         an array containing the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":1030,"author":{"gitId":"jaredoong"},"content":"     * @param userIngredients an object containing all ingredients data","lastModifiedDate":"2023-04-08"},{"lineNumber":1031,"author":{"gitId":"jaredoong"},"content":"     * @param weeklyPlan      an object containing all weekly plan data","lastModifiedDate":"2023-04-08"},{"lineNumber":1032,"author":{"gitId":"jaredoong"},"content":"     * @param recipes         an object containing all recipes data","lastModifiedDate":"2023-04-08"},{"lineNumber":1033,"author":{"gitId":"jaredoong"},"content":"     * @return a string containing the recipe name to be deleted from the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":1034,"author":{"gitId":"jaredoong"},"content":"     * @throws NumberFormatException       If users entered invalid character for the quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":1035,"author":{"gitId":"jaredoong"},"content":"     * @throws IngredientNotFoundException If users entered invalid ingredient name.","lastModifiedDate":"2023-04-08"},{"lineNumber":1036,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException    If users enter a recipe name that does not exist in the weekly","lastModifiedDate":"2023-04-08"},{"lineNumber":1037,"author":{"gitId":"jaredoong"},"content":"     *                                     plan, or if the user does not have enough ingredients to make the","lastModifiedDate":"2023-04-08"},{"lineNumber":1038,"author":{"gitId":"jaredoong"},"content":"     *                                     recipe.","lastModifiedDate":"2023-04-08"},{"lineNumber":1039,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":1040,"author":{"gitId":"jaredoong"},"content":"    public String parseMarkDone(String[] command, IngredientList userIngredients, WeeklyPlan weeklyPlan,","lastModifiedDate":"2023-04-08"},{"lineNumber":1041,"author":{"gitId":"jaredoong"},"content":"            RecipeList recipes)","lastModifiedDate":"2023-04-08"},{"lineNumber":1042,"author":{"gitId":"jaredoong"},"content":"            throws IllegalArgumentException, IngredientNotFoundException, InvalidRecipeNameException {","lastModifiedDate":"2023-04-08"},{"lineNumber":1043,"author":{"gitId":"jaredoong"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1044,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Please enter a recipe name.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":1045,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":1046,"author":{"gitId":"jaredoong"},"content":"        String recipeName \u003d combineWords(command, 2, command.length);","lastModifiedDate":"2023-04-03"},{"lineNumber":1047,"author":{"gitId":"jaredoong"},"content":"        if (recipes.findByName(recipeName) \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":1048,"author":{"gitId":"jaredoong"},"content":"            throw new InvalidRecipeNameException(\"Please enter a valid recipe name.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1049,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":1050,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1051,"author":{"gitId":"jaredoong"},"content":"        if (weeklyPlan.get(recipeName) \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":1052,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Recipe does not exist in weekly plan.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":1053,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":1054,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1055,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e ingredients \u003d recipes.findByName(recipeName).getIngredients();","lastModifiedDate":"2023-03-31"},{"lineNumber":1056,"author":{"gitId":"jaredoong"},"content":"        for (String ingredient : ingredients.keySet()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":1057,"author":{"gitId":"jaredoong"},"content":"            int currentCount \u003d userIngredients.findIngredientCount(ingredient);","lastModifiedDate":"2023-03-31"},{"lineNumber":1058,"author":{"gitId":"jaredoong"},"content":"            if (currentCount \u003c ingredients.get(ingredient)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":1059,"author":{"gitId":"jaredoong"},"content":"                throw new IllegalArgumentException(","lastModifiedDate":"2023-03-31"},{"lineNumber":1060,"author":{"gitId":"jaredoong"},"content":"                        \"You do not have enough ingredients to mark this recipe as done.\");","lastModifiedDate":"2023-03-31"},{"lineNumber":1061,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":1062,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":1063,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":1064,"author":{"gitId":"jaredoong"},"content":"        return recipeName;","lastModifiedDate":"2023-04-08"},{"lineNumber":1065,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":1066,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"notbingsu":77,"JuneNita":208,"gurmankalkat":104,"jaredoong":404,"TopGun2001":273}},{"path":"src/main/java/seedu/meal360/Recipe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"public class Recipe {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"notbingsu"},"content":"    // changed ingredients to public to edit via editRecipe","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"notbingsu"},"content":"    private static IngredientList ingredientList \u003d new IngredientList();","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"notbingsu"},"content":"    public HashMap\u003cString, Integer\u003e ingredients;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"notbingsu"},"content":"    private String name;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"TopGun2001"},"content":"    private Boolean available;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"    public Recipe(String name, HashMap\u003cString, Integer\u003e ingredients) {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"        this.ingredients \u003d ingredients;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"    public String getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"    public HashMap\u003cString, Integer\u003e getIngredients() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"        return ingredients;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"JuneNita"},"content":"    public int getNumOfIngredients() {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"JuneNita"},"content":"        return ingredients.size();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"notbingsu"},"content":"    public boolean isAvailable() {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"notbingsu"},"content":"        for (String ingredientName : ingredients.keySet()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"notbingsu"},"content":"            if (ingredientList.containsKey(ingredientName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"notbingsu"},"content":"                Ingredient ingredient \u003d ingredientList.get(ingredientName);","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"notbingsu"},"content":"                if (ingredient.ingredientCount \u003c ingredients.get(ingredientName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"notbingsu"},"content":"                    return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"notbingsu"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"notbingsu"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"notbingsu"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"notbingsu"},"content":"        return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"notbingsu":18,"JuneNita":4,"jaredoong":20,"TopGun2001":2}},{"path":"src/main/java/seedu/meal360/RecipeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.NoRecipeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.RecipeNotFoundInTagException;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.TagNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"JuneNita"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"public class RecipeList extends ArrayList\u003cRecipe\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"    private static IngredientList ingredientList \u003d new IngredientList();","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"notbingsu"},"content":"    public HashMap\u003cString, HashMap\u003cRecipe, Integer\u003e\u003e tags \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    public Recipe findByName(String name) {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"        for (Recipe recipe : this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"notbingsu"},"content":"            if (recipe.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"notbingsu"},"content":"                return recipe;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"        return null;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    public void addRecipe(Recipe recipe) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"        super.add(recipe);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"notbingsu"},"content":"    public void editRecipe(Recipe recipe, HashMap\u003cString, Integer\u003e ingredients) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"notbingsu"},"content":"        recipe.ingredients \u003d ingredients;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"gurmankalkat"},"content":"    public Recipe deleteRecipe(int recipeNum) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"gurmankalkat"},"content":"        Recipe recipeToDelete \u003d super.get(recipeNum);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"gurmankalkat"},"content":"        super.remove(recipeToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"gurmankalkat"},"content":"        return recipeToDelete;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"JuneNita"},"content":"     * Add a recipe to a tag. If the tag has not been created, it will be created.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"JuneNita"},"content":"     * @param tag tag label that users want to modify","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"JuneNita"},"content":"     * @param recipe a recipe to be added to the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"JuneNita"},"content":"    public void addRecipeToTag(String tag, Recipe recipe) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"JuneNita"},"content":"        boolean hasTag \u003d tags.containsKey(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"JuneNita"},"content":"        int tagDummy \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"JuneNita"},"content":"        if (hasTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"JuneNita"},"content":"            tags.get(tag).put(recipe, tagDummy);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"JuneNita"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"JuneNita"},"content":"            assert !tags.containsKey(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"JuneNita"},"content":"            HashMap\u003cRecipe, Integer\u003e tagRecipes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"JuneNita"},"content":"            tagRecipes.put(recipe, tagDummy);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"JuneNita"},"content":"            tags.put(tag, tagRecipes);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"JuneNita"},"content":"            assert tags.size() \u003e 0 : \"tag\u0027s size is still 0.\";","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"JuneNita"},"content":"     * Remove a recipe from a tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"JuneNita"},"content":"     * @param tag tag label that users want to modify","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"JuneNita"},"content":"     * @param recipe a recipe to be removed from the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"JuneNita"},"content":"     * @throws RecipeNotFoundInTagException If the recipe to be removed is not already in","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"JuneNita"},"content":"     *                                      the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"JuneNita"},"content":"    public void removeRecipeFromTag(String tag, Recipe recipe) throws RecipeNotFoundInTagException {","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"JuneNita"},"content":"        HashMap\u003cRecipe, Integer\u003e tagRecipeList \u003d tags.get(tag);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"JuneNita"},"content":"        boolean isAbleToFindTheRecipe \u003d tagRecipeList.containsKey(recipe);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"JuneNita"},"content":"        if (!isAbleToFindTheRecipe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"JuneNita"},"content":"            String errorMessage1 \u003d \"Unable to find the recipe: \\\"\" + recipe.getName() + \"\\\" in the\" + \" tag.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"JuneNita"},"content":"            String errorMessage2 \u003d \"All the recipe before \\\"\" + recipe.getName() + \"\\\" (if any) are \" +","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"JuneNita"},"content":"                    \"successfully removed from the tag.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"JuneNita"},"content":"            throw new RecipeNotFoundInTagException(String.format(\"%-97s|\\n| %-97s\", errorMessage1, errorMessage2));","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"JuneNita"},"content":"        tagRecipeList.remove(recipe);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"JuneNita"},"content":"     * Accumulate all recipes that pass the filters into a list of recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"JuneNita"},"content":"     * @param filters array containing strings of filters","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"JuneNita"},"content":"     * @param isTag flag whether the filters are tags label","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"JuneNita"},"content":"     * @return RecipeList containing all recipes passing the filters","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"JuneNita"},"content":"     * @throws TagNotFoundException If the filter is a tag and the tag is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If the filter is a tag and the tag contains no recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"JuneNita"},"content":"    public RecipeList listRecipes(String[] filters, boolean isTag) throws TagNotFoundException, NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"JuneNita"},"content":"        RecipeList filteredRecipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"JuneNita"},"content":"        boolean isNoFilter \u003d filters \u003d\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"JuneNita"},"content":"        boolean isNotPassTheFilter;","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"JuneNita"},"content":"        if (isTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"JuneNita"},"content":"            filteredRecipeList \u003d this.listTagRecipes(filters);","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"JuneNita"},"content":"        } else if (!isTag \u0026\u0026 isNoFilter) {","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"JuneNita"},"content":"            return this;","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"JuneNita"},"content":"        } else if (!isTag) {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"JuneNita"},"content":"            for (Recipe recipe : this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"JuneNita"},"content":"                filteredRecipeList.add(recipe);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"JuneNita"},"content":"                for (String filter : filters) {","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"JuneNita"},"content":"                    filter \u003d filter.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"JuneNita"},"content":"                    isNotPassTheFilter \u003d !recipe.getName().contains(filter) \u0026\u0026","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"JuneNita"},"content":"                            !recipe.getIngredients().containsKey(filter);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"JuneNita"},"content":"                    if (isNotPassTheFilter) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"JuneNita"},"content":"                        filteredRecipeList.remove(recipe);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"JuneNita"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"JuneNita"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"JuneNita"},"content":"        return filteredRecipeList;","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"JuneNita"},"content":"     * Accumulate all recipes contains all tag from users\u0027 input into a list of recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"JuneNita"},"content":"     * @param filters array containing strings of tag label","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"JuneNita"},"content":"     * @return RecipeList containing all recipes containing all tags","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"JuneNita"},"content":"     * @throws TagNotFoundException If the filter is a tag and the tag is invalid","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"JuneNita"},"content":"     * @throws NoRecipeException If the filter is a tag and the tag contains no recipe","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"JuneNita"},"content":"    public RecipeList listTagRecipes(String[] filters) throws TagNotFoundException, NoRecipeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"JuneNita"},"content":"        RecipeList filteredRecipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"JuneNita"},"content":"        HashMap\u003cRecipe, Integer\u003e tagRecipes;","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"JuneNita"},"content":"        boolean hasNoRecipeInTheTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"JuneNita"},"content":"        boolean hasNoRecipeToReturn;","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"JuneNita"},"content":"        boolean isNotFoundTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"JuneNita"},"content":"        // add all recipe from first tag to the list","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"JuneNita"},"content":"        isNotFoundTag \u003d !this.tags.containsKey(filters[0].trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"JuneNita"},"content":"        if (isNotFoundTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"JuneNita"},"content":"            throw new TagNotFoundException(\"There is no \\\"\" + filters[0] + \"\\\" tag found. Please make sure you have \" +","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"JuneNita"},"content":"                            \"entered the correct tag.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"JuneNita"},"content":"        this.tags.get(filters[0].trim()).forEach((recipe, dummy) -\u003e filteredRecipeList.add(recipe));","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"JuneNita"},"content":"        for (String filter : filters) {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"JuneNita"},"content":"            filter \u003d filter.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"JuneNita"},"content":"            tagRecipes \u003d this.tags.get(filter);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"JuneNita"},"content":"            hasNoRecipeInTheTag \u003d tagRecipes \u003d\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"JuneNita"},"content":"            hasNoRecipeToReturn \u003d filteredRecipeList.size() \u003d\u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"JuneNita"},"content":"            if (hasNoRecipeInTheTag) {","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"JuneNita"},"content":"                throw new NoRecipeException(\"There is nothing to list.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"JuneNita"},"content":"            if (hasNoRecipeToReturn) {","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"JuneNita"},"content":"                return filteredRecipeList;","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"JuneNita"},"content":"            for (int index \u003d filteredRecipeList.size() - 1; index \u003e\u003d 0; index--) {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"JuneNita"},"content":"                Recipe currentRecipe \u003d filteredRecipeList.get(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"JuneNita"},"content":"                if (!tagRecipes.containsKey(currentRecipe)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"JuneNita"},"content":"                    filteredRecipeList.remove(currentRecipe);","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"JuneNita"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"JuneNita"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"JuneNita"},"content":"        return filteredRecipeList;","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"notbingsu"},"content":"    public RecipeList availableRecipes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"notbingsu"},"content":"        RecipeList availableRecipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"notbingsu"},"content":"        for (Recipe recipe : this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"notbingsu"},"content":"            if (recipe.isAvailable()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"notbingsu"},"content":"                availableRecipeList.add(recipe);","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"notbingsu"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"notbingsu"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"notbingsu"},"content":"        return availableRecipeList;","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"JuneNita"},"content":"     * Returns a Recipe object that contain a recipe\u0027s name and ingredients.","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"JuneNita"},"content":"     * @return a random recipe from this RecipeList.","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"JuneNita"},"content":"    public Recipe randomRecipe() {","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"JuneNita"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"JuneNita"},"content":"        Recipe randomRecipe \u003d this.get(random.nextInt(this.size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"JuneNita"},"content":"        return randomRecipe;","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"notbingsu":24,"JuneNita":138,"gurmankalkat":4,"jaredoong":17}},{"path":"src/main/java/seedu/meal360/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    private static final int BOXWIDTH \u003d 100;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"    private static final String SEPARATORCHAR \u003d \"-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"    public void printSeparator() {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"        String separatorLine \u003d SEPARATORCHAR.repeat(BOXWIDTH);","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"        System.out.println(separatorLine);","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"        String logo \u003d \" __  __          _ ____  __  __\\n\" + \"|  \\\\/  |___ __ _| |__ / / / /  \\\\\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"                + \"| |\\\\/| / -_) _` | ||_ \\\\/ _ \\\\ () |\\n\" + \"|_|  |_\\\\___\\\\__,_|_|___/\\\\___/\\\\__/\\n\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"        System.out.println(\"Welcome to Meal360, your ultimate Recipe Manager!\\n\" + logo);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"        System.out.println(formatMessage(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    public String formatMessage(String message) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"        return String.format(\"| %-97s|\", message);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"        String outputMessage \u003d formatMessage(message);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"        System.out.println(outputMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to print the contents of a recipe.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"TopGun2001"},"content":"     * @param recipe recipe whose contents are to be printed.","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"TopGun2001"},"content":"     **/","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"    public void printRecipe(Recipe recipe) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"        System.out.println(formatMessage(\"Name of recipe: \" + recipe.getName()));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"TopGun2001"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"        for (String ingredient : recipe.getIngredients().keySet()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"            String outputMessage \u003d String.format(\"%s(%d)\", ingredient,","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"                    recipe.getIngredients().get(ingredient));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"TopGun2001"},"content":"            System.out.println(formatMessage(index + \". \" + outputMessage));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"TopGun2001"},"content":"            index++;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"    public void printWeeklyPlan(WeeklyPlan weeklyPlan) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"        if (weeklyPlan.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Your weekly plan is empty!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Here is your weekly plan:\");","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"                String outputMessage \u003d String.format(\"%s x%d\", recipe, count);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"                printMessage(outputMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"            });","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"gurmankalkat"},"content":"    public void printWeeklyIngredients(WeeklyPlan weeklyPlan, RecipeList recipeList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"gurmankalkat"},"content":"        if (weeklyPlan.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"gurmankalkat"},"content":"            printMessage(\"Your weekly plan is empty!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"gurmankalkat"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"gurmankalkat"},"content":"            printMessage(\"Here are your weekly ingredients:\");","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"gurmankalkat"},"content":"            weeklyPlan.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"gurmankalkat"},"content":"                Recipe currRecipe \u003d recipeList.findByName(recipe.toString().trim());","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"gurmankalkat"},"content":"                for (String ingredient : currRecipe.getIngredients().keySet()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"gurmankalkat"},"content":"                    String outputMessage \u003d String.format(\"%s (%d)\", ingredient,","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"gurmankalkat"},"content":"                            currRecipe.getIngredients().get(ingredient) * count);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"gurmankalkat"},"content":"                    System.out.println(formatMessage(outputMessage));","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"gurmankalkat"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"gurmankalkat"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"JuneNita"},"content":"    public void listRecipe(RecipeList recipeListToPrint) {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"notbingsu"},"content":"        listRecipes(recipeListToPrint, \"There is nothing to list.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"notbingsu"},"content":"                \"These are the recipes you have\");","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"notbingsu"},"content":"    public void listAvailableRecipes(RecipeList recipeListToPrint) {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"notbingsu"},"content":"        listRecipes(recipeListToPrint, \"There are no available recipes.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"notbingsu"},"content":"                \"These are the recipes you can cook\");","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"notbingsu"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"notbingsu"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"JuneNita"},"content":"     * Print ordered list of recipes including recipes\u0027 name and ingredients","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"JuneNita"},"content":"     * @author notbingsu","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"JuneNita"},"content":"     * @param recipeListToPrint list containing recipes to be printed","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"JuneNita"},"content":"     * @param emptyListMsg      error message for empty list","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"JuneNita"},"content":"     * @param listHeaderMsg     print list header message","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"JuneNita"},"content":"    private void listRecipes(RecipeList recipeListToPrint, String emptyListMsg, String listHeaderMsg) {","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"JuneNita"},"content":"        int numberOfRecipes \u003d recipeListToPrint.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"JuneNita"},"content":"        int order \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"JuneNita"},"content":"        if (numberOfRecipes \u003d\u003d 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"notbingsu"},"content":"            printMessage(emptyListMsg);","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"JuneNita"},"content":"            return;","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"notbingsu"},"content":"        printMessage(listHeaderMsg + \" (\" + numberOfRecipes + \" recipes):\");","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"JuneNita"},"content":"        for (Recipe recipe : recipeListToPrint) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"notbingsu"},"content":"            order++;","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"notbingsu"},"content":"            printMessage(order + \". \" + recipe.getName() + \"   (\" + recipe.getNumOfIngredients()","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"notbingsu"},"content":"                    + \" ingredients)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"TopGun2001"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"TopGun2001"},"content":"     * This method is designed to display all the commands used by the","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"TopGun2001"},"content":"     * recipe manager to assist the user in executing the required","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"TopGun2001"},"content":"     * operations.","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"TopGun2001"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"TopGun2001"},"content":"     * @author AbijithRam","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"TopGun2001"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"jaredoong"},"content":"    public void printHelp() {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"These are the operations you can do. Please follow the proper input\"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jaredoong"},"content":"                + \" formats while typing.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"1. Add Recipe: add /r {recipe name}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"2. View Recipe: view {index number}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"3. Edit Recipe: edit {recipe name}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"4. Delete Recipe: delete {index number} or delete {starting index-ending index} or\");","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"delete /r {recipe name} or delete /r all\");","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"jaredoong"},"content":"        printMessage(\"5. List All Recipes: list\");","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"6. List Available Recipes: available\");","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"7. Add Single Recipe to Weekly Plan: weekly /add {recipe name} {quantity}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"8. Add Multiple Recipes to Weekly Plan: weekly /multiadd /r {recipe1 name} /q {quantity1}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"   /r {recipe2 name} /q {quantity2}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"9. Delete Single Recipe from Weekly Plan: weekly /delete {recipe name} {quantity}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"10. Delete Multiple Recipes from Weekly Plan: weekly /multidelete /r {recipe1 name}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"   /q {quantity1} /r {recipe2 name} /q {quantity2}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"11. View Weekly Plan: weeklyplan\");","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"12. Marking recipe in weekly plan as done: weekly /done RECIPE_NAME\");","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"13. Clearing weekly plan: weekly /clear\");","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"14. View Weekly Ingredients: weeklyingredients\");","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"15. Give a random recipe: random\");","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"16. Tagging/Categorizing Recipes: tag {LABEL_name} \u003c\u003c {RECIPE_NAME \u0026\u0026 RECIPE_NAME \u0026\u0026 \"","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"TopGun2001"},"content":"                + \"...}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"17. Removing recipes from a Tag: tag {LABEL_name} \u003e\u003e {RECIPE_NAME \u0026\u0026 RECIPE_NAME \u0026\u0026 .\"","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"TopGun2001"},"content":"                + \"..}\");","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"notbingsu"},"content":"        printMessage(\"18. Exit: bye\");","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"HOW TO ADD INGREDIENTS?\");","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"TopGun2001"},"content":"        printMessage(\"ingredient1_name\u003dingredient1_quantity ingredient2_name\u003dingredient2_quantity ...\");","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"jaredoong"},"content":"    public void printUserIngredients(IngredientList userIngredients) {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"jaredoong"},"content":"        if (userIngredients.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Your ingredient list is empty!\");","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"jaredoong"},"content":"            printMessage(\"Here is your ingredient list:\");","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"jaredoong"},"content":"            userIngredients.forEach((name, ingredient) -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"jaredoong"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"jaredoong"},"content":"                String formattedDate \u003d ingredient.expiryDate.format(formatter);","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"jaredoong"},"content":"                String outputMessage \u003d String.format(\"%s (%d) [by:%s]\", name, ingredient.ingredientCount,","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"jaredoong"},"content":"                        formattedDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"jaredoong"},"content":"                System.out.println(formatMessage(outputMessage));","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"jaredoong"},"content":"            });","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"JuneNita"},"content":"     * Extract message received whether users added or removed recipes from a tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"JuneNita"},"content":"     * Then, proceed to print a successful message.","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"JuneNita"},"content":"     * @param receivedMessage string containing \u0027add\u0027 or \u0027remove\u0027 tag and tag label","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"JuneNita"},"content":"    public void printTagMessage(String receivedMessage) {","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"JuneNita"},"content":"        String[] args \u003d receivedMessage.split(\" \", 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"JuneNita"},"content":"        String command \u003d args[0].trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"JuneNita"},"content":"        String tag \u003d args[1].trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"JuneNita"},"content":"        if (command.equals(\"add\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"JuneNita"},"content":"            printSuccessfullyAddTag(tag);","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"JuneNita"},"content":"        } else if (command.equals(\"remove\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"JuneNita"},"content":"            printSuccessfullyRemoveTag(tag);","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"JuneNita"},"content":"     * Print successfully add recipes to the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"JuneNita"},"content":"     * @param tag tag label","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"JuneNita"},"content":"    public void printSuccessfullyAddTag(String tag) {","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"JuneNita"},"content":"        printMessage(\"You have successfully added the recipe(s) to \\\"\" + tag + \"\\\" tag.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"JuneNita"},"content":"     * Print successfully remove recipes from the tag","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"JuneNita"},"content":"     * @param tag tag label","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"JuneNita"},"content":"    public void printSuccessfullyRemoveTag(String tag) {","lastModifiedDate":"2023-04-07"},{"lineNumber":202,"author":{"gitId":"JuneNita"},"content":"        printMessage(\"You have successfully removed the recipe(s) from \\\"\" + tag + \"\\\" tag.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":203,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"JuneNita"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"JuneNita"},"content":"     * Print random result header","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"JuneNita"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"JuneNita"},"content":"     * @author junenita","lastModifiedDate":"2023-04-08"},{"lineNumber":209,"author":{"gitId":"JuneNita"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"JuneNita"},"content":"    public void printRandomMessage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"JuneNita"},"content":"        printMessage(\"Random Result.....\");","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"notbingsu":27,"JuneNita":67,"gurmankalkat":17,"jaredoong":75,"TopGun2001":27}},{"path":"src/main/java/seedu/meal360/WeeklyPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.IngredientNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"//@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"public class WeeklyPlan extends HashMap\u003cString, Integer\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"     * Adds a recipe to the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"     * @param recipeMap the recipe to be added.","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException if the total quantity of the recipe exceeds 1000.","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"    public void addPlans(WeeklyPlan recipeMap) throws IllegalArgumentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"        final boolean[] validNumber \u003d {true};","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"        recipeMap.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"            if (validNumber[0] \u0026\u0026 this.containsKey(recipe)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"                int newCount \u003d this.get(recipe) + count;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"                validNumber[0] \u003d (newCount \u003e 1000) ? false : true;","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"        });","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"        if (validNumber[0]) {","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"            recipeMap.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"                if (this.containsKey(recipe)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"                    this.put(recipe, this.get(recipe) + count);","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"                } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"                    this.put(recipe, count);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"            });","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"            throw new IllegalArgumentException(\"Total quantity cannot exceed 1000!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"     * Deletes a recipe from the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"     * @param recipeMap the recipe to be deleted.","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"     * @throws IllegalArgumentException if the recipe does not exist in the weekly plan.","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"    public void deletePlans(WeeklyPlan recipeMap) throws IllegalArgumentException {","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"        recipeMap.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"            if (this.containsKey(recipe)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"                int currentCount \u003d this.get(recipe);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"                int newCount \u003d currentCount - count;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"                this.remove(recipe);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"                if (newCount \u003e 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"                    this.put(recipe, newCount);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"                throw new IllegalArgumentException(\"Recipe does not exist in weekly plan!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"gurmankalkat"},"content":"    //@@author gurmankalkat","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"gurmankalkat"},"content":"    public void clearPlan() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"gurmankalkat"},"content":"        this.clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"     * Checks if the weekly plan contains any invalid recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"     * @param recipeList the list of recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"     * @return true if the weekly plan contains no invalid recipes, false otherwise.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"    public boolean checkValidity(RecipeList recipeList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"        ArrayList\u003cString\u003e toRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"        this.forEach((recipe, count) -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"            if (recipeList.findByName(recipe) \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"                toRemove.add(recipe);","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"        if (toRemove.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"        toRemove.forEach(recipe -\u003e this.remove(recipe));","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"        return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"jaredoong"},"content":"     * Marks a recipe in the weekly plan as done.","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"jaredoong"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"     * @author jaredoong","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"jaredoong"},"content":"     * @param recipeName      the name of the recipe to be marked as done.","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"     * @param recipeList      the list of recipes.","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"jaredoong"},"content":"     * @param userIngredients the list of ingredients.","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"jaredoong"},"content":"     * @throws IngredientNotFoundException if the ingredient does not exist in the list of ingredients.","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"jaredoong"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"jaredoong"},"content":"    public void markDone(String recipeName, RecipeList recipeList, IngredientList userIngredients)","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"jaredoong"},"content":"            throws IngredientNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e ingredients \u003d recipeList.findByName(recipeName).getIngredients();","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"jaredoong"},"content":"        for (String ingredient : ingredients.keySet()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d new Ingredient(ingredient, ingredients.get(ingredient),","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"jaredoong"},"content":"                    \"01/01/2023\");","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"jaredoong"},"content":"        if (this.get(recipeName) \u003d\u003d 1) {","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"jaredoong"},"content":"            this.remove(recipeName);","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"jaredoong"},"content":"            this.put(recipeName, this.get(recipeName) - 1);","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"gurmankalkat":5,"jaredoong":109}},{"path":"src/main/java/seedu/meal360/exceptions/IngredientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"public class IngredientNotFoundException extends Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"    public IngredientNotFoundException(String message) {","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"        super(message);","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"jaredoong":7}},{"path":"src/main/java/seedu/meal360/exceptions/InvalidRecipeNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"public class InvalidRecipeNameException extends Exception {","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"    public InvalidRecipeNameException(String message) {","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"        super(message);","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"jaredoong":8}},{"path":"src/main/java/seedu/meal360/exceptions/InvalidValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"public class InvalidValueException extends Exception {","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"    public InvalidValueException(String message) {","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"        super(message);","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"jaredoong":8}},{"path":"src/main/java/seedu/meal360/exceptions/NoRecipeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class NoRecipeException extends Exception {","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    public NoRecipeException(String message) {","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"        super(message);","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"JuneNita":7}},{"path":"src/main/java/seedu/meal360/exceptions/RecipeNotFoundInTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class RecipeNotFoundInTagException extends Exception{","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    public RecipeNotFoundInTagException(String message) {","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"        super(message);","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"JuneNita":7}},{"path":"src/main/java/seedu/meal360/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JuneNita"},"content":"package seedu.meal360.exceptions;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"JuneNita"},"content":"public class TagNotFoundException extends Exception {","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"JuneNita"},"content":"    public TagNotFoundException(String message) {","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"JuneNita"},"content":"        super(message);","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"JuneNita"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"JuneNita":7}},{"path":"src/main/java/seedu/meal360/storage/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.IngredientList;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.Recipe;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.RecipeList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.WeeklyPlan;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"public class Database {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"notbingsu"},"content":"    private static final String recipesDatabaseFilepath \u003d \".\" + System.getProperty(\"file.separator\") + \"database\"","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"notbingsu"},"content":"            + System.getProperty(\"file.separator\")","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"            + \"recipesDatabase.json\";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"notbingsu"},"content":"    private static final String weeklyPlanDatabaseFilepath \u003d \".\" + System.getProperty(\"file.separator\") + \"database\"","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"notbingsu"},"content":"            + System.getProperty(\"file.separator\")","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"            + \"weeklyPlanDatabase.json\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"notbingsu"},"content":"    private static final String userIngredientsDatabaseFilepath \u003d \".\" + System.getProperty(\"file.separator\")","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"notbingsu"},"content":"            + \"database\" + System.getProperty(","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"notbingsu"},"content":"                    \"file.separator\")","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"notbingsu"},"content":"            + \"userIngredientsDatabase.json\";","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"    JsonDatabaseHelper\u003cRecipeList\u003e recipeListJsonDatabaseHelper \u003d new JsonDatabaseHelper\u003c\u003e(","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"            recipesDatabaseFilepath, defaultRecipeList(), RecipeList.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"    JsonDatabaseHelper\u003cWeeklyPlan\u003e weeklyPlanJsonDatabaseHelper \u003d new JsonDatabaseHelper\u003c\u003e(","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"            weeklyPlanDatabaseFilepath, new WeeklyPlan(), WeeklyPlan.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    JsonDatabaseHelper\u003cIngredientList\u003e userIngredientsJsonDatabaseHelper \u003d new JsonDatabaseHelper\u003c\u003e(","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"            userIngredientsDatabaseFilepath, new IngredientList(), IngredientList.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"    public RecipeList loadRecipesDatabase() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"        return recipeListJsonDatabaseHelper.loadDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"    public void saveRecipesDatabase(RecipeList recipeList) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"        recipeListJsonDatabaseHelper.saveDatabase(recipeList);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"    public WeeklyPlan loadWeeklyPlanDatabase() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"        return weeklyPlanJsonDatabaseHelper.loadDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"    public void saveWeeklyPlanDatabase(WeeklyPlan weeklyPlan) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"        weeklyPlanJsonDatabaseHelper.saveDatabase(weeklyPlan);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"    public IngredientList loadUserIngredientsDatabase() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"        return userIngredientsJsonDatabaseHelper.loadDatabase();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"    public void saveIngredientsDatabase(IngredientList userIngredients) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"        userIngredientsJsonDatabaseHelper.saveDatabase(userIngredients);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"    public RecipeList defaultRecipeList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"        RecipeList defaultRecipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"chicken rice\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"                put(\"rice\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"                put(\"salt\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"                put(\"pepper\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"tomato fritters\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"                put(\"ripe mixed-colour cherry tomatoes \", 250);","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"                put(\"flat-leaf parsley\", 15);","lastModifiedDate":"2023-04-01"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"                put(\"plain flour\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"                put(\"eggs\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"                put(\"breadcrumbs\", 100);","lastModifiedDate":"2023-04-01"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"                put(\"vegetable oil\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"                put(\"feta cheese\", 30);","lastModifiedDate":"2023-04-01"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"chicken and mushroom pie\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken breast fillets\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"                put(\"mushrooms\", 250);","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"                put(\"onion\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"                put(\"plain flour\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"                put(\"butter\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"                put(\"milk\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"jaredoong"},"content":"                put(\"puff pastry\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"seafood paella\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"jaredoong"},"content":"                put(\"prawns\", 500);","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"jaredoong"},"content":"                put(\"mussels\", 500);","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"jaredoong"},"content":"                put(\"chorizo\", 100);","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"jaredoong"},"content":"                put(\"onion\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"                put(\"rice\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"jaredoong"},"content":"                put(\"cherry tomatoes\", 250);","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"jaredoong"},"content":"                put(\"vegetable oil\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken stock\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"                put(\"saffron\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":106,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"avocado toast\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jaredoong"},"content":"                put(\"avocado\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"jaredoong"},"content":"                put(\"bread\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"jaredoong"},"content":"                put(\"lemon\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"                put(\"salt\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":115,"author":{"gitId":"jaredoong"},"content":"                put(\"pepper\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"italian sausage orzo soup\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"jaredoong"},"content":"                put(\"italian sausage\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":122,"author":{"gitId":"jaredoong"},"content":"                put(\"onion\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":123,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":124,"author":{"gitId":"jaredoong"},"content":"                put(\"carrot\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":125,"author":{"gitId":"jaredoong"},"content":"                put(\"celery\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":126,"author":{"gitId":"jaredoong"},"content":"                put(\"dried oregano\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":127,"author":{"gitId":"jaredoong"},"content":"                put(\"dried basil\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":128,"author":{"gitId":"jaredoong"},"content":"                put(\"dried thyme\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"jaredoong"},"content":"                put(\"dried parsley\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"jaredoong"},"content":"                put(\"dried rosemary\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":131,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken stock\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":132,"author":{"gitId":"jaredoong"},"content":"                put(\"orzo\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"                put(\"parmesan cheese\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"chicken and mushroom pasta\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken breast fillets\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":140,"author":{"gitId":"jaredoong"},"content":"                put(\"mushrooms\", 250);","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"jaredoong"},"content":"                put(\"onion\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"jaredoong"},"content":"                put(\"plain flour\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"jaredoong"},"content":"                put(\"butter\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"jaredoong"},"content":"                put(\"milk\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":146,"author":{"gitId":"jaredoong"},"content":"                put(\"pasta\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":147,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"creamy hummus pasta\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"jaredoong"},"content":"                put(\"pasta\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":153,"author":{"gitId":"jaredoong"},"content":"                put(\"hummus\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"                put(\"lemon\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"jaredoong"},"content":"                put(\"salt\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":157,"author":{"gitId":"jaredoong"},"content":"                put(\"pepper\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"ground beef and potato casserole\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"jaredoong"},"content":"                put(\"ground beef\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"jaredoong"},"content":"                put(\"potato\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"jaredoong"},"content":"                put(\"onion\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"jaredoong"},"content":"                put(\"garlic cloves\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"jaredoong"},"content":"                put(\"tomato paste\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"jaredoong"},"content":"                put(\"tomato sauce\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"jaredoong"},"content":"                put(\"beef stock\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"jaredoong"},"content":"                put(\"cheddar cheese\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"jaredoong"},"content":"        defaultRecipeList.add(new Recipe(\"buffalo chicken mac \u0027n\u0027 cheese\", new HashMap\u003c\u003e() {","lastModifiedDate":"2023-04-01"},{"lineNumber":175,"author":{"gitId":"jaredoong"},"content":"            {","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"jaredoong"},"content":"                put(\"chicken breast fillets\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"jaredoong"},"content":"                put(\"macaroni\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"jaredoong"},"content":"                put(\"butter\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"jaredoong"},"content":"                put(\"flour\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"jaredoong"},"content":"                put(\"milk\", 2);","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"jaredoong"},"content":"                put(\"cheddar cheese\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"jaredoong"},"content":"                put(\"clue cheese\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"                put(\"hot sauce\", 1);","lastModifiedDate":"2023-04-01"},{"lineNumber":184,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"jaredoong"},"content":"        }));","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"jaredoong"},"content":"        return defaultRecipeList;","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"notbingsu":8,"jaredoong":181}},{"path":"src/main/java/seedu/meal360/storage/JsonDatabaseHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import java.io.File;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"public class JsonDatabaseHelper\u003cT\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"    private final String databaseFilepath;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"    private final T defaultObject;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"    private final Class\u003cT\u003e objectType;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"    private final Gson gson;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"    public JsonDatabaseHelper(String databaseFilepath, T defaultObject, Class\u003cT\u003e objectType) {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"        this.databaseFilepath \u003d databaseFilepath;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"        this.defaultObject \u003d defaultObject;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"        this.objectType \u003d objectType;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"        // Register the LocalDateTimeJsonAdapter and LocalDateJsonAdapter with Gson","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"        this.gson \u003d new GsonBuilder().registerTypeAdapter(LocalDateTime.class,","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"                        LocalDateTimeJsonAdapter.INSTANCE)","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"                .registerTypeAdapter(LocalDate.class, LocalDateJsonAdapter.INSTANCE).create();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"    public T loadDatabase() throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"        T database;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"        // Check if the JSON file exists and create one if it does not","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"        File file \u003d new File(databaseFilepath);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"            try {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"                // Create the parent directory if it does not exist","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"                File parentDir \u003d file.getParentFile();","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"                if (!parentDir.exists()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"                    parentDir.mkdirs();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"                file.createNewFile();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"                throw new IOException(\"Error creating database file.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"            // Return a default object if database file does not exist","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"            return defaultObject;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"        // Read the JSON data from the file if it already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"            // Read the JSON data from the file","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(databaseFilepath));","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"            database \u003d gson.fromJson(reader, objectType);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"            reader.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"            throw new FileNotFoundException(\"Unable to find database file.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"            throw new IOException(\"Error reading from database file.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"        // Ensure non-empty object is returned","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"        if (database \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"            return defaultObject;","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"            return database;","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"    public void saveDatabase(T dataObject) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"        Gson gson \u003d new Gson();","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"        // Write the data object to the JSON file","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"        FileWriter writer;","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"        writer \u003d new FileWriter(databaseFilepath);","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"        gson.toJson(dataObject, writer);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"        writer.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"jaredoong":82}},{"path":"src/main/java/seedu/meal360/storage/LocalDateJsonAdapter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"public final class LocalDateJsonAdapter implements JsonSerializer\u003cLocalDate\u003e, JsonDeserializer\u003cLocalDate\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"    public static final LocalDateJsonAdapter INSTANCE \u003d new LocalDateJsonAdapter();","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"    private LocalDateJsonAdapter() {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"    public LocalDate deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"            throws JsonParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"        if (!json.isJsonNull()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"            return LocalDate.parse(json.getAsString(), DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"        return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"    public JsonElement serialize(LocalDate src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"        if (src !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"            return new JsonPrimitive(src.format(DateTimeFormatter.ISO_LOCAL_DATE));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"        return JsonNull.INSTANCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"jaredoong":38}},{"path":"src/main/java/seedu/meal360/storage/LocalDateTimeJsonAdapter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"jaredoong"},"content":"public final class LocalDateTimeJsonAdapter implements JsonSerializer\u003cLocalDateTime\u003e,","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"        JsonDeserializer\u003cLocalDateTime\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"    public static final LocalDateTimeJsonAdapter INSTANCE \u003d new LocalDateTimeJsonAdapter();","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"jaredoong"},"content":"    private LocalDateTimeJsonAdapter() {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"    public LocalDateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"            throws JsonParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"        if (!json.isJsonNull()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"            return LocalDateTime.parse(json.getAsString(), DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"        return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"    public JsonElement serialize(LocalDateTime src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"        if (src !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"            return new JsonPrimitive(src.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"        return JsonNull.INSTANCE;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"jaredoong":39}},{"path":"src/test/java/seedu/meal360/Meal360Test.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jaredoong"},"content":"package seedu.meal360;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"jaredoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"jaredoong"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jaredoong"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jaredoong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jaredoong"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jaredoong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.IngredientNotFoundException;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.InvalidRecipeNameException;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.exceptions.InvalidValueException;","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.NoRecipeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.RecipeNotFoundInTagException;","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"JuneNita"},"content":"import seedu.meal360.exceptions.TagNotFoundException;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"jaredoong"},"content":"import seedu.meal360.storage.Database;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"jaredoong"},"content":"class Meal360Test {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jaredoong"},"content":"    private static RecipeList recipes \u003d new RecipeList();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jaredoong"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jaredoong"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jaredoong"},"content":"    private static final Database database \u003d new Database();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jaredoong"},"content":"    private static IngredientList userIngredients \u003d new IngredientList();","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"jaredoong"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jaredoong"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"jaredoong"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jaredoong"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jaredoong"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jaredoong"},"content":"    @AfterEach","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jaredoong"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jaredoong"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jaredoong"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jaredoong"},"content":"    public void setUpRecipes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jaredoong"},"content":"        // Adding of recipes","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e burgerIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jaredoong"},"content":"        burgerIngredients.put(\"buns\", 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jaredoong"},"content":"        burgerIngredients.put(\"meat patty\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jaredoong"},"content":"        burgerIngredients.put(\"lettuce\", 3);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jaredoong"},"content":"        Recipe burger \u003d new Recipe(\"burger\", burgerIngredients);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e pizzaIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jaredoong"},"content":"        pizzaIngredients.put(\"dough\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jaredoong"},"content":"        pizzaIngredients.put(\"tomato sauce\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jaredoong"},"content":"        pizzaIngredients.put(\"cheese\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jaredoong"},"content":"        pizzaIngredients.put(\"pepperoni\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jaredoong"},"content":"        Recipe pizza \u003d new Recipe(\"pizza\", pizzaIngredients);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e saladIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jaredoong"},"content":"        saladIngredients.put(\"lettuce\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jaredoong"},"content":"        saladIngredients.put(\"tomato\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jaredoong"},"content":"        saladIngredients.put(\"cucumber\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jaredoong"},"content":"        Recipe salad \u003d new Recipe(\"salad\", saladIngredients);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jaredoong"},"content":"        HashMap\u003cString, Integer\u003e chickenRiceIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"jaredoong"},"content":"        chickenRiceIngredients.put(\"rice\", 1);","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"jaredoong"},"content":"        chickenRiceIngredients.put(\"chicken\", 1);","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"jaredoong"},"content":"        Recipe chickenRice \u003d new Recipe(\"chicken rice\", chickenRiceIngredients);","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"jaredoong"},"content":"        recipes.addRecipe(burger);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jaredoong"},"content":"        recipes.addRecipe(pizza);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jaredoong"},"content":"        recipes.addRecipe(salad);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jaredoong"},"content":"        recipes.addRecipe(chickenRice);","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"jaredoong"},"content":"        // Adding of ingredients","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"jaredoong"},"content":"        Ingredient buns \u003d new Ingredient(\"buns\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"jaredoong"},"content":"        Ingredient meatPatty \u003d new Ingredient(\"meat patty\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"jaredoong"},"content":"        Ingredient lettuce \u003d new Ingredient(\"lettuce\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"jaredoong"},"content":"        Ingredient dough \u003d new Ingredient(\"dough\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"jaredoong"},"content":"        Ingredient tomatoSauce \u003d new Ingredient(\"tomato sauce\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"jaredoong"},"content":"        Ingredient cheese \u003d new Ingredient(\"cheese\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"jaredoong"},"content":"        Ingredient pepperoni \u003d new Ingredient(\"pepperoni\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"jaredoong"},"content":"        Ingredient tomato \u003d new Ingredient(\"tomato\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"jaredoong"},"content":"        Ingredient cucumber \u003d new Ingredient(\"cucumber\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"jaredoong"},"content":"        Ingredient rice \u003d new Ingredient(\"rice\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"jaredoong"},"content":"        Ingredient chicken \u003d new Ingredient(\"chicken\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"jaredoong"},"content":"        Ingredient peasandcorn \u003d new Ingredient(\"peas and corn\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(buns);","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(meatPatty);","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(lettuce);","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(dough);","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(tomatoSauce);","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(cheese);","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(pepperoni);","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(tomato);","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(cucumber);","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(rice);","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(chicken);","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"jaredoong"},"content":"        userIngredients.addIngredient(peasandcorn);","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"jaredoong"},"content":"    @AfterEach","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"jaredoong"},"content":"    public void tearDownRecipes() {","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"jaredoong"},"content":"        recipes \u003d new RecipeList();","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"jaredoong"},"content":"        userIngredients \u003d new IngredientList();","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"jaredoong"},"content":"    public void testViewRecipe() {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":117,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case","lastModifiedDate":"2023-04-02"},{"lineNumber":118,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"jaredoong"},"content":"            Recipe recipe \u003d parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"burger\", recipe.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jaredoong"},"content":"            assertEquals(2, (int) recipe.getIngredients().get(\"buns\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jaredoong"},"content":"            assertEquals(1, (int) recipe.getIngredients().get(\"meat patty\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jaredoong"},"content":"            assertEquals(3, (int) recipe.getIngredients().get(\"lettuce\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":127,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":129,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (invalid index)","lastModifiedDate":"2023-04-02"},{"lineNumber":131,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":132,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"jaredoong"},"content":"            parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":135,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":136,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":137,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe number. You entered 5, which is out of bounds.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":138,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":139,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":140,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (invalid index)","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":143,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view 0\";","lastModifiedDate":"2023-04-02"},{"lineNumber":144,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":145,"author":{"gitId":"jaredoong"},"content":"            parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":146,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":147,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":148,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe number. You entered 0, which is out of bounds.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":149,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":151,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":152,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (missing index)","lastModifiedDate":"2023-04-02"},{"lineNumber":153,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view\";","lastModifiedDate":"2023-04-02"},{"lineNumber":155,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":156,"author":{"gitId":"jaredoong"},"content":"            parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":157,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":158,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":159,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe number. You did not enter a recipe number.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":161,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":162,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (index is not a number)","lastModifiedDate":"2023-04-02"},{"lineNumber":164,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":165,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view a\";","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"jaredoong"},"content":"            parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":170,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe number. You entered a, which is not a valid number.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (index is negative number)","lastModifiedDate":"2023-04-02"},{"lineNumber":175,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":176,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"view -1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":177,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":178,"author":{"gitId":"jaredoong"},"content":"            parser.parseViewRecipe(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":179,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":180,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":181,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe number. You entered -1, which is out of bounds.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":182,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":183,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":184,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"gurmankalkat"},"content":"    //@@author gurmankalkat","lastModifiedDate":"2023-04-10"},{"lineNumber":187,"author":{"gitId":"gurmankalkat"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"gurmankalkat"},"content":"    public void testDeleteRecipe() {","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"gurmankalkat"},"content":"        HashMap\u003cString, Integer\u003e testIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"gurmankalkat"},"content":"        testIngredients.put(\"test ingredient\", 100);","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"gurmankalkat"},"content":"        // create a fake recipe","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"gurmankalkat"},"content":"        Recipe testR \u003d new Recipe(\"test recipe name\", testIngredients);","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"gurmankalkat"},"content":"        recipes.addRecipe(testR);","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"gurmankalkat"},"content":"        int oldRecipeListSize \u003d recipes.size();","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"gurmankalkat"},"content":"        // delete recipe","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"gurmankalkat"},"content":"        recipes.deleteRecipe(recipes.indexOf(testR));","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"gurmankalkat"},"content":"        int newRecipeListSize \u003d recipes.size();","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"gurmankalkat"},"content":"        // check if recipe list size is 1 less than before","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"gurmankalkat"},"content":"        assertEquals((oldRecipeListSize - 1), newRecipeListSize);","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":202,"author":{"gitId":"gurmankalkat"},"content":"        // No recipe inputted","lastModifiedDate":"2023-04-10"},{"lineNumber":203,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":204,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete\";","lastModifiedDate":"2023-04-10"},{"lineNumber":205,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":206,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":207,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":208,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":209,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(ArrayIndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":210,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range in the correct format.\",","lastModifiedDate":"2023-04-10"},{"lineNumber":211,"author":{"gitId":"gurmankalkat"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":212,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":213,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":214,"author":{"gitId":"gurmankalkat"},"content":"        // Recipe in incorrect format","lastModifiedDate":"2023-04-10"},{"lineNumber":215,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":216,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete pizza\";","lastModifiedDate":"2023-04-10"},{"lineNumber":217,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":218,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":219,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":220,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":221,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(ArrayIndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":222,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range in the correct format.\",","lastModifiedDate":"2023-04-10"},{"lineNumber":223,"author":{"gitId":"gurmankalkat"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":224,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":225,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":226,"author":{"gitId":"gurmankalkat"},"content":"        // Index out of bounds","lastModifiedDate":"2023-04-10"},{"lineNumber":227,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":228,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete 100000\";","lastModifiedDate":"2023-04-10"},{"lineNumber":229,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":230,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":231,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":232,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":233,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(IndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":234,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range.\", e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":235,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":236,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":237,"author":{"gitId":"gurmankalkat"},"content":"        // Index out of bounds","lastModifiedDate":"2023-04-10"},{"lineNumber":238,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":239,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete -5\";","lastModifiedDate":"2023-04-10"},{"lineNumber":240,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":241,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":242,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":243,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":244,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(IndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":245,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range.\", e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":246,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":247,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":248,"author":{"gitId":"gurmankalkat"},"content":"        // Range invalid","lastModifiedDate":"2023-04-10"},{"lineNumber":249,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":250,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete 0-2000000\";","lastModifiedDate":"2023-04-10"},{"lineNumber":251,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":252,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":253,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":254,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":255,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(IndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":256,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range.\", e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":257,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":258,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":259,"author":{"gitId":"gurmankalkat"},"content":"        // Range invalid","lastModifiedDate":"2023-04-10"},{"lineNumber":260,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":261,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete 1---------\";","lastModifiedDate":"2023-04-10"},{"lineNumber":262,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":263,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":264,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":265,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":266,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(ArrayIndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":267,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range in the correct format.\",","lastModifiedDate":"2023-04-10"},{"lineNumber":268,"author":{"gitId":"gurmankalkat"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":269,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":270,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":271,"author":{"gitId":"gurmankalkat"},"content":"        // Range invalid","lastModifiedDate":"2023-04-10"},{"lineNumber":272,"author":{"gitId":"gurmankalkat"},"content":"        HashMap\u003cString, Integer\u003e testIngredients1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":273,"author":{"gitId":"gurmankalkat"},"content":"        testIngredients1.put(\"test ingredient\", 100);","lastModifiedDate":"2023-04-10"},{"lineNumber":274,"author":{"gitId":"gurmankalkat"},"content":"        // create a fake recipe","lastModifiedDate":"2023-04-10"},{"lineNumber":275,"author":{"gitId":"gurmankalkat"},"content":"        Recipe testR1 \u003d new Recipe(\"test recipe name\", testIngredients);","lastModifiedDate":"2023-04-10"},{"lineNumber":276,"author":{"gitId":"gurmankalkat"},"content":"        recipes.addRecipe(testR1);","lastModifiedDate":"2023-04-10"},{"lineNumber":277,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":278,"author":{"gitId":"gurmankalkat"},"content":"        HashMap\u003cString, Integer\u003e testIngredients2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":279,"author":{"gitId":"gurmankalkat"},"content":"        testIngredients2.put(\"test ingredient\", 100);","lastModifiedDate":"2023-04-10"},{"lineNumber":280,"author":{"gitId":"gurmankalkat"},"content":"        // create a fake recipe","lastModifiedDate":"2023-04-10"},{"lineNumber":281,"author":{"gitId":"gurmankalkat"},"content":"        Recipe testR2 \u003d new Recipe(\"test recipe name\", testIngredients);","lastModifiedDate":"2023-04-10"},{"lineNumber":282,"author":{"gitId":"gurmankalkat"},"content":"        recipes.addRecipe(testR2);","lastModifiedDate":"2023-04-10"},{"lineNumber":283,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":284,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete 2-1\";","lastModifiedDate":"2023-04-10"},{"lineNumber":285,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":286,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":287,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":288,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":289,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(IndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":290,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range.\", e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":291,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":292,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":293,"author":{"gitId":"gurmankalkat"},"content":"        // Delete all","lastModifiedDate":"2023-04-10"},{"lineNumber":294,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":295,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete /r all\";","lastModifiedDate":"2023-04-10"},{"lineNumber":296,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":297,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":298,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(0, recipes.size());","lastModifiedDate":"2023-04-10"},{"lineNumber":299,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":300,"author":{"gitId":"gurmankalkat"},"content":"            assert false;","lastModifiedDate":"2023-04-10"},{"lineNumber":301,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":302,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":303,"author":{"gitId":"gurmankalkat"},"content":"        // Recipe does not exist in recipe list)","lastModifiedDate":"2023-04-10"},{"lineNumber":304,"author":{"gitId":"gurmankalkat"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":305,"author":{"gitId":"gurmankalkat"},"content":"            String userInput \u003d \"delete /r pizza\";","lastModifiedDate":"2023-04-10"},{"lineNumber":306,"author":{"gitId":"gurmankalkat"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":307,"author":{"gitId":"gurmankalkat"},"content":"            parser.parseDeleteRecipe(command, recipes);","lastModifiedDate":"2023-04-10"},{"lineNumber":308,"author":{"gitId":"gurmankalkat"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-10"},{"lineNumber":309,"author":{"gitId":"gurmankalkat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":310,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(ArrayIndexOutOfBoundsException.class, e.getClass());","lastModifiedDate":"2023-04-10"},{"lineNumber":311,"author":{"gitId":"gurmankalkat"},"content":"            assertEquals(\"Please enter a valid recipe number, name, or range in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":312,"author":{"gitId":"gurmankalkat"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":313,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":314,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"jaredoong"},"content":"    public void testAddWeeklyPlan() {","lastModifiedDate":"2023-04-02"},{"lineNumber":318,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-14"},{"lineNumber":319,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case","lastModifiedDate":"2023-04-02"},{"lineNumber":321,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":322,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":323,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":324,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":325,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"jaredoong"},"content":"            assertEquals(1, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":329,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":330,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":331,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (case-insensitive)","lastModifiedDate":"2023-04-03"},{"lineNumber":333,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":334,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add BURGER 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":335,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":336,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":337,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":339,"author":{"gitId":"jaredoong"},"content":"            assertEquals(2, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":342,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":343,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":344,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (name with space)","lastModifiedDate":"2023-04-03"},{"lineNumber":345,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":346,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add chicken rice 1\";","lastModifiedDate":"2023-04-03"},{"lineNumber":347,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":348,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-03"},{"lineNumber":349,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-03"},{"lineNumber":350,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":351,"author":{"gitId":"jaredoong"},"content":"            assertEquals(1, (int) weeklyPlan.get(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":352,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":353,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":354,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":355,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":356,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe does not exist in recipe list)","lastModifiedDate":"2023-04-02"},{"lineNumber":357,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":358,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add chicken 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":359,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":360,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":361,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":362,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":363,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":364,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidRecipeNameException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":365,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please indicate a valid recipe name.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":366,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":367,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is 0)","lastModifiedDate":"2023-04-02"},{"lineNumber":369,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":370,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger 0\";","lastModifiedDate":"2023-04-02"},{"lineNumber":371,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":372,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":373,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":374,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":375,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":376,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":377,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":378,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":379,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":380,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is negative)","lastModifiedDate":"2023-04-02"},{"lineNumber":381,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":382,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger -1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":383,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":384,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":385,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":386,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":387,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":388,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":389,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":390,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":391,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":392,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is greater than 1000)","lastModifiedDate":"2023-04-02"},{"lineNumber":393,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger 1001\";","lastModifiedDate":"2023-04-02"},{"lineNumber":395,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":396,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":397,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":398,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":399,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":400,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":401,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":402,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":403,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":404,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not a number)","lastModifiedDate":"2023-04-02"},{"lineNumber":405,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":406,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger a\";","lastModifiedDate":"2023-04-02"},{"lineNumber":407,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":408,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":409,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":410,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":411,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":412,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":413,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":414,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":415,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":416,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":417,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":418,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add\";","lastModifiedDate":"2023-04-02"},{"lineNumber":419,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":420,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":421,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":422,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":423,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":424,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":425,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":426,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":427,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":428,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":429,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":430,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger\";","lastModifiedDate":"2023-04-02"},{"lineNumber":431,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":432,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":433,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":434,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":435,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":436,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":437,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":438,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":439,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity specified is not an integer)","lastModifiedDate":"2023-04-02"},{"lineNumber":441,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":442,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger 1.5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":443,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":444,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":445,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":446,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":447,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":448,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":449,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":450,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":451,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":452,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity specified causes integer overflow)","lastModifiedDate":"2023-04-02"},{"lineNumber":453,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":454,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /add burger 21474836480000000000\";","lastModifiedDate":"2023-04-02"},{"lineNumber":455,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":456,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":457,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":458,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":459,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":460,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":461,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":462,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":463,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":464,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":465,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":466,"author":{"gitId":"jaredoong"},"content":"    public void testAddMultiWeeklyPlan() {","lastModifiedDate":"2023-04-02"},{"lineNumber":467,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":468,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":469,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case","lastModifiedDate":"2023-04-02"},{"lineNumber":470,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":471,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":472,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":473,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":474,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-03-23"},{"lineNumber":475,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":476,"author":{"gitId":"jaredoong"},"content":"            assertEquals(1, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":477,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":478,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":479,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":480,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":481,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (adding multiple recipes)","lastModifiedDate":"2023-04-02"},{"lineNumber":482,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":483,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 1 /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":484,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":485,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":486,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":487,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":488,"author":{"gitId":"jaredoong"},"content":"            assertEquals(2, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":489,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"pizza\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":490,"author":{"gitId":"jaredoong"},"content":"            assertEquals(5, (int) weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":492,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":493,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":494,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"jaredoong"},"content":"        // Testing case where same recipe name is specified twice","lastModifiedDate":"2023-04-02"},{"lineNumber":496,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":497,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 1 /r burger /q 20\";","lastModifiedDate":"2023-04-02"},{"lineNumber":498,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":499,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":500,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-01"},{"lineNumber":501,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":502,"author":{"gitId":"jaredoong"},"content":"            assertEquals(22, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":504,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-02"},{"lineNumber":505,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":506,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":507,"author":{"gitId":"jaredoong"},"content":"        // Testing case where recipe name has space","lastModifiedDate":"2023-04-03"},{"lineNumber":508,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":509,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 1 /r chicken rice /q 20\";","lastModifiedDate":"2023-04-03"},{"lineNumber":510,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":511,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-03"},{"lineNumber":512,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-03"},{"lineNumber":513,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"burger\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":514,"author":{"gitId":"jaredoong"},"content":"            assertEquals(23, (int) weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":515,"author":{"gitId":"jaredoong"},"content":"            assertTrue(weeklyPlan.containsKey(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":516,"author":{"gitId":"jaredoong"},"content":"            assertEquals(20, (int) weeklyPlan.get(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":517,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":518,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":519,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":520,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":521,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is negative)","lastModifiedDate":"2023-04-02"},{"lineNumber":522,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":523,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q -1 /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":524,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":525,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":526,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-01"},{"lineNumber":527,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":528,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":529,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":530,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":531,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":532,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":533,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":534,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is greater than 1000)","lastModifiedDate":"2023-04-02"},{"lineNumber":535,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":536,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 1001 /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":537,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":538,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":539,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":540,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":541,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":542,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":543,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":544,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":545,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":546,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":547,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not a number)","lastModifiedDate":"2023-04-02"},{"lineNumber":548,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":549,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q a /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":550,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":551,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":552,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":553,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":554,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":555,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":556,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":557,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":558,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":559,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":560,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not in the recipe list)","lastModifiedDate":"2023-04-02"},{"lineNumber":561,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":562,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r randomname /q 1 /r burger /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":563,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":564,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":565,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":566,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":567,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":568,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidRecipeNameException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":569,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please indicate a valid recipe name.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":570,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":571,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":572,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":573,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":574,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /q 1 /r burger /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":575,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":576,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":577,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":578,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":579,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":580,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":581,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":582,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":583,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":584,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":585,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":586,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":587,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":588,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":589,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":590,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":591,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":592,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":593,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":594,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":595,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":596,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity given results in integer overflow)","lastModifiedDate":"2023-04-02"},{"lineNumber":597,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":598,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multiadd /r burger /q 10000000000000000000000 /r pizza /q 5\";","lastModifiedDate":"2023-04-02"},{"lineNumber":599,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":600,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":601,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.addPlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":602,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach this line","lastModifiedDate":"2023-04-02"},{"lineNumber":603,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":604,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":605,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":606,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":607,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":608,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":609,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":610,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":611,"author":{"gitId":"jaredoong"},"content":"    public void testDeleteWeeklyPlan() {","lastModifiedDate":"2023-03-14"},{"lineNumber":612,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-14"},{"lineNumber":613,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"salad\", 10);","lastModifiedDate":"2023-04-02"},{"lineNumber":614,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"pizza\", 30);","lastModifiedDate":"2023-04-02"},{"lineNumber":615,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"chicken rice\", 10);","lastModifiedDate":"2023-04-03"},{"lineNumber":616,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":617,"author":{"gitId":"jaredoong"},"content":"        // Testing positive cases","lastModifiedDate":"2023-04-02"},{"lineNumber":618,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":619,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":620,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":621,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":622,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":623,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, weeklyPlan.get(\"salad\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":624,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":625,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-02"},{"lineNumber":626,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":627,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":628,"author":{"gitId":"jaredoong"},"content":"        // Testing case-insensitive","lastModifiedDate":"2023-04-02"},{"lineNumber":629,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":630,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete Pizza 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":631,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":632,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":633,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":634,"author":{"gitId":"jaredoong"},"content":"            assertEquals(29, weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":635,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":636,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-02"},{"lineNumber":637,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":638,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":639,"author":{"gitId":"jaredoong"},"content":"        // Testing case where recipe name has space","lastModifiedDate":"2023-04-03"},{"lineNumber":640,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":641,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete chicken rice 1\";","lastModifiedDate":"2023-04-03"},{"lineNumber":642,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":643,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-03"},{"lineNumber":644,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-03"},{"lineNumber":645,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, weeklyPlan.get(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":646,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":647,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-03"},{"lineNumber":648,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":649,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":650,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe exist in recipe list but not in weekly plan)","lastModifiedDate":"2023-04-02"},{"lineNumber":651,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":652,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete burger 20\";","lastModifiedDate":"2023-04-02"},{"lineNumber":653,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":654,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":655,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":656,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":657,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":658,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":659,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Recipe does not exist in weekly plan!\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":660,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":661,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":662,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe does not exist in recipe list)","lastModifiedDate":"2023-04-02"},{"lineNumber":663,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":664,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete unknown 1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":665,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":666,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":667,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":668,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":669,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":670,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidRecipeNameException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":671,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please indicate a valid recipe name.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":672,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":673,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":674,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is 0)","lastModifiedDate":"2023-04-02"},{"lineNumber":675,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":676,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad 0\";","lastModifiedDate":"2023-04-02"},{"lineNumber":677,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":678,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":679,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":680,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":681,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":682,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":683,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":684,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":685,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":686,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is greater than 1000)","lastModifiedDate":"2023-04-02"},{"lineNumber":687,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":688,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad 1001\";","lastModifiedDate":"2023-04-02"},{"lineNumber":689,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":690,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":691,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":692,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":693,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":694,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":695,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":696,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":697,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":698,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is negative)","lastModifiedDate":"2023-04-02"},{"lineNumber":699,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":700,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad -1\";","lastModifiedDate":"2023-04-02"},{"lineNumber":701,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":702,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":703,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":704,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":705,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":706,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":707,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":708,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":709,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":710,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not a number)","lastModifiedDate":"2023-04-02"},{"lineNumber":711,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":712,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad one\";","lastModifiedDate":"2023-04-02"},{"lineNumber":713,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":714,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":715,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":716,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":717,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":718,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":719,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":720,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":721,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":722,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":723,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":724,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad\";","lastModifiedDate":"2023-04-02"},{"lineNumber":725,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":726,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":727,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":728,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":729,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":730,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":731,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":732,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":733,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":734,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":735,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":736,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete\";","lastModifiedDate":"2023-04-02"},{"lineNumber":737,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":738,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":739,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":740,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":741,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":742,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":743,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":744,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":745,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":746,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity results in integer overflow)","lastModifiedDate":"2023-04-02"},{"lineNumber":747,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":748,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /delete salad 1000000000000000000000000000000000\";","lastModifiedDate":"2023-04-02"},{"lineNumber":749,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":750,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":751,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":752,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":753,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":754,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":755,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a number between 1 to 1000 for the quantity.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":756,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":757,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":758,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":759,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":760,"author":{"gitId":"jaredoong"},"content":"    public void testDeleteMultiWeeklyPlan() {","lastModifiedDate":"2023-04-02"},{"lineNumber":761,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":762,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"salad\", 10);","lastModifiedDate":"2023-04-02"},{"lineNumber":763,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"pizza\", 30);","lastModifiedDate":"2023-04-02"},{"lineNumber":764,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"burger\", 100);","lastModifiedDate":"2023-03-23"},{"lineNumber":765,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"chicken rice\", 50);","lastModifiedDate":"2023-04-03"},{"lineNumber":766,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":767,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case","lastModifiedDate":"2023-04-02"},{"lineNumber":768,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":769,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q 1 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":770,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":771,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":772,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":773,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, weeklyPlan.get(\"salad\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":774,"author":{"gitId":"jaredoong"},"content":"            assertEquals(28, weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":775,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":776,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-02"},{"lineNumber":777,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":778,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":779,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (case-insensitive)","lastModifiedDate":"2023-04-02"},{"lineNumber":780,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":781,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r SALAD /q 1 /r pIzZa /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":782,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":783,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":784,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-03-23"},{"lineNumber":785,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, weeklyPlan.get(\"salad\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":786,"author":{"gitId":"jaredoong"},"content":"            assertEquals(26, weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":787,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":788,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-02"},{"lineNumber":789,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":790,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":791,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (quantity given exceeds the current quantity)","lastModifiedDate":"2023-04-02"},{"lineNumber":792,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":793,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q 100 /r pizza /q 100\";","lastModifiedDate":"2023-04-02"},{"lineNumber":794,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":795,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":796,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-01"},{"lineNumber":797,"author":{"gitId":"jaredoong"},"content":"            assertNull(weeklyPlan.get(\"salad\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":798,"author":{"gitId":"jaredoong"},"content":"            assertNull(weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-02"},{"lineNumber":799,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":800,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-02"},{"lineNumber":801,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":802,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":803,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (recipe name has space)","lastModifiedDate":"2023-04-03"},{"lineNumber":804,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":805,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r chicken rice /q 1\";","lastModifiedDate":"2023-04-03"},{"lineNumber":806,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":807,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-03"},{"lineNumber":808,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-03"},{"lineNumber":809,"author":{"gitId":"jaredoong"},"content":"            assertEquals(49, weeklyPlan.get(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":810,"author":{"gitId":"jaredoong"},"content":"        } catch (InvalidRecipeNameException | InvalidValueException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":811,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to throw any exception here","lastModifiedDate":"2023-04-03"},{"lineNumber":812,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":813,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":814,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":815,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":816,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /q 1 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":817,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":818,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":819,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-01"},{"lineNumber":820,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":821,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":822,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":823,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":824,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":825,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":826,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not specified)","lastModifiedDate":"2023-04-02"},{"lineNumber":827,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":828,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":829,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":830,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":831,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":832,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":833,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":834,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":835,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter the command in the correct format.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":836,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":837,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":838,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is not a number)","lastModifiedDate":"2023-04-02"},{"lineNumber":839,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":840,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q one /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":841,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":842,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":843,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":844,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":845,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":846,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":847,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":848,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":849,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":850,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":851,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity results in integer overflow)","lastModifiedDate":"2023-04-02"},{"lineNumber":852,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":853,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q 100000000000000000000000000 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":854,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":855,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":856,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":857,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":858,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":859,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":860,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":861,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":862,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":863,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":864,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is negative)","lastModifiedDate":"2023-04-02"},{"lineNumber":865,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":866,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q -1 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":867,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":868,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":869,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":870,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":871,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":872,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":873,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":874,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":875,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":876,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":877,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is 0)","lastModifiedDate":"2023-04-02"},{"lineNumber":878,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":879,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q 0 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":880,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":881,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":882,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":883,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":884,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":885,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":886,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":887,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":888,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":889,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":890,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (quantity is greater than 1000)","lastModifiedDate":"2023-04-02"},{"lineNumber":891,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":892,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r salad /q 1001 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":893,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":894,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":895,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":896,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":897,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":898,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":899,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-02"},{"lineNumber":900,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":901,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":902,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":903,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe name is not in the weekly plan)","lastModifiedDate":"2023-04-02"},{"lineNumber":904,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":905,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /multidelete /r randomname /q 1 /r pizza /q 2\";","lastModifiedDate":"2023-04-02"},{"lineNumber":906,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-02"},{"lineNumber":907,"author":{"gitId":"jaredoong"},"content":"            WeeklyPlan recipeMap \u003d parser.parseWeeklyPlan(command, recipes);","lastModifiedDate":"2023-04-02"},{"lineNumber":908,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.deletePlans(recipeMap);","lastModifiedDate":"2023-04-02"},{"lineNumber":909,"author":{"gitId":"jaredoong"},"content":"            assert false; // Not supposed to reach here","lastModifiedDate":"2023-04-02"},{"lineNumber":910,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":911,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidRecipeNameException.class, e.getClass());","lastModifiedDate":"2023-04-02"},{"lineNumber":912,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please indicate a valid recipe name.\", e.getMessage());","lastModifiedDate":"2023-04-02"},{"lineNumber":913,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":914,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":915,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":916,"author":{"gitId":"gurmankalkat"},"content":"    //@@author gurmankalkat","lastModifiedDate":"2023-04-10"},{"lineNumber":917,"author":{"gitId":"gurmankalkat"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":918,"author":{"gitId":"gurmankalkat"},"content":"    public void testClearWeeklyPlan() {","lastModifiedDate":"2023-03-23"},{"lineNumber":919,"author":{"gitId":"gurmankalkat"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":920,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan.put(\"salad\", 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":921,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan.put(\"pizza\", 3);","lastModifiedDate":"2023-03-23"},{"lineNumber":922,"author":{"gitId":"gurmankalkat"},"content":"        // Testing clearing weekly plan","lastModifiedDate":"2023-03-23"},{"lineNumber":923,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan.clearPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":924,"author":{"gitId":"gurmankalkat"},"content":"        assertEquals(weeklyPlan.size(), 0);","lastModifiedDate":"2023-03-23"},{"lineNumber":925,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":926,"author":{"gitId":"gurmankalkat"},"content":"        // weekly plan of size 0","lastModifiedDate":"2023-04-10"},{"lineNumber":927,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-04-10"},{"lineNumber":928,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan.clearPlan();","lastModifiedDate":"2023-04-10"},{"lineNumber":929,"author":{"gitId":"gurmankalkat"},"content":"        assertEquals(weeklyPlan.size(), 0);","lastModifiedDate":"2023-04-10"},{"lineNumber":930,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":931,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":932,"author":{"gitId":"gurmankalkat"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":933,"author":{"gitId":"gurmankalkat"},"content":"    public void testViewWeeklyIngredients() {","lastModifiedDate":"2023-04-03"},{"lineNumber":934,"author":{"gitId":"gurmankalkat"},"content":"        HashMap\u003cString, Integer\u003e pastaIngredients \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":935,"author":{"gitId":"gurmankalkat"},"content":"        pastaIngredients.put(\"penne\", 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":936,"author":{"gitId":"gurmankalkat"},"content":"        Recipe pasta \u003d new Recipe(\"pasta\", pastaIngredients);","lastModifiedDate":"2023-03-23"},{"lineNumber":937,"author":{"gitId":"gurmankalkat"},"content":"        recipes.add(pasta);","lastModifiedDate":"2023-03-23"},{"lineNumber":938,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":939,"author":{"gitId":"gurmankalkat"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-23"},{"lineNumber":940,"author":{"gitId":"gurmankalkat"},"content":"        weeklyPlan.put(\"pasta\", 1);","lastModifiedDate":"2023-03-23"},{"lineNumber":941,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":942,"author":{"gitId":"gurmankalkat"},"content":"        ui.printWeeklyIngredients(weeklyPlan, recipes);","lastModifiedDate":"2023-03-23"},{"lineNumber":943,"author":{"gitId":"gurmankalkat"},"content":"        assertEquals(ui.formatMessage(\"Here are your weekly ingredients:\") + System.lineSeparator()","lastModifiedDate":"2023-03-23"},{"lineNumber":944,"author":{"gitId":"gurmankalkat"},"content":"                + ui.formatMessage(\"penne (1)\"), outContent.toString().trim());","lastModifiedDate":"2023-03-23"},{"lineNumber":945,"author":{"gitId":"gurmankalkat"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":946,"author":{"gitId":"gurmankalkat"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":947,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-07"},{"lineNumber":948,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":949,"author":{"gitId":"jaredoong"},"content":"    public void testViewEmptyWeeklyPlan() {","lastModifiedDate":"2023-03-14"},{"lineNumber":950,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-14"},{"lineNumber":951,"author":{"gitId":"jaredoong"},"content":"        ui.printWeeklyPlan(weeklyPlan);","lastModifiedDate":"2023-03-14"},{"lineNumber":952,"author":{"gitId":"jaredoong"},"content":"        assertEquals(ui.formatMessage(\"Your weekly plan is empty!\"), outContent.toString().trim());","lastModifiedDate":"2023-03-14"},{"lineNumber":953,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":954,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":955,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":956,"author":{"gitId":"jaredoong"},"content":"    public void testViewNonEmptyWeeklyPlan() {","lastModifiedDate":"2023-03-14"},{"lineNumber":957,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-03-14"},{"lineNumber":958,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"salad\", 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":959,"author":{"gitId":"jaredoong"},"content":"        ui.printWeeklyPlan(weeklyPlan);","lastModifiedDate":"2023-03-14"},{"lineNumber":960,"author":{"gitId":"jaredoong"},"content":"        assertEquals(","lastModifiedDate":"2023-04-08"},{"lineNumber":961,"author":{"gitId":"jaredoong"},"content":"                ui.formatMessage(\"Here is your weekly plan:\") + System.lineSeparator() + ui.formatMessage(","lastModifiedDate":"2023-04-08"},{"lineNumber":962,"author":{"gitId":"jaredoong"},"content":"                        \"salad x1\"), outContent.toString().trim());","lastModifiedDate":"2023-03-14"},{"lineNumber":963,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":964,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":965,"author":{"gitId":"JuneNita"},"content":"    //@@author junenita","lastModifiedDate":"2023-04-10"},{"lineNumber":966,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":967,"author":{"gitId":"JuneNita"},"content":"    public void testListRecipe() {","lastModifiedDate":"2023-03-13"},{"lineNumber":968,"author":{"gitId":"JuneNita"},"content":"        RecipeList recipeListToPrint;","lastModifiedDate":"2023-03-13"},{"lineNumber":969,"author":{"gitId":"JuneNita"},"content":"        String[] inputs;","lastModifiedDate":"2023-03-16"},{"lineNumber":970,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":971,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":972,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\"};","lastModifiedDate":"2023-03-16"},{"lineNumber":973,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-16"},{"lineNumber":974,"author":{"gitId":"JuneNita"},"content":"            assertEquals(4, recipeListToPrint.size());","lastModifiedDate":"2023-04-03"},{"lineNumber":975,"author":{"gitId":"JuneNita"},"content":"            assertEquals(3, recipeListToPrint.get(0).getNumOfIngredients());","lastModifiedDate":"2023-03-14"},{"lineNumber":976,"author":{"gitId":"JuneNita"},"content":"            assertEquals(4, recipeListToPrint.get(1).getNumOfIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":977,"author":{"gitId":"JuneNita"},"content":"            assertEquals(3, recipeListToPrint.get(2).getNumOfIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":978,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":979,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"tomato\", \"sauce\"};","lastModifiedDate":"2023-03-16"},{"lineNumber":980,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-16"},{"lineNumber":981,"author":{"gitId":"JuneNita"},"content":"            assertEquals(1, recipeListToPrint.size());","lastModifiedDate":"2023-03-16"},{"lineNumber":982,"author":{"gitId":"JuneNita"},"content":"            assertEquals(4, recipeListToPrint.get(0).getNumOfIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":983,"author":{"gitId":"JuneNita"},"content":"            assertEquals(\"pizza\", recipeListToPrint.get(0).getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":984,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":985,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"salad\", \"\u0026\u0026\", \"tomato\"};","lastModifiedDate":"2023-03-29"},{"lineNumber":986,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-16"},{"lineNumber":987,"author":{"gitId":"JuneNita"},"content":"            assertEquals(1, recipeListToPrint.size());","lastModifiedDate":"2023-03-13"},{"lineNumber":988,"author":{"gitId":"JuneNita"},"content":"            assertEquals(3, recipeListToPrint.get(0).getNumOfIngredients());","lastModifiedDate":"2023-03-16"},{"lineNumber":989,"author":{"gitId":"JuneNita"},"content":"            assertEquals(\"salad\", recipeListToPrint.get(0).getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":990,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":991,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"salad\", \"\u0026\u0026\", \"pizza\"};","lastModifiedDate":"2023-03-29"},{"lineNumber":992,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-16"},{"lineNumber":993,"author":{"gitId":"JuneNita"},"content":"            assertEquals(0, recipeListToPrint.size());","lastModifiedDate":"2023-03-14"},{"lineNumber":994,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":995,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":996,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":997,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":998,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":999,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":1000,"author":{"gitId":"JuneNita"},"content":"    public void testListTagAndAddTag() {","lastModifiedDate":"2023-03-30"},{"lineNumber":1001,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1002,"author":{"gitId":"JuneNita"},"content":"            RecipeList recipeListToPrint;","lastModifiedDate":"2023-03-30"},{"lineNumber":1003,"author":{"gitId":"JuneNita"},"content":"            String[] inputs;","lastModifiedDate":"2023-03-30"},{"lineNumber":1004,"author":{"gitId":"JuneNita"},"content":"            // check add tag (1)","lastModifiedDate":"2023-04-07"},{"lineNumber":1005,"author":{"gitId":"JuneNita"},"content":"            String[] addTagInputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003c\u003c\", \"salad\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1006,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1007,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1008,"author":{"gitId":"JuneNita"},"content":"            // check list tag (1)","lastModifiedDate":"2023-04-07"},{"lineNumber":1009,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"/t\", \"breakfast\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1010,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1011,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.size(), 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":1012,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.get(0).getName(), \"salad\");","lastModifiedDate":"2023-03-30"},{"lineNumber":1013,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1014,"author":{"gitId":"JuneNita"},"content":"            // add tag (2)","lastModifiedDate":"2023-04-07"},{"lineNumber":1015,"author":{"gitId":"JuneNita"},"content":"            addTagInputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003c\u003c\", \"pizza\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1016,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1017,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1018,"author":{"gitId":"JuneNita"},"content":"            addTagInputs \u003d new String[]{\"tag\", \"western\", \"\u003c\u003c\", \"burger\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1019,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1020,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1021,"author":{"gitId":"JuneNita"},"content":"            // list tag (2)","lastModifiedDate":"2023-04-07"},{"lineNumber":1022,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"/t\", \"breakfast\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1023,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1024,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.size(), 2);","lastModifiedDate":"2023-03-30"},{"lineNumber":1025,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1026,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"/t\", \"breakfast\", \"\u0026\u0026\", \"western\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1027,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1028,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.size(), 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":1029,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1030,"author":{"gitId":"JuneNita"},"content":"            // add tag (3)","lastModifiedDate":"2023-04-07"},{"lineNumber":1031,"author":{"gitId":"JuneNita"},"content":"            addTagInputs \u003d new String[]{\"tag\", \"western\", \"\u003c\u003c\", \"pizza\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1032,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1033,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1034,"author":{"gitId":"JuneNita"},"content":"            // list tag (3)","lastModifiedDate":"2023-04-07"},{"lineNumber":1035,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"list\", \"/t\", \"breakfast\", \"\u0026\u0026\", \"western\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1036,"author":{"gitId":"JuneNita"},"content":"            recipeListToPrint \u003d parser.parseListRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1037,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.size(), 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":1038,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipeListToPrint.get(0).getName(), \"pizza\");","lastModifiedDate":"2023-03-30"},{"lineNumber":1039,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1040,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1041,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1042,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":1043,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1044,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":1045,"author":{"gitId":"JuneNita"},"content":"    public void testPrintAddTagMessage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":1046,"author":{"gitId":"JuneNita"},"content":"        String[] addTagInputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003c\u003c\", \"salad\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1047,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1048,"author":{"gitId":"JuneNita"},"content":"            String addTagReturnMessage \u003d parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-04-07"},{"lineNumber":1049,"author":{"gitId":"JuneNita"},"content":"            ui.printTagMessage(addTagReturnMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":1050,"author":{"gitId":"JuneNita"},"content":"            assertEquals(ui.formatMessage(\"You have successfully added the recipe(s) to \\\"breakfast\\\" tag.\"),","lastModifiedDate":"2023-04-07"},{"lineNumber":1051,"author":{"gitId":"JuneNita"},"content":"                    outContent.toString().trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":1052,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1053,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1054,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1055,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":1056,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1057,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":1058,"author":{"gitId":"JuneNita"},"content":"    public void testPrintRemoveTagMessage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":1059,"author":{"gitId":"JuneNita"},"content":"        String[] addTagInputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003c\u003c\", \"salad\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1060,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1061,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(addTagInputs, recipes);","lastModifiedDate":"2023-04-07"},{"lineNumber":1062,"author":{"gitId":"JuneNita"},"content":"            String[] removeTagInputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003e\u003e\", \"salad\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1063,"author":{"gitId":"JuneNita"},"content":"            String removeTagReturnMessage \u003d parser.parseTagRecipe(removeTagInputs, recipes);","lastModifiedDate":"2023-04-07"},{"lineNumber":1064,"author":{"gitId":"JuneNita"},"content":"            ui.printTagMessage(removeTagReturnMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":1065,"author":{"gitId":"JuneNita"},"content":"            assertEquals(","lastModifiedDate":"2023-04-08"},{"lineNumber":1066,"author":{"gitId":"JuneNita"},"content":"                    ui.formatMessage(\"You have successfully removed the recipe(s) from \\\"breakfast\\\" tag.\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":1067,"author":{"gitId":"JuneNita"},"content":"                    outContent.toString().trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":1068,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1069,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1070,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1071,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1072,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":1073,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1074,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":1075,"author":{"gitId":"JuneNita"},"content":"    public void testListTagException() {","lastModifiedDate":"2023-03-30"},{"lineNumber":1076,"author":{"gitId":"JuneNita"},"content":"        String[] inputs;","lastModifiedDate":"2023-03-30"},{"lineNumber":1077,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1078,"author":{"gitId":"JuneNita"},"content":"        //check exception","lastModifiedDate":"2023-03-30"},{"lineNumber":1079,"author":{"gitId":"JuneNita"},"content":"        String[] noArgInputs \u003d new String[]{\"list\", \"/t\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1080,"author":{"gitId":"JuneNita"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e parser.parseListRecipe(noArgInputs, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1081,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1082,"author":{"gitId":"JuneNita"},"content":"        String[] notFoundTagInputs1 \u003d new String[]{\"list\", \"/t\", \"/t\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1083,"author":{"gitId":"JuneNita"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e parser.parseListRecipe(notFoundTagInputs1, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1084,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1085,"author":{"gitId":"JuneNita"},"content":"        String[] notFoundTagInputs2 \u003d new String[]{\"list\", \"/t\", \"phone\", \"\u0026\u0026\", \"computer\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1086,"author":{"gitId":"JuneNita"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e parser.parseListRecipe(notFoundTagInputs2, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1087,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1088,"author":{"gitId":"JuneNita"},"content":"        String[] beforeAddTagInputs \u003d new String[]{\"list\", \"/t\", \"breakfast\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1089,"author":{"gitId":"JuneNita"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e parser.parseListRecipe(beforeAddTagInputs, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1090,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1091,"author":{"gitId":"JuneNita"},"content":"        // add tag for testing","lastModifiedDate":"2023-03-30"},{"lineNumber":1092,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1093,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003c\u003c\", \"salad\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1094,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1095,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"tag\", \"breakfast\", \"\u003e\u003e\", \"salad\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1096,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1097,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1098,"author":{"gitId":"JuneNita"},"content":"            String[] nothingInTagInputs \u003d new String[]{\"list\", \"/t\", \"breakfast\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1099,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1100,"author":{"gitId":"JuneNita"},"content":"            ui.listRecipe(parser.parseListRecipe(nothingInTagInputs, recipes));","lastModifiedDate":"2023-03-30"},{"lineNumber":1101,"author":{"gitId":"JuneNita"},"content":"            assertEquals(ui.formatMessage(\"There is nothing to list.\"), outContent.toString().trim());","lastModifiedDate":"2023-03-30"},{"lineNumber":1102,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1103,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1104,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1105,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":1106,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1107,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":1108,"author":{"gitId":"JuneNita"},"content":"    public void testRemoveTagAndAddTag() {","lastModifiedDate":"2023-03-30"},{"lineNumber":1109,"author":{"gitId":"JuneNita"},"content":"        String[] inputs;","lastModifiedDate":"2023-03-30"},{"lineNumber":1110,"author":{"gitId":"JuneNita"},"content":"        Recipe invalidRecipe \u003d new Recipe(\"invalid Recipe\", new HashMap\u003c\u003e(1, 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":1111,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1112,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1113,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"tag\", \"western\", \"\u003c\u003c\", \"burger\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1114,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1115,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"tag\", \"western\", \"\u003c\u003c\", \"pizza\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1116,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1117,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1118,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1119,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1120,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1121,"author":{"gitId":"JuneNita"},"content":"        //exception","lastModifiedDate":"2023-03-30"},{"lineNumber":1122,"author":{"gitId":"JuneNita"},"content":"        assertThrows(RecipeNotFoundInTagException.class,","lastModifiedDate":"2023-04-08"},{"lineNumber":1123,"author":{"gitId":"JuneNita"},"content":"                () -\u003e recipes.removeRecipeFromTag(\"western\", invalidRecipe));","lastModifiedDate":"2023-04-01"},{"lineNumber":1124,"author":{"gitId":"JuneNita"},"content":"        String[] invalidTagInputs \u003d new String[]{\"tag\", \"random\", \"tag\", \"\u003e\u003e\", \"burger\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1125,"author":{"gitId":"JuneNita"},"content":"        assertThrows(TagNotFoundException.class, () -\u003e parser.parseTagRecipe(invalidTagInputs, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1126,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1127,"author":{"gitId":"JuneNita"},"content":"        String[] noRecipeInTagInputs \u003d new String[]{\"tag\", \"western\", \"\u003e\u003e\", \"random\"};","lastModifiedDate":"2023-04-08"},{"lineNumber":1128,"author":{"gitId":"JuneNita"},"content":"        assertThrows(NoRecipeException.class, () -\u003e parser.parseTagRecipe(noRecipeInTagInputs, recipes));","lastModifiedDate":"2023-04-08"},{"lineNumber":1129,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1130,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1131,"author":{"gitId":"JuneNita"},"content":"            inputs \u003d new String[]{\"tag\", \"western\", \"\u003e\u003e\", \"pizza\"};","lastModifiedDate":"2023-03-30"},{"lineNumber":1132,"author":{"gitId":"JuneNita"},"content":"            parser.parseTagRecipe(inputs, recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1133,"author":{"gitId":"JuneNita"},"content":"            assertEquals(recipes.tags.get(\"western\").size(), 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":1134,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1135,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1136,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1137,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":1138,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1139,"author":{"gitId":"JuneNita"},"content":"    @Test","lastModifiedDate":"2023-03-30"},{"lineNumber":1140,"author":{"gitId":"JuneNita"},"content":"    public void testRandomRecipe() {","lastModifiedDate":"2023-03-30"},{"lineNumber":1141,"author":{"gitId":"JuneNita"},"content":"        // no recipe in the lists","lastModifiedDate":"2023-03-30"},{"lineNumber":1142,"author":{"gitId":"JuneNita"},"content":"        RecipeList blankRecipeList \u003d new RecipeList();","lastModifiedDate":"2023-03-30"},{"lineNumber":1143,"author":{"gitId":"JuneNita"},"content":"        assertThrows(NoRecipeException.class, () -\u003e parser.parseRandomRecipe(blankRecipeList));","lastModifiedDate":"2023-04-08"},{"lineNumber":1144,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1145,"author":{"gitId":"JuneNita"},"content":"        // general case","lastModifiedDate":"2023-03-30"},{"lineNumber":1146,"author":{"gitId":"JuneNita"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":1147,"author":{"gitId":"JuneNita"},"content":"            Recipe randomRecipe1 \u003d parser.parseRandomRecipe(recipes);","lastModifiedDate":"2023-03-30"},{"lineNumber":1148,"author":{"gitId":"JuneNita"},"content":"            assertNotNull(randomRecipe1);","lastModifiedDate":"2023-03-30"},{"lineNumber":1149,"author":{"gitId":"JuneNita"},"content":"            assertNotNull(recipes.randomRecipe());","lastModifiedDate":"2023-03-30"},{"lineNumber":1150,"author":{"gitId":"JuneNita"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1151,"author":{"gitId":"JuneNita"},"content":"            assert false;","lastModifiedDate":"2023-04-08"},{"lineNumber":1152,"author":{"gitId":"JuneNita"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":1153,"author":{"gitId":"JuneNita"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":1154,"author":{"gitId":"JuneNita"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":1155,"author":{"gitId":"jaredoong"},"content":"    //@@author jaredoong","lastModifiedDate":"2023-04-07"},{"lineNumber":1156,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":1157,"author":{"gitId":"jaredoong"},"content":"    public void testWeeklyDone() {","lastModifiedDate":"2023-04-03"},{"lineNumber":1158,"author":{"gitId":"jaredoong"},"content":"        WeeklyPlan weeklyPlan \u003d new WeeklyPlan();","lastModifiedDate":"2023-04-03"},{"lineNumber":1159,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"pizza\", 100);","lastModifiedDate":"2023-04-03"},{"lineNumber":1160,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"burger\", 100);","lastModifiedDate":"2023-04-03"},{"lineNumber":1161,"author":{"gitId":"jaredoong"},"content":"        weeklyPlan.put(\"chicken rice\", 100);","lastModifiedDate":"2023-04-03"},{"lineNumber":1162,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1163,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case","lastModifiedDate":"2023-04-03"},{"lineNumber":1164,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1165,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done burger\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1166,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1167,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1168,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1169,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, userIngredients.findIngredientCount(\"buns\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1170,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"meat patty\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1171,"author":{"gitId":"jaredoong"},"content":"            assertEquals(7, userIngredients.findIngredientCount(\"lettuce\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1172,"author":{"gitId":"jaredoong"},"content":"            assertEquals(99, weeklyPlan.get(\"burger\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1173,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1174,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1175,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1176,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1177,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (case-insensitive)","lastModifiedDate":"2023-04-03"},{"lineNumber":1178,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1179,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done Pizza\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1180,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1181,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1182,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1183,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"dough\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1184,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"tomato sauce\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1185,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"cheese\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1186,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"pepperoni\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1187,"author":{"gitId":"jaredoong"},"content":"            assertEquals(99, weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1188,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1189,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1190,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1191,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1192,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (entire command case-insensitive)","lastModifiedDate":"2023-04-03"},{"lineNumber":1193,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1194,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"WEEKLY /DONE pizza\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1195,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1196,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1197,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1198,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, userIngredients.findIngredientCount(\"dough\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1199,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, userIngredients.findIngredientCount(\"tomato sauce\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1200,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, userIngredients.findIngredientCount(\"cheese\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1201,"author":{"gitId":"jaredoong"},"content":"            assertEquals(8, userIngredients.findIngredientCount(\"pepperoni\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1202,"author":{"gitId":"jaredoong"},"content":"            assertEquals(98, weeklyPlan.get(\"pizza\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1203,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1204,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1205,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1206,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1207,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (recipe name with space)","lastModifiedDate":"2023-04-03"},{"lineNumber":1208,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1209,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done chicken rice\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1210,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1211,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1212,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1213,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1214,"author":{"gitId":"jaredoong"},"content":"            assertEquals(9, userIngredients.findIngredientCount(\"rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1215,"author":{"gitId":"jaredoong"},"content":"            assertEquals(99, weeklyPlan.get(\"chicken rice\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1216,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1217,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1218,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1219,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1220,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe not found)","lastModifiedDate":"2023-04-03"},{"lineNumber":1221,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1222,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done pizzaandburgers\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1223,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1224,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1225,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1226,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1227,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1228,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidRecipeNameException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1229,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid recipe name.\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1230,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1231,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1232,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (recipe not in weekly plan)","lastModifiedDate":"2023-04-03"},{"lineNumber":1233,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1234,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done salad\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1235,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1236,"author":{"gitId":"jaredoong"},"content":"            String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1237,"author":{"gitId":"jaredoong"},"content":"            weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1238,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1239,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1240,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1241,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Recipe does not exist in weekly plan.\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1242,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1243,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1244,"author":{"gitId":"jaredoong"},"content":"        // Testing negative case (not enough ingredients)","lastModifiedDate":"2023-04-03"},{"lineNumber":1245,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1246,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"weekly /done burger\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1247,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1248,"author":{"gitId":"jaredoong"},"content":"            for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-08"},{"lineNumber":1249,"author":{"gitId":"jaredoong"},"content":"                String recipeToDelete \u003d parser.parseMarkDone(command, userIngredients, weeklyPlan, recipes);","lastModifiedDate":"2023-04-08"},{"lineNumber":1250,"author":{"gitId":"jaredoong"},"content":"                weeklyPlan.markDone(recipeToDelete, recipes, userIngredients);","lastModifiedDate":"2023-04-08"},{"lineNumber":1251,"author":{"gitId":"jaredoong"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":1252,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1253,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1254,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1255,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"You do not have enough ingredients to mark this recipe as done.\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1256,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1257,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1258,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1259,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":1260,"author":{"gitId":"jaredoong"},"content":"    public void testAddUserIngredients() {","lastModifiedDate":"2023-04-03"},{"lineNumber":1261,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1262,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (new ingredient)","lastModifiedDate":"2023-04-03"},{"lineNumber":1263,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1264,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n fish /c 10 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1265,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1266,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1267,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1268,"author":{"gitId":"jaredoong"},"content":"            assertEquals(10, userIngredients.findIngredientCount(\"fish\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1269,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1270,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1271,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1272,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1273,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (ingredient name already exists)","lastModifiedDate":"2023-04-03"},{"lineNumber":1274,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1275,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 10 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1276,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1277,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1278,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1279,"author":{"gitId":"jaredoong"},"content":"            assertEquals(20, userIngredients.findIngredientCount(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1280,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1281,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1282,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1283,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1284,"author":{"gitId":"jaredoong"},"content":"        //  Test positive case (case-insensitive)","lastModifiedDate":"2023-04-03"},{"lineNumber":1285,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1286,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n CHICKEN /c 10 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1287,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1288,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1289,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1290,"author":{"gitId":"jaredoong"},"content":"            assertEquals(30, userIngredients.findIngredientCount(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1291,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1292,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1293,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1294,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1295,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (expiry date gets updated)","lastModifiedDate":"2023-04-03"},{"lineNumber":1296,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1297,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 10 /d 21/10/2025\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1298,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1299,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1300,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1301,"author":{"gitId":"jaredoong"},"content":"            assertEquals(40, userIngredients.findIngredientCount(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1302,"author":{"gitId":"jaredoong"},"content":"            assertEquals(parser.parseDate(\"21/10/2025\"), userIngredients.findExpiryDate(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1303,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1304,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1305,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1306,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1307,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (ingredient name with spaces)","lastModifiedDate":"2023-04-03"},{"lineNumber":1308,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1309,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n peas and corn and carrot /c 10 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1310,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1311,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1312,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1313,"author":{"gitId":"jaredoong"},"content":"            assertEquals(10, userIngredients.findIngredientCount(\"peas and corn and carrot\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1314,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1315,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1316,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1317,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1318,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is 0)","lastModifiedDate":"2023-04-03"},{"lineNumber":1319,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1320,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 0 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1321,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1322,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1323,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1324,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1325,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1326,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1327,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1328,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1329,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1330,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1331,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is negative)","lastModifiedDate":"2023-04-03"},{"lineNumber":1332,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1333,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c -10 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1334,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1335,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1336,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1337,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1338,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1339,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1340,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1341,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1342,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1343,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1344,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is more than 1000)","lastModifiedDate":"2023-04-03"},{"lineNumber":1345,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1346,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 1001 /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1347,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1348,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1349,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1350,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1351,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1352,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1353,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1354,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1355,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1356,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1357,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is not a number)","lastModifiedDate":"2023-04-03"},{"lineNumber":1358,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1359,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c abc /d 10/10/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1360,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1361,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1362,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1363,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1364,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1365,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1366,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1367,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1368,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1369,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1370,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (expiry date is not in the correct format)","lastModifiedDate":"2023-04-03"},{"lineNumber":1371,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1372,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 10 /d 10/10/202\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1373,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1374,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1375,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1376,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1377,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1378,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1379,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid date in the format dd/mm/yyyy.\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1380,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1381,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1382,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (expiry date is not a valid date)","lastModifiedDate":"2023-04-03"},{"lineNumber":1383,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1384,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"add_i /n chicken /c 10 /d 10/13/2024\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1385,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1386,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToAdd \u003d parser.parseAddUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1387,"author":{"gitId":"jaredoong"},"content":"            userIngredients.addIngredient(ingredientToAdd);","lastModifiedDate":"2023-04-08"},{"lineNumber":1388,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1389,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1390,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IllegalArgumentException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1391,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a valid date in the format dd/mm/yyyy.\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1392,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1393,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1394,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1395,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":1396,"author":{"gitId":"jaredoong"},"content":"    public void testDeleteUserIngredients() {","lastModifiedDate":"2023-04-03"},{"lineNumber":1397,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1398,"author":{"gitId":"jaredoong"},"content":"        // Test positive case","lastModifiedDate":"2023-04-03"},{"lineNumber":1399,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1400,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c 5\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1401,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1402,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1403,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1404,"author":{"gitId":"jaredoong"},"content":"            assertEquals(5, userIngredients.findIngredientCount(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1405,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1406,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1407,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1408,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1409,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (case-insensitive)","lastModifiedDate":"2023-04-03"},{"lineNumber":1410,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1411,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n CHEESE /c 5\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1412,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1413,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1414,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1415,"author":{"gitId":"jaredoong"},"content":"            assertEquals(5, userIngredients.findIngredientCount(\"cheese\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1416,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1417,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1418,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1419,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1420,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (ingredient name with spaces)","lastModifiedDate":"2023-04-03"},{"lineNumber":1421,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1422,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n peas and corn /c 5\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1423,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1424,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1425,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1426,"author":{"gitId":"jaredoong"},"content":"            assertEquals(5, userIngredients.findIngredientCount(\"peas and corn\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1427,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1428,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1429,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1430,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1431,"author":{"gitId":"jaredoong"},"content":"        // Test positive case (quantity is more than the current quantity)","lastModifiedDate":"2023-04-03"},{"lineNumber":1432,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1433,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c 100\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1434,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1435,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1436,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1437,"author":{"gitId":"jaredoong"},"content":"            assertNull(userIngredients.get(\"chicken\"));","lastModifiedDate":"2023-04-03"},{"lineNumber":1438,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1439,"author":{"gitId":"jaredoong"},"content":"            assert false;","lastModifiedDate":"2023-04-03"},{"lineNumber":1440,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1441,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1442,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is 0)","lastModifiedDate":"2023-04-03"},{"lineNumber":1443,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1444,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c 0\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1445,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1446,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1447,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1448,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1449,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1450,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1451,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1452,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1453,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1454,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1455,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is negative)","lastModifiedDate":"2023-04-03"},{"lineNumber":1456,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1457,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c -5\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1458,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1459,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1460,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1461,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1462,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1463,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1464,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1465,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1466,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1467,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1468,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is more than 1000)","lastModifiedDate":"2023-04-03"},{"lineNumber":1469,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1470,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c 1001\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1471,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1472,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1473,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1474,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1475,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1476,"author":{"gitId":"jaredoong"},"content":"            assertEquals(InvalidValueException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1477,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1478,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1479,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1480,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1481,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (quantity is not a number)","lastModifiedDate":"2023-04-03"},{"lineNumber":1482,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1483,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n chicken /c abc\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1484,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1485,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1486,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1487,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1488,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1489,"author":{"gitId":"jaredoong"},"content":"            assertEquals(NumberFormatException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1490,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Please enter a positive number between 1 to 1000 for the quantity.\",","lastModifiedDate":"2023-04-03"},{"lineNumber":1491,"author":{"gitId":"jaredoong"},"content":"                    e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1492,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1493,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1494,"author":{"gitId":"jaredoong"},"content":"        // Test negative case (ingredient name is not found)","lastModifiedDate":"2023-04-03"},{"lineNumber":1495,"author":{"gitId":"jaredoong"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":1496,"author":{"gitId":"jaredoong"},"content":"            String userInput \u003d \"del_i /n beef /c 5\";","lastModifiedDate":"2023-04-03"},{"lineNumber":1497,"author":{"gitId":"jaredoong"},"content":"            String[] command \u003d parser.cleanUserInput(userInput);","lastModifiedDate":"2023-04-03"},{"lineNumber":1498,"author":{"gitId":"jaredoong"},"content":"            Ingredient ingredientToDelete \u003d parser.parseDeleteUserIngredients(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":1499,"author":{"gitId":"jaredoong"},"content":"            userIngredients.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2023-04-08"},{"lineNumber":1500,"author":{"gitId":"jaredoong"},"content":"            assert false; // should not reach here","lastModifiedDate":"2023-04-03"},{"lineNumber":1501,"author":{"gitId":"jaredoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":1502,"author":{"gitId":"jaredoong"},"content":"            assertEquals(IngredientNotFoundException.class, e.getClass());","lastModifiedDate":"2023-04-03"},{"lineNumber":1503,"author":{"gitId":"jaredoong"},"content":"            assertEquals(\"Ingredient not found\", e.getMessage());","lastModifiedDate":"2023-04-03"},{"lineNumber":1504,"author":{"gitId":"jaredoong"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":1505,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1506,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1507,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":1508,"author":{"gitId":"jaredoong"},"content":"    public void testNonEmptyListUserIngredients() {","lastModifiedDate":"2023-04-03"},{"lineNumber":1509,"author":{"gitId":"jaredoong"},"content":"        IngredientList testIngredientList \u003d new IngredientList();","lastModifiedDate":"2023-04-03"},{"lineNumber":1510,"author":{"gitId":"jaredoong"},"content":"        Ingredient buns \u003d new Ingredient(\"buns\", 10, \"10/10/2024\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1511,"author":{"gitId":"jaredoong"},"content":"        testIngredientList.addIngredient(buns);","lastModifiedDate":"2023-04-03"},{"lineNumber":1512,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1513,"author":{"gitId":"jaredoong"},"content":"        // Test positive case","lastModifiedDate":"2023-04-03"},{"lineNumber":1514,"author":{"gitId":"jaredoong"},"content":"        ui.printUserIngredients(testIngredientList);","lastModifiedDate":"2023-04-03"},{"lineNumber":1515,"author":{"gitId":"jaredoong"},"content":"        assertEquals(","lastModifiedDate":"2023-04-03"},{"lineNumber":1516,"author":{"gitId":"jaredoong"},"content":"                ui.formatMessage(\"Here is your ingredient list:\") + System.lineSeparator() + ui.formatMessage(","lastModifiedDate":"2023-04-03"},{"lineNumber":1517,"author":{"gitId":"jaredoong"},"content":"                        \"buns \" + \"(10) \" + \"[by:10/10/2024]\") + System.lineSeparator(),","lastModifiedDate":"2023-04-03"},{"lineNumber":1518,"author":{"gitId":"jaredoong"},"content":"                outContent.toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":1519,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1520,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1521,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-04-03"},{"lineNumber":1522,"author":{"gitId":"jaredoong"},"content":"    public void testEmptyListUserIngredients() {","lastModifiedDate":"2023-04-03"},{"lineNumber":1523,"author":{"gitId":"jaredoong"},"content":"        IngredientList testIngredientList \u003d new IngredientList();","lastModifiedDate":"2023-04-03"},{"lineNumber":1524,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1525,"author":{"gitId":"jaredoong"},"content":"        // Testing positive case (no ingredients)","lastModifiedDate":"2023-04-03"},{"lineNumber":1526,"author":{"gitId":"jaredoong"},"content":"        ui.printUserIngredients(testIngredientList);","lastModifiedDate":"2023-04-03"},{"lineNumber":1527,"author":{"gitId":"jaredoong"},"content":"        assertEquals(ui.formatMessage(\"Your ingredient list is empty!\") + System.lineSeparator(),","lastModifiedDate":"2023-04-03"},{"lineNumber":1528,"author":{"gitId":"jaredoong"},"content":"                outContent.toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":1529,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1530,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1531,"author":{"gitId":"jaredoong"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":1532,"author":{"gitId":"jaredoong"},"content":"    public void testLoadDatabase() {","lastModifiedDate":"2023-03-19"},{"lineNumber":1533,"author":{"gitId":"jaredoong"},"content":"        assertDoesNotThrow(database::loadRecipesDatabase);","lastModifiedDate":"2023-03-28"},{"lineNumber":1534,"author":{"gitId":"jaredoong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":1535,"author":{"gitId":"jaredoong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1536,"author":{"gitId":"TopGun2001"},"content":"    //@@author AbijithRam","lastModifiedDate":"2023-04-10"},{"lineNumber":1537,"author":{"gitId":"TopGun2001"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":1538,"author":{"gitId":"TopGun2001"},"content":"    public void testCombineWords() {","lastModifiedDate":"2023-04-07"},{"lineNumber":1539,"author":{"gitId":"TopGun2001"},"content":"        String[] input1 \u003d {\"One\", \"Two\", \"Three\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1540,"author":{"gitId":"TopGun2001"},"content":"        assertEquals(\"One Two Three\", parser.combineWords(input1, 0, 3));","lastModifiedDate":"2023-04-07"},{"lineNumber":1541,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1542,"author":{"gitId":"TopGun2001"},"content":"        String[] input2 \u003d {\"Pizza  \", \"Burger  \", \"   Ice Cream\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1543,"author":{"gitId":"TopGun2001"},"content":"        assertEquals(\"Pizza Burger Ice Cream\", parser.combineWords(input2, 0, 3));","lastModifiedDate":"2023-04-07"},{"lineNumber":1544,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1545,"author":{"gitId":"TopGun2001"},"content":"        String[] input3 \u003d {\"1 1 1\", \"2  2  2\", \"3   3   3\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":1546,"author":{"gitId":"TopGun2001"},"content":"        assertEquals(\"1 1 1 2  2  2 3   3   3\", parser.combineWords(input3, 0, 3));","lastModifiedDate":"2023-04-07"},{"lineNumber":1547,"author":{"gitId":"TopGun2001"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1548,"author":{"gitId":"TopGun2001"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":1549,"author":{"gitId":"TopGun2001"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"JuneNita":193,"gurmankalkat":160,"-":3,"jaredoong":1179,"TopGun2001":14}}]
