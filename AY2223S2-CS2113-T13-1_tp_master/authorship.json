[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gan868611"},"content":"# MoneyMoover project template","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Gan868611":1,"-":63}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"# About us","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"Display |     Name      | Github Profile | Portfolio ","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"--------|:-------------:|:--------------:|:---------:","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Arif Khalid  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gan Zhen Yang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Benjamin Long | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Woo Wen Jun  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jacob Stein  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Bawfen":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"-   The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"-   The `TODO_NAME` cannot contain punctuation.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"### Getting the balances of an account or multiple accounts: `balance`","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"If the currency is specified, get the balance of the account with the currency. Otherwise, get the balances of all the accounts.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"Format: `balance \u003cCurrency\u003e`","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"-   `\u003cCurrency\u003e` is an optional argument. If the value of `\u003cCurrency\u003e` is not provided, the balance of all the accounts will be shown.","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"-   An error will be shown if the currency specified is not one of our registered currency or an account with the currency does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"Example of usage:","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"```text","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e Here are the balances that you have requested:","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e USD: 2.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e JPY: 100.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance USD","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e Here are the balances that you have requested:","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e USD: 2.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"Example of error messages:","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"```text","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance ME","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e An invalid currency has been provided.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance JPY","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e You do not have an account for the currency.","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"### Deposit money into existing account `add`","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"-   If the user has an existing account, he can choose to add money into it.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"-   An error will be thrown if either the currency or amount is not provided, the currency is not one of the registered currency, the amount is not numeric or the account with the currency does not exist.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"Format: `add \u003cCurrency\u003e \u003cAmount\u003e`","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"Currency: Compulsory argument. A registered currency.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"Amount: Compulsory argument. The amount to be deposited.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"Example of usage:","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"```text","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e add CNY 200","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e You have successfully added CNY 2.0000 into your account","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"-   Get balance `balance \u003cCurrency\u003e`","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":53,"-":39}},{"path":"src/main/java/seedu/duke/Account.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.exceptions.NotEnoughInAccountException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"public class Account {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"    private int balance;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    private Currency currency;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    Account(int initialBalance, Currency currency){","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"        balance \u003d initialBalance;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    public float getBalance(){","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"        return balance / 100.0f;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    public Currency getCurrencyType(){","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"        return currency;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"     * Updates the balance of the account","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"     * @param changeInBalance the amount added or subtract from the account","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"     * @param action specifies whether to add or subtract value","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"     * @throws NotEnoughInAccountException if the balance would become negative","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"    public void updateBalance(float changeInBalance, String action) throws NotEnoughInAccountException {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"        int newBalance;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        if (action.equals(\"add\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"            newBalance \u003d balance + (int)(changeInBalance * 100);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        } else if (action.equals(\"subtract\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"            newBalance \u003d balance - (int)(changeInBalance * 100);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Error in updating balance\");","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"        if(newBalance \u003c 0){","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"            throw new NotEnoughInAccountException();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"        } ","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"        balance \u003d newBalance;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"    private static String currencyToString(Currency currency){","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        return currency.name();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"    public String toString(){","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"        String currencyType \u003d currencyToString(currency);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"        return currencyType + \": \" + balance / 100.0f;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jacob-stein1":25,"Arif-Khalid":26,"woowenjun99":2}},{"path":"src/main/java/seedu/duke/AccountList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"public class AccountList {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    // Currency implementation only specifies one account per currency, if required would have to change to a","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    // Hashmap of ArrayList of account in the future and randomly generate an ID for that account","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    private final HashMap\u003cCurrency, Account\u003e accountHashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public AccountList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    public void addAccount(Currency currency, int initialBalance) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"        if (accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some exception signalling account already exists","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap.put(currency, new Account(initialBalance, currency));","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    public void deleteAccount(Currency currency) {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"        if (!accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some exception signalling account already exists","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap.remove(currency);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"     * Gets the specific currency from the AccountList.","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"     * ","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"     * @param currency The currency account that we would like to retrieve.","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"     * @return A hashmap containing the currency and the account details.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"     * @throws NoAccountException If the account does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"    public HashMap\u003cCurrency, Account\u003e getBalance(Currency currency) throws NoAccountException {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"        if (!accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"            throw new NoAccountException();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cCurrency, Account\u003e newMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"        newMap.put(currency, accountHashMap.get(currency));","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        return newMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"     * Gets all the accounts from the accountList.","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"     * @return The hashmap containing all the accounts.","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"    public HashMap\u003cCurrency, Account\u003e getAccountHashMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"        return accountHashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"     * Retrieves an account for a chosen currency","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"     * @param currency the currency of the account to be returned","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"     * @return the currency account","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"     * @throws NoAccountException if the user does not have an account for that currency","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"    public Account getAccount(Currency currency) throws NoAccountException {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"        if (!this.getAccountHashMap().containsKey(currency)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"            throw new NoAccountException();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"        return this.getAccountHashMap().get(currency);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"    public void addAmount(Currency currency, int amount) throws NoAccountException {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"        if (!accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"            throw new NoAccountException();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"        int currentAmount \u003d (int) accountHashMap.get(currency).getBalance() * 100;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"        int newBalance \u003d currentAmount + amount;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"        accountHashMap.put(currency, new Account(newBalance, currency));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jacob-stein1":23,"Arif-Khalid":28,"woowenjun99":27}},{"path":"src/main/java/seedu/duke/Currency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public enum Currency {","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"    SGD,","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    USD,","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"    EUR,","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    GBP,","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    THB,","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    MYR,","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    IDR,","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    VND,","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    CNY,","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    JPY,","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    KRW","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jacob-stein1":13,"Arif-Khalid":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    private static final AccountList account \u003d new AccountList();","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"     * Runs the main input loop until the exit command is called","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"    public static void run(){","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"                String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"                ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"                Command c \u003d Parser.parseInput(fullCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"                c.execute(ui, account);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"            } finally {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"                ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Bawfen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Bawfen"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Bawfen"},"content":"        ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Bawfen"},"content":"        run();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"woowenjun99":3,"-":10,"Bawfen":28}},{"path":"src/main/java/seedu/duke/Forex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":" * Forex object represents the relationship between two currencies. All","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":" * exchange rates are stored in a hash map that uses the ticker as a key","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":" * and maps to the value of S$1 in that currency. ","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"public class Forex {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    * Hash map to store all exchange rates. Rather than a 2D array,","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    * just stores rate of S$1 in each currency. All exchanges","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"    * convert first to SGD, then from SGD to their target. To be","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    * implemented using API.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"    */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"    private static HashMap\u003cCurrency, Float\u003e exchangeRates \u003d new HashMap\u003cCurrency, Float\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    private Currency initial;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"    private Currency target;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"    // Constructor","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"    public Forex(Currency from, Currency to) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"        initial \u003d from;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"        target \u003d to;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"    // Sets dummy equal exchange rate to SGD","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"    public static void populateRates() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"        for (Currency currency : Currency.values()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"            exchangeRates.put(currency, 1.0f);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"    // Prints the exchange relationship","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"        return \"Exchanging from \" + initial + \" to \" + target;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"     * Converts an amount from the initial currency to the target currency.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"     * First converts initial into SGD, then from SGD into target.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"     * @param amount amount to be converted from initial to target","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"     * @return amount converted to target currency","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"    public float convert(float amount) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"        float amountInSGD \u003d amount / exchangeRates.get(initial);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"        float amountInTarget \u003d amountInSGD * exchangeRates.get(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"        return amountInTarget;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"    // Accessor methods","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"    public Currency getInitial() {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"        return initial;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"    public Currency getTarget() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"        return target;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jacob-stein1":61}},{"path":"src/main/java/seedu/duke/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.ErrorMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.InvalidAddCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":" * This class is used to deal with the addCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    private Currency currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"    private int amount;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"     * @param input   The user input including the command.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    public AddCommand(String input) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        super(false, input);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    private Currency getCurrency(String currencyString) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        return Currency.valueOf(currencyString);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    private void processCommand() throws InvalidAddCommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d super.input.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"        // Format: [Command, CURRENCY, AMOUNT]","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        boolean isValidCommand \u003d words.length \u003d\u003d 3;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidAddCommandException();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        this.currency \u003d getCurrency(words[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"        this.amount \u003d Integer.parseInt(words[2]);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"    private void printSuccess(Ui ui) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"        ui.printf(Message.SUCCESSFUL_ADD_COMMAND.getMessage(), this.currency.name(), this.amount / 100.0);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"     * Adds the currency into the existing account if found and print a success message.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"     * @param ui The instance of the UI class.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"    public void execute(Ui ui, AccountList account) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"            processCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"            account.addAmount(this.currency, this.amount);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"            printSuccess(ui);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"        } catch (InvalidAddCommandException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"            ui.printMessage(ErrorMessage.INVALID_ADD_COMMAND);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"            ui.printMessage(ErrorMessage.INVALID_NUMERICAL_AMOUNT);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"            ui.printMessage(ErrorMessage.INVALID_CURRENCY);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"        } catch (NoAccountException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"            ui.printMessage(ErrorMessage.NO_SUCH_ACCOUNT);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":65}},{"path":"src/main/java/seedu/duke/commands/BalanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Account;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.ErrorMessage;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.InvalidBalanceCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":" * BalanceCommand is a subclass of the Command class that is used to ","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":" * handle the getBalance command by the user.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"public class BalanceCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    private static final String ALL \u003d \"ALL\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    private final String command;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"     * @param command The full user input including the command word {@code balance SGD}.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    public BalanceCommand(String command) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        super(false, command);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"        this.command \u003d command.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    private String processCommand() throws InvalidBalanceCommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Gan868611"},"content":"        switch (words.length) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Gan868611"},"content":"        case 1:","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Gan868611"},"content":"            return ALL;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Gan868611"},"content":"        case 2:","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Gan868611"},"content":"            return words[1];","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Gan868611"},"content":"        default:","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Gan868611"},"content":"            throw new InvalidBalanceCommandException();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Gan868611"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    private Currency convertStringToEnum(String currency) throws IllegalArgumentException {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        return Currency.valueOf(currency);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    private HashMap\u003cCurrency, Account\u003e getBalance(String currencyString, AccountList account)","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"            throws NoAccountException {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"        if (currencyString.equals(ALL)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"            return account.getAccountHashMap();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"        Currency currency \u003d convertStringToEnum(currencyString);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"        return account.getBalance(currency);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    private void printCurrencies(HashMap\u003cCurrency, Account\u003e balances, Ui ui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"        ui.printMessage(Message.BALANCE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"        balances.forEach((currency, account) -\u003e ui.printf(\"%s: %f\\n\", currency.name(), account.getBalance()));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"     * Gets the currencies from the AccountList and displays it onto the screen.","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"    public void execute(Ui ui, AccountList account) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"            String currencyString \u003d processCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cCurrency, Account\u003e balances \u003d getBalance(currencyString, account);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"            printCurrencies(balances, ui);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"        } catch (InvalidBalanceCommandException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.MORE_THAN_ONE_CURRENCY_PROVIDED);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.INVALID_CURRENCY);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"        } catch (NoAccountException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.NO_SUCH_ACCOUNT);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jacob-stein1":2,"Gan868611":8,"woowenjun99":68}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"    protected final boolean isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"    protected final String input;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public Command(boolean isExit, String input){","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"     * Executes the command implemented by the subclass","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    public abstract void execute(Ui ui, AccountList account);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    public boolean isExit () {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        return isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":19,"Bawfen":5}},{"path":"src/main/java/seedu/duke/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"public enum CommandType {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"    ADD(\"add\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    BALANCE(\"balance\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    SHOW_RATE(\"show-rate\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    EXCHANGE(\"exchange\");","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"    private String command;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    CommandType(String command){","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    public String getCommand(){","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"        return command;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"    public static CommandType get(String command) {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"            throw new NullPointerException(\"Command is null\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"        for(CommandType commandType : CommandType.values()){","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"            if(commandType.getCommand().equals(command)){","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"                return commandType;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"        throw new IllegalArgumentException(\"No command found named \"+command);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jacob-stein1":2,"woowenjun99":2,"Bawfen":24}},{"path":"src/main/java/seedu/duke/commands/ExchangeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.Account;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.Forex;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.exceptions.InvalidExchangeArgumentException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.exceptions.InvalidNumberException;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.exceptions.NotEnoughInAccountException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.constants.ErrorMessage;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"public class ExchangeCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"     * Constructor for exchange command","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"     * @param input input for exchange command","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jacob-stein1"},"content":"    public ExchangeCommand (String input) {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jacob-stein1"},"content":"        super(false, input);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jacob-stein1"},"content":"     * Converts the requested amount and changes the account balances","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"jacob-stein1"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jacob-stein1"},"content":"    public void execute(Ui ui, AccountList acclist) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"jacob-stein1"},"content":"            // Parse input","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"jacob-stein1"},"content":"            Forex exchangeRate \u003d formatInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"jacob-stein1"},"content":"            float amount \u003d parseAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"jacob-stein1"},"content":"            // Retrieve and edit accounts","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jacob-stein1"},"content":"            Account oldAcc \u003d acclist.getAccount(exchangeRate.getInitial());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"jacob-stein1"},"content":"            oldAcc.updateBalance(amount, \"subtract\");","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"jacob-stein1"},"content":"            Account newAcc \u003d acclist.getAccount(exchangeRate.getTarget());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"jacob-stein1"},"content":"            newAcc.updateBalance(exchangeRate.convert(amount), \"add\");","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(exchangeRate);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Balance of initial account --\u003e \" + oldAcc);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(\"Balance of target account --\u003e \" + newAcc);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"jacob-stein1"},"content":"        // Exception handling","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"jacob-stein1"},"content":"        } catch (NoAccountException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(ErrorMessage.NO_SUCH_ACCOUNT);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"jacob-stein1"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(ErrorMessage.INVALID_CURRENCY);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"        } catch (InvalidExchangeArgumentException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(ErrorMessage.INVALID_EXCHANGE_ARGUMENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"jacob-stein1"},"content":"        } catch (InvalidNumberException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(ErrorMessage.INVALID_NUMBER);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"jacob-stein1"},"content":"        } catch (NotEnoughInAccountException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"jacob-stein1"},"content":"            System.out.println(ErrorMessage.NOT_ENOUGH_IN_ACCOUNT);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"jacob-stein1"},"content":"     * Converts input into Forex object for use in execution","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"jacob-stein1"},"content":"     * @return Forex object with intial and target currencies","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"jacob-stein1"},"content":"     * @throws IllegalArgumentException if the currencies are not supported","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"jacob-stein1"},"content":"     * @throws InvalidExchangeArgumentException if arguments are incorrect","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"jacob-stein1"},"content":"    public Forex formatInput() throws InvalidExchangeArgumentException {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"jacob-stein1"},"content":"        String[] splitInput \u003d input.trim().split(\" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"jacob-stein1"},"content":"        if (splitInput.length !\u003d 4) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"jacob-stein1"},"content":"            throw new InvalidExchangeArgumentException();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"jacob-stein1"},"content":"        Currency initial  \u003d Currency.valueOf(splitInput[1]);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"jacob-stein1"},"content":"        Currency target \u003d Currency.valueOf(splitInput[2]);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"jacob-stein1"},"content":"        return new Forex(initial, target);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"jacob-stein1"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"jacob-stein1"},"content":"     * Retrieves the amount to be converted from the input","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"jacob-stein1"},"content":"     * @return float representing amount to be converted","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jacob-stein1"},"content":"     * @throws NullPointerException if the amount is null","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"jacob-stein1"},"content":"     * @throws NumberFormatException if the amount is non-numeric","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"jacob-stein1"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"jacob-stein1"},"content":"    public float parseAmount() throws InvalidNumberException {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"jacob-stein1"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"jacob-stein1"},"content":"            String amount \u003d input.trim().split(\" \")[3];","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"jacob-stein1"},"content":"            float amountAsFloat \u003d Float.parseFloat(amount);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"jacob-stein1"},"content":"            if (amountAsFloat \u003c\u003d 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"jacob-stein1"},"content":"                throw new InvalidNumberException();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"jacob-stein1"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"jacob-stein1"},"content":"            return amountAsFloat;","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"jacob-stein1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"jacob-stein1"},"content":"            throw new InvalidNumberException();","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"jacob-stein1"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"jacob-stein1"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jacob-stein1":91}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":" * Command to exit the program","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"        super(true, \"\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    public void execute(Ui ui, AccountList account) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"        ui.printFarewell();","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"woowenjun99":4,"Bawfen":14}},{"path":"src/main/java/seedu/duke/commands/ShowRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":" * Command to print the exchange rate between two currencies","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"public class ShowRateCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    private Currency from;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    private Currency to;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"    public ShowRateCommand(String input) {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"        super(false, input);","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    public void execute(Ui ui, AccountList account) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"        // TODO: fully implement","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"            String[] args \u003d input.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"            Currency from \u003d Currency.valueOf(args[0]);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"            Currency to \u003d Currency.valueOf(args[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"            ui.printInvalidShowRate();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"woowenjun99":4,"Bawfen":24}},{"path":"src/main/java/seedu/duke/constants/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.constants;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * A public interface that is used to contain all the error messages throughout the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public interface ErrorMessage {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    String INVALID_ADD_COMMAND \u003d \"Please check that you have correctly provided the currency and amount\";","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    String INVALID_CURRENCY \u003d \"An invalid currency has been provided.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    String INVALID_NUMERICAL_AMOUNT \u003d \"Please provide a numerical amount\";","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    String MORE_THAN_ONE_CURRENCY_PROVIDED \u003d \"Please do not provide more than one currency.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    String NO_SUCH_ACCOUNT \u003d \"You do not have an account for the currency.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    String INVALID_EXCHANGE_ARGUMENT \u003d \"Please structure your exchange as \" + ","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"            \"\u0027exchange STARTING_CURRENCY TARGET_CURRENCY AMOUNT_IN_STARTING\u0027\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    String NOT_ENOUGH_IN_ACCOUNT \u003d \"Please ensure you have enough money in your\" + ","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"            \" starting currency account to perform this transaction\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"    String INVALID_NUMBER \u003d \"Please enter a valid number to exchange\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"jacob-stein1":5,"woowenjun99":12}},{"path":"src/main/java/seedu/duke/constants/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.constants;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * Contains the messages that will be printed by the ui chatbot","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public enum Message {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    BALANCE(\"Here are the balances that you have requested:\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    FAREWELL(\"Thank you for using MoneyMoover! We hope to see you again soon :)\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    HELP(\"Here are the commands available:\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t help - show list of commands\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t add $/CURRENCY AMOUNT - adds that amount of money into that currency account\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t exchange $/CURRENCY1 AMOUNT $/CURRENCY2 - transfer funds from a currency account\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t\\t                                       into its equivalent value in another currency account\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t withdraw $/CURRENCY AMOUNT - withdraws that amount of money from that currency account\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t show $/CURRENCY1 $/CURRENCY2 - shows the value of each dollar in CURRENCY1 in terms of CURRENCY2\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t delete-account $/CURRENCY - deletes the account of that currency\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t create-account $/CURRENCY - creates an account of that currency\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t exit - exits the program\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jacob-stein1"},"content":"            + \"\\t Available Currencies: MYR, SGD, USD, YUAN, THB, EU\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"    GREETING(\"Welcome to MoneyMoover!\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"    ERR_UNKNOWN_COMMAND(\"Sorry, I don\u0027t understand that command. Type \u0027help\u0027 to see the list of commands.\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"    ERR_INVALID_SHOW_RATE(\"show-rate must be used with the following format: show-rate \u003cCURRENCY1\u003e \u003cCURRENCY2\u003e\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    SUCCESSFUL_ADD_COMMAND(\"You have successfully added %s %f into your account\");","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    private final String message;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    Message(String message) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        return message;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jacob-stein1":11,"woowenjun99":21,"Bawfen":2}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAddCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"public class InvalidAddCommandException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":4}},{"path":"src/main/java/seedu/duke/exceptions/InvalidBalanceCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An exception that is thrown when the balance command given is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class InvalidBalanceCommandException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidExchangeArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * An exception that is thrown when the exchange command is formatted incorrectly","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class InvalidExchangeArgumentException extends Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jacob-stein1":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":" * An exception thrown when an invalid number is inputed for an exchange","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class InvalidNumberException extends Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jacob-stein1":7}},{"path":"src/main/java/seedu/duke/exceptions/NoAccountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An exception used when attempting to get the balance but the account does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class NoAccountException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":7}},{"path":"src/main/java/seedu/duke/exceptions/NotEnoughInAccountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jacob-stein1"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"jacob-stein1"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"* An exception that is thrown when a user attempts to exchange more than is in their account","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"*/","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"public class NotEnoughInAccountException extends Exception{","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"jacob-stein1":7}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.commands.BalanceCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.CommandType;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.ShowRateCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"import seedu.duke.commands.ExchangeCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":" * Class for parsing user input to return the appropriate command","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"public class Parser {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"     * Parses the user input and returns the appropriate command","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"     * @param input the user input","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"     * @return the command to be executed","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"     * @throws IndexOutOfBoundsException if the user input is invalid","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"     * @throws IllegalArgumentException if the user input is invalid","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    public static Command parseInput(String input) throws IndexOutOfBoundsException,","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"            IllegalArgumentException{","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"        String[] args \u003d input.split(\" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"        CommandType command;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bawfen"},"content":"        try{","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Bawfen"},"content":"            command \u003d CommandType.get(args[0]);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Bawfen"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Bawfen"},"content":"            throw new IllegalArgumentException(Message.ERR_UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Bawfen"},"content":"        switch(command){","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        case BALANCE:","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"            return new BalanceCommand(input);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Bawfen"},"content":"        case EXIT:","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"        case ADD:","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"            return new AddCommand(input);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Bawfen"},"content":"        case SHOW_RATE:","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Bawfen"},"content":"            try{","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"                return new ShowRateCommand(args[1]);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Bawfen"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Bawfen"},"content":"                throw new IllegalArgumentException(Message.ERR_INVALID_SHOW_RATE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"jacob-stein1"},"content":"        case EXCHANGE:","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"jacob-stein1"},"content":"            return new ExchangeCommand(input);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Bawfen"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Bawfen"},"content":"            throw new IllegalArgumentException(Message.ERR_UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"jacob-stein1":3,"woowenjun99":10,"Bawfen":41}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":" * The UI Class is used to display the messages to the user.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    Scanner in;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    public Ui(){","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"     * The getUserInput reads in the user input as a string","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"     * and returns the input for the parser.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"     * @return The user input as a string.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"     * The printMessage prints out the message.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"     * @param message The message in any type.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Bawfen"},"content":"    public void printMessage(Object message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"     * The printf is used to print based on the format and the arguments","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"     * given. This function is used to mimic {@code System.out.printf}","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"     * @param format The string format to be printed.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"     * @param args   The arguments to be printed.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"     * @throws java.util.IllegalFormatException If an invalid format given.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"     * @throws NullPointerException             If the format is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"     **/","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Bawfen"},"content":"    public void printf(String format, Object... args) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        System.out.printf(format, args);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"     * The printGreeting prints out the welcome message upon","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"     * the initialisation of the chatbot.","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Bawfen"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.GREETING.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"     * The printFarewell prints out the welcome message upon","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"     * the termination of the chatbot.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Bawfen"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.FAREWELL.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"     * The printHelp prints out the help message based on the user\u0027s request.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Bawfen"},"content":"    public void printHelp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.HELP.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"     * The printSpacer is used to print hyphens to make the code looks neater.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"     **/","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Bawfen"},"content":"    public void printSpacer() {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"        printMessage(\"-\".repeat(50));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Bawfen"},"content":"     * The printInvalidShowRate function is printed when an invalid format is provided","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Bawfen"},"content":"     * for the show-rate command.","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Bawfen"},"content":"    public void printInvalidShowRate(){","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Bawfen"},"content":"        printMessage(Message.ERR_INVALID_SHOW_RATE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"woowenjun99":65,"Bawfen":20}},{"path":"src/test/java/seedu/duke/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    public void getCurrency_invalidCurrencyProvided_shouldThrowException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d AddCommand.class.getDeclaredMethod(\"getCurrency\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add JPY 200\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e method.invoke(command, \"JP\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"    public void getCurrency_validCurrencyProvided_shouldReturnCorrespondingCurrency() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d AddCommand.class.getDeclaredMethod(\"getCurrency\", String.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add JPY 200\");","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(Currency.JPY, method.invoke(command, \"JPY\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_commandLessThanThreeWords_shouldThrowException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d AddCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add JPY\");","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e method.invoke(command));","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_amountNotInt_shouldThrowException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d AddCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add JPY m\");","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e method.invoke(command));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_correctInputFormat_shouldNotThrowException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d AddCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add JPY 200\");","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"            assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"                method.invoke(command);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"            });","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"    public void execute_correctInputProvided_shouldUpdateAmount() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"            AccountList account \u003d new AccountList();","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"            account.addAccount(Currency.KRW, 2000);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"            AddCommand command \u003d new AddCommand(\"add KRW 2000\");","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"            command.execute(ui, account);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"            int expectedAmount \u003d  (int) account.getBalance(Currency.KRW).get(Currency.KRW).getBalance() * 100;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(4000, expectedAmount);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":93}},{"path":"src/test/java/seedu/duke/commands/BalanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Account;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"public class BalanceCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_noCurrencySpecified_shouldReturnAll() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(\"ALL\", method.invoke(command));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_oneCurrencySpecified_shouldReturnOne() {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance CNY\");","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(\"CNY\", method.invoke(command));","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_multipleCurrenciesSpecified_shouldThrowError() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance CNY JPY\");","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e method.invoke(command));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    public void convertStringToEnum_invalidCurrency_shouldThrowIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"convertStringToEnum\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e method.invoke(command, \"ME\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"    public void convertStringToEnum_validCurrency_shouldReturnCorrespondingCurrency() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"convertStringToEnum\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(Currency.CNY, method.invoke(command, \"CNY\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"    public void getBalance_ifCurrencyIsNotSpecified_shouldReturnAllCurrencies() {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"        AccountList account \u003d new AccountList();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"        account.addAccount(Currency.CNY, 200);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"        account.addAccount(Currency.EUR, 40);","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"getBalance\", String.class, AccountList.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cCurrency, Account\u003e output \u003d (HashMap\u003cCurrency, Account\u003e) method.invoke(command,","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"                    \"ALL\",","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"                    account","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"            );","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(2, output.size());","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(200, 100 * output.get(Currency.CNY).getBalance());","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(40, 100 * output.get(Currency.EUR).getBalance());","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"    public void getBalance_ifNoAccountExists_shouldThrowException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"            AccountList account \u003d new AccountList();","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"getBalance\", String.class, AccountList.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, ()-\u003e method.invoke(command, \"CNY\", account));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":112}}]
