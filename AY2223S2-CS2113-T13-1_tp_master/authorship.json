[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gan868611"},"content":"# MoneyMoover project template","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"Gan868611":1,"-":63}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"# About us","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"Display |     Name      | Github Profile | Portfolio ","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"--------|:-------------:|:--------------:|:---------:","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Arif Khalid  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Gan Zhen Yang | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Benjamin Long | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Woo Wen Jun  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Jacob Stein  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Bawfen":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{Give a product intro}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Give detailed description of each feature}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Adds a new item to the list of todo items.","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Format: `todo n/TODO_NAME d/DEADLINE`","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"-   The `DEADLINE` can be in a natural language format.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"-   The `TODO_NAME` cannot contain punctuation.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"`todo n/Write the rest of the User Guide d/next week`","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"### Getting the balances of an account or multiple accounts: `balance`","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"If the currency is specified, get the balance of the account with the currency. Otherwise, get the balances of all the accounts.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"Format: `balance \u003cCurrency\u003e`","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"-   `\u003cCurrency\u003e` is an optional argument. If the value of `\u003cCurrency\u003e` is not provided, the balance of all the accounts will be shown.","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"-   An error will be shown if the currency specified is not one of our registered currency or an account with the currency does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"Example of usage:","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e Here are the balances that you have requested:","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e USD: 2.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e JPY: 100.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance USD","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e Here are the balances that you have requested:","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e USD: 2.0000","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"Example of error messages:","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance ME","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e An invalid currency has been provided.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e balance JPY","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"\u003e\u003e\u003e You do not have an account for the currency.","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"```","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"-   Get balance `balance \u003cCurrency\u003e`","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":36,"-":39}},{"path":"src/main/java/seedu/duke/Account.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Arif-Khalid"},"content":"public class Account {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Arif-Khalid"},"content":"    private int balance;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"    private final Currency CURRENCY;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"    Account(int initialBalance, Currency currency){","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"        this.CURRENCY \u003d currency;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"        balance \u003d initialBalance;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Arif-Khalid"},"content":"    public float getBalance(){","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Arif-Khalid"},"content":"        return balance / 100.0f;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"    public Currency getCurrencyType(){","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"        return CURRENCY;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Arif-Khalid"},"content":"    public void updateBalance(float changeInBalance){","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Arif-Khalid"},"content":"        int newBalance \u003d balance - (int)(changeInBalance * 100);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Arif-Khalid"},"content":"        if(newBalance \u003c 0){","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some exception","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Arif-Khalid"},"content":"        balance \u003d newBalance;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"    private static String currencyToString(Currency currency){","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"        String currencyType;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        switch (currency){","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"        case SGD:","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"SGD\";","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"        case USD:","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"USD\";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"        case CNY:","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"CNY\";","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"        case EUR:","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"EUR\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Arif-Khalid"},"content":"        case GBP:","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"GBP\";","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Arif-Khalid"},"content":"        case IDR:","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"IDR\";","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"        case JPY:","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"JPY\";","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Arif-Khalid"},"content":"        case KRW:","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"KRW\";","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Arif-Khalid"},"content":"        case MYR:","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"MYR\";","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Arif-Khalid"},"content":"        case THB:","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"THB\";","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Arif-Khalid"},"content":"        case VND:","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"VND\";","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Arif-Khalid"},"content":"            break;","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"        default:","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some error for undefined or unhandled currency type","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Arif-Khalid"},"content":"            currencyType \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Arif-Khalid"},"content":"        return currencyType;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Arif-Khalid"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Arif-Khalid"},"content":"    public String toString(){","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Arif-Khalid"},"content":"        String currencyType \u003d currencyToString(CURRENCY);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Arif-Khalid"},"content":"        return currencyType + \": \" + Float.toString(balance / 100.0f);","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Arif-Khalid":74}},{"path":"src/main/java/seedu/duke/AccountList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Arif-Khalid"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Arif-Khalid"},"content":"public class AccountList {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Arif-Khalid"},"content":"    // Currency implementation only specifies one account per currency, if required would have to change to a","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Arif-Khalid"},"content":"    // Hashmap of ArrayList of account in the future and randomly generate an ID for that account","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"    private static AccountList instance;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"    private final HashMap\u003cCurrency, Account\u003e accountHashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    private AccountList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    public static AccountList getInstance() {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"            instance \u003d new AccountList();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        return instance;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Arif-Khalid"},"content":"    public void addAccount(Currency currency, int initialBalance) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Arif-Khalid"},"content":"        if (accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some exception signalling account already exists","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap.put(currency, new Account(initialBalance, currency));","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Arif-Khalid"},"content":"    public void deleteAccount(Currency currency) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Arif-Khalid"},"content":"        if (!accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Arif-Khalid"},"content":"            // todo throw some exception signalling account already exists","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Arif-Khalid"},"content":"        accountHashMap.remove(currency);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"     * Gets the specific currency from the AccountList.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"     * ","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"     * @param currency The currency account that we would like to retrieve.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"     * @return A hashmap containing the currency and the account details.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"     * @throws NoAccountException If the account does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"    public HashMap\u003cCurrency, Account\u003e getBalance(Currency currency) throws NoAccountException {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Arif-Khalid"},"content":"        if (!accountHashMap.containsKey(currency)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"            throw new NoAccountException();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Arif-Khalid"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"        HashMap\u003cCurrency, Account\u003e newMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        newMap.put(currency, accountHashMap.get(currency));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"        return newMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"     * Gets all the accounts from the accountList.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"     * ","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"     * @return The hashmap containing all the accounts.","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"    public HashMap\u003cCurrency, Account\u003e getAccountHashMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"        return accountHashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Arif-Khalid"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Arif-Khalid"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Arif-Khalid":28,"woowenjun99":35}},{"path":"src/main/java/seedu/duke/Currency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Arif-Khalid"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Arif-Khalid"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jacob-stein1"},"content":"public enum Currency {","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jacob-stein1"},"content":"    SGD,","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jacob-stein1"},"content":"    USD,","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jacob-stein1"},"content":"    EUR,","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jacob-stein1"},"content":"    GBP,","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jacob-stein1"},"content":"    THB,","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jacob-stein1"},"content":"    MYR,","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jacob-stein1"},"content":"    IDR,","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jacob-stein1"},"content":"    VND,","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"jacob-stein1"},"content":"    CNY,","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"jacob-stein1"},"content":"    JPY,","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jacob-stein1"},"content":"    KRW","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jacob-stein1"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jacob-stein1":13,"Arif-Khalid":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"     * Runs the main input loop until the exit command is called","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    public static void run(){","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"            try {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"                String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"                ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"                Command c \u003d Parser.parseInput(fullCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"                c.execute(ui);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"            } finally {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"                ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Bawfen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Bawfen"},"content":"        ui.printGreeting();","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Bawfen"},"content":"        ui.printSpacer();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Bawfen"},"content":"        run();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":10,"Bawfen":30}},{"path":"src/main/java/seedu/duke/commands/BalanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Account;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.ErrorMessage;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.InvalidBalanceCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.exceptions.NoAccountException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":" * BalanceCommand is a subclass of the Command class that is used to ","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":" * handle the getBalance command by the user.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"public class BalanceCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    private AccountList accounts \u003d AccountList.getInstance();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    private String command;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"    private final String ALL \u003d \"ALL\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"     * @param command The full user input including the command word {@code balance SGD}.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    public BalanceCommand(String command) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        super(false, command);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"        this.command \u003d command.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    private String processCommand() throws InvalidBalanceCommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"        switch (words.length) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"        case 1:","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            return ALL;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"        case 2:","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"            return words[1];","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"        default:","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"            throw new InvalidBalanceCommandException();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    private Currency convertStringToEnum(String currency) throws IllegalArgumentException {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        return Currency.valueOf(currency);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"    private HashMap\u003cCurrency, Account\u003e getBalance(String currencyString) throws NoAccountException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"        if (currencyString \u003d\u003d ALL) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"            return accounts.getAccountHashMap();","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        Currency currency \u003d convertStringToEnum(currencyString);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"        return accounts.getBalance(currency);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"    private void printCurrencies(HashMap\u003cCurrency, Account\u003e balances, Ui ui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"        ui.printMessage(Message.BALANCE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"        balances.forEach((currency, account) -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"            ui.printf(\"%s: %f\\n\", currency.name(), account.getBalance());","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"        });","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"     * Gets the currencies from the AccountList and displays it onto the screen.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"    public void execute(Ui ui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"            String currencyString \u003d processCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cCurrency, Account\u003e balances \u003d getBalance(currencyString);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"            printCurrencies(balances, ui);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"        } catch (InvalidBalanceCommandException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.MORE_THAN_ONE_CURRENCY_PROVIDED);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.INVALID_CURRENCY);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"        } catch (NoAccountException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"            System.out.println(ErrorMessage.NO_SUCH_ACCOUNT);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":79}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"    protected final boolean isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"    protected final String input;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"    public Command(boolean isExit, String input){","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"     * Executes the command implemented by the subclass","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"    public abstract void execute(Ui ui);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"    public boolean isExit () {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"        return isExit;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":16,"Bawfen":7}},{"path":"src/main/java/seedu/duke/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"public enum CommandType {","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"    BALANCE(\"balance\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"    EXIT(\"exit\"),","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"    SHOW_RATE(\"show-rate\");","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"    private String command;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"    CommandType(String command){","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"    public String getCommand(){","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"        return command;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"    public static CommandType get(String command) {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"            throw new NullPointerException(\"Command is null\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"        for(CommandType commandType : CommandType.values()){","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"            if(commandType.getCommand().equals(command)){","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"                return commandType;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"        throw new IllegalArgumentException(\"No command found named \"+command);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"woowenjun99":1,"Bawfen":26}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":" * Command to exit the program","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"        super(true, \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    public void execute(Ui ui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"        ui.printFarewell();","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bawfen":17}},{"path":"src/main/java/seedu/duke/commands/ShowRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":" * Command to print the exchange rate between two currencies","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"public class ShowRateCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"    private Currency from;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    private Currency to;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    public ShowRateCommand(String input) {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"        super(false, input);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"    public void execute(Ui ui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"        // TODO: fully implement","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"            String[] args \u003d input.split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"            Currency from \u003d Currency.valueOf(args[0]);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"            Currency to \u003d Currency.valueOf(args[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"            ui.printInvalidShowRate();","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Bawfen":27}},{"path":"src/main/java/seedu/duke/constants/ErrorMessage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.constants;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * A public interface that is used to contain all the error messages throughout the application.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public interface ErrorMessage {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    String INVALID_CURRENCY \u003d \"An invalid currency has been provided.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    String MORE_THAN_ONE_CURRENCY_PROVIDED \u003d \"Please do not provide more than one currency.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    String NO_SUCH_ACCOUNT \u003d \"You do not have an account for the currency.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":10}},{"path":"src/main/java/seedu/duke/constants/Message.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.constants;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * Contains the messages that will be printed by the ui chatbot","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public enum Message {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"    BALANCE(\"Here are the balances that you have requested:\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"    FAREWELL(\"Thank you for using MoneyMoover! We hope to see you again soon :)\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"    HELP(\"here are the commands available:\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"            \"\\t help - show list of commands\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"            \"\\t add $/CURRENCY AMOUNT - adds that amount of money into that currency account\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"            \"\\t exchange $/CURRENCY1 AMOUNT $/CURRENCY2 - transfer funds from a currency account\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"            \"\\t\\t                                       into its equivalent value in another currency account\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"            \"\\t withdraw $/CURRENCY AMOUNT - withdraws that amount of money from that currency account\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"            \"\\t show $/CURRENCY1 $/CURRENCY2 - shows the value of each dollar in CURRENCY1 in terms of CURRENCY2\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"            \"\\t delete-account $/CURRENCY - deletes the account of that currency\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"            \"\\t create-account $/CURRENCY - creates an account of that currency\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"            \"\\t exit - exits the program\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"            \"\\t Available Currencies: MYR, SGD, USD, YUAN, THB, EU\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"    GREETING(\"Welcome to MoneyMoover!\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"    ERR_UNKNOWN_COMMAND(\"Sorry, I don\u0027t understand that command. Type \u0027help\u0027 to see the list of commands.\"),","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"    ERR_INVALID_SHOW_RATE(\"show-rate must be used with the following format: show-rate \u003cCURRENCY1\u003e \u003cCURRENCY2\u003e\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"    private String message;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"    Message(String message) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"        return message;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"woowenjun99":29,"Bawfen":3}},{"path":"src/main/java/seedu/duke/exceptions/InvalidBalanceCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An exception that is thrown when the balance command given is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class InvalidBalanceCommandException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":7}},{"path":"src/main/java/seedu/duke/exceptions/NoAccountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":" * An exception used when attempting to get the balance but the account does not exist.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"public class NoAccountException extends Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":7}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bawfen"},"content":"package seedu.duke.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.commands.BalanceCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.CommandType;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.commands.ShowRateCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Bawfen"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Bawfen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":" * Class for parsing user input to return the appropriate command","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"public class Parser {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Bawfen"},"content":"     * Parses the user input and returns the appropriate command","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Bawfen"},"content":"     * @param input the user input","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Bawfen"},"content":"     * @return the command to be executed","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Bawfen"},"content":"     * @throws IndexOutOfBoundsException if the user input is invalid","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Bawfen"},"content":"     * @throws IllegalArgumentException if the user input is invalid","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"    public static Command parseInput(String input) throws IndexOutOfBoundsException, IllegalArgumentException{","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Bawfen"},"content":"        String[] args \u003d input.split(\" \");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Bawfen"},"content":"        CommandType command;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Bawfen"},"content":"        try{","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Bawfen"},"content":"            command \u003d CommandType.get(args[0]);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Bawfen"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Bawfen"},"content":"            throw new IllegalArgumentException(Message.ERR_UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Bawfen"},"content":"        switch(command){","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"        case BALANCE:","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            return new BalanceCommand(input);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Bawfen"},"content":"        case EXIT:","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Bawfen"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Bawfen"},"content":"        case SHOW_RATE:","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Bawfen"},"content":"            try{","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Bawfen"},"content":"                return new ShowRateCommand(args[1]);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Bawfen"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Bawfen"},"content":"                throw new IllegalArgumentException(Message.ERR_INVALID_SHOW_RATE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Bawfen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Bawfen"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Bawfen"},"content":"            throw new IllegalArgumentException(Message.ERR_UNKNOWN_COMMAND.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Bawfen"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Bawfen"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"woowenjun99":3,"Bawfen":45}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.constants.Message;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":" * The UI Class is used to display the messages to the user.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Bawfen"},"content":"    Scanner in;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Bawfen"},"content":"    public Ui(){","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Bawfen"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"     * The getUserInput reads in the user input as a string","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"     * and returns the input for the parser.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"     * @return The user input as a string.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Bawfen"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"        return input;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"     * The printMessage prints out the message.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"     * @param message The message in any type.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Bawfen"},"content":"    public void printMessage(Object message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"     * The printf is used to print based on the format and the arguments","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"     * given. This function is used to mimic {@code System.out.printf}","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"     * @param format The string format to be printed.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"     * @param args   The arguments to be printed.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"     * @throws java.util.IllegalFormatException If an invalid format given.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"     * @throws NullPointerException             If the format is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"     **/","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Bawfen"},"content":"    public void printf(String format, Object... args) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"        System.out.printf(format, args);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"     * The printGreeting prints out the welcome message upon","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"     * the initialisation of the chatbot.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Bawfen"},"content":"    public void printGreeting() {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.GREETING.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"     * The printFarewell prints out the welcome message upon","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"     * the termination of the chatbot.","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Bawfen"},"content":"    public void printFarewell() {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.FAREWELL.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"     * The printHelp prints out the help message based on the user\u0027s request.","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Bawfen"},"content":"    public void printHelp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"        printMessage(Message.HELP.getMessage());","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"     * The printSpacer is used to print hyphens to make the code looks neater.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"     **/","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Bawfen"},"content":"    public void printSpacer() {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"        printMessage(\"-\".repeat(50));","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Bawfen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Bawfen"},"content":"     * The printInvalidShowRate function is printed when an invalid format is provided","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Bawfen"},"content":"     * for the show-rate command.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Bawfen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Bawfen"},"content":"    public void printInvalidShowRate(){","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Bawfen"},"content":"        printMessage(Message.ERR_INVALID_SHOW_RATE.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Bawfen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Bawfen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"woowenjun99":66,"Bawfen":20}},{"path":"src/test/java/seedu/duke/commands/BalanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"woowenjun99"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"woowenjun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Account;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.AccountList;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"woowenjun99"},"content":"import seedu.duke.Currency;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"woowenjun99"},"content":"import java.lang.reflect.Method;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"woowenjun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"woowenjun99"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"woowenjun99"},"content":"public class BalanceCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_noCurrencySpecified_shouldReturnAll() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(\"ALL\", method.invoke(command));","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_oneCurrencySpecified_shouldReturnOne() {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance CNY\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(\"CNY\", method.invoke(command));","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"woowenjun99"},"content":"    public void processCommand_multipleCurrenciesSpecified_shouldThrowError() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"processCommand\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance CNY JPY\");","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, () -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"woowenjun99"},"content":"                method.invoke(command);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"woowenjun99"},"content":"            });","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"woowenjun99"},"content":"    public void convertStringToEnum_invalidCurrency_shouldThrowIllegalArgumentException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"convertStringToEnum\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance Me\");","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"woowenjun99"},"content":"                method.invoke(command);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"woowenjun99"},"content":"            });","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"woowenjun99"},"content":"    public void convertStringToEnum_validCurrency_shouldReturnCorrespondingCurrency() {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"convertStringToEnum\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(Currency.CNY, method.invoke(command, \"CNY\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"woowenjun99"},"content":"    public void getBalance_ifCurrencyIsNotSpecified_shouldReturnAllCurrencies() {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"woowenjun99"},"content":"        AccountList account \u003d AccountList.getInstance();","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"woowenjun99"},"content":"        account.addAccount(Currency.CNY, 200);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"woowenjun99"},"content":"        account.addAccount(Currency.EUR, 40);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"getBalance\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cCurrency, Account\u003e output \u003d (HashMap\u003cCurrency, Account\u003e) method.invoke(command, \"ALL\");","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(2, output.size());","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(200, (int) 100 * output.get(Currency.CNY).getBalance());","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(40, (int) 100 * output.get(Currency.EUR).getBalance());","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"woowenjun99"},"content":"    public void getBalance_ifNoAccountExists_shouldThrowException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"getBalance\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"balance\");","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"woowenjun99"},"content":"            assertThrows(InvocationTargetException.class, ()-\u003e{","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"woowenjun99"},"content":"                method.invoke(command, \"CNY\");","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"woowenjun99"},"content":"            });","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"woowenjun99"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"woowenjun99"},"content":"    public void getBalance_ifCurrencyExist_shouldReturnCurrency() {","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"woowenjun99"},"content":"        AccountList account \u003d AccountList.getInstance();","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"woowenjun99"},"content":"        account.addAccount(Currency.CNY, 200);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"woowenjun99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"woowenjun99"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"woowenjun99"},"content":"            Method method \u003d BalanceCommand.class.getDeclaredMethod(\"getBalance\", String.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"woowenjun99"},"content":"            method.setAccessible(true);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"woowenjun99"},"content":"            BalanceCommand command \u003d new BalanceCommand(\"CNY\");","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"woowenjun99"},"content":"            HashMap\u003cCurrency, Account\u003e output \u003d (HashMap\u003cCurrency, Account\u003e) method.invoke(command, \"CNY\");","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(1, output.size());","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"woowenjun99"},"content":"            assertEquals(200, (int) 100 * output.get(Currency.CNY).getBalance());","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"woowenjun99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"woowenjun99"},"content":"            fail();","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"woowenjun99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"woowenjun99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"woowenjun99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"woowenjun99":131}}]
