[{"path":"CONTRIBUTORS.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"| Display                                                      |        Name         |            Github Profile             |                      Homepage                      |","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"|--------------------------------------------------------------|:-------------------:|:-------------------------------------:|:--------------------------------------------------:|","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"| ![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) |     Jeffry Lum      |  [Github](https://github.com/j-lum/)  |        [Homepage](https://se.kasugano.moe)         |","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"| ![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100)  | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/) |","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":5,"wanjuin":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"tsx0314":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"| Display                                                                                                                                                                                                                                         |        Name        |                 Github Profile                 |                                             Portfolio                                              |","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:------------------:|:----------------------------------------------:|:--------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                             |    Tian Shixing    |      [Github](https://github.com/tsx0314)      |             [Portfolio](https://ay2223s2-cs2113-w13-3.github.io/tp/team/tsx0314.html)              |","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                             |   Chuah Wan Juin   |      [Github](https://github.com/wanjuin)      |    [Portfolio](https://ay2223s2-cs2113-w13-3.github.io/tp/team/wanjuin.html)     |","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                             |  Viniarskyi Davyd  |    [Github](https://github.com/DavidVin357)    |  [Portfolio](https://ay2223s2-cs2113-w13-3.github.io/tp/team/davidvin357.html)   |","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                                                                                                                                                             | Sebastian Soewanto | [Github](https://github.com/SebastianSoewanto) |                                  [Portfolio](/team/johnDoe.html)                                   |","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"| \u003cimg src \u003d \"https://is3-ssl.mzstatic.com/image/thumb/Purple116/v4/dc/6e/43/dc6e4316-4705-9f96-a4d5-6420d8a6b545/AppIcon-0-0-1x_U007emarketing-0-0-0-7-0-0-sRGB-0-0-0-GLES2_U002c0-512MB-85-220-0-0.png/512x512bb.jpg\" width \u003d 100 height \u003d 100\u003e |  Wong Zhong Xiang  |  [Github](https://github.com/ZhongXiangWong)   | [Portfolio](https://ay2223s2-cs2113-w13-3.github.io/tp/team/ZhongXiangWong.html) |","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"DavidVin357":6,"wanjuin":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"+ [Acknowledgement](#acknowledgement)","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"+ [Design](#design)","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"  + [Architecture Design Diagram](#architecture-design-diagram)","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"  + [UML Sequence Diagram](#uml-sequence-diagram)","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"+ [Implementation](#implementation)","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"  + [Add feacture](#add-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"  + [Remove feature](#remove-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"  + [Find feature](#find-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"  + [List feature](#list-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"  + [Clear feature](#clear-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"  + [Help feature](#help-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"  + [Exit feature](#exit-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"  + [Storage](#storage)","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"+ [Appendix: Requirements](#appendix--requirements)","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"  + [Product Scope](#product-scope)","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"  + [User Stories](#user-stories)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"## Acknowledgement","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"The documentation and organisation of our project follows the recommended format in [SE-Education](http://se-education.org/addressbook-level3/DeveloperGuide.html).","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"Part of the code is inspired by the [addressbook-level3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"## Design","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"### Architecture Design Diagram","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"![Diagram](images/Architecture_Diagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"Main components of the architecture","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"`Duke` is the entry point of the application. It is responsible for, ","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"+ At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"+ At shut down: Shuts down the components","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"The rest of the App consists of five components:","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"+ Ui: The UI of the App. This part displays the messages to the user.","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"+ Parse: Parse user input.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"+ Command: The command executor.","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"+ CommandResult: The command result display, displaying the command result.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"+ Storage: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"+ Parser: The command parser. Identify the various command type.","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"+ CommandResult: Prints response to users.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"### UML Sequence Diagram","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"![SequenceDiagram](images/SequenceDiagram-Food_Supply_Tracker.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"## Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"tsx0314"},"content":"### Add feature","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"The add feature is implemented using a `AddCommand` class extending from `Command` Class. ","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"`AddCommand` contains an `execute` methods, which utilises the internal `spiltDetails` methods to extract the food details","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"tsx0314"},"content":"and to construct new `food` object .","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"It is also facilitated by `Foodlist` Class, using `addFood` method of `FoodList` Class.","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"The add feature implementation is as follows:","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"1. New AddCommand object is created by passing in a String containing food details","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"2. `splitDetails` is called to split the string using different flags `-n`,`-e`,`-c`,`-q`,`-u`;","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"3. After obtaining an array of String, it will check the correctness of each parameter. It will specially check the date ","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"and the quantity. If the `date` is not a valid date (e.g. 02/15/2024)or it is before the current date","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"(meaning expired food), it will return a `CommandResult` object, and `Duke` will continue print the command result.","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"4. If there is no error, it will create a new `Food` object, based on the parameter number contained in the array.","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"5. `addFood` is called to add the new food into the food list","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"6. Return a `CommandResult` to show the successful message to the user","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"tsx0314"},"content":"**Class Diagram**","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"tsx0314"},"content":"![ClassDiagram](images/AddCommandClassDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"tsx0314"},"content":"**Sequence Diagram**","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"tsx0314"},"content":"![ClassDiagram](images/AddCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"SebastianSoewanto"},"content":"### Remove feature","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"SebastianSoewanto"},"content":"The remove command is implemented using a `RemoveCommand` class which","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"SebastianSoewanto"},"content":"utilizes `removeFood` method of the FoodList.","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"SebastianSoewanto"},"content":"The `removeFood` method implementation is as follows:","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"SebastianSoewanto"},"content":"1. New `RemoveCommand` object is created by passing in a String containing arguments from `Parser`.","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"SebastianSoewanto"},"content":"2. The `index` of the item to be deleted will be taken as its arguments.","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"SebastianSoewanto"},"content":"3. The method `execute` of `Command` class will be called from `Duke` with the `index`.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"SebastianSoewanto"},"content":"4. This method will determine if there exist a food item with that `index` in the `FoodList`.","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"SebastianSoewanto"},"content":"5. If it exists, the food item will be deleted and feedback to the user that it has been successfully removed.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"SebastianSoewanto"},"content":"6. Otherwise, the feedback will be an error message","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"SebastianSoewanto"},"content":"7. This method will return an object called `CommandResult` and pass `feedbackToUser` as its argument.","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"SebastianSoewanto"},"content":"8. `Duke` will subsequently call `printResult` method from `CommandResult`.","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"SebastianSoewanto"},"content":"**Class Diagram**","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"SebastianSoewanto"},"content":"![ClassDiagram](images/RemoveCommandClassDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"SebastianSoewanto"},"content":"**Object Diagram**","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"SebastianSoewanto"},"content":"![ClassDiagram](images/RemoveCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"tsx0314"},"content":"### Find feature","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"The `find` command is implemented using a `FindCommand` class and its `execute` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"The `FindCommand` method implementation is as follows:","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"1. Inside the constructor, split provided arguments into the term and flags","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"2. Start `execute` method by initializing `FoodList` result variable","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"3. If no term or flag is provided, throw the corresponding error to the user","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"4. Start a loop iterating over each foodItem ","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"5. Do word processing on a term and check if the foodItem name includes it","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"6. Enter a loop with switch statement for each component of the `flags` argument ","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"7. If some flag is not satisfied, continue the loop without adding foodItem to the result","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"8. If the flags loop is over, the flags conditions were satisfied, so add the foodItem to the result","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"![ClassDiagram](images/FindCommandClassDiagram.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"**Sequence Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"![ClassDiagram](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"DavidVin357"},"content":"### Update feature","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"DavidVin357"},"content":"The `update` command is implemented using an `UpdateCommand` class and its `execute` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DavidVin357"},"content":"The `UpdateCommand` implementation is as follows:","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DavidVin357"},"content":"1. Inside the constructor, split provided arguments into the index and flags","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DavidVin357"},"content":"2. Start `execute` method by parsing index to integer and catching the exception if","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DavidVin357"},"content":"   it\u0027s in the invalid format","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"3. Get the current food item by calling `foodList.getFood(index)`","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"4. Enter the loop iterating through each flag","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"5. Inside the loop, split flag into its name and value","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"6. Call `updateFoodAttribute` with the `currentFood`, `flagName`, `flagValue`, ","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"   and all `flags` provided (important for some interdependent attributes like unit and quantity)","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DavidVin357"},"content":"7. The `updateFoodAttribute` enters switch statement for the `flagName`,","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"DavidVin357"},"content":"   calling corresponding attribute setters for the `flagValue` after its validation. If no","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DavidVin357"},"content":"   `flagName` is matched, an `InvalidFlagException(flagName)` is thrown","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DavidVin357"},"content":"**Class Diagram**","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DavidVin357"},"content":"![ClassDiagram](images/UpdateCommandClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"**Sequence Diagram**","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"![ClassDiagram](images/UpdateCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"wanjuin"},"content":"### List feature","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"wanjuin"},"content":"The list command is implemented using a `ListCommand` class which utilizes `COMMAND_WORD`","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"wanjuin"},"content":"attributes of all other commands within the `commands` package.","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"wanjuin"},"content":"The list command is implemented as follows:","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"wanjuin"},"content":"1. New `ListCommand` object created will call the method `execute` of `Command` class.","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"wanjuin"},"content":"2. The method `execute` decides what to append to the string `printToUser` according to `foodList`. ","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"wanjuin"},"content":"3. `foodList` is an object of type `FoodList` that is passed as argument to `execute`, it consists of the list of food ","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"wanjuin"},"content":"that has been added by user.","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"wanjuin"},"content":"4. `foodList` contains of `Food` that has undergoes the `toString` method.","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"wanjuin"},"content":"5. `execute` will check if `numberOfFood` is greater than 0, in which `numberOfFood` is obtained from the `FoodList` ","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"wanjuin"},"content":"function `getNumberOfFood`.","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"wanjuin"},"content":"6. If `numberOfFood` is greater than 0,  the foodList in String will be appended to `printToUser`. If it is not, then ","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"wanjuin"},"content":"the empty `foodList` will not be appended to `printToUser`.","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"wanjuin"},"content":"7. After appending the `foodList`, the method `execute` will return an object called `CommandResult` and pass          ","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"wanjuin"},"content":"`printToUser` as its argument.","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"wanjuin"},"content":"8. `Duke` will then call `printResult` method from `CommandResult` which will print the food list for the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"wanjuin"},"content":"![ClassDiagram](images/ListCommandClassDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"**Object Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"wanjuin"},"content":"![ClassDiagram](images/ListCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"wanjuin"},"content":"### Clear feature","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"wanjuin"},"content":"The clear command is implemented using a `ClearCommand` class which utilizes `COMMAND_WORD` attributes to all other ","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"wanjuin"},"content":"commands within the `commands` package.","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"wanjuin"},"content":"The clear command is implemented as follows:","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"wanjuin"},"content":"1. New `ClearCommand` object created will call the method `execute` of `Command` class.","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"wanjuin"},"content":"2. The method `execute` decides what to append to the string `printToUser`.","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"wanjuin"},"content":"3. The method `execute` calls the method `clearFoodList` in FoodList to remove all the objects (Food) in FoodList.","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"wanjuin"},"content":"4. After the method `clearFoodList` has finished executing, `execute` will return an acknowledgement message to user.","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"wanjuin"},"content":"![ClassDiagram](images/ClearCommandClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"ZhongXiangWong"},"content":"**Sequence Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"wanjuin"},"content":"![SequenceDiagram](images/ClearCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"ZhongXiangWong"},"content":"### Help feature","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"ZhongXiangWong"},"content":"The help command is implemented using a `HelpCommand` class which utilizes `COMMAND_WORD` ","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"ZhongXiangWong"},"content":"attributes of all other commands within the `commands` package. ","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"ZhongXiangWong"},"content":"The help command is implemented as follows:","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"ZhongXiangWong"},"content":"1. When `Duke` reads the user input, it calls the method `parse` from the `Parser` class.","lastModifiedDate":"2023-04-06"},{"lineNumber":192,"author":{"gitId":"ZhongXiangWong"},"content":"2. The `parse` method process which command word is being queried and calls the constructor class based ","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"ZhongXiangWong"},"content":"on the command word.","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"ZhongXiangWong"},"content":"3. In the case where `help` is the command word, a new `HelpCommand` object is created with the rest of the user input ","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"ZhongXiangWong"},"content":"being the arguments for the constructor.","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"wanjuin"},"content":"4. The constructor `HelpCommand` will split the arguments based on the `--` regex and store them in an array of","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"ZhongXiangWong"},"content":"strings called `filters`.","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"wanjuin"},"content":"5. The method `execute` of `Command` class will then be called all the way from `Duke` which will be overriden by the ","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"ZhongXiangWong"},"content":"same method in `HelpCommand`.","lastModifiedDate":"2023-04-06"},{"lineNumber":200,"author":{"gitId":"wanjuin"},"content":"6. This method calls the private method `appendMessage` which decides what to append to the string `printToUser` as ","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"ZhongXiangWong"},"content":"specified by `filter`. ","lastModifiedDate":"2023-04-06"},{"lineNumber":202,"author":{"gitId":"wanjuin"},"content":"7. After looping through all the `filter`, this method will return an object called `CommandResult` and pass","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"ZhongXiangWong"},"content":"`printToUser` as its argument.","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"wanjuin"},"content":"8. `Duke` will then call `printResult` method from `CommandResult` which will print the necessary message.","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"ZhongXiangWong"},"content":"![ClassDiagram](images/HelpCommandClassDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"ZhongXiangWong"},"content":"**Sequence Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"ZhongXiangWong"},"content":"![ClassDiagram](images/HelpCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"wanjuin"},"content":"### Exit feature","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"wanjuin"},"content":"The exit command is implemented using a `ExitCommand` class which utilizes `COMMAND_WORD` attributes of all other ","lastModifiedDate":"2023-04-08"},{"lineNumber":215,"author":{"gitId":"wanjuin"},"content":"commands within the `commands` package.","lastModifiedDate":"2023-04-08"},{"lineNumber":216,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"wanjuin"},"content":"The exit command is implemented as follows","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"wanjuin"},"content":"1. When `Duke` reads the user input, it calls the method `parse` from the `Parser` class.","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"wanjuin"},"content":"2. The `parse` method process which command word is being queried and calls the constructor class based","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"wanjuin"},"content":"   on the command word.","lastModifiedDate":"2023-04-08"},{"lineNumber":221,"author":{"gitId":"wanjuin"},"content":"3. In the case where `exit` is the command word, a new `ExitCommand` object is created with the rest of the user input","lastModifiedDate":"2023-04-08"},{"lineNumber":222,"author":{"gitId":"wanjuin"},"content":"   being the arguments for the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"wanjuin"},"content":"4. The method `execute` of `Command` class will then be called all the way from `Duke` which will be overridden by the","lastModifiedDate":"2023-04-08"},{"lineNumber":224,"author":{"gitId":"wanjuin"},"content":"   same method in `ExitCommand`.","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"wanjuin"},"content":"5. This method append the exiting message to the string `printToUser`, and return an object called `CommandResult` and ","lastModifiedDate":"2023-04-08"},{"lineNumber":226,"author":{"gitId":"wanjuin"},"content":"pass `printToUser` as its argument","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"wanjuin"},"content":"6. `Duke` will then call `printResult` method from `CommandResult` which will print the necessary message.","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"wanjuin"},"content":"7. `Duke` will further call `isExit` method from `ExitCommand` which will then change `isExit` from `false` to `true`,","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"wanjuin"},"content":"which will then exits the program.","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"wanjuin"},"content":"![ClassDiagram](images/ExitCommandClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":233,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":234,"author":{"gitId":"ZhongXiangWong"},"content":"**Sequence Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"wanjuin"},"content":"![ClassDiagram](images/ExitCommandSequenceDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":236,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"ZhongXiangWong"},"content":"### Storage","lastModifiedDate":"2023-04-08"},{"lineNumber":238,"author":{"gitId":"ZhongXiangWong"},"content":"This class deals with the reading and writing of the foodTrackerList textfile. This serves as a memory that remembers ","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"ZhongXiangWong"},"content":"the latest food list inputted by the user. Upon starting the program, the text file will load the food in the foodlist,","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"ZhongXiangWong"},"content":"and right before the program close, the text file will be written with the updated list.","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"ZhongXiangWong"},"content":"**Class Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"ZhongXiangWong"},"content":"![ClassDiagram](images/StorageClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"ZhongXiangWong"},"content":"**Sequence Diagram** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"ZhongXiangWong"},"content":"![ClassDiagram](images/StorageSequenceDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"wanjuin"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"tsx0314"},"content":"# Product Scope","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"wanjuin"},"content":"**Project Direction**","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"wanjuin"},"content":"- Food Supplies Tracker: Main function is to track expiry dates ","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"wanjuin"},"content":"and storage area of foods as to minimise food shortage.","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"wanjuin"},"content":"- **Target user profile:**","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"wanjuin"},"content":"- Kitchen worker, Homemaker","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"wanjuin"},"content":"- has a need to manage food","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"wanjuin"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"wanjuin"},"content":"- can type fast","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"wanjuin"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"wanjuin"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"wanjuin"},"content":"**Value proposition:**","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"wanjuin"},"content":"1) Manage food supply faster than a typical mouse / GUI driven app","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"wanjuin"},"content":"2) Check the expiry date of a particular food quickly","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"wanjuin"},"content":"3) Check the foods in the most recent expiry dates quickly","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"wanjuin"},"content":"4) Get suggestions and alert to consume foods that are going to expire soon","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":268,"author":{"gitId":"DavidVin357"},"content":"Currently, the following functionality was implemented:","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":270,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE `","lastModifiedDate":"2023-04-07"},{"lineNumber":271,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE -c CATEGORY `","lastModifiedDate":"2023-04-07"},{"lineNumber":273,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE -p QUANTITY `","lastModifiedDate":"2023-04-07"},{"lineNumber":275,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE -c CATEGORY -p QUANTITY`","lastModifiedDate":"2023-04-07"},{"lineNumber":277,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE -p QUANTITY -u UNIT`","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"tsx0314"},"content":"`add -n PRODUCT_NAME -e EXPIRY_DATE -c CATEGORY -p QUANTITY -u UNIT`","lastModifiedDate":"2023-04-07"},{"lineNumber":281,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"wanjuin"},"content":"`list`","lastModifiedDate":"2023-04-08"},{"lineNumber":283,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"wanjuin"},"content":"`clear`","lastModifiedDate":"2023-04-08"},{"lineNumber":285,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"ZhongXiangWong"},"content":"`find {PRODUCT_NAME}`","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":288,"author":{"gitId":"ZhongXiangWong"},"content":"`find {PRODUCT_NAME} -fresh`","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":290,"author":{"gitId":"ZhongXiangWong"},"content":"`find {PRODUCT_NAME} -expired`","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"ZhongXiangWong"},"content":"`help {--COMMAND_WORD}`","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":294,"author":{"gitId":"wanjuin"},"content":"# User stories","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"wanjuin"},"content":"| Priority | As a...             | I want to ...                                                         | So that I can...                                                | Current Feature Available |","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"wanjuin"},"content":"|----------|---------------------|-----------------------------------------------------------------------|-----------------------------------------------------------------|---------------------------|","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Forgetful cook      | be reminded of what is left in my fridge                              | use the food wisely and avoid repetitive purchasing.            | `list`                    |","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"wanjuin"},"content":"| `*`      | Forgetful cook      | get all meals for the next `x` days with their ingredients            | plan my grocery trips accordingly.                              | nil                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"wanjuin"},"content":"| `* *`    | Lazy cook           | get recommended recipes based on what I have left in the \u003cbr/\u003efridge  | can spend less time considering what to cook today.             | nil                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Lazy cook           | have an efficient method of updating what leftover ingredients I have | spend less time using the software.                             | `add -n`                  |","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Lazy cook           | check the lists of food fast                                          | waste less effort digging through the fridge / kitchen.         | `list`                    |","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Busy cook           | get reminded on the products which will expire soon                   | prepare a meal based on it.                                     |                           |","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Busy cook           | get reminded on the products which will expire soon                   | plan my grocery purchases accordingly.                          |                           |","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Busy cook           | check the availability of certain food fast                           | waste little time digging through the fridge / kitchen.         | `find`                    |","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Prudent cook        | check the expiry dates of food in fridge / kitchen                    | don\u0027t waste food due to food expiring and spoiling.             | `find`                    |","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"wanjuin"},"content":"| `* *`    | Disorganised person | organise food by categories at least in a program (fruits,veggies...) | don\u0027t spend time looking for the food scattered in the kitchen. | nil                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"wanjuin"},"content":"| `* *`    | Prudent cook        | track the amount of different products I have                         | know how many portions I can cook.                              | nil                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"wanjuin"},"content":"| `*`      | Creative cook       | replace some products with others                                     | add potential replacement for the product.                      | nil                       |     ","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"wanjuin"},"content":"| `*`      | Inexperienced cook  | know how much to cook based on the number of people eating            | prepare the correct amount of food.                             | nil                       |  ","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Cook                | add product (name, expiry date, category etc)                         | keep my program updated.                                        | `add -n -e`               |","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"wanjuin"},"content":"| `* * *`  | Cook                | remove product                                                        | keep my program updated.                                        | `remove`                  |","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"wanjuin"},"content":"# Non-Functional Requirements","lastModifiedDate":"2023-04-08"},{"lineNumber":315,"author":{"gitId":"wanjuin"},"content":"1) Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"wanjuin"},"content":"2) Should be able to hold up to 9999 food products without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"wanjuin"},"content":"3) A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"ZhongXiangWong":47,"DavidVin357":38,"SebastianSoewanto":21,"-":14,"tsx0314":83,"wanjuin":114}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"# Food Supply Tracker - Duke","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"Food Supply Tracker (FSP) is a desktop app for managing food supplies, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FSP can get your food management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":7,"tsx0314":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"Food Supply Tracker (FSP) is a desktop app for managing food supplies, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, FSP can get your food management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"+ [Quick Start](#quick-start)","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"+ [Features](#features)","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"  + [Viewing help: `help`](#viewing-help)","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"  + [Adding a food product: `add`](#adding-a-food-product)","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"  + [Listing all food products: `list`](#listing-all-food-products)","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"  + [Removing a food product: `remove`](#removing-a-food-product) ","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"  + [Finding food products by name: `find`](#finding-food-products-by-name)","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"  + [Update food products by index: `update`](#updating-food-products-by-index)","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"  + [Clears the food list: `clear`](#clearing-the-food-list)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"  + [Exit FSP Program: `exit`](#exiting-fsp)","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"  + [Editing the foodTrackerList text file](#editing-foodtrackerlist-text-file)","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"+ [FAQ](#faq)","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"+ [Command Summary](#command-summary)","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"2. Download the latest Food Supplies Tracker [here](https://github.com/AY2223S2-CS2113-W13-3/tp/releases).","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"3. Copy the file to the folder you want your FoodSuppliesTracker to be in. ","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"4. Open a command terminal, navigate into the folder with your jar file using cd and run the application with java -jar tp.jar","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"5. Type the command in the command box and press Enter to execute it. E.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"SebastianSoewanto"},"content":"6. Go to [Command Summary](#command-summary) for a quick start on command format.","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"##### Quick notes about the command format:","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"1. Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"2. Parameters in the `{ }` are optionals, and `{ }` the bracket characters cannot be included in the command line.","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"3. Optional flags are put in curly braces.","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"4. Parameter is expected only once in the command. If you specify it multiple times, it will be deemed as invalid command.","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"### Viewing help","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"`help`- Show a message explaining how to access the help page and the command specified.","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"* Any extraneous parameters input after the command `help` will be ignored.","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"  (e.g. `help 123 abcde` will still work as `help`)","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"- When a filter (prefix \u003ccode\u003e--\u003c/code\u003e) is applied, the help message will display the helper for the specified command.","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"- By default, all available commands and the link to the user guide would be displayed.","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"Format: `help {--COMMAND_WORD}`","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage:","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"Input:","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"\u003ccode\u003ehelp --remove --find\u003c/code\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"Output:","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"Command \u0027remove\u0027: This command removes the food product from the food supply tracker based on its index.","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"Format: remove INDEX","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"Command \u0027find\u0027: This command finds the food product by its name.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"Format: find PRODUCT_NAME","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"Append the filter \u0027-fresh\u0027 for listing unexpired food products and \u0027-expired\u0027 for listing expired food products.","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"Append the filter \u0027-c\u0027 followed by CATEGORY to find by category.","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"List of commands: \u0027add\u0027, \u0027list\u0027, \u0027remove\u0027, \u0027find\u0027, \u0027update\u0027, \u0027clear\u0027, \u0027exit\u0027.","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"For more detailed information on usage of specific command, type: help --COMMAND","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"Refer to our user guide for more in-depth details on how to use Food Supply Tracker:","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"https://ay2223s2-cs2113-w13-3.github.io/tp/UserGuide.html","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"tsx0314"},"content":"### Adding a food product ","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"tsx0314"},"content":"`add` - Add a food product to the list of food items.","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"tsx0314"},"content":"Format: `add -n FOOD_NAME -e DD/MM/YYYY {-c CAT -q QUANTITY -u UNITS}`","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"tsx0314"},"content":"* The parameter cannot contain any punctuations, or else it will return as incorrect command.","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"tsx0314"},"content":"* `-n FOOD_NAME` and `-e DD/MM/YYYY` are compulsory.","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"tsx0314"},"content":"* `-c CAT`and`-q QUANTITY -u UNITS` are optional.","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"  * `-u UNIT` must be added together with `-q QUANTITY`.","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"wanjuin"},"content":"  * `-q QUANTITY` can be added without `-u UNIT`","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"tsx0314"},"content":"    * For example, a proper command can be `add -n milk -e 21/03/2025 -q 10.0`. ","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"tsx0314"},"content":"However, it cannot be `add -n milk -e 21/03/2025 -u packets`","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"wanjuin"},"content":"* For `CATEGORY`, we only have `FRUIT, VEGETABLE, MEAT, DAIRY, GRAIN, SEAFOOD, BEVERAGE, OTHERS`","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"tsx0314"},"content":"any other category or no category added will be deemed as `OTHERS`.","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"wanjuin"},"content":"* For `UNIT`, we only have `mg`, `g`, `kg`, `ml`, `l`, `unit`, `units`, `serving`, `servings`, `packet`, `packets`, ","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"wanjuin"},"content":"`box` and `boxes`. ","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"wanjuin"},"content":"  * Default `UNIT` will be deemed as `unit` or `units` according to the value of `QUANTITY`.","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"wanjuin"},"content":"  * If `QUANTITY` added is more than 1, then the `UNIT` will automatically change to plural form such as `units`, ","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"wanjuin"},"content":"  `servings`, `packets` and `boxes` if applicable.","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"wanjuin"},"content":"  * If `QUANTITY` added is 1, then the `UNIT` will automatically change to singular form such as `unit`, `serving`,","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"wanjuin"},"content":"  `packet` and `box` if applicable.","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"tsx0314"},"content":"Examples of usage:","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":104,"author":{"gitId":"wanjuin"},"content":"Input 1: `add -n milk -e 21/03/2025 -c dairy -q 10 -u packets`","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"wanjuin"},"content":"Output 1: ","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"tsx0314"},"content":"(The product is added on 06/04/2023, thus it shows 715 days left. The display of remaining freshness date will vary,","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"tsx0314"},"content":"based on your current date)","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"tsx0314"},"content":"milk (fresh) ","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"tsx0314"},"content":"       Expiry date: 21/03/2025 (715 days left)","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"tsx0314"},"content":"       Category: dairy","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"tsx0314"},"content":"       Remaining quantity: 10.0 packets","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"tsx0314"},"content":"I have added this product! :)","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"tsx0314"},"content":"Input 2: `add -n mike\u0027s milk -e 21/03/2025 -c da,iry -q 10 -u pac^kets`","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"wanjuin"},"content":"* Parameter cannot contain any punctuation such as `mike\u0027s milk` as a parameter","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"tsx0314"},"content":"for the flag `-n`, `da,iry` and `pac^kets`.","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"wanjuin"},"content":"Output 2:","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"tsx0314"},"content":"______________________________","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"tsx0314"},"content":"Oops! Incorrect command format. Type \u0027help\u0027 to see more!!","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"tsx0314"},"content":"______________________________","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"wanjuin"},"content":"Input 3: `add -n bread -e 11/11/2023 -q 2 -u box`","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"wanjuin"},"content":"Output 3:","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"wanjuin"},"content":"* `QUANTITY` of `bread` is more than 1","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"wanjuin"},"content":"* Unit of `bread` is `boxes` instead of `box` which is the value of `UNIT`.","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"wanjuin"},"content":"bread (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 11/11/2023 (218 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 2.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"wanjuin"},"content":"I have added this product! :)","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"tsx0314"},"content":"### Listing all food products","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"wanjuin"},"content":"`list` - List all food products available in the tracker.","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"wanjuin"},"content":"* Maximum number of food products in the list is 9999.","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"wanjuin"},"content":"* Any extraneous parameters input after the command `list` will be ignored.","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"wanjuin"},"content":"  (e.g. `list 123 abcde` will still work as `list`)","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"wanjuin"},"content":"- The list is sorted in order of the expiry dates, regardless of the order of food that is added.","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"wanjuin"},"content":"- All food products will be listed with its index, name, freshness, expiry date, number of days left / expired,","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"wanjuin"},"content":"category and quantity together with its units.","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"wanjuin"},"content":"- Food products without any quantity added or with its quantity as `0.0` will be listed with its index, name, freshness, ","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"wanjuin"},"content":"expiry date, number of days left / expired and category.","lastModifiedDate":"2023-04-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":166,"author":{"gitId":"wanjuin"},"content":"  - Number of days left will decrease as the day passed by.","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"wanjuin"},"content":"  - Number of days expired will increase as the day passed by.","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"wanjuin"},"content":"  - Freshness of food will be `(fresh)` if its expiry date is after today (number of days left \u003e 0).","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"wanjuin"},"content":"  - Freshness of food will be `(expired)` if its expiry date is today and before today (number of days left \u003c\u003d 0).","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"wanjuin"},"content":"Format: `list`","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"ZhongXiangWong"},"content":"Example of usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":175,"author":{"gitId":"wanjuin"},"content":"(Number of days depends on today\u0027s date: 07/04/2023)","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"wanjuin"},"content":"Input: `list`","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"ZhongXiangWong"},"content":"Output:","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"ZhongXiangWong"},"content":"Below are the food list: ","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"wanjuin"},"content":"1. Blueberry (expired) ","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 03/04/2023 (expired 4 days)","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"wanjuin"},"content":"       Category: fruit","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 2.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"wanjuin"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"ZhongXiangWong"},"content":"       Category: others","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 1.0 box","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"wanjuin"},"content":"3. bread (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 14/04/2023 (7 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 0.0 unit","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"wanjuin"},"content":"4. Blueberry Yogurt (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":196,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 23/04/2023 (16 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"wanjuin"},"content":"       Category: dairy","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 1.0 packet","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":200,"author":{"gitId":"wanjuin"},"content":"You now have 4 food products in your lists.","lastModifiedDate":"2023-04-07"},{"lineNumber":201,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"tsx0314"},"content":"### Removing a food product","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"tsx0314"},"content":"`remove` - Remove a food product from the list based on its index.","lastModifiedDate":"2023-04-07"},{"lineNumber":207,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"SebastianSoewanto"},"content":"Format: `remove INDEX`","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"ZhongXiangWong"},"content":"* Deletes the food according to its `INDEX` in the list.","lastModifiedDate":"2023-03-31"},{"lineNumber":211,"author":{"gitId":"SebastianSoewanto"},"content":"* `INDEX` must be represented by an integer `i.e. 1, 2, 3`","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"wanjuin"},"content":"  * `INDEX` will result in an error message if it is input as a `String` or `Double`.","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"tsx0314"},"content":"* Out-of-bounds `INDEX` will result in an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"SebastianSoewanto"},"content":"Example of usage:","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"wanjuin"},"content":"Input: \u003ccode\u003eremove 1\u003c/code\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"SebastianSoewanto"},"content":"Output:","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"SebastianSoewanto"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":222,"author":{"gitId":"wanjuin"},"content":"Removed \u0027milk\u0027 from the food supply list.","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"wanjuin"},"content":"There is/are now 1 item(s) in the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"SebastianSoewanto"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"DavidVin357"},"content":"### Finding food products by name and attributes","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"DavidVin357"},"content":"`find` - List all food products with matching name and filters","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"DavidVin357"},"content":"**Format:** `find {TERM} {--fresh} {--expired} {--ATTRIBUTE_NAME}`","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"DavidVin357"},"content":"Allowed flags to find the food item:","lastModifiedDate":"2023-04-08"},{"lineNumber":233,"author":{"gitId":"DavidVin357"},"content":"* fresh items: `--fresh`","lastModifiedDate":"2023-04-08"},{"lineNumber":234,"author":{"gitId":"DavidVin357"},"content":"* expired items: `--expired`","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"DavidVin357"},"content":"* name: `--n {string}`","lastModifiedDate":"2023-04-08"},{"lineNumber":236,"author":{"gitId":"DavidVin357"},"content":"* unit: `--u {UNIT}`","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"DavidVin357"},"content":"* quantity: `--q {number}`","lastModifiedDate":"2023-04-08"},{"lineNumber":238,"author":{"gitId":"DavidVin357"},"content":"* category: `--c {CATEGORY}`","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"DavidVin357"},"content":"**Notes:**","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"DavidVin357"},"content":"- The term is optional, and it\u0027s possible to only use filters for finding products","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"DavidVin357"},"content":"  - E.g., `find --fresh` will give all the fresh items","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"DavidVin357"},"content":"- The search is case-insensitive.","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"DavidVin357"},"content":"  - E.g. \"eggs\" will match \"Eggs\"","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"DavidVin357"},"content":"- Parts of words will be matched.","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"DavidVin357"},"content":"  - E.g. \"egg\" will match \"eggs\"","lastModifiedDate":"2023-04-08"},{"lineNumber":247,"author":{"gitId":"DavidVin357"},"content":"- Using empty query will output user error.","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"DavidVin357"},"content":"  - E.g. typing `find` will result in \"No term or flag provided\"","lastModifiedDate":"2023-04-08"},{"lineNumber":249,"author":{"gitId":"DavidVin357"},"content":"- Using both `--fresh` and `--expired` will give no results.","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"DavidVin357"},"content":"  - E.g. typing `find --fresh --expired` will result in \"No food found for such query\"","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"DavidVin357"},"content":"**Example of Usage:**","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"DavidVin357"},"content":"(Number of days depends on today\u0027s date)","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"DavidVin357"},"content":"**Input 1:** `find blueberry`","lastModifiedDate":"2023-04-08"},{"lineNumber":257,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"DavidVin357"},"content":"**Output 1:**","lastModifiedDate":"2023-04-08"},{"lineNumber":259,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"tsx0314"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"wanjuin"},"content":"1. Blueberry (expired) ","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 03/04/2023 (expired 4 days)","lastModifiedDate":"2023-04-07"},{"lineNumber":263,"author":{"gitId":"ZhongXiangWong"},"content":"       Category: fruit","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 2.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":265,"author":{"gitId":"wanjuin"},"content":"2. Blueberry Yogurt (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":266,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 23/04/2023 (16 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":267,"author":{"gitId":"wanjuin"},"content":"       Category: dairy","lastModifiedDate":"2023-04-07"},{"lineNumber":268,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 1.0 packet","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"ZhongXiangWong"},"content":"Found 2 of food items","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"tsx0314"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"DavidVin357"},"content":"**Input 2:** `find --expired`","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"DavidVin357"},"content":"**Output 2:**","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"wanjuin"},"content":"1. Blueberry (expired) ","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 03/04/2023 (expired 4 days)","lastModifiedDate":"2023-04-07"},{"lineNumber":281,"author":{"gitId":"wanjuin"},"content":"       Category: fruit","lastModifiedDate":"2023-04-07"},{"lineNumber":282,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 2.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":283,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":284,"author":{"gitId":"wanjuin"},"content":"Found 1 of food items","lastModifiedDate":"2023-04-07"},{"lineNumber":285,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":286,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":287,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":288,"author":{"gitId":"DavidVin357"},"content":"**Input 3:** `find blueberry --fresh`","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":290,"author":{"gitId":"DavidVin357"},"content":"**Output 3:**","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"DavidVin357"},"content":"1. Blueberry Yogurt (fresh) ","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"DavidVin357"},"content":"       Expiry date: 23/04/2023 (16 days left)","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"DavidVin357"},"content":"       Category: dairy","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"DavidVin357"},"content":"       Remaining quantity: 1.0 packet","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"DavidVin357"},"content":"Found 1 of food items","lastModifiedDate":"2023-04-08"},{"lineNumber":299,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":300,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":301,"author":{"gitId":"DavidVin357"},"content":"**Input 4:** `find blueberry --c dairy`","lastModifiedDate":"2023-04-08"},{"lineNumber":302,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":303,"author":{"gitId":"DavidVin357"},"content":"**Output 4:**","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":305,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":306,"author":{"gitId":"wanjuin"},"content":"1. Blueberry Yogurt (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":307,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 23/04/2023 (16 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":308,"author":{"gitId":"wanjuin"},"content":"       Category: dairy","lastModifiedDate":"2023-04-07"},{"lineNumber":309,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 1.0 packet","lastModifiedDate":"2023-04-07"},{"lineNumber":310,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"wanjuin"},"content":"Found 1 of food items","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"DavidVin357"},"content":"**Input 5:** `find --u ml`","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"DavidVin357"},"content":"**Output 5:**","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":319,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":320,"author":{"gitId":"DavidVin357"},"content":"No food found for such query","lastModifiedDate":"2023-04-08"},{"lineNumber":321,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"tsx0314"},"content":"### Updating food products by index","lastModifiedDate":"2023-04-07"},{"lineNumber":325,"author":{"gitId":"DavidVin357"},"content":"`update` - Change any attribute based on the index `i` in the list and","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"DavidVin357"},"content":"values of flags provided","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":328,"author":{"gitId":"DavidVin357"},"content":"Format: `update {i} {flags}`","lastModifiedDate":"2023-04-08"},{"lineNumber":329,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":330,"author":{"gitId":"DavidVin357"},"content":"Allowed flags to update the food item attributes:","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"DavidVin357"},"content":"* name: `--n {string}`","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"DavidVin357"},"content":"* expiry date: `--e {dd/mm/yyyy}`","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"DavidVin357"},"content":"* unit: `--u {UNIT}`","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"DavidVin357"},"content":"* quantity: `--q {number}` ","lastModifiedDate":"2023-04-08"},{"lineNumber":335,"author":{"gitId":"DavidVin357"},"content":"* category: `--c {CATEGORY}`","lastModifiedDate":"2023-04-08"},{"lineNumber":336,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"DavidVin357"},"content":"**Notes:**","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"DavidVin357"},"content":"* Multiple attributes can be changed at once by appending different flags.","lastModifiedDate":"2023-04-08"},{"lineNumber":339,"author":{"gitId":"DavidVin357"},"content":"* `update --u` can be applied individually only if its quantity is more than 0.0","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"DavidVin357"},"content":"**Example of Usage**","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"DavidVin357"},"content":"**Input 1:** \u003ccode\u003eupdate 2 --q 10\u003c/code\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":345,"author":{"gitId":"DavidVin357"},"content":"**Output 1:**","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"wanjuin"},"content":"* Before `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":349,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":350,"author":{"gitId":"wanjuin"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":351,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":352,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":353,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 20.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":354,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":355,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":356,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":357,"author":{"gitId":"wanjuin"},"content":"* After `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":358,"author":{"gitId":"ZhongXiangWong"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"ZhongXiangWong"},"content":"Updated food item successfully! ","lastModifiedDate":"2023-03-31"},{"lineNumber":361,"author":{"gitId":"wanjuin"},"content":"strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":362,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":363,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":364,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 10.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":365,"author":{"gitId":"ZhongXiangWong"},"content":"______________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"tsx0314"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":367,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":368,"author":{"gitId":"DavidVin357"},"content":"**Input 2:** `update 2 --u packets`","lastModifiedDate":"2023-04-08"},{"lineNumber":369,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":370,"author":{"gitId":"DavidVin357"},"content":"**Output 2:**","lastModifiedDate":"2023-04-08"},{"lineNumber":371,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":372,"author":{"gitId":"wanjuin"},"content":"* Before `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":373,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":374,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":375,"author":{"gitId":"wanjuin"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":376,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":377,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":378,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 10.0 boxes","lastModifiedDate":"2023-04-07"},{"lineNumber":379,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":380,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":381,"author":{"gitId":"wanjuin"},"content":"* After `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":382,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":383,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":384,"author":{"gitId":"wanjuin"},"content":"Updated food item successfully! ","lastModifiedDate":"2023-04-07"},{"lineNumber":385,"author":{"gitId":"wanjuin"},"content":"strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":386,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":387,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":388,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 10.0 packets","lastModifiedDate":"2023-04-07"},{"lineNumber":389,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":390,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":391,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":392,"author":{"gitId":"DavidVin357"},"content":"**Input 3:** `update 2 --q 1 --u boxes`","lastModifiedDate":"2023-04-08"},{"lineNumber":393,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":394,"author":{"gitId":"DavidVin357"},"content":"**Output 3:**","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":396,"author":{"gitId":"wanjuin"},"content":"* Before `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":397,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":398,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":399,"author":{"gitId":"wanjuin"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":400,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":401,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":402,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 10.0 packets","lastModifiedDate":"2023-04-07"},{"lineNumber":403,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":404,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":405,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":406,"author":{"gitId":"wanjuin"},"content":"* After `update` command:","lastModifiedDate":"2023-04-07"},{"lineNumber":407,"author":{"gitId":"wanjuin"},"content":"  * Quantity of `strawberry` is 1. ","lastModifiedDate":"2023-04-07"},{"lineNumber":408,"author":{"gitId":"wanjuin"},"content":"  * Unit of `strawberry` is `box` instead of `boxes` (user command). ","lastModifiedDate":"2023-04-07"},{"lineNumber":409,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":410,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":411,"author":{"gitId":"wanjuin"},"content":"Updated food item successfully! ","lastModifiedDate":"2023-04-07"},{"lineNumber":412,"author":{"gitId":"wanjuin"},"content":"strawberry (fresh) ","lastModifiedDate":"2023-04-07"},{"lineNumber":413,"author":{"gitId":"wanjuin"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-07"},{"lineNumber":414,"author":{"gitId":"wanjuin"},"content":"       Category: others","lastModifiedDate":"2023-04-07"},{"lineNumber":415,"author":{"gitId":"wanjuin"},"content":"       Remaining quantity: 1.0 box","lastModifiedDate":"2023-04-07"},{"lineNumber":416,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":417,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":418,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":419,"author":{"gitId":"DavidVin357"},"content":"**Input 4:** `update 1 --u kg`","lastModifiedDate":"2023-04-08"},{"lineNumber":420,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":421,"author":{"gitId":"DavidVin357"},"content":"**Output 4:**","lastModifiedDate":"2023-04-08"},{"lineNumber":422,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":423,"author":{"gitId":"DavidVin357"},"content":"* Before `update` command (`quantity \u003d 0`):","lastModifiedDate":"2023-04-08"},{"lineNumber":424,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":425,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":426,"author":{"gitId":"DavidVin357"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-08"},{"lineNumber":427,"author":{"gitId":"DavidVin357"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"DavidVin357"},"content":"       Category: others______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":429,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":430,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":431,"author":{"gitId":"DavidVin357"},"content":"* After `update` command:","lastModifiedDate":"2023-04-08"},{"lineNumber":432,"author":{"gitId":"DavidVin357"},"content":"  * The program notifies of inability to change unit when quantity is zero","lastModifiedDate":"2023-04-08"},{"lineNumber":433,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":434,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":435,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":436,"author":{"gitId":"DavidVin357"},"content":"Please set the quantity to change a unit","lastModifiedDate":"2023-04-08"},{"lineNumber":437,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":439,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":440,"author":{"gitId":"DavidVin357"},"content":"**Input 5:** `update 1 --u kg --q 5.3`","lastModifiedDate":"2023-04-08"},{"lineNumber":441,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":442,"author":{"gitId":"DavidVin357"},"content":"**Output 5:**","lastModifiedDate":"2023-04-08"},{"lineNumber":443,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":444,"author":{"gitId":"DavidVin357"},"content":"* Before `update` command (`quantity \u003d 0`):","lastModifiedDate":"2023-04-08"},{"lineNumber":445,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":446,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":447,"author":{"gitId":"DavidVin357"},"content":"2. strawberry (fresh) ","lastModifiedDate":"2023-04-08"},{"lineNumber":448,"author":{"gitId":"DavidVin357"},"content":"       Expiry date: 08/04/2023 (1 days left)","lastModifiedDate":"2023-04-08"},{"lineNumber":449,"author":{"gitId":"DavidVin357"},"content":"       Category: others______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":450,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":451,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":452,"author":{"gitId":"DavidVin357"},"content":"* After `update` command:","lastModifiedDate":"2023-04-08"},{"lineNumber":453,"author":{"gitId":"DavidVin357"},"content":"  * The program successfully updates quantity and unit together","lastModifiedDate":"2023-04-08"},{"lineNumber":454,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":455,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":456,"author":{"gitId":"DavidVin357"},"content":"______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"DavidVin357"},"content":"Updated food item successfully! ","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"DavidVin357"},"content":"strawberry (fresh)","lastModifiedDate":"2023-04-08"},{"lineNumber":459,"author":{"gitId":"DavidVin357"},"content":"       Expiry date: 08/05/2023 (30 days left)","lastModifiedDate":"2023-04-08"},{"lineNumber":460,"author":{"gitId":"DavidVin357"},"content":"       Category: others","lastModifiedDate":"2023-04-08"},{"lineNumber":461,"author":{"gitId":"DavidVin357"},"content":"       Remaining quantity: 5.3 kg______________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"DavidVin357"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":463,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"wanjuin"},"content":"### Clearing the food list","lastModifiedDate":"2023-04-07"},{"lineNumber":465,"author":{"gitId":"wanjuin"},"content":"`clear` - This command will clear the entire food list.","lastModifiedDate":"2023-04-07"},{"lineNumber":466,"author":{"gitId":"wanjuin"},"content":"* Any extraneous parameters input after the command `clear` will be ignored.","lastModifiedDate":"2023-04-07"},{"lineNumber":467,"author":{"gitId":"wanjuin"},"content":"  ","lastModifiedDate":"2023-04-07"},{"lineNumber":468,"author":{"gitId":"wanjuin"},"content":"  (e.g. `clear 123 abcde` will still work as `clear`)","lastModifiedDate":"2023-04-07"},{"lineNumber":469,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":470,"author":{"gitId":"wanjuin"},"content":"Output:","lastModifiedDate":"2023-04-07"},{"lineNumber":471,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":472,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":473,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":474,"author":{"gitId":"wanjuin"},"content":"Clearing the food list as requested...","lastModifiedDate":"2023-04-07"},{"lineNumber":475,"author":{"gitId":"wanjuin"},"content":"______________________________","lastModifiedDate":"2023-04-07"},{"lineNumber":476,"author":{"gitId":"wanjuin"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":477,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":478,"author":{"gitId":"wanjuin"},"content":"### Exiting FSP","lastModifiedDate":"2023-04-07"},{"lineNumber":479,"author":{"gitId":"tsx0314"},"content":"`exit` - This command will save the food list in an external file before closing the program.","lastModifiedDate":"2023-04-07"},{"lineNumber":480,"author":{"gitId":"wanjuin"},"content":"* Any extraneous parameters input after the command `exit` will be ignored.","lastModifiedDate":"2023-04-07"},{"lineNumber":481,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":482,"author":{"gitId":"wanjuin"},"content":"  (e.g. `exit 123 abcde` will still work as `exit`)","lastModifiedDate":"2023-04-07"},{"lineNumber":483,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"ZhongXiangWong"},"content":"### Editing foodTrackerList text file","lastModifiedDate":"2023-04-08"},{"lineNumber":485,"author":{"gitId":"ZhongXiangWong"},"content":"It is possible for users to edit their food list without using the program. However, the editing should take when the","lastModifiedDate":"2023-04-08"},{"lineNumber":486,"author":{"gitId":"ZhongXiangWong"},"content":"program is not running as the edits will not be saved otherwise (the program has higher priority).","lastModifiedDate":"2023-04-08"},{"lineNumber":487,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":488,"author":{"gitId":"ZhongXiangWong"},"content":"#### The syntax and logic of the file is as follows","lastModifiedDate":"2023-04-08"},{"lineNumber":489,"author":{"gitId":"ZhongXiangWong"},"content":"* Syntax:","lastModifiedDate":"2023-04-08"},{"lineNumber":490,"author":{"gitId":"ZhongXiangWong"},"content":"  * `|n` indicates the name of the food ","lastModifiedDate":"2023-04-08"},{"lineNumber":491,"author":{"gitId":"ZhongXiangWong"},"content":"  * `|e` indicates the expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":492,"author":{"gitId":"ZhongXiangWong"},"content":"  * `|q` indicates the quantity ","lastModifiedDate":"2023-04-08"},{"lineNumber":493,"author":{"gitId":"ZhongXiangWong"},"content":"  * `|u` indicates the unit","lastModifiedDate":"2023-04-08"},{"lineNumber":494,"author":{"gitId":"ZhongXiangWong"},"content":"  * `|c` indicates the category","lastModifiedDate":"2023-04-08"},{"lineNumber":495,"author":{"gitId":"ZhongXiangWong"},"content":"* When more than one of the same identifier is used, the value associated with the last identifier will be used.","lastModifiedDate":"2023-04-08"},{"lineNumber":496,"author":{"gitId":"ZhongXiangWong"},"content":"* It is possible for optional attributes which includes `quantity`, `unit` and `category` to be not included.","lastModifiedDate":"2023-04-08"},{"lineNumber":497,"author":{"gitId":"ZhongXiangWong"},"content":"* Compulsory attributes such as `name` and `expiry date` have to be included or else the line of data will be ignored.","lastModifiedDate":"2023-04-08"},{"lineNumber":498,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":499,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":501,"author":{"gitId":"tsx0314"},"content":"**Q1**: Do I need other software to support FSP?","lastModifiedDate":"2023-03-23"},{"lineNumber":502,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":503,"author":{"gitId":"tsx0314"},"content":"**A**: No, you do not need any other software to support FSP.","lastModifiedDate":"2023-03-23"},{"lineNumber":504,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":505,"author":{"gitId":"tsx0314"},"content":"**Q2**: I am unable to add the food product./I cannot list the food items./ I cannot remove the items.","lastModifiedDate":"2023-03-23"},{"lineNumber":506,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":507,"author":{"gitId":"tsx0314"},"content":"**A**: Please take note of the command line format shown in the features section. Type ‘help’ to show the command line and please follow the command line exactly. Moreover, please check that the parameters are also in the correct format to avoid meaningless addition of food product.","lastModifiedDate":"2023-03-23"},{"lineNumber":508,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":509,"author":{"gitId":"tsx0314"},"content":"**Q3**: Is searching case-sensitive?","lastModifiedDate":"2023-03-23"},{"lineNumber":510,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":511,"author":{"gitId":"tsx0314"},"content":"**A**: No, and items matching at least one keyword will be returned.","lastModifiedDate":"2023-03-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":513,"author":{"gitId":"tsx0314"},"content":"**Q4**: Can I write creative names for my food items?","lastModifiedDate":"2023-03-23"},{"lineNumber":514,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":515,"author":{"gitId":"tsx0314"},"content":"**A**: Yes, you may do that to increase the amusement when listing the food items. However, it might be difficult for you to search for that specific item.","lastModifiedDate":"2023-03-23"},{"lineNumber":516,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":517,"author":{"gitId":"tsx0314"},"content":"**Q5**: What if I add the item\u0027s name incorrectly?","lastModifiedDate":"2023-03-23"},{"lineNumber":518,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":519,"author":{"gitId":"tsx0314"},"content":"**A**: Currently, we have not implemented the edit features. Please remove the item that you created wrongly and add a new food product.","lastModifiedDate":"2023-03-23"},{"lineNumber":520,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":521,"author":{"gitId":"tsx0314"},"content":"**Q6**: Can I export my food list into CSV files?","lastModifiedDate":"2023-03-23"},{"lineNumber":522,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"tsx0314"},"content":"**A**: Sorry, currently FSP does not have such features, but we will work on it in the future.","lastModifiedDate":"2023-03-23"},{"lineNumber":524,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":525,"author":{"gitId":"tsx0314"},"content":"**Q7**:How do I transfer my data to another Computer?","lastModifiedDate":"2023-03-23"},{"lineNumber":526,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":527,"author":{"gitId":"tsx0314"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FSP home folder.","lastModifiedDate":"2023-03-23"},{"lineNumber":528,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":529,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":531,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":533,"author":{"gitId":"ZhongXiangWong"},"content":"* Help - `help {--COMMAND_WORD}`","lastModifiedDate":"2023-04-07"},{"lineNumber":534,"author":{"gitId":"ZhongXiangWong"},"content":"  * e.g. \u003ccode\u003ehelp --update --add\u003c/code\u003e ","lastModifiedDate":"2023-03-31"},{"lineNumber":535,"author":{"gitId":"tsx0314"},"content":"* Add - `add -n FOOD_NAME -e DD/MM/YYYY {-c CAT -q QUANTITY -u UNIT}`","lastModifiedDate":"2023-04-07"},{"lineNumber":536,"author":{"gitId":"tsx0314"},"content":"  * All possible add command format:","lastModifiedDate":"2023-04-07"},{"lineNumber":537,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025`","lastModifiedDate":"2023-04-07"},{"lineNumber":538,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025 -c others`","lastModifiedDate":"2023-04-07"},{"lineNumber":539,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025 -q 10`","lastModifiedDate":"2023-04-07"},{"lineNumber":540,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025 -c others -q 10`","lastModifiedDate":"2023-04-07"},{"lineNumber":541,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025 -q 10 -u packets`","lastModifiedDate":"2023-04-07"},{"lineNumber":542,"author":{"gitId":"tsx0314"},"content":"    * e.g. `add -n Red Mill Granola -e 20/05/2025 -c others -q 10 -u packets`","lastModifiedDate":"2023-04-07"},{"lineNumber":543,"author":{"gitId":"ZhongXiangWong"},"content":"* List - `list`","lastModifiedDate":"2023-03-31"},{"lineNumber":544,"author":{"gitId":"tsx0314"},"content":"* Remove - `remove INDEX_NUMBER`","lastModifiedDate":"2023-03-23"},{"lineNumber":545,"author":{"gitId":"wanjuin"},"content":"  * e.g. `remove 1`","lastModifiedDate":"2023-04-07"},{"lineNumber":546,"author":{"gitId":"DavidVin357"},"content":"* Find - `find KEYWORD {--fresh} {--expired} {--ATTRIBUTE_FLAG}`","lastModifiedDate":"2023-04-08"},{"lineNumber":547,"author":{"gitId":"DavidVin357"},"content":"  * e.g. `find egg`, `find egg --fresh`, `find --expired`, `find --c`, `find --u` ","lastModifiedDate":"2023-04-08"},{"lineNumber":548,"author":{"gitId":"DavidVin357"},"content":"* Update - `update INDEX --ATTRIBUTE_FLAG UPDATED_VALUE`","lastModifiedDate":"2023-04-08"},{"lineNumber":549,"author":{"gitId":"DavidVin357"},"content":"  * e.g. `update 2 --q 1`, `update 2 --q 1 --u packet`, `update 2 --q 1 --u packet --c fruit --n potato --e 05/05/2024`","lastModifiedDate":"2023-04-08"},{"lineNumber":550,"author":{"gitId":"wanjuin"},"content":"* Clear - `clear`","lastModifiedDate":"2023-04-07"},{"lineNumber":551,"author":{"gitId":"tsx0314"},"content":"* exit - `exit`","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ZhongXiangWong":78,"DavidVin357":120,"SebastianSoewanto":18,"-":26,"tsx0314":118,"wanjuin":191}},{"path":"docs/puml/AddCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"hide circle","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"class Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"class AddCommand {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"    +details: String","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"    +execute(FoodList: foodList): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"    +splitDetails(String: details) : String[]","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"class CommandResult {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"    +feedbackToUser:String","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"    +printResult(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"CommandResult \u003c-- AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"CommandResult \u003c-- Command","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"tsx0314":24}},{"path":"docs/puml/AddCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"participant \":Duke\"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"participant \":AddCommand\"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"participant \":foodList\"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":AddCommand\": execute(arguments)","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"activate \":AddCommand\"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" -\u003e \":AddCommand\": splitDetails(details)","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"activate \":AddCommand\" #DarkSalmon","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" --\u003e \":AddCommand\": foodDetails","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"deactivate","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"alt check date format","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"break the date format is invalid","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"create \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" -\u003e \":CommandResult\": new(INVALID_DATE_MESSAGE)","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"activate \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"\":CommandResult\" -\u003e System: printResult()","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"deactivate","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"destroy \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"break date falls into the special case 02/29 with non-leap year","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"create \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" -\u003e \":CommandResult\": new(INVALID_DATE_MESSAGE)","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"activate \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"\":CommandResult\" -\u003e System: printResult()","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"deactivate","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"destroy \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"activate \":AddCommand\"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"break date is before the current date","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"create \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" -\u003e \":CommandResult\": new(INVALID_DATE_MESSAGE)","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"activate \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"\":CommandResult\" -\u003e System: printResult()","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"deactivate","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"destroy \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"activate \":AddCommand\"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"alt foodDetails.length \u003d\u003d 2","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date))","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"tsx0314"},"content":"else foodDetails.length \u003d\u003d 3 and details contains quantity","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date,quantity))","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"tsx0314"},"content":"else foodDetails.length \u003d\u003d 3 and details does not contain quantity","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date,category))","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"tsx0314"},"content":"else foodDetails.length \u003d\u003d 4 and details contains unit","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date,quantity,unit))","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"else foodDetails.length \u003d\u003d 4 and details does contain unit","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date,quantity, category))","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"tsx0314"},"content":"else foodDetails.length \u003d\u003d 5","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"\":foodList\" \u003c- \":AddCommand\": addFood(new Food(name,date,quantity,unit,category))","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"participant \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"create \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"\":AddCommand\" -\u003e \":CommandResult\": new(ADD_MESSAGE)","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"activate \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"\":CommandResult\" -\u003e System: printResult()","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"deactivate","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"destroy \":CommandResult\"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"tsx0314"},"content":"destroy \":AddCommand\"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"tsx0314"},"content":"@enduml","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"tsx0314":73}},{"path":"docs/puml/ClearCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Command \u003c|-- ClearCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Command -\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"ClearCommand -\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"ClearCommand --\u003e FoodList : clears","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"FoodList -\u003e Food","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"hide circle","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"abstract class Command{","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"class ClearCommand {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    +execute(foodList: FoodList): CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"class CommandResult {","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    -feedbackToUser: String","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    +printResult(): void","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"class FoodList {","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    -foodList: ArrayList\u003cFood\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    +clearFoodList(): void","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    +removeFood(index: int): void","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"class Food{","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    - name: String","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    - expiryDate: String","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    - quantity: Double","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    + toString(): String","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"wanjuin":41}},{"path":"docs/puml/ClearCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Participant Duke","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Participant ClearCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"Participant FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e ClearCommand: execute(foodList)","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"activate ClearCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"ClearCommand -\u003e FoodList: clearFoodList()","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"activate FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"loop foodList","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"FoodList -\u003e FoodList: remove(0)","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"activate FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"FoodList --\u003e FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"deactivate FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"end","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"ClearCommand \u003c-- FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"deactivate FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"destroy FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"ClearCommand --\u003e Duke: new CommandResult(printToUser)","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"deactivate ClearCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"destroy ClearCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"wanjuin":29}},{"path":"docs/puml/ExitCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Command \u003c|-- ExitCommand: exits program","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Command -\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"ExitCommand -\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"ExitCommand --\u003e FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"hide circle","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"abstract class Command{","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"class ExitCommand {","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    +execute(foodList: FoodList): CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    +isExit(): boolean","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"class CommandResult {","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    -feedbackToUser: String","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    +printResult(): void","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"class FoodList {","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"wanjuin":29}},{"path":"docs/puml/ExitCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e Parser: parse(fullCommand)","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"activate Parser","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"create ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"ExitCommand \u003c- Parser : ExitCommand(arguments)","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"activate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"ExitCommand --\u003e Parser","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"deactivate Parser","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e ExitCommand : execute(foodList)","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"activate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"create CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"ExitCommand -\u003e CommandResult : CommandResult(printToUser)","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"activate CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"destroy ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e CommandResult: printResult()","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"CommandResult-\u003eSystem: out.println(feedbackToUser)","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"System --\u003e CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"CommandResult --\u003e Duke","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"destroy CommandResult","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e ExitCommand: isExit()","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"activate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"ExitCommand --\u003e Duke","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"destroy ExitCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"destroy Duke","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"wanjuin":41}},{"path":"docs/puml/FindCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"hide circle","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"\":Command\" \u003c|-- \":FindCommand\"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"class \":Command\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"class \":CommandResult\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    String feedbackToUser","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    +printResult()","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"class \":FindCommand\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    term: String","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    flags: String[]","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    +execute(foodList: FoodList): CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"\":FindCommand\" \"1\" --\u003e \"1\" \":FoodList\": adds matched item","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"\":Command\"  --\u003e \":CommandResult\"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"\":FindCommand\"  --\u003e \":CommandResult\"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"class \":FoodList\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    +addFood(Food food)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    foodList: ArrayList\u003cFood\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"DavidVin357":28,"tsx0314":1}},{"path":"docs/puml/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e Parser: parse(command)","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"activate Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"create FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"FindCommand \u003c- Parser : FindCommand(arguments)","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"activate FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"FindCommand --\u003e Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"deactivate FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"deactivate Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e FindCommand : execute(foodList)","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"activate FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"create FoodList as Result","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"FindCommand -\u003e Result: new FoodList();","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"activate Result","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"Result -\u003e FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"deactivate Result","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"loop for every foodItem","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    opt hasTerm","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        alt flag not satisfied","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"             FindCommand -\u003e FindCommand: continue loop","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        else all flags satisfied","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"            FindCommand -\u003e Result: addFood()","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        end","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    end","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"end","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"FindCommand -\u003e CommandResult : CommandResult(FoodList)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"deactivate FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"destroy FindCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e CommandResult: printResult()","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"CommandResult-\u003eSystem: System.out.println(feedbackToUser)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"destroy CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"System --\u003e Duke","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"DavidVin357":45}},{"path":"docs/puml/HelpCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"hide circle","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"Parser --\u003e HelpCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"Parser --\u003e Command","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"class Parser {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    +parse(String: userInput): Command","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"CommandResult \u003c-- Command","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"abstract class Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    +execute(FoodList: foodList): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"CommandResult \u003c-- HelpCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"class CommandResult {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    +feedbackToUser: String","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"    +CommandResult(String: feedbackToUser)","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    +printResult(): void","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"Command \u003c|-- HelpCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"class HelpCommand {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"    -filters: HashSet\u003cString\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    -appendMessage(String: printToUser, String: filter): String","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"    +HelpCommand(String: userInput)","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"    +execute(FoodList: foodList): CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ZhongXiangWong":33}},{"path":"docs/puml/HelpCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"Duke -\u003e Parser: parse(fullCommand)","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"activate Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"create HelpCommand as hc","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"hc \u003c- Parser : HelpCommand(arguments)","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"activate hc","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"hc --\u003e Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate hc","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"Duke -\u003e hc : execute(foodList)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"activate hc","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"alt filter size \u003c\u003d 1","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"else","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"loop all filters","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"hc -\u003e hc : appendMessage(printToUser, filter)","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"activate hc","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"hc --\u003e hc","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate hc","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"end","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"end","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"create CommandResult as cr","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"hc -\u003e cr : CommandResult(printToUser)","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"activate cr","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate hc","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"destroy hc","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"Duke -\u003e cr: printResult()","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"cr-\u003eSystem: out.println(feedbackToUser)","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"System --\u003e cr","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"cr --\u003e Duke","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate cr","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"destroy cr","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ZhongXiangWong":47}},{"path":"docs/puml/ListCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Command -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"ListCommand --\u003e FoodList : lists out","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"FoodList -\u003e Food","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"hide circle","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"abstract class Command{","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"class ListCommand {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    +execute(foodList: FoodList): CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    +outputToUser(foodList: FoodList): String","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"class CommandResult {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    -feedbackToUser: String","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    +printResult(): void","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"class FoodList {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    -foodList: ArrayList\u003cFood\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    +getNumberOfFood(): int","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"class Food{","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    - name: String","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    - expiryDate: String","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    - quantity: Double","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    + toString(): String","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"wanjuin":41}},{"path":"docs/puml/ListCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"Participant Duke","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Participant ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"Participant FoodList","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"Duke -\u003e ListCommand: execute(foodList)","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"activate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"ListCommand -\u003e FoodList: getNumberOfFood()","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"activate FoodList","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"ListCommand \u003c-- FoodList: numberOfFood","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"deactivate FoodList","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"destroy FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"ListCommand --\u003e Duke: new CommandResult(printToUser)","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"deactivate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"destroy ListCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"wanjuin":20}},{"path":"docs/puml/RemoveCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"hide circle","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"hide footbox","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"Command \u003c|-- RemoveCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"FoodList \u003c-- RemoveCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"CommandResult \u003c-- RemoveCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"CommandResult \u003c-- Command","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"class Command{","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"    +execute: CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"class RemoveCommand{","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"    index: String","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"    +execute(foodList : FoodList) : CommandResult","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"SebastianSoewanto"},"content":"class CommandResult{","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"SebastianSoewanto"},"content":"    +feedbackToUser: String","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"SebastianSoewanto"},"content":"    +printResult()","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"SebastianSoewanto"},"content":"class FoodList{","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"SebastianSoewanto"},"content":"    +removeFood()","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"SebastianSoewanto"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"SebastianSoewanto":31}},{"path":"docs/puml/RemoveCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"SebastianSoewanto"},"content":"participant Duke","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"participant RemoveCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"Duke -\u003e RemoveCommand : execute(arguments)","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"activate RemoveCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"RemoveCommand -\u003e FoodList : getFood(index)","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"activate FoodList","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"FoodList -\u003e FoodList : getName()","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"SebastianSoewanto"},"content":"FoodList --\u003e RemoveCommand : foodName","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"RemoveCommand --\u003e Duke : new CommandResult()","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"SebastianSoewanto":20}},{"path":"docs/puml/SequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"@startuml","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"title Food Supply Tracker","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"actor User","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"participant \":Duke\"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"participant \":Ui\"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"participant \":Parser\"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"participant \":Command\"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"participant \":storageFile\"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"alt not exit","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"User -\u003e \":Duke\": run()","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"activate \":Duke\"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":Ui\": showWelcomeMessage()","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"activate \":Ui\"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"\":Ui\" --\u003e \":Duke\":","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"deactivate \":Ui\"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"User -\u003e \":Duke\": user input","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":Ui\": readCommand()","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"\":Ui\" --\u003e \":Duke\":fullCommand","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":Duke\": processCommand(fullCommand)","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"activate \":Duke\" #DarkSalmon","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":Parser\" : parse(fullCommand)","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"activate \":Parser\"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"\":Parser\" --\u003e \":Command\": new Command()","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"deactivate \":Parser\"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"destroy \":Parser\"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":Command\": execute(userInput)","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"activate \":Command\"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"participant \":CommandResult\"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"\":Command\" --\u003e \":CommandResult\": new CommandResult()","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"deactivate \":Command\"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"destroy \":Command\"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"activate \":CommandResult\"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"\":Duke\"-\u003e\":CommandResult\": printResult()","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"\":CommandResult\" --\u003e \":Duke\"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"deactivate \":CommandResult\"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"destroy  \":CommandResult\"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"\":Duke\" -\u003e \":storageFile\": save(foodList)","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"\":Duke\" --\u003e \":Duke\": command.exit()","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"deactivate \":Duke\"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"end","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"@enduml","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"tsx0314":48}},{"path":"docs/puml/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"hide circle","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"class StorageFile {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"    +load(): void","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    +save(FoodList: foodList): void","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"class FoodListEncoder {","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"    -encodeFoodToString(Food: food): String","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"    +encodeFoodList(FoodList: toSave): ArrayList\u003cString\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"class FoodListDecoder {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":" -decodedFoodFromString(String: encodedFood): Food","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":" +decodeFoodList(List\u003cString\u003e: encodedFoodList): FoodList","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"StorageFile --\u003e FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"StorageFile --\u003e FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"ZhongXiangWong":26}},{"path":"docs/puml/StorageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"participant Duke","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"create StorageFile as sf","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"Duke -\u003e sf: load()","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"activate sf","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"sf -\u003e FoodListDecoder: decodeFoodList(Files.readAllLines(path))","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"activate FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"loop while still has next line","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListDecoder -\u003e FoodListDecoder: decodeFoodFromString(encodedFood)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"activate FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListDecoder --\u003e FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"end","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"participant FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"create FoodList as fl","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListDecoder --\u003e fl","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"destroy FoodListDecoder","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"activate fl","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"Duke -\u003e sf: save(foodList)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"sf -\u003e FoodListEncoder: encodeFoodList(toSave)","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"activate FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"loop end of list is not reached","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListEncoder -\u003e FoodListEncoder: encodedFoodToString(food)","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListEncoder --\u003e FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"end","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"FoodListEncoder --\u003e sf","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"deactivate FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"destroy FoodListEncoder","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"destroy sf","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"destroy fl","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"ZhongXiangWong":44}},{"path":"docs/puml/UpdateCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"hide circle","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"\":Command\" \u003c|-- \":UpdateCommand\"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"class \":Command\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    +execute(): CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"class \":CommandResult\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"    String feedbackToUser","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"    +printResult()","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"class \":UpdateCommand\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    index: String","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    flags: String[]","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    -updateFoodAttribute(Food currentFood, String flagName, String flagValue, String[] allFlags)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    +execute(foodList: FoodList): CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"\":UpdateCommand\" \"1\" --\u003e \"1\" \":FoodList\": sets updated attributes","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"\":Command\"  --\u003e \":CommandResult\"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"\":UpdateCommand\"  --\u003e \":CommandResult\"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"class \":FoodList\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    foodList: ArrayList\u003cFood\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    +setName(String name)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    +setExpiryDate(String expiryDate)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    +setQuantity(double quantity)","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    +setCategory(String category)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    +setUnit(String unit)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"DavidVin357":34}},{"path":"docs/puml/UpdateCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e Parser: parse(command)","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"activate Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"create UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"UpdateCommand \u003c- Parser : UpdateCommand(arguments)","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"activate UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"UpdateCommand --\u003e Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"deactivate UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"deactivate Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e UpdateCommand : execute(foodList)","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"activate UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"create FoodList","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"UpdateCommand -\u003e FoodList: getFood(index);","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"FoodList -\u003e UpdateCommand: return foodItem","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"loop for every flag","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    alt flagName \u003d\u003d \"n\"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        UpdateCommand -\u003e Food: setName(flagValue)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    else flagName \u003d\u003d \"c\"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"            UpdateCommand -\u003e Food: setCategory(flagValue)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    else flagName \u003d\u003d \"u\"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"            UpdateCommand -\u003e Food: setUnit(flagValue)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    else flagName \u003d\u003d \"q\"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"            UpdateCommand -\u003e Food: setQuantity(flagValue)","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    else flagName \u003d\u003d \"e\"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"            UpdateCommand -\u003e Food: setExpiryDate(flagValue)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    end","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"create CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"UpdateCommand -\u003e CommandResult : CommandResult(updatedFood)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"activate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"deactivate UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"destroy UpdateCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"Duke -\u003e CommandResult: printResult()","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"CommandResult-\u003eSystem: System.out.println(feedbackToUser)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"destroy CommandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"System --\u003e Duke","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"DavidVin357":45}},{"path":"docs/team/ZhongXiangWong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"## Wong Zhong Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"### Project: Food Supply Tracker","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"#### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"Food Supply Tracker (FSP) is a desktop food list tracking key information about food products such as quantity and ","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"expiry date. The tracking of these 2 attributes is aimed to minimise food wastage. It is optimized for Command Line Interface (CLI). If you can type fast, FSP can get your food management","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"#### Contributions","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"###### Code Contributed: [CodeDashboard](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dZhongXiangWong\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dZhongXiangWong\u0026tabRepo\u003dAY2223S2-CS2113-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"###### Enhancement implemented:","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"* Implemented `help` feature and `storage` management.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"  * `help` feature gives a brief overview of the format of  commands that our FSP accepts. It is optimised where ","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"  additional information about a certain command can be given if user append the command at the back, so to not show a ","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"  wall of text to the user. Furthermore, repeat commands will be ignored and invalid command will be feedbacked ","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"  to the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"  * `storage` is the management of the FSP save file where food list will be read from during startup and will be","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"  written into when the program closes. Attributes of food are stored in a clear way where their attribute values will ","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"  append right after their identifier. This is to improve the readability of the text file for the users.","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"* Wrote JUnit test based on edge cases and bug reports to ensure program works as intended and past mistake ","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"would not happen again.","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"  ","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"###### Contributions to the UG:","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"* Wrote the portion on `help` and `storage` for the User Guide.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"* Did some minor formatting to help improve the readability.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"###### Contributions to the DG:","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"* Wrote the portion on `help` and `storage` for the Developer Guide including the associated UML diagrams.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"###### Contributions to team-based tasks:","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"* Set up issues for bug reports and project milestones. [Link](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dis%3Aissue+author%3AZhongXiangWong+is%3Aclosed)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"###### Review/mentoring contributions:","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"* Reviewed PR made by my team members. [Link](https://github.com/AY2223S2-CS2113-W13-3/tp/pulls?q\u003dis%3Apr+reviewed-by%3AZhongXiangWong+is%3Aclosed)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ZhongXiangWong":37}},{"path":"docs/team/davidvin357.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"# Viniarskyi Davyd\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"## Project: Food Supply Tracker","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"Food Supply Tracker (FSP) is a desktop food list tracking the expiry date of the food in the list.","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"It is optimized for use via a Command Line Interface (CLI) .","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"If you can type fast, FSP can get your food management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"### Contributions","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"###### Code Contributed: [Code Dashboard](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dDavid\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDavidVin357\u0026tabRepo\u003dAY2223S2-CS2113-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"###### Enhancements implemented:","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"1. **New Feature: Find Command**","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"  - Purpose: the command lets the user to find the","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    products by term and/or custom filters","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"  - Work done:","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    - Fully implemented `FindCommand` class","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    - Added JavaDoc and JUnit tests for it","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"2. **New Feature: Update Command**","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"  - Purpose: the command lets the user","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    to update any attribute of the food item in","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    any order","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"  - Work done:","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    - Fully implemented `UpdateCommand` class","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"    - Added JavaDoc and JUnit tests for it","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"3. **Utils: `DateFormatter` and `Validator` classes**","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"  - Purpose: reduce code redundancy and provide standard interface","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    to oftenly used methods for parsing date and validating food attributes","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"  - Work done:","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    - Created utils package with its `DateFormatter` and `Validator` classes","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"      and replaced repeated code throughout codebase with their methods","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"4. **Miscellaneous**","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"  - Added Food constructor attribute validation and exception handling as a last resort mechanism","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"    for catching errors","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"  - Implemented Food class `toString` method","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"  - Created `InvalidFlagException` and `FlagValueExceptionn`","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    used for throwing errors on faulty flags","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"###### Contributions to the UG","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"- Find Command description with 2 examples","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"- Update Command description with 2 examples","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"###### Contributions to the DG","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"- Diagrams:","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"  + FindCommandSequenceDiagram.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"  + FindCommandClassDiagram.puml","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"  + UpdateCommandSequenceDiagram.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"  + UpdateCommandClassDiagram.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"- Specifications:","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"  + `FindCommand` implementation description","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"  + `UpdateCommand` implementation description","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"###### Contributions to team-based tasks","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"- Allocated the issues among team members","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"- Resolved the following issues: [link](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dis%3Aissue+assignee%3ADavidVin357+is%3Aclosed)","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"###### Review/mentoring contributions","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"- [#69](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/69)","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"- [#200](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/200)","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"- [#226](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/226)","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"- [all reviews](https://github.com/AY2223S2-CS2113-W13-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3A%40me)","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"DavidVin357":66}},{"path":"docs/team/tsx0314.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"# Tian Shixing\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"## Project: Food Supply Tracker","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"### Overview","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"Food Supply Tracker(FSP) is a desktop food list tracking the expiry date of the food in the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"It is optimized for use via a Command Line Interface (CLI) . ","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"If you can type fast, FSP can get your food management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"---","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"### Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"+ New Features: `Food `Class and `FoodList` Class","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"  + Created a Food Class with basic attributes, such as `name` and `expiryDate`","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"    + Enhancements:","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"      + `FoodCategory` Class is added to give more opportunities for the attributes of Food.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"  + Created a FoodList Class with basic attributes.","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"+ New Feature: Add Feature (add food items in the food list)","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"  + What it does: It allows the user to add food item with details. For example, the user can add expiry date and so on. ","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"  + Justification: This feature improves the product significantly because usually a user may forget what it is put into the list","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"  , and it is inconvenient for user to \u0027list\u0027 all items at once, and check through all the products. ","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"  With the parameter of \u0027expiry date\u0027, it allows users to immediately know which products will be soon and consume it ","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"  as soon as possible. ","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"  + Enhancements implemented: ","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"    + Add command line check to prevent bad input.","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"    + Allow users to add additional details, including `category`and `quantity`.","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"    + Check the date validation and quantity validation to prevent food items with ","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"unreasonable date and quantity from adding to the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"    + Add Javadoc comments for Add Command classes and its methods.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"    + Add JUnit tests for AddCommand.","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"+ New Feature: Exit Command (exit the application)","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"  + What it does: It allows the user to exit the programme","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"  + Justification: It is a must-have feature that allows users to exit the programme as they want to.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"  ","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"+ Other: Overall flow of the application","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"  + Complete the skeleton code of `Duke`, including `Duke`,`Food`,`FoodList`,`Ui`, `Command` and `DukeException`.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"  + `run()` is inspired by the sample code from [CS2113 website](https://nus-cs2113-ay2223s2.github.io/website/schedule/week7/project.html). ","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"+ Code contributed: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dtsx0314\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtsx0314\u0026tabRepo\u003dAY2223S2-CS2113-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"### Project management:","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"  + Set Milestone v1.0 v2.0 and v2.1 on GitHub","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"  + Managed releases v1.0 (1 release) on GitHub","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"  + Set and assign [issues](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dis%3Aissuea+author%3Atsx0314+is%3Aclosed) on milestone v1.0 v2.0 and v2.1 on GitHub.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"  + Request members to review my [pull request](https://github.com/AY2223S2-CS2113-W13-3/tp/pulls/tsx0314) ","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"tsx0314"},"content":"  ","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"tsx0314"},"content":"### Contributions to team-based tasks: ","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"tsx0314"},"content":"  + Created the organisation and repository for the team and manage the overall setup, adding team members and assigning roles ","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"tsx0314"},"content":"  + Created issue tracker and created various labels and milestones","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"tsx0314"},"content":"  + Provided several general reviews and suggestions to my team members PR","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"  + Created [issues](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dauthor%3Atsx0314) and assign them to members","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"tsx0314"},"content":"  + [PR reviewed](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dreviewed-by%3Atsx0314)","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"  + [Reported bugs](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dauthor%3Atsx0314+label%3Atype.Bug)","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"  + Some parts of the add feature code for checking number validity I added was adopted by my group mate (see [pull request #207](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/207))","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"+ Added documentation for the Add Commands","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"+ Update Command example of usage","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"+ Fixed typos and formatting errors in the UG","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"+ Added the Architecture diagram and Sequence Diagram of our project","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"+ Added sequence diagrams and UML diagrams for the Add Command","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"tsx0314"},"content":"+ Added implementation details for the Add command","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"tsx0314"},"content":"+ Fixed typos and formatting errors for DG","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"tsx0314":70}},{"path":"docs/team/wanjuin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"# Chuah Wan Juin\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"## Project: Food Supply Tracker","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"### Overview","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"Food Supply Tracker (FSP) is a desktop food list tracking the expiry date of the food in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"It is optimized for use via a Command Line Interface (CLI) .","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"If you can type fast, FSP can get your food management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"### Contributions","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"**1) New Feature: List Command**","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"  * What it does: List out all the food products in order of expiry dates. ","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"  * Justification: This feature improves the product significantly because","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"a user can view all the food products available. This make looking at all ","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"food products a user have much more convenient. In addition, listing food in order ","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"of expiry dates makes it neater for user to look at what are the foods that are expiring soon.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"  * Enhancement implemented: ","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    * There is an indicator of the number of days left to expired beside expiry date.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    * There is an indicator of the number of days the food has expired beside expiry date.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    * There is a label beside each food to indicate whether the food is expired or not.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    * Remind users the number of food products they still have in the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    ","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"**2) New Feature: Add `-u` unit feature in the Add Food feature**","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"  * What it does: Allows the addition of unit to the food products. ","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"  * Justification: This feature improves the product significantly because","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"a user can choose unit to gauge the remaining quantity ","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"of the food product that they are left. For example if the remaining quantity","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"is 2 without unit, it would be confusing how much is a \"2\". It could be 2 packets","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"or 2 boxes.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in ","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"the future. It requires integration with the rest of the existing food details. For example,","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"it would need the value of `quantity` to determine if it is a plural form or singular form.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"  * Enhancement implemented: ","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    * There is a fixed set of units that users can choose from (Enumerations).","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"    * When user enters a common unit such as `milligrams` or `litre`, the program would automatically","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    assign units `mg` and `l` to the food respectively, according to the fixed list of units provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"    * The default unit of a food product would be set to `unit` and `units` according to the value of quantity.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"    * When a user updates the quantity, the unit would change to plural or singular form according to it, if applicable.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"**3) New feature: Clear Command**","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"   * What it does: Allows users to clear the entire food list using one command.","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"   * Justification: This feature improves the product as users can just delete the entire food list, without the need of ","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"   deleting food products one by one. Practically, this feature is important as the user could have many expired foods ","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"   and want to delete the entire food list in one shot.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"**4) New feature: Exit Command**","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"  * What it does: Allow users to exit the application,","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"  * Justification: This feature is a core feature of the product as users can shut down the application","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"when he or she is done using it.","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"**5) Enhancement: Remove feature that do not take in non-integers**","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"  * Checking if an input is an integer or not, if it is not then an error message will be showed up to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"  * Improve the clarity of the error message being shown to the users.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"  * Credits: https://www.baeldung.com/java-check-string-number","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"**6) Enhancement: Remove feature that cannot take in integers less than 0 and more than 9999**","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"* Checking if an input is valid, if it is not then an error message will be showed up to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"* Improve the clarity of the error message being shown to the users.","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"* Credits: history feature of group member [@tsx0314 GitHub Pull Request](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/192)","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"**7) Enhancement: Command Result**","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"  * What it does: Printing of response to users after each command entered by users.","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"  * Justification: This feature is a core feature of the product as it makes it clearer for the users that the program ","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"has already executed what the user asks it to do. It also tells the users what they have entered wrongly in some cases ","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"(in addition to exceptions). This feature is important to show that it is responsive to the users\u0027 command.  ","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"  * Highlights: All commands will have to depend on this enhancement feature to print their respective results to users.","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"  * Credits: https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/commands/CommandResult.java","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"### Code contributed","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"[RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dwanjuin\u0026tabRepo\u003dAY2223S2-CS2113-W13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003dfunctional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"### Project management","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"* Set issues on milestone `v1.0` - `v2.1` on GitHub after finding bugs or possible enhancements.","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"  * [Link to Issues added by me](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dis%3Aissue+is%3Aclosed+author%3Awanjuin)","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"* Review issues set by group members and other peers (PE-D).","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"* Assign issues to myself and group members.","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"wanjuin"},"content":"  * [Link to Issues assigned to me](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dis%3Aclosed+assignee%3Awanjuin)","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"wanjuin"},"content":"* Request for group members\u0027 review for my merge request on GitHub.","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"wanjuin"},"content":"  * [Link to my Pull Request](https://github.com/AY2223S2-CS2113-W13-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+author%3Awanjuin)","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"* Review group members\u0027 merge request.","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"wanjuin"},"content":"* Commented and suggested changes on group members\u0027 merge request.","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"wanjuin"},"content":"* Requested changes on group members\u0027 merge request when it would affect the overall functionality of the app.","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"  * [Link to Merge Request reviewed by me](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dreviewed-by%3Awanjuin)","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"wanjuin"},"content":"### Documentation","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"wanjuin"},"content":"* User Guide: ","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"wanjuin"},"content":"  * List Command section","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"wanjuin"},"content":"  * Clear Command section","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"wanjuin"},"content":"  * Exit Command section","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"wanjuin"},"content":"  * Add Unit in Add Command section","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"wanjuin"},"content":"  * Find Command example of usage","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"wanjuin"},"content":"  * Update Command example of usage","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"wanjuin"},"content":"* Developer Guide:","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"wanjuin"},"content":"  * Diagrams:","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"wanjuin"},"content":"    * ListCommandClassDiagram.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"wanjuin"},"content":"    * ListCommandSequenceDiagram.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"wanjuin"},"content":"    * ClearCommandClassDiagram.puml ","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"wanjuin"},"content":"    * ClearCommandSequenceDiagram.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"wanjuin"},"content":"    * ExitCommandClassDiagram.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"wanjuin"},"content":"    * ExitCommandSequenceDiagram.puml","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"wanjuin"},"content":"  * Specifications: ","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"wanjuin"},"content":"    * ListCommand implementation description","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"wanjuin"},"content":"    * ClearCommand implementation description","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"wanjuin"},"content":"    * ExitCommand implementation description","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"wanjuin"},"content":"  * Requirements (Appendix):","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"wanjuin"},"content":"    * User Stories","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"wanjuin"},"content":"    * Non-functional Requirements","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"wanjuin"},"content":"* Logging of the project","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"wanjuin"},"content":"  * [Link to Pull Request for Logging](https://github.com/AY2223S2-CS2113-W13-3/tp/pull/58)","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"wanjuin"},"content":"### Community","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"wanjuin"},"content":"* PRs reviewed (with non-trivial review comments):  [Link to Merge Request reviewed by me](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dreviewed-by%3Awanjuin)","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"wanjuin"},"content":"* Reported bugs and suggestions: [Link to Reported Bugs](https://github.com/AY2223S2-CS2113-W13-3/tp/issues?q\u003dauthor%3Awanjuin+label%3Atype.Bug+)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"wanjuin":120}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.general.Parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.general.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.storage.StorageFile;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":" * Entry point of the Food Supply Tracker application","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"Run Duke Log\");","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"    private final Ui ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"    private FoodList foodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    private StorageFile storageFile;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"    public Duke() {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"            storageFile \u003d new StorageFile();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (InvalidStorageFilePathException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"            foodList \u003d storageFile.load();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"    public boolean processCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"        Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"        CommandResult result \u003d c.execute(foodList);","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"        foodList.sortFoodList();","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"        result.printResult();","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"        storageFile.save(foodList);","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"        return c.isExit();","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"    // This part of the code is adapted from the module website","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"    // https://nus-cs2113-ay2223s2.github.io/website/schedule/week7/project.html","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"    public void run() {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"            try {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"                ui.showLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"                isExit \u003d processCommand(fullCommand);","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"                logger.log(Level.WARNING, \"ERROR\");","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"                Ui.showError(\"Invalid input\");","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"tsx0314"},"content":"            } finally {","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"tsx0314"},"content":"                ui.showLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"tsx0314"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"        logger.log(Level.INFO, \"Start running Duke\");","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"        new Duke().run();","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"wanjuin"},"content":"        logger.log(Level.INFO, \"End of running Duke\");","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"ZhongXiangWong":26,"DavidVin357":4,"-":9,"tsx0314":19,"wanjuin":27}},{"path":"src/main/java/seedu/duke/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodCategory;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.Unit;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.utils.DateFormatter;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":" * Represent an Add command","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"    public static final String ADD_MESSAGE \u003d \"I have added this product! :)\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"    private static final String NAME_SEPARATOR \u003d \"-n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"    private static final String EXPIRY_SEPARATOR \u003d \"-e\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"    private static final String CATEGORY_SEPARATOR \u003d \"-c\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"    private static final String QUANTITY_SEPARATOR \u003d \"-q\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    private static final String UNIT_SEPARATOR \u003d \"-u\";","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"    private static final String INVALID_DATE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"            \"Please input a valid date :\u003c\";","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"    private static final String EXPIRY_DATE_MESSAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"            \"Please do not add an expired product :\u003c\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"    private static final String INVALID_INPUT_MESSAGE \u003d \"The number you entered exceeds 9999. \" +","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"            \"Please use reasonable value :\u003c\";","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_1 \u003d \"mg\";","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_2 \u003d \"milligram\";","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_3 \u003d \"milligrams\";","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_1 \u003d \"gram\";","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_2 \u003d \"g\";","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_3 \u003d \"grams\";","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_1 \u003d \"kg\";","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_2 \u003d \"kilogram\";","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_3 \u003d \"kilograms\";","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_1 \u003d \"ml\";","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_2 \u003d \"millilitre\";","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_3 \u003d \"millilitres\";","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_1 \u003d \"l\";","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_2 \u003d \"litre\";","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_3 \u003d \"litres\";","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"    private static final String SERVING_1 \u003d \"serving\";","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"    private static final String SERVING_2 \u003d \"servings\";","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"    private static final String BOX_1 \u003d \"box\";","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"    private static final String BOX_2 \u003d \"boxes\";","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"    private static final String PACKET_1 \u003d \"packet\";","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"    private static final String PACKET_2 \u003d \"packets\";","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"    public String details;","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"     * Constructor","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"     * @param details food details","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"    public AddCommand(String details) {","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"tsx0314"},"content":"     * Returns a CommandResult object to display the successful message after executing the command as below","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"tsx0314"},"content":"     * Separate the food details and add a new food item in the list according to the size of the String array","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"tsx0314"},"content":"     * Input validity is checked for all parameters to ensure that only reasonable food items can be added to the list","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"tsx0314"},"content":"     * @param foodList a food list","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"tsx0314"},"content":"     * @return a CommandResult object to display the successful message","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"    public CommandResult execute(FoodList foodList) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"tsx0314"},"content":"        boolean hasQuantity \u003d details.contains(QUANTITY_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"tsx0314"},"content":"        boolean hasCategory \u003d details.contains(CATEGORY_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"        boolean hasUnit \u003d details.contains(UNIT_SEPARATOR);","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"tsx0314"},"content":"        String[] foodDetails \u003d splitDetails(details);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"tsx0314"},"content":"        assert foodDetails.length \u003e\u003d 2 : \"Input is wrong\";","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"tsx0314"},"content":"        String name \u003d foodDetails[0];","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"tsx0314"},"content":"        String date \u003d foodDetails[1];","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"tsx0314"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"            LocalDate expiryDate \u003d DateFormatter.parse(date);","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"tsx0314"},"content":"            boolean isValid \u003d isValid(date);","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"tsx0314"},"content":"            boolean isNew \u003d isTheDateAfterCurrentDate(expiryDate);","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"tsx0314"},"content":"            if (!isValid) {","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"tsx0314"},"content":"                return new CommandResult(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"tsx0314"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"tsx0314"},"content":"            if (!isNew) {","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"tsx0314"},"content":"                return new CommandResult(EXPIRY_DATE_MESSAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"tsx0314"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"tsx0314"},"content":"            assert !name.trim().isEmpty() : \"Expected non-empty string for name\";","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"tsx0314"},"content":"            assert !date.trim().isEmpty() : \"Expected non-empty string for date\";","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"tsx0314"},"content":"            Food newFood;","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"tsx0314"},"content":"            assert foodDetails.length \u003d\u003d 2 || foodDetails.length \u003d\u003d 3 ||","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"tsx0314"},"content":"                    foodDetails.length \u003d\u003d 4 || foodDetails.length \u003d\u003d 5 : \"Wrong food details size\";","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"tsx0314"},"content":"            if (foodDetails.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d new Food(name, date);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"tsx0314"},"content":"            } else if (foodDetails.length \u003d\u003d 3 \u0026\u0026 hasCategory \u0026\u0026 !hasQuantity) {","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"tsx0314"},"content":"                String c \u003d foodDetails[2];","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"tsx0314"},"content":"                FoodCategory category \u003d compareCategory(c);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d new Food(name, date, category);","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"tsx0314"},"content":"            } else if (foodDetails.length \u003d\u003d 3 \u0026\u0026 !hasCategory \u0026\u0026 hasQuantity) {","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"tsx0314"},"content":"                String q \u003d foodDetails[2];","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"tsx0314"},"content":"                if (!isNumberReasonable(q)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"tsx0314"},"content":"                    return new CommandResult(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"tsx0314"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"tsx0314"},"content":"                assert Double.valueOf(q) \u003e 0 \u0026\u0026 Double.valueOf(q) \u003c\u003d 9999 : \"Unreasonable quantity input\";","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d buildFoodWithCategory(name, date, q);","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"tsx0314"},"content":"            } else if (foodDetails.length \u003d\u003d 4 \u0026\u0026 hasUnit) {","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"tsx0314"},"content":"                String q \u003d foodDetails[2];","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"tsx0314"},"content":"                if (!isNumberReasonable(q)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"tsx0314"},"content":"                    return new CommandResult(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"tsx0314"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"tsx0314"},"content":"                assert Double.valueOf(q) \u003e 0 \u0026\u0026 Double.valueOf(q) \u003c\u003d 9999 : \"Unreasonable quantity input\";","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d buildFoodWithUnit(foodDetails, name, date, q);","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"tsx0314"},"content":"            } else if (foodDetails.length \u003d\u003d 4 \u0026\u0026 !hasUnit) {","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"tsx0314"},"content":"                String q \u003d foodDetails[2];","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"tsx0314"},"content":"                if (!isNumberReasonable(q)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"tsx0314"},"content":"                    return new CommandResult(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"tsx0314"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"tsx0314"},"content":"                assert Double.valueOf(q) \u003e 0 \u0026\u0026 Double.valueOf(q) \u003c\u003d 9999 : \"Unreasonable quantity input\";","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d buildFoodWithNoUnit(foodDetails, name, date, q);","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"tsx0314"},"content":"            } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"wanjuin"},"content":"                String q \u003d foodDetails[2];","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"tsx0314"},"content":"                if (!isNumberReasonable(q)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"tsx0314"},"content":"                    return new CommandResult(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"tsx0314"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"tsx0314"},"content":"                assert Double.valueOf(q) \u003e 0 \u0026\u0026 Double.valueOf(q) \u003c\u003d 9999 : \"Unreasonable quantity input\";","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"tsx0314"},"content":"                newFood \u003d getFoodWithAllAttributes(foodDetails, name, date, q);","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"tsx0314"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"tsx0314"},"content":"            System.out.println(newFood);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"tsx0314"},"content":"            foodList.addFood(newFood);","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"tsx0314"},"content":"            System.out.println();","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"tsx0314"},"content":"            return new CommandResult(ADD_MESSAGE);","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"tsx0314"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"tsx0314"},"content":"            return new CommandResult(INVALID_DATE_MESSAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"tsx0314"},"content":"     * Returns a new Food object based on the details given","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"tsx0314"},"content":"     * It throws DukeException if any error is caught","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"tsx0314"},"content":"     * @param foodDetails a string array of food details","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"tsx0314"},"content":"     * @param name the food name","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"tsx0314"},"content":"     * @param date the food expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"tsx0314"},"content":"     * @param q the quantity","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"tsx0314"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"tsx0314"},"content":"    private Food getFoodWithAllAttributes(String[] foodDetails, String name, String date, String q)","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"tsx0314"},"content":"            throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"tsx0314"},"content":"        Food newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"tsx0314"},"content":"        Double quantity \u003d Double.valueOf(q);","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"tsx0314"},"content":"        String unit \u003d getUnitOfFood(foodDetails[3], quantity);","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"tsx0314"},"content":"        String c \u003d foodDetails[4];","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"tsx0314"},"content":"        FoodCategory category \u003d compareCategory(c);","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"tsx0314"},"content":"        newFood \u003d new Food(name, date, quantity, unit, category);","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"tsx0314"},"content":"        return newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"tsx0314"},"content":"     * Returns a new Food object based on the details given","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"tsx0314"},"content":"     * It throws DukeException if any error is caught","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"tsx0314"},"content":"     * @param foodDetails a string array of food details","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"tsx0314"},"content":"     * @param name the food name","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"tsx0314"},"content":"     * @param date the food expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"tsx0314"},"content":"     * @param q the quantity","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"tsx0314"},"content":"     * @return newFood a new food object","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"tsx0314"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"tsx0314"},"content":"    private Food buildFoodWithNoUnit(String[] foodDetails, String name, String date, String q) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"tsx0314"},"content":"        Food newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"tsx0314"},"content":"        Double quantity \u003d Double.valueOf(q);","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"tsx0314"},"content":"        FoodCategory category \u003d compareCategory(foodDetails[3]);","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"tsx0314"},"content":"        newFood \u003d new Food(name, date, quantity, category);","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"tsx0314"},"content":"        return newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"tsx0314"},"content":"     * Returns a new Food object based on the details given","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"tsx0314"},"content":"     * It throws DukeException if any error is caught","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"tsx0314"},"content":"     * @param foodDetails a string array of food details","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"tsx0314"},"content":"     * @param name the food name","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"tsx0314"},"content":"     * @param date the food expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"tsx0314"},"content":"     * @param q the quantity","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"tsx0314"},"content":"     * @return newFood a food object","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"tsx0314"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"tsx0314"},"content":"    private Food buildFoodWithUnit(String[] foodDetails, String name, String date, String q) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"tsx0314"},"content":"        Food newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"tsx0314"},"content":"        Double quantity \u003d Double.valueOf(q);","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"tsx0314"},"content":"        String unit \u003d getUnitOfFood(foodDetails[3], quantity);","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"tsx0314"},"content":"        newFood \u003d new Food(name, date, quantity, unit);","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"tsx0314"},"content":"        return newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":209,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"tsx0314"},"content":"     * Returns a new Food object","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"tsx0314"},"content":"     * It throws DukeException if any error is caught","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"tsx0314"},"content":"     * @param name the food name","lastModifiedDate":"2023-04-08"},{"lineNumber":215,"author":{"gitId":"tsx0314"},"content":"     * @param date the food expiry date","lastModifiedDate":"2023-04-08"},{"lineNumber":216,"author":{"gitId":"tsx0314"},"content":"     * @param q    the quantity","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"tsx0314"},"content":"     * @return newFood a food object","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"tsx0314"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"tsx0314"},"content":"    private static Food buildFoodWithCategory(String name, String date, String q) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":221,"author":{"gitId":"tsx0314"},"content":"        Food newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":222,"author":{"gitId":"tsx0314"},"content":"        Double quantity \u003d Double.valueOf(q);","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"tsx0314"},"content":"        newFood \u003d new Food(name, date, quantity);","lastModifiedDate":"2023-04-08"},{"lineNumber":224,"author":{"gitId":"tsx0314"},"content":"        return newFood;","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":226,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"tsx0314"},"content":"    //@@author tsx0314","lastModifiedDate":"2023-03-25"},{"lineNumber":228,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"tsx0314"},"content":"     * Returns an array of String to store the information of food added","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"tsx0314"},"content":"     * @param details food details","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"tsx0314"},"content":"     * @return foodDetails a String array of the food details","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"tsx0314"},"content":"    public String[] splitDetails(String details) {","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"tsx0314"},"content":"        boolean hasQuantity \u003d details.contains(QUANTITY_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":237,"author":{"gitId":"tsx0314"},"content":"        boolean hasUnit \u003d details.contains(UNIT_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":238,"author":{"gitId":"tsx0314"},"content":"        boolean hasCat \u003d details.contains(CATEGORY_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":239,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"tsx0314"},"content":"        String name;","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"tsx0314"},"content":"        String date;","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"tsx0314"},"content":"        String category;","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"tsx0314"},"content":"        String quantity;","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"tsx0314"},"content":"        String unit;","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"tsx0314"},"content":"        String[] temp \u003d details.trim().split(QUANTITY_SEPARATOR);","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"tsx0314"},"content":"        String[] temp2 \u003d temp[0].split(CATEGORY_SEPARATOR);","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"tsx0314"},"content":"        String[] nameAndExpiryDate \u003d temp2[0].replace(NAME_SEPARATOR, \"\").trim().split(EXPIRY_SEPARATOR, 2);","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"tsx0314"},"content":"        name \u003d nameAndExpiryDate[0].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"tsx0314"},"content":"        date \u003d nameAndExpiryDate[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"tsx0314"},"content":"        if (!hasCat \u0026\u0026 !hasUnit \u0026\u0026 !hasQuantity) {","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"tsx0314"},"content":"            String[] foodDetails \u003d {name, date};","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"tsx0314"},"content":"            return foodDetails;","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"tsx0314"},"content":"        if (hasCat \u0026\u0026 !hasUnit \u0026\u0026 !hasQuantity) {","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"tsx0314"},"content":"            category \u003d temp2[1].trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"tsx0314"},"content":"            String[] foodDetails \u003d {name, date, category};","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"tsx0314"},"content":"            return foodDetails;","lastModifiedDate":"2023-03-20"},{"lineNumber":262,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":263,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":264,"author":{"gitId":"tsx0314"},"content":"        if (!hasCat \u0026\u0026 hasQuantity \u0026\u0026 !hasUnit) {","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"tsx0314"},"content":"            quantity \u003d temp[1].trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"tsx0314"},"content":"            String[] foodDetails \u003d {name, date, quantity};","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"tsx0314"},"content":"            return foodDetails;","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"tsx0314"},"content":"        if (hasCat \u0026\u0026 hasQuantity \u0026\u0026 !hasUnit) {","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"tsx0314"},"content":"            quantity \u003d temp[1].trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"tsx0314"},"content":"            category \u003d temp2[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"tsx0314"},"content":"            String[] foodDetails \u003d {name, date, quantity, category};","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"tsx0314"},"content":"            return foodDetails;","lastModifiedDate":"2023-03-31"},{"lineNumber":275,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":277,"author":{"gitId":"tsx0314"},"content":"        if (!hasCat \u0026\u0026 hasUnit \u0026\u0026 hasQuantity) {","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"tsx0314"},"content":"            String[] quantityAndUnit \u003d temp[1].trim().split(UNIT_SEPARATOR, 2);","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"tsx0314"},"content":"            unit \u003d quantityAndUnit[1].trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"tsx0314"},"content":"            quantity \u003d quantityAndUnit[0].trim();","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"tsx0314"},"content":"            String[] foodDetails \u003d {name, date, quantity, unit};","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"tsx0314"},"content":"            return foodDetails;","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"tsx0314"},"content":"        category \u003d temp2[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"tsx0314"},"content":"        quantity \u003d temp[1].trim().split(UNIT_SEPARATOR, 2)[0].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"tsx0314"},"content":"        unit \u003d temp[1].trim().split(UNIT_SEPARATOR, 2)[1].trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"tsx0314"},"content":"        String[] foodDetails \u003d {name, date, quantity, unit, category};","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"tsx0314"},"content":"        return foodDetails;","lastModifiedDate":"2023-03-20"},{"lineNumber":290,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":291,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"tsx0314"},"content":"    //@@author tsx0314","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":295,"author":{"gitId":"tsx0314"},"content":"     * Returns whether the input date is a valid expiry date","lastModifiedDate":"2023-03-27"},{"lineNumber":296,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":297,"author":{"gitId":"tsx0314"},"content":"     * @param expiryDate the date","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"tsx0314"},"content":"     * @return isValid whether the date is valid","lastModifiedDate":"2023-03-25"},{"lineNumber":299,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":300,"author":{"gitId":"tsx0314"},"content":"    public boolean isTheDateAfterCurrentDate(LocalDate expiryDate) {","lastModifiedDate":"2023-04-01"},{"lineNumber":301,"author":{"gitId":"tsx0314"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-25"},{"lineNumber":302,"author":{"gitId":"tsx0314"},"content":"        boolean isValid \u003d expiryDate.isAfter(currentDate);","lastModifiedDate":"2023-03-25"},{"lineNumber":303,"author":{"gitId":"tsx0314"},"content":"        return isValid;","lastModifiedDate":"2023-03-25"},{"lineNumber":304,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":307,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":308,"author":{"gitId":"tsx0314"},"content":"     * Returns a boolean value which indicate whether the date is valid","lastModifiedDate":"2023-04-07"},{"lineNumber":309,"author":{"gitId":"tsx0314"},"content":"     * This method specially checks for the date 29/02","lastModifiedDate":"2023-04-08"},{"lineNumber":310,"author":{"gitId":"tsx0314"},"content":"     * If the date is this special date and the year is not a leap year, it will return false","lastModifiedDate":"2023-04-08"},{"lineNumber":311,"author":{"gitId":"tsx0314"},"content":"     * Or else return true, the check is passed.","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"tsx0314"},"content":"     * @param date date","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"tsx0314"},"content":"     * @return whether it is a valid date","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"tsx0314"},"content":"    public boolean isValid(String date) {","lastModifiedDate":"2023-04-01"},{"lineNumber":317,"author":{"gitId":"tsx0314"},"content":"        String[] splitString \u003d date.split(\"/\", 3);","lastModifiedDate":"2023-04-01"},{"lineNumber":318,"author":{"gitId":"tsx0314"},"content":"        String d \u003d splitString[0];","lastModifiedDate":"2023-04-01"},{"lineNumber":319,"author":{"gitId":"tsx0314"},"content":"        String m \u003d splitString[1];","lastModifiedDate":"2023-04-01"},{"lineNumber":320,"author":{"gitId":"tsx0314"},"content":"        String y \u003d splitString[2];","lastModifiedDate":"2023-04-01"},{"lineNumber":321,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":322,"author":{"gitId":"tsx0314"},"content":"        if (Integer.parseInt(y) % 4 !\u003d 0 \u0026\u0026 m.equals(\"02\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":323,"author":{"gitId":"tsx0314"},"content":"            if (d.equals(\"29\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":324,"author":{"gitId":"tsx0314"},"content":"                return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":325,"author":{"gitId":"tsx0314"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":326,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":327,"author":{"gitId":"tsx0314"},"content":"        return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":328,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":329,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":330,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":332,"author":{"gitId":"tsx0314"},"content":"     * Return a food category according to the input","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"tsx0314"},"content":"     * Any other category is not accepted and will be deemed as OTHERS","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"tsx0314"},"content":"     * @param tempCategory a category","lastModifiedDate":"2023-04-08"},{"lineNumber":336,"author":{"gitId":"tsx0314"},"content":"     * @return an enum FoodCategory","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"tsx0314"},"content":"    public FoodCategory compareCategory(String tempCategory) {","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":340,"author":{"gitId":"tsx0314"},"content":"        String cat \u003d tempCategory.toLowerCase();","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"tsx0314"},"content":"        switch (cat) {","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"tsx0314"},"content":"        case \"fruit\":","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.FRUIT;","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"tsx0314"},"content":"        case \"meat\":","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.MEAT;","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"tsx0314"},"content":"        case \"vegetable\":","lastModifiedDate":"2023-04-01"},{"lineNumber":348,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.VEGETABLE;","lastModifiedDate":"2023-04-01"},{"lineNumber":349,"author":{"gitId":"tsx0314"},"content":"        case \"dairy\":","lastModifiedDate":"2023-03-31"},{"lineNumber":350,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.DAIRY;","lastModifiedDate":"2023-03-31"},{"lineNumber":351,"author":{"gitId":"tsx0314"},"content":"        case \"grain\":","lastModifiedDate":"2023-03-31"},{"lineNumber":352,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.GRAIN;","lastModifiedDate":"2023-03-31"},{"lineNumber":353,"author":{"gitId":"tsx0314"},"content":"        case \"seafood\":","lastModifiedDate":"2023-03-31"},{"lineNumber":354,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.SEAFOOD;","lastModifiedDate":"2023-03-31"},{"lineNumber":355,"author":{"gitId":"tsx0314"},"content":"        case \"beverage\":","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.BEVERAGE;","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"tsx0314"},"content":"        default:","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"tsx0314"},"content":"            return FoodCategory.OTHERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":362,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":363,"author":{"gitId":"tsx0314"},"content":"     * Return the input number is reasonable","lastModifiedDate":"2023-04-07"},{"lineNumber":364,"author":{"gitId":"tsx0314"},"content":"     * Maximum quantity input allowed is 9999","lastModifiedDate":"2023-04-08"},{"lineNumber":365,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":366,"author":{"gitId":"tsx0314"},"content":"     * @param number a number string","lastModifiedDate":"2023-04-07"},{"lineNumber":367,"author":{"gitId":"tsx0314"},"content":"     * @return whether the number is valid","lastModifiedDate":"2023-04-07"},{"lineNumber":368,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":369,"author":{"gitId":"tsx0314"},"content":"    boolean isNumberReasonable(String number) {","lastModifiedDate":"2023-04-06"},{"lineNumber":370,"author":{"gitId":"tsx0314"},"content":"        if (Double.valueOf(number) \u003e 9999 || Double.valueOf(number) \u003c 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":371,"author":{"gitId":"tsx0314"},"content":"            return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":372,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":373,"author":{"gitId":"tsx0314"},"content":"        return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":374,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":375,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":376,"author":{"gitId":"wanjuin"},"content":"    //@@author wanjuin","lastModifiedDate":"2023-04-06"},{"lineNumber":377,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":378,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":379,"author":{"gitId":"wanjuin"},"content":"     * Returns the unit of the food","lastModifiedDate":"2023-04-06"},{"lineNumber":380,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":381,"author":{"gitId":"wanjuin"},"content":"     * @param unitTemporary    a unit","lastModifiedDate":"2023-04-06"},{"lineNumber":382,"author":{"gitId":"wanjuin"},"content":"     * @param quantityInDouble quantity","lastModifiedDate":"2023-04-06"},{"lineNumber":383,"author":{"gitId":"wanjuin"},"content":"     * @return unitOfMeasurement a food unit","lastModifiedDate":"2023-04-06"},{"lineNumber":384,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":385,"author":{"gitId":"wanjuin"},"content":"    public String getUnitOfFood(String unitTemporary, Double quantityInDouble) {","lastModifiedDate":"2023-04-06"},{"lineNumber":386,"author":{"gitId":"wanjuin"},"content":"        String unitOfMeasurement;","lastModifiedDate":"2023-04-06"},{"lineNumber":387,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":388,"author":{"gitId":"wanjuin"},"content":"        switch (unitTemporary.toLowerCase()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":389,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":390,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":391,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_3:","lastModifiedDate":"2023-04-06"},{"lineNumber":392,"author":{"gitId":"wanjuin"},"content":"            unitOfMeasurement \u003d String.valueOf(Unit.MILLIGRAM.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":393,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":394,"author":{"gitId":"wanjuin"},"content":"        case GRAM_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":395,"author":{"gitId":"wanjuin"},"content":"        case GRAM_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":396,"author":{"gitId":"wanjuin"},"content":"        case GRAM_3:","lastModifiedDate":"2023-04-06"},{"lineNumber":397,"author":{"gitId":"wanjuin"},"content":"            unitOfMeasurement \u003d String.valueOf(Unit.GRAM.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":398,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":399,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":400,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":401,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_3:","lastModifiedDate":"2023-04-06"},{"lineNumber":402,"author":{"gitId":"wanjuin"},"content":"            unitOfMeasurement \u003d String.valueOf(Unit.KILOGRAM.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":403,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":404,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":405,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":406,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_3:","lastModifiedDate":"2023-04-06"},{"lineNumber":407,"author":{"gitId":"wanjuin"},"content":"            unitOfMeasurement \u003d String.valueOf(Unit.MILLILITER.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":408,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":409,"author":{"gitId":"wanjuin"},"content":"        case LITRE_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":410,"author":{"gitId":"wanjuin"},"content":"        case LITRE_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":411,"author":{"gitId":"wanjuin"},"content":"        case LITRE_3:","lastModifiedDate":"2023-04-06"},{"lineNumber":412,"author":{"gitId":"wanjuin"},"content":"            unitOfMeasurement \u003d String.valueOf(Unit.LITER.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":413,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":414,"author":{"gitId":"wanjuin"},"content":"        case SERVING_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":415,"author":{"gitId":"wanjuin"},"content":"        case SERVING_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":416,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":417,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.SERVINGS.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":418,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":419,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.SERVING.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":420,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":421,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":422,"author":{"gitId":"wanjuin"},"content":"        case BOX_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":423,"author":{"gitId":"wanjuin"},"content":"        case BOX_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":424,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":425,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.BOXES.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":426,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":427,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.BOX.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":428,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":429,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":430,"author":{"gitId":"wanjuin"},"content":"        case PACKET_1:","lastModifiedDate":"2023-04-06"},{"lineNumber":431,"author":{"gitId":"wanjuin"},"content":"        case PACKET_2:","lastModifiedDate":"2023-04-06"},{"lineNumber":432,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":433,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.PACKETS.abbreviation);","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":435,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.PACKET.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":436,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":437,"author":{"gitId":"wanjuin"},"content":"            break;","lastModifiedDate":"2023-04-06"},{"lineNumber":438,"author":{"gitId":"wanjuin"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":439,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":440,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.UNITS.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":441,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":442,"author":{"gitId":"wanjuin"},"content":"                unitOfMeasurement \u003d String.valueOf(Unit.UNIT.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":443,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":444,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":445,"author":{"gitId":"wanjuin"},"content":"        return unitOfMeasurement;","lastModifiedDate":"2023-04-06"},{"lineNumber":446,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":447,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"DavidVin357":5,"tsx0314":345,"wanjuin":97}},{"path":"src/main/java/seedu/duke/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    public static final String MESSAGE_CLEAR_ACKNOWLEDGEMENT \u003d \"Clearing the food list as requested...\";","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    public CommandResult execute(FoodList foodList) {","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"        foodList.clearFoodList();","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"        return new CommandResult(MESSAGE_CLEAR_ACKNOWLEDGEMENT);","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"wanjuin":19}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":" * Represents a command class","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    protected Command() {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    public String outputToUser (FoodList foodList){","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"        String output \u003d\"\";","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"        return output;","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"    public CommandResult execute(FoodList foodList) throws DukeException {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"        return new CommandResult(\"Duke is running\");","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"SebastianSoewanto":2,"tsx0314":16,"wanjuin":8}},{"path":"src/main/java/seedu/duke/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":" * The code is taken from https://github.com/se-edu/addressbook-level2/tree/157fcf19c6b73289dc4cc7b2dd1152bc2b8e197a","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":" * Represents the results of a command execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"public class CommandResult {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"     * The feedback message to be shown to the user. Contains a description of the execution result","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"    public void printResult() {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"        System.out.println(feedbackToUser);","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"tsx0314":10,"wanjuin":12}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":" * Represent an Exit command","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Food Supply Tracker as requested ...\";","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"    public CommandResult execute(FoodList foodList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"tsx0314":16,"wanjuin":5}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.InvalidFlagException;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.InvalidFlagValueException;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":" * Represents \"find\" command - finds a product with given term and filters matched","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    private static final String FLAG_SEPARATOR \u003d \"--\";","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    private static final String FOUND_FOOD_1 \u003d \"Found \";","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    private static final String FOUND_FOOD_2 \u003d \" of food items\";","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    private static final String NOT_FOUND \u003d \"No food found for such query\";","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    String term;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    String[] flags;","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"     * Initializes FindCommand object","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"     * with term and flags obtained from the arguments provided","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"     * @param arguments","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"    public FindCommand(String arguments) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        String[] details \u003d arguments.split(FLAG_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        this.term \u003d details[0];","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        this.flags \u003d Arrays.copyOfRange(details, 1, details.length);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"     * Finds products with a given term and filters them","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"     * according to given flag values.","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"     * Adds a foodItem to the result","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"     * only if each flag was satisfied and the loop iteration","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"     * wasn\u0027t interrupted early by non-matching flag value","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"     * @param foodList","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"     * @return CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"    public CommandResult execute(FoodList foodList) throws DukeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        FoodList result \u003d new FoodList();","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"        if (Objects.equals(term, \"\") \u0026\u0026 flags.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"            throw new DukeException(\"No term or flag provided\");","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"        foodItemLoop:","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"        for (Food foodItem : foodList.getFoodList()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"            String foodItemName \u003d foodItem.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"            LocalDate expiryDate \u003d foodItem.parseExpiryDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"            String foodCategory \u003d foodItem.getCategoryString(foodItem.getCategory());","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"            String foodUnit \u003d foodItem.getUnit();","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"            boolean hasTerm \u003d foodItemName.toLowerCase().contains(term.toLowerCase().trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"            if (hasTerm) {","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"                for (String flag : flags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"                    String[] flagParts \u003d flag.trim().split(\" \", 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"                    ;","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"                    String flagName \u003d flagParts[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"                    switch (flagName) {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"                    case \"fresh\":","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"                        boolean isFresh \u003d expiryDate.isAfter(LocalDate.now());","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"                        if (!isFresh) {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"                            continue foodItemLoop;","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"                    case \"expired\":","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"                        boolean isExpired \u003d expiryDate.isBefore(LocalDate.now());","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"                        if (!isExpired) {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"                            continue foodItemLoop;","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"                    case \"c\":","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"                        if (flagParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"                            throw new InvalidFlagValueException(flagName);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"                        String categoryValue \u003d flagParts[1].toLowerCase().trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"                        if (!categoryValue.equals(foodCategory)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"                            continue foodItemLoop;","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"                    case \"u\":","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"                        if (flagParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"                            throw new InvalidFlagValueException(flagName);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"                        String unitValue \u003d flagParts[1].toLowerCase().trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"                        if (!unitValue.equals(foodUnit)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"                            continue foodItemLoop;","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"                    case \"q\":","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"                        if (flagParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"                            throw new InvalidFlagValueException(flagName);","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"                        String quantityValue \u003d flagParts[1].toLowerCase().trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"                        double q \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"                        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"DavidVin357"},"content":"                            q \u003d Double.parseDouble(quantityValue.trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"DavidVin357"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"DavidVin357"},"content":"                            String wrongIndexMessage \u003d \"Invalid quantity format!\";","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"                            throw new DukeException(wrongIndexMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"DavidVin357"},"content":"                        if (foodItem.getQuantity() !\u003d q) {","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"DavidVin357"},"content":"                            continue foodItemLoop;","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"DavidVin357"},"content":"                        }","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"DavidVin357"},"content":"                        break;","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"DavidVin357"},"content":"                    default:","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"                        throw new InvalidFlagException(flag);","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"                result.addFood(foodItem);","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"DavidVin357"},"content":"        int num \u003d result.getNumberOfFood();","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"DavidVin357"},"content":"        if (result.getNumberOfFood() \u003e 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"DavidVin357"},"content":"            System.out.println(result);","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"            return new CommandResult(FOUND_FOOD_1 + num + FOUND_FOOD_2);","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"            return new CommandResult(NOT_FOUND);","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":2,"DavidVin357":144}},{"path":"src/main/java/seedu/duke/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String SHOW_ALL_COMMANDS \u003d \"List of commands: \u0027add\u0027, \u0027list\u0027, \u0027remove\u0027, \u0027find\u0027, \"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\u0027update\u0027, \u0027clear\u0027, \u0027exit\u0027.\"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFor more detailed information on usage of specific command, type: help --COMMAND\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String DEFAULT_HELP_MESSAGE \u003d \"Refer to our user guide for more in-depth details on\"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"            + \" how to use Food Supply Tracker:\"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nhttps://ay2223s2-cs2113-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_ADD \u003d \"Command \u0027add\u0027: This command adds a food product to the food supply tracker.\"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFormat: add -n PRODUCT_NAME -e EXPIRY_DATE {-c category} {-q QUANTITY -u UNIT}\"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFormat for EXPIRY_DATE: DD/MM/YYYY\"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nIdentifier within brackets are optional\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nList of valid categories as follows: fruit, meat, vegetable, dairy, grain, seafood, beverage, others\"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nAny category provided that does not fall into the above-mentioned categories will be grouped under \"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"others.\"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nQUANTITY must be specified when UNITS is used together\";","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_LIST \u003d \"Command \u0027list\u0027: This command lists all food products in the tracker.\"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFood products will be listed according to the order they are added into the food list.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_REMOVE \u003d \"Command \u0027remove\u0027: This command removes the food product from the\"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"            + \" food supply tracker based on its index.\"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFormat: remove INDEX\";","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_FIND \u003d \"Command \u0027find\u0027: This command finds the food product by its name.\"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFormat: find PRODUCT_NAME\"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nAppend the filter \u0027--fresh\u0027 for listing unexpired food products and \"","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\u0027-expired\u0027 for listing expired food products.\"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nAppend the filter \u0027--c\u0027 followed by CATEGORY to find by category.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_UPDATE \u003d \"Command \u0027update\u0027: This command allows users to update the name, \"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"expiry date, quantity and units based on the index in the food list.\"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nAll attributes: --n for Name, --e for ExpiryDate, --c for Category, --q for Quantity and --u for Units\"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"            + \" can be updated with this command.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_CLEAR \u003d \"Command \u0027clear\u0027: This command clears the food list.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String HELP_EXIT \u003d \"Command \u0027exit\u0027: This command will save the food list in an external file\"","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"before exiting the program.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String REPORT_INVALID_INPUT \u003d \"Opps! The command \u0027%s\u0027 is not valid.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"    private final HashSet\u003cString\u003e filters \u003d new LinkedHashSet\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"     * This constructor takes in inputs and split it with the according to the regex \u0027--\u0027 and store them in a","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"     * LinkedHashSet named filters. This method checks for repeat commands words and ignore them.","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param userInput the input from the user for the \u0027help\u0027 command","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"    public HelpCommand(String userInput) {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"        filters.addAll(List.of(userInput.replaceAll(\" \", \"\").split(\"--\")));","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"    public HashSet\u003cString\u003e getFilters() {","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"        return filters;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method loops through all the filtered command words and pass them to the method \u003ccode\u003eappendMessage()\u003c/code\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"     * (unless the command word is help or empty, in which case will be ignored).","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"     * After all the filtered words are processed, this method will  append the default help message at the end.","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param foodList the food list","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return a CommandResult object to display the successful message","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"    public CommandResult execute(FoodList foodList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"        String printToUser \u003d \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"        if (filters.size() \u003e 1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"            for (String f : filters) {","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"                if (!isHelpOrEmpty(f)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"                    printToUser \u003d appendMessage(printToUser, f);","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"        printToUser \u003d addNewLine(printToUser);","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"        printToUser \u003d printToUser.concat(SHOW_ALL_COMMANDS + \u0027\\n\u0027 + DEFAULT_HELP_MESSAGE);","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"        return new CommandResult(printToUser);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method decides whether a filtered command is valid or not and append it to the message. Valid commands will","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"ZhongXiangWong"},"content":"     * show help messages for their usage while invalid command will be reported back to the user as non-valid commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param printToUser the message to append","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param f           the command word","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return a CommandResult object to display the successful message","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"ZhongXiangWong"},"content":"    private String appendMessage(String printToUser, String f) {","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"ZhongXiangWong"},"content":"        printToUser \u003d addNewLine(printToUser);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"ZhongXiangWong"},"content":"        switch (f) {","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"ZhongXiangWong"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_ADD);","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"ZhongXiangWong"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_LIST);","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"ZhongXiangWong"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_REMOVE);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_FIND);","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"ZhongXiangWong"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_UPDATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"ZhongXiangWong"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_CLEAR);","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"ZhongXiangWong"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(HELP_EXIT);","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"ZhongXiangWong"},"content":"        default:","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(String.format(REPORT_INVALID_INPUT, f));","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"ZhongXiangWong"},"content":"            break;","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"ZhongXiangWong"},"content":"        assert !printToUser.equals(\"\");","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"ZhongXiangWong"},"content":"        return printToUser;","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks for empty string or \u0027help\u0027 as command words. As these words hold no meaning,","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"ZhongXiangWong"},"content":"     * they should be ignored.","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param word the command word to be checked","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true or false","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"    private boolean isHelpOrEmpty(String word) {","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"        return (word.equals(COMMAND_WORD) || word.equals(\"\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method is used to make the CL output more readable. It adds a new line after each block of text.","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param printToUser the text to be printed to the CLI.","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return the text with the addition of a new line.","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"    private String addNewLine(String printToUser) {","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"        if (!printToUser.equals(\"\")) {","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"ZhongXiangWong"},"content":"            printToUser \u003d printToUser.concat(\"\\n\\n\");","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"ZhongXiangWong"},"content":"        return printToUser;","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":154}},{"path":"src/main/java/seedu/duke/commands/IncorrectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"    public static final String INCORRECT_COMMAND \u003d \"Oops! \" +","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"            \"Incorrect command format. Type \u0027help\u0027 to see more!!\";","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"    public IncorrectCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"    public CommandResult execute(FoodList foodList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"        return new CommandResult(INCORRECT_COMMAND);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"tsx0314":17}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"    public static final String SHOW_FOODLIST_MESSAGE \u003d \"Below are the food list: \\n\";","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    public static final String REPORT_NUMBER_OF_FOOD_FRONT \u003d \"\\nYou now have \";","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    public static final String REPORT_NUMBER_OF_FOOD_BACK \u003d \" food products in your lists.\";","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    public String outputToUser (FoodList foodList){","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"        String printToUser \u003d \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"        int numberOfFood \u003d foodList.getNumberOfFood();","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        if (numberOfFood \u003e 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"            assert foodList instanceof FoodList \u0026\u0026 !foodList.getFoodList().isEmpty() :","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"                    \"The list of food to be printed have to be a food list type and\" +","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"                            \"Food list cannot be empty.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"            printToUser \u003d printToUser.concat(SHOW_FOODLIST_MESSAGE + foodList);","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"        printToUser \u003d printToUser.concat(REPORT_NUMBER_OF_FOOD_FRONT","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"                + numberOfFood + REPORT_NUMBER_OF_FOOD_BACK);","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"        return printToUser;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    public CommandResult execute(FoodList foodList) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"        String printToUser \u003d outputToUser(foodList);","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"        return new CommandResult(printToUser);","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"        return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"DavidVin357":1,"wanjuin":37}},{"path":"src/main/java/seedu/duke/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    public static final String BLANK_INDEX_MESSAGE_1 \u003d \"Please enter an integer to remove a food item.\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"            \"You now have \";","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    public static final String BLANK_INDEX_MESSAGE_2 \u003d \" food items in your list.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    public static final String INCORRECT_INDEX_MESSAGE_1 \u003d \"Incorrect value entered.\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"            \"Your now have \";","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    public static final String INVALID_INPUT_MESSAGE \u003d \"Please use a reasonable value :\u003c\";","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    public String index;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"SebastianSoewanto"},"content":"    public RemoveCommand(String index) {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"SebastianSoewanto"},"content":"     * This constructor creates a boolean object that checks if the index provided is an integer","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"SebastianSoewanto"},"content":"     * which does not contain non-integer values","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return Returns true if the index is an integer and false otherwise","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    public boolean isInteger() {","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"            Integer.parseInt(index.trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"        return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"     * This constructor creates a boolean object that checks if the index provided does not exceed the integer limit","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"     * @param deleteNumber Input string that is provided by the user","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"     * @return Returns true if the number is within the integer limit and false if otherwise","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"    boolean isNumberValid(int deleteNumber) {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"wanjuin"},"content":"        if ((deleteNumber \u003e 9999) || (deleteNumber \u003c 0)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"        return true;","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"SebastianSoewanto"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"SebastianSoewanto"},"content":"     * This method firstly checks whether the value of the index provided by the user exists and is a valid number.","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"SebastianSoewanto"},"content":"     * Then, it will proceed to check if the index provided is within the size of the food list.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"SebastianSoewanto"},"content":"     * After the checks, it will proceed to retrieve the food item to be deleted from the food list","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"SebastianSoewanto"},"content":"     * and eventually remove it from the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"SebastianSoewanto"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"SebastianSoewanto"},"content":"     * @param foodlist food list containing the list of food items","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"SebastianSoewanto"},"content":"     * @return feedback to user if the food item has been successfully deleted otherwise an error message","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"SebastianSoewanto"},"content":"     * @throws IllegalValueException if the index provided does not exist or beyond the bounds of the food list","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"SebastianSoewanto"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"    public CommandResult execute(FoodList foodlist) throws DukeException {","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"SebastianSoewanto"},"content":"        if (index.isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"            String blankIntegerMessage \u003d BLANK_INDEX_MESSAGE_1 + foodlist.getNumberOfFood() + BLANK_INDEX_MESSAGE_2;","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"            throw new IllegalValueException(blankIntegerMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"        if (!isInteger()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"            String notIntegerMessage \u003d BLANK_INDEX_MESSAGE_1 + foodlist.getNumberOfFood() + BLANK_INDEX_MESSAGE_2;","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"            return new CommandResult(notIntegerMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"        int deleteItem \u003d Integer.parseInt(index.trim()) - 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"        if (!isNumberValid(deleteItem)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"wanjuin"},"content":"            return new CommandResult(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"SebastianSoewanto"},"content":"        if (deleteItem \u003e\u003d foodlist.getNumberOfFood() || deleteItem \u003c 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"wanjuin"},"content":"            String incorrectIndexFormat \u003d INCORRECT_INDEX_MESSAGE_1 + foodlist.getNumberOfFood()","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"wanjuin"},"content":"                    + BLANK_INDEX_MESSAGE_2;","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"wanjuin"},"content":"            throw new IllegalValueException(incorrectIndexFormat);","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"SebastianSoewanto"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"SebastianSoewanto"},"content":"        String foodName \u003d foodlist.getFood(deleteItem).getName();","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"SebastianSoewanto"},"content":"        foodlist.removeFood(deleteItem);","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"SebastianSoewanto"},"content":"        int itemsLeft \u003d foodlist.getNumberOfFood();","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"        System.out.println(\"Removed \u0027\" + foodName + \"\u0027 from the food supply list.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"SebastianSoewanto"},"content":"        return new CommandResult(\"There is/are now \" + itemsLeft + \" item(s) in the list.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"SebastianSoewanto"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"SebastianSoewanto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"SebastianSoewanto"},"content":"        return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":7,"DavidVin357":1,"SebastianSoewanto":35,"tsx0314":8,"wanjuin":42}},{"path":"src/main/java/seedu/duke/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.InvalidFlagException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.utils.Validator;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":" * Represents \"update\" command - updates a product attributes with given flag values","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    private static final String FLAG_SEPARATOR \u003d \"--\";","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"    String index;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    String[] flags;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"     * Initializes UpdateCommand object","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"     * with index and flags obtained from the arguments provided","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"     * @param arguments","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"    public UpdateCommand(String arguments) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        if (!arguments.contains(FLAG_SEPARATOR)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"            throw new DukeException(\"No field to update is specified\");","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        String[] details \u003d arguments.split(FLAG_SEPARATOR);","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        this.index \u003d details[0];","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        this.flags \u003d Arrays.copyOfRange(details, 1, details.length);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"     * A core logic method for updating the current food attributes with given flag values","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"     * @param currentFood","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"     * @param flagName","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"     * @param flagValue","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"    private void updateFoodAttribute(Food currentFood,","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"                                     String flagName,","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                                     String flagValue,","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"                                     String[] allFlags) throws DukeException {","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"            switch (flagName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"            case \"n\":","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setName(flagValue);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"            case \"e\":","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"                Validator.isExpiryDateValid(flagValue);","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setExpiryDate(flagValue);","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"            case \"q\":","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setQuantity(Double.parseDouble(flagValue));","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"                String currentFoodUnit \u003d currentFood.getUnit();","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setUnit(currentFoodUnit);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"            case \"u\":","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"                if (currentFood.getQuantity() \u003d\u003d 0 \u0026\u0026 Arrays.stream(allFlags).noneMatch(f -\u003e f.startsWith(\"q\"))) {","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"                    throw new DukeException(\"Please set the quantity to change a unit\");","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setUnit(flagValue);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"            case \"c\":","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"                currentFood.setCategory(flagValue);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"                break;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"            default:","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"                throw new InvalidFlagException(flagName);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"            throw e;","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"            throw new IllegalValueException(\"Illegal value for the flag \" + flagName);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"     * @param foodList","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"     * @return CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"     * @throws DukeException","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"    public CommandResult execute(FoodList foodList) throws DukeException {","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"            index \u003d Integer.parseInt(this.index.trim()) - 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"            int numberOfFood \u003d foodList.getNumberOfFood();","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"            String wrongIndexMessage \u003d \"Invalid index format! Please give an index within range of \" + numberOfFood;","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"            throw new DukeException(wrongIndexMessage);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"        Food currentFood \u003d foodList.getFood(index);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"DavidVin357"},"content":"        for (String flag : flags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"DavidVin357"},"content":"            String[] flagParts \u003d flag.trim().split(\" \", 2);","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"            if (flagParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"                String invalidFlagName \u003d flagParts[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"                throw new InvalidFlagException(invalidFlagName);","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"DavidVin357"},"content":"            String flagName \u003d flagParts[0].trim().toLowerCase();","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"DavidVin357"},"content":"            String flagValue \u003d flagParts[1].trim().toLowerCase();","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"DavidVin357"},"content":"            updateFoodAttribute(currentFood, flagName, flagValue, flags);","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"DavidVin357"},"content":"        return new CommandResult(\"Updated food item successfully! \\n\" + foodList.getFood(index));","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"ZhongXiangWong":3,"DavidVin357":113}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"    protected String errorMessage \u003d \"Error..\";","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"    public DukeException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"        return errorMessage;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ZhongXiangWong":4,"DavidVin357":2,"tsx0314":12,"wanjuin":1}},{"path":"src/main/java/seedu/duke/exceptions/EmptyStorageFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class EmptyStorageFileException extends  DukeException{","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    public EmptyStorageFileException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"        super(\"File is empty.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/seedu/duke/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class IllegalValueException extends DukeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"        super(message);","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidFlagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"public class InvalidFlagException extends DukeException {","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"    public InvalidFlagException(String flag) {","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"        this.errorMessage \u003d \"the flag \" + \"\\\"--\" + flag + \"\\\"\" + \" is invalid\";","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"DavidVin357":7}},{"path":"src/main/java/seedu/duke/exceptions/InvalidFlagValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"public class InvalidFlagValueException extends DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"    public InvalidFlagValueException(String flag) {","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"        this.errorMessage \u003d \"the value of flag \" + \"\\\"--\" + flag + \"\\\"\" + \" is invalid\";","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"DavidVin357":6,"tsx0314":2}},{"path":"src/main/java/seedu/duke/exceptions/InvalidStorageFilePathException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class InvalidStorageFilePathException extends DukeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"        super(message);","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/seedu/duke/exceptions/ReadStorageFileErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class ReadStorageFileErrorException extends  DukeException{","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    public ReadStorageFileErrorException(String message) {","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"        super(\"The attribute \u0027\" + message + \"\u0027 in the storage file is not valid.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/seedu/duke/exceptions/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class StorageOperationException extends DukeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"        super(message);","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":7}},{"path":"src/main/java/seedu/duke/food/Food.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.food;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.general.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.utils.DateFormatter;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.utils.Validator;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"public class Food {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_1 \u003d \"mg\";","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_2 \u003d \"milligram\";","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIGRAM_3 \u003d \"milligrams\";","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_1 \u003d \"gram\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_2 \u003d \"g\";","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    private static final String GRAM_3 \u003d \"grams\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_1 \u003d \"kg\";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_2 \u003d \"kilogram\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    private static final String KILOGRAM_3 \u003d \"kilograms\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_1 \u003d \"ml\";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_2 \u003d \"millilitre\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    private static final String MILLIMETRE_3 \u003d \"millilitres\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_1 \u003d \"l\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_2 \u003d \"litre\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    private static final String LITRE_3 \u003d \"litres\";","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    private static final String SERVING_1 \u003d \"serving\";","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"    private static final String SERVING_2 \u003d \"servings\";","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"wanjuin"},"content":"    private static final String BOX_1 \u003d \"box\";","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"wanjuin"},"content":"    private static final String BOX_2 \u003d \"boxes\";","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"wanjuin"},"content":"    private static final String PACKET_1 \u003d \"packet\";","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"    private static final String PACKET_2 \u003d \"packets\";","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"    private String name;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"    private String expiryDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"    private Double quantity;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"    private String unit;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"    private FoodCategory category;","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"     * Constructor","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"     * @param name       food name","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"     * @param expiryDate food expiry date","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"     * @param quantity   food quantity","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"     * @param unit       food unit","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"     * @param category   food category","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name,","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"                String expiryDate,","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"                Double quantity,","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"                String unit,","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"                FoodCategory category) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"        Validator.isQuantityValid(quantity);","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        Validator.isUnitValid(unit);","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d FoodCategory.OTHERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d 0.0;","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"wanjuin"},"content":"        this.unit \u003d Unit.UNIT.abbreviation;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"tsx0314"},"content":"     * Constructor for Food object with no quantity and no unit","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"tsx0314"},"content":"     * @param name       food name","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"tsx0314"},"content":"     * @param expiryDate food expiry date","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"tsx0314"},"content":"     * @param category   food category","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, FoodCategory category) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d 0.0;","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"wanjuin"},"content":"        this.unit \u003d Unit.UNIT.abbreviation;","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, Double quantity) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"        Validator.isQuantityValid(quantity);","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"wanjuin"},"content":"        String dummyUnit \u003d \"dummy\";","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"wanjuin"},"content":"        this.unit \u003d getUnitString(dummyUnit, quantity);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d FoodCategory.OTHERS;","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, Double quantity, FoodCategory category) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"DavidVin357"},"content":"        Validator.isQuantityValid(quantity);","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"wanjuin"},"content":"        String dummyUnit \u003d \"dummy\";","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"wanjuin"},"content":"        this.unit \u003d getUnitString(dummyUnit, quantity);","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":116,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, Double quantity, String unit) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"DavidVin357"},"content":"        Validator.isQuantityValid(quantity);","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"DavidVin357"},"content":"        Validator.isUnitValid(unit);","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"tsx0314"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d FoodCategory.OTHERS;","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, Double quantity, String unit, String category) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"DavidVin357"},"content":"        Validator.isQuantityValid(quantity);","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"DavidVin357"},"content":"        Validator.isUnitValid(unit);","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"        this.category \u003d FoodCategory.valueOf(category);","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"        this.unit \u003d unit;","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"DavidVin357"},"content":"    public Food(String name, String expiryDate, String category) throws DukeException{","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"DavidVin357"},"content":"        Validator.isExpiryDateValid(expiryDate);","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"        this.category \u003d FoodCategory.valueOf(category);","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"SebastianSoewanto"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"SebastianSoewanto"},"content":"        return LocalDate.now();","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"DavidVin357"},"content":"    public LocalDate parseExpiryDate() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":155,"author":{"gitId":"DavidVin357"},"content":"        return DateFormatter.parse(expiryDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":156,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"tsx0314"},"content":"    public double getQuantity() {","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"tsx0314"},"content":"        return quantity;","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"wanjuin"},"content":"    public String getUnit() {","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"wanjuin"},"content":"        return unit;","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"ZhongXiangWong"},"content":"    public FoodCategory getCategory() {","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"        return category;","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"tsx0314"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"tsx0314"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"tsx0314"},"content":"    public void setExpiryDate(String expiryDate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"tsx0314"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"tsx0314"},"content":"    public void setQuantity(double quantity) {","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"tsx0314"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"DavidVin357"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"DavidVin357"},"content":"        for (FoodCategory c : FoodCategory.values()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"DavidVin357"},"content":"            if (getCategoryString(c).equals(category.toLowerCase().trim())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"DavidVin357"},"content":"                this.category \u003d c;","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"DavidVin357"},"content":"                return;","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"DavidVin357"},"content":"        // If no category matched, set as unclassified","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"tsx0314"},"content":"        this.category \u003d FoodCategory.OTHERS;","lastModifiedDate":"2023-04-01"},{"lineNumber":191,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"tsx0314"},"content":"    public String getCategoryString(FoodCategory category) {","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"tsx0314"},"content":"        switch (category) {","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"tsx0314"},"content":"        case FRUIT:","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"tsx0314"},"content":"            return \"fruit\";","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"tsx0314"},"content":"        case MEAT:","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"tsx0314"},"content":"            return \"meat\";","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"tsx0314"},"content":"        case DAIRY:","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"tsx0314"},"content":"            return \"dairy\";","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"tsx0314"},"content":"        case GRAIN:","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"tsx0314"},"content":"            return \"grain\";","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"tsx0314"},"content":"        case BEVERAGE:","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"tsx0314"},"content":"            return \"beverage\";","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"tsx0314"},"content":"        case SEAFOOD:","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"tsx0314"},"content":"            return \"seafood\";","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"tsx0314"},"content":"        case VEGETABLE:","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"tsx0314"},"content":"            return \"vegetable\";","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"tsx0314"},"content":"        default:","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"tsx0314"},"content":"            return \"others\";","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"wanjuin"},"content":"    public void setUnit(String unit) {","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"wanjuin"},"content":"        String unitTemp \u003d getUnitString(unit, quantity);","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"wanjuin"},"content":"        this.unit \u003d unitTemp;","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"wanjuin"},"content":"    public String getUnitString(String unitTemporary, Double quantityInDouble) {","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"wanjuin"},"content":"        switch (unitTemporary.toLowerCase()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"wanjuin"},"content":"        case MILLIGRAM_3:","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"wanjuin"},"content":"            return String.valueOf(Unit.MILLIGRAM.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"wanjuin"},"content":"        case GRAM_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"wanjuin"},"content":"        case GRAM_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"wanjuin"},"content":"        case GRAM_3:","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"wanjuin"},"content":"            return String.valueOf(Unit.GRAM.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"wanjuin"},"content":"        case KILOGRAM_3:","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"wanjuin"},"content":"            return String.valueOf(Unit.KILOGRAM.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"wanjuin"},"content":"        case MILLIMETRE_3:","lastModifiedDate":"2023-04-07"},{"lineNumber":236,"author":{"gitId":"wanjuin"},"content":"            return String.valueOf(Unit.MILLILITER.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":237,"author":{"gitId":"wanjuin"},"content":"        case LITRE_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":238,"author":{"gitId":"wanjuin"},"content":"        case LITRE_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":239,"author":{"gitId":"wanjuin"},"content":"        case LITRE_3:","lastModifiedDate":"2023-04-07"},{"lineNumber":240,"author":{"gitId":"wanjuin"},"content":"            return String.valueOf(Unit.LITER.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"wanjuin"},"content":"        case SERVING_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"wanjuin"},"content":"        case SERVING_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.SERVING.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.SERVINGS.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":247,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":248,"author":{"gitId":"wanjuin"},"content":"        case BOX_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":249,"author":{"gitId":"wanjuin"},"content":"        case BOX_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":250,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":251,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.BOXES.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":252,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":253,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.BOX.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":254,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":255,"author":{"gitId":"wanjuin"},"content":"        case PACKET_1:","lastModifiedDate":"2023-04-07"},{"lineNumber":256,"author":{"gitId":"wanjuin"},"content":"        case PACKET_2:","lastModifiedDate":"2023-04-07"},{"lineNumber":257,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":258,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.PACKETS.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":259,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":260,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.PACKET.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":261,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":262,"author":{"gitId":"wanjuin"},"content":"        default:","lastModifiedDate":"2023-04-07"},{"lineNumber":263,"author":{"gitId":"wanjuin"},"content":"            if (quantityInDouble \u003e 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":264,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.UNITS.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":265,"author":{"gitId":"wanjuin"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":266,"author":{"gitId":"wanjuin"},"content":"                return String.valueOf(Unit.UNIT.abbreviation);","lastModifiedDate":"2023-04-07"},{"lineNumber":267,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":268,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":272,"author":{"gitId":"tsx0314"},"content":"     * Returns a food product name","lastModifiedDate":"2023-03-21"},{"lineNumber":273,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":274,"author":{"gitId":"tsx0314"},"content":"     * @return name food name","lastModifiedDate":"2023-03-21"},{"lineNumber":275,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":276,"author":{"gitId":"tsx0314"},"content":"    public String getName() {","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"tsx0314"},"content":"        return name;","lastModifiedDate":"2023-03-10"},{"lineNumber":278,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":279,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":280,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":281,"author":{"gitId":"tsx0314"},"content":"     * Returns a food expiry date string","lastModifiedDate":"2023-03-21"},{"lineNumber":282,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":283,"author":{"gitId":"tsx0314"},"content":"     * @return expiryDate food expiry date","lastModifiedDate":"2023-03-21"},{"lineNumber":284,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":285,"author":{"gitId":"tsx0314"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2023-03-10"},{"lineNumber":286,"author":{"gitId":"tsx0314"},"content":"        return expiryDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":287,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":288,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":289,"author":{"gitId":"DavidVin357"},"content":"    public boolean isFresh() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":290,"author":{"gitId":"wanjuin"},"content":"        LocalDate expiryDate \u003d parseExpiryDate();","lastModifiedDate":"2023-04-05"},{"lineNumber":291,"author":{"gitId":"wanjuin"},"content":"        return expiryDate.isAfter(getDate());","lastModifiedDate":"2023-04-07"},{"lineNumber":292,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":293,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"DavidVin357"},"content":"    public String getExpiryStatus() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":295,"author":{"gitId":"wanjuin"},"content":"        String expiryStatus;","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"wanjuin"},"content":"        if (!isFresh()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":297,"author":{"gitId":"wanjuin"},"content":"            expiryStatus \u003d \" (expired) \";","lastModifiedDate":"2023-04-05"},{"lineNumber":298,"author":{"gitId":"DavidVin357"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"wanjuin"},"content":"            expiryStatus \u003d \" (fresh)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":300,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":301,"author":{"gitId":"wanjuin"},"content":"        return expiryStatus;","lastModifiedDate":"2023-04-05"},{"lineNumber":302,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":303,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":304,"author":{"gitId":"DavidVin357"},"content":"    public long getDaysExpire() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":305,"author":{"gitId":"wanjuin"},"content":"        LocalDate expiryDate \u003d parseExpiryDate();","lastModifiedDate":"2023-04-05"},{"lineNumber":306,"author":{"gitId":"wanjuin"},"content":"        long days \u003d ChronoUnit.DAYS.between(getDate(), expiryDate);","lastModifiedDate":"2023-04-07"},{"lineNumber":307,"author":{"gitId":"wanjuin"},"content":"        return days;","lastModifiedDate":"2023-04-05"},{"lineNumber":308,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":309,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":310,"author":{"gitId":"DavidVin357"},"content":"    public String getDaysString() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":311,"author":{"gitId":"wanjuin"},"content":"        if (isFresh()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":312,"author":{"gitId":"wanjuin"},"content":"            String daysToExpireNotice \u003d \" (\" + getDaysExpire() + \" days left)\";","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"wanjuin"},"content":"            return daysToExpireNotice;","lastModifiedDate":"2023-04-05"},{"lineNumber":314,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":315,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":316,"author":{"gitId":"wanjuin"},"content":"        String daysExpiredNotice \u003d null;","lastModifiedDate":"2023-04-05"},{"lineNumber":317,"author":{"gitId":"wanjuin"},"content":"        long convertToPositiveDays \u003d (-1) * getDaysExpire();","lastModifiedDate":"2023-04-05"},{"lineNumber":318,"author":{"gitId":"wanjuin"},"content":"        daysExpiredNotice \u003d \" (expired \" + convertToPositiveDays + \" days)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":319,"author":{"gitId":"wanjuin"},"content":"        return daysExpiredNotice;","lastModifiedDate":"2023-04-05"},{"lineNumber":320,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":321,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":322,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":323,"author":{"gitId":"tsx0314"},"content":"     * Returns a foodDetail string","lastModifiedDate":"2023-03-21"},{"lineNumber":324,"author":{"gitId":"tsx0314"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":325,"author":{"gitId":"tsx0314"},"content":"     * @return foodDetails a String of complete food details to be printed","lastModifiedDate":"2023-03-21"},{"lineNumber":326,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":327,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":328,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":329,"author":{"gitId":"tsx0314"},"content":"        Double quantity \u003d getQuantity();","lastModifiedDate":"2023-03-20"},{"lineNumber":330,"author":{"gitId":"DavidVin357"},"content":"        String unit \u003d getUnit();","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"wanjuin"},"content":"        String foodDetail;","lastModifiedDate":"2023-04-07"},{"lineNumber":332,"author":{"gitId":"DavidVin357"},"content":"        String expiryStatus \u003d \"\";","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"DavidVin357"},"content":"        String daysLeftString \u003d \"\";","lastModifiedDate":"2023-04-06"},{"lineNumber":334,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":335,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":336,"author":{"gitId":"DavidVin357"},"content":"            expiryStatus \u003d getExpiryStatus();","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"DavidVin357"},"content":"            daysLeftString \u003d getDaysString();","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"DavidVin357"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"DavidVin357"},"content":"            Ui.showError(\"Expiry date parsing error\");","lastModifiedDate":"2023-04-06"},{"lineNumber":340,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":341,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"DavidVin357"},"content":"        if (quantity \u003d\u003d 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"DavidVin357"},"content":"            foodDetail \u003d getName() + expiryStatus","lastModifiedDate":"2023-04-06"},{"lineNumber":344,"author":{"gitId":"DavidVin357"},"content":"                    + \"\\n       Expiry date: \" + getExpiryDate() + daysLeftString","lastModifiedDate":"2023-04-06"},{"lineNumber":345,"author":{"gitId":"DavidVin357"},"content":"                    + \"\\n       Category: \" + getCategoryString(getCategory());","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"tsx0314"},"content":"        }  else {","lastModifiedDate":"2023-03-20"},{"lineNumber":347,"author":{"gitId":"DavidVin357"},"content":"            foodDetail \u003d getName() + expiryStatus","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"DavidVin357"},"content":"                    + \"\\n       Expiry date: \" + getExpiryDate() + daysLeftString","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"DavidVin357"},"content":"                    + \"\\n       Category: \" + getCategoryString(getCategory())","lastModifiedDate":"2023-04-08"},{"lineNumber":350,"author":{"gitId":"DavidVin357"},"content":"                    + \"\\n       Remaining quantity: \" + quantity + \" \" + unit;","lastModifiedDate":"2023-04-08"},{"lineNumber":351,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":352,"author":{"gitId":"tsx0314"},"content":"        return foodDetail;","lastModifiedDate":"2023-03-20"},{"lineNumber":353,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":354,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":16,"DavidVin357":78,"SebastianSoewanto":7,"tsx0314":133,"wanjuin":120}},{"path":"src/main/java/seedu/duke/food/FoodCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.food;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"public enum FoodCategory {","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"    FRUIT, MEAT, VEGETABLE, DAIRY, GRAIN, SEAFOOD, BEVERAGE, OTHERS, UNCLASSIFIED_FOOD;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"tsx0314":6}},{"path":"src/main/java/seedu/duke/food/FoodList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.food;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":" * Represents a food list","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"public class FoodList {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    private ArrayList\u003cFood\u003e foodList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"     * Constructor","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"    public FoodList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    public FoodList(ArrayList\u003cFood\u003e decodedFoodList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"        foodList \u003d decodedFoodList;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"    public void addFood(Food food) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"        foodList.add(food);","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"SebastianSoewanto"},"content":"    public void removeFood(int index) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"SebastianSoewanto"},"content":"        foodList.remove(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"wanjuin"},"content":"    public int getNumberOfFood() {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        return foodList.size();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"wanjuin"},"content":"    public ArrayList\u003cFood\u003e getFoodList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"wanjuin"},"content":"        return foodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    public Food getFood(int i) throws DukeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"wanjuin"},"content":"            return foodList.get(i);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"            throw new IllegalValueException(\"No item at such index!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"    public void sortFoodList () throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"wanjuin"},"content":"        for (int i \u003d 0; i \u003c getNumberOfFood(); i++){","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"wanjuin"},"content":"            for(int j \u003d 0; j \u003c getNumberOfFood(); j ++){","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"wanjuin"},"content":"                long day1 \u003d foodList.get(i).getDaysExpire();","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"wanjuin"},"content":"                long day2 \u003d foodList.get(j).getDaysExpire();","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"wanjuin"},"content":"                if (day1 \u003c day2) {","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"wanjuin"},"content":"                    Food temp \u003d foodList.get(i);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"wanjuin"},"content":"                    foodList.set(i, foodList.get(j));","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"wanjuin"},"content":"                    foodList.set(j, temp);","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"wanjuin"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"wanjuin"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"wanjuin"},"content":"    public void clearFoodList() {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"wanjuin"},"content":"        int totalNumberFood \u003d getNumberOfFood();","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"wanjuin"},"content":"        for (int i \u003d totalNumberFood - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"wanjuin"},"content":"            removeFood(0);","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"wanjuin"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"        for (Food foodItem : foodList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"            output.append(index).append(\". \").append(foodItem);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"            output.append(System.lineSeparator());","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"            index++;","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"        return output.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":4,"DavidVin357":21,"SebastianSoewanto":4,"tsx0314":20,"wanjuin":32}},{"path":"src/main/java/seedu/duke/food/Unit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.food;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"//@@author wanjuin","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":" * This enum represents the units of food.","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"public enum Unit {","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"    MILLIGRAM(\"mg\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"    GRAM(\"g\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"    KILOGRAM(\"kg\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"    MILLILITER(\"ml\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    LITER(\"l\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    SERVING(\"serving\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    SERVINGS(\"servings\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    UNIT(\"unit\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    UNITS(\"units\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    BOX(\"box\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    BOXES(\"boxes\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    PACKET(\"packet\"),","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    PACKETS(\"packets\");","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    public String abbreviation;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"    Unit(String abbreviation) {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"        this.abbreviation \u003d abbreviation;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"tsx0314":2,"wanjuin":26}},{"path":"src/main/java/seedu/duke/general/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.general;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.AddCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.ExitCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.commands.FindCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.commands.HelpCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.IncorrectCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.ListCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.commands.RemoveCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.commands.UpdateCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.commands.ClearCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":" * The code is adapted from","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":" * https://github.com/se-edu/addressbook-level2/blob/","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":" * 157fcf19c6b73289dc4cc7b2dd1152bc2b8e197a/src/seedu/addressbook/parser/Parser","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"public class Parser {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_1 \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}$\";","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_2 \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-c\\\\s+\\\\w+(\\\\s+\\\\w+)*$\";","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_3 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-c\\\\s+\\\\w+(\\\\s+\\\\w+)*\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-q\\\\s+\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_4 \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}\" +","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-q\\\\s+\\\\d+(\\\\.\\\\d+)?\";","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_5 \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}\" +","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-q\\\\s+\\\\d+(\\\\.\\\\d+)?\\\\s+-u\\\\s+\\\\w+(\\\\s+\\\\w+)*$\";","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"    private static final String ADD_COMMAND_PATTERN_6 \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"            \"^\\\\s+-n\\\\s+\\\\w+(\\\\s+\\\\w+)*\\\\s+-e\\\\s+\\\\d{1,2}[/-]\\\\d{1,2}[/-]\\\\d{2,4}\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-c\\\\s+\\\\w+(\\\\s+\\\\w+)*\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"                    \"\\\\s+-q\\\\s+\\\\d+(\\\\.\\\\d+)?\\\\s+-u\\\\s+\\\\w+(\\\\s+\\\\w+)*$\";","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"tsx0314"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"tsx0314"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"            return addFood(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"wanjuin"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"wanjuin"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"            return new HelpCommand(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"            return new FindCommand(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"SebastianSoewanto"},"content":"            return new RemoveCommand(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"            return new UpdateCommand(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"wanjuin"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"wanjuin"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"tsx0314"},"content":"        default:","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"tsx0314"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"tsx0314"},"content":"    private static Command addFood(String args) {","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched1 \u003d Pattern.matches(ADD_COMMAND_PATTERN_1, args);","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched2 \u003d Pattern.matches(ADD_COMMAND_PATTERN_2, args);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched3 \u003d Pattern.matches(ADD_COMMAND_PATTERN_3, args);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched4 \u003d Pattern.matches(ADD_COMMAND_PATTERN_4, args);","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched5 \u003d Pattern.matches(ADD_COMMAND_PATTERN_5, args);","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"tsx0314"},"content":"        boolean isMatched6 \u003d Pattern.matches(ADD_COMMAND_PATTERN_6, args);","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"tsx0314"},"content":"        if (!isMatched1 \u0026\u0026 !isMatched2 \u0026\u0026 !isMatched3 \u0026\u0026 !isMatched4 \u0026\u0026 !isMatched5 \u0026\u0026 !isMatched6) {","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"tsx0314"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"tsx0314"},"content":"        } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"tsx0314"},"content":"            return new AddCommand(args);","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"tsx0314"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ZhongXiangWong":10,"DavidVin357":5,"SebastianSoewanto":1,"tsx0314":73,"wanjuin":16}},{"path":"src/main/java/seedu/duke/general/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.general;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":" * Text UI of the application","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"    public static final String LOGO_PATTERN \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"    public Ui() {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"        String fullInputLine \u003d sc.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"        assert fullInputLine !\u003d null : \"Input cannot be empty\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"        return fullInputLine;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"wanjuin"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"        System.out.println(\"Hello from\\n\" + LOGO_PATTERN);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"        System.out.println(\"Hi! I am Duke:)\");","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"        System.out.println(\"Let us track expiry dates and combat food waste!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"        showLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"    public void showLine() {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"        System.out.println(\"______________________________\");","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    public static void showError(String message) {","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ZhongXiangWong":1,"tsx0314":26,"wanjuin":15}},{"path":"src/main/java/seedu/duke/storage/FoodListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.EmptyStorageFileException;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.ReadStorageFileErrorException;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodCategory;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.Unit;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.general.Ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":" * Decodes the storage data file into an {@code FoodList} object.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":" * The code is adapted from","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookDecoder.java","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"public class FoodListDecoder {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"    static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String SEPARATOR \u003d \"\\\\|\";","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final char NAME_IDENTIFIER \u003d \u0027n\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final char EXPIRY_DATE_IDENTIFIER \u003d \u0027e\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final char QUANTITY_IDENTIFIER \u003d \u0027q\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final char UNIT_IDENTIFIER \u003d \u0027u\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final char CATEGORY_IDENTIFIER \u003d \u0027c\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String MISSING_IDENTIFIER_ERROR \u003d \"Error in reading storage file: Missing identifier.\" ;","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String INVALID_QUANTITY_ERROR \u003d \"Quantity in save file is not a valid number.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"     * Decodes \u003ccode\u003eencodedFoodList\u003c/code\u003e into an \u003ccode\u003eFoodList\u003c/code\u003e containing the decoded food. It is","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"     * able to handle modifications to the encodedFoodList such as missing data and additional data.","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param encodedFoodList this is the line of food attribute of the current food","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return the foodList that are able to be processed by this method, unprocessable data will be ignored","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"    public static FoodList decodeFoodList(List\u003cString\u003e encodedFoodList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"        final ArrayList\u003cFood\u003e decodedFoodList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        for (String encodedFood : encodedFoodList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"                decodedFoodList.add(decodeFoodFromString(encodedFood));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"        return new FoodList(decodedFoodList);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method decodes the attributes related to a string. It has checks to determine if the attribute is valid or","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"     * invalid. After all the present attributes are checked, the food object will be returned with valid attributes.","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param encodedFood contains the list of attributes to be checked","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return a Food object with attributes","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws ReadStorageFileErrorException when there are errors with decoding the attributes","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws EmptyStorageFileException  when the line is empty","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"    private static Food decodeFoodFromString(String encodedFood) throws","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"             DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"        if (encodedFood.equals(\"\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new EmptyStorageFileException();","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"        String[] details \u003d encodedFood.split(SEPARATOR);","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"        String foodName \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"        String expiryDate \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"        String quantity \u003d \"0.0\";","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"        String unit \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"        String category \u003d \"\";","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"        for (String foodDetails : details) {","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"                if (foodDetails.equals(\"\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"                    continue;","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"                char identifier \u003d foodDetails.charAt(0);","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"                String detail \u003d foodDetails.substring(1).trim();","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"                switch(identifier) {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"                case NAME_IDENTIFIER:","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"ZhongXiangWong"},"content":"                    if (hasValidFoodName(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"                        assert !detail.equals(\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"ZhongXiangWong"},"content":"                        foodName \u003d detail;","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"ZhongXiangWong"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"ZhongXiangWong"},"content":"                case EXPIRY_DATE_IDENTIFIER:","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"ZhongXiangWong"},"content":"                    if (hasValidExpiryDate(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ZhongXiangWong"},"content":"                        expiryDate \u003d detail;","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ZhongXiangWong"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"ZhongXiangWong"},"content":"                case QUANTITY_IDENTIFIER:","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"ZhongXiangWong"},"content":"                    if(hasValidQuantity(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"ZhongXiangWong"},"content":"                        quantity \u003d detail;","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"ZhongXiangWong"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"ZhongXiangWong"},"content":"                case UNIT_IDENTIFIER:","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"ZhongXiangWong"},"content":"                    if (hasValidUnit(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"ZhongXiangWong"},"content":"                        unit \u003d detail;","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"ZhongXiangWong"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"ZhongXiangWong"},"content":"                        unit \u003d String.valueOf(Unit.UNIT);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"ZhongXiangWong"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"ZhongXiangWong"},"content":"                case CATEGORY_IDENTIFIER:","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"ZhongXiangWong"},"content":"                    if(hasValidCategory(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"ZhongXiangWong"},"content":"                        category \u003d detail;","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"ZhongXiangWong"},"content":"                    } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"ZhongXiangWong"},"content":"                        category \u003d String.valueOf(FoodCategory.UNCLASSIFIED_FOOD);","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"ZhongXiangWong"},"content":"                    }","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"ZhongXiangWong"},"content":"                default:","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"ZhongXiangWong"},"content":"                    break;","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"ZhongXiangWong"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"ZhongXiangWong"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"ZhongXiangWong"},"content":"                Ui.showError(MISSING_IDENTIFIER_ERROR);","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"ZhongXiangWong"},"content":"            return new Food(foodName, expiryDate, Double.valueOf(quantity), unit, category);","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"ZhongXiangWong"},"content":"            Ui.showError(INVALID_QUANTITY_ERROR);","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"ZhongXiangWong"},"content":"        return new Food(foodName, expiryDate, category);","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether the encoded \u003ccode\u003efoodName\u003c/code\u003e is valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param detail is the encoded foodName","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws ReadStorageFileErrorException when not valid","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean hasValidFoodName(String detail) throws ReadStorageFileErrorException {","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"ZhongXiangWong"},"content":"        if (detail.equals(\"\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new ReadStorageFileErrorException(\"food name: \" + detail);","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"ZhongXiangWong"},"content":"        return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether the encoded \u003ccode\u003eexpiryDate\u003c/code\u003e is valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param detail is the encoded expiryDate","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws ReadStorageFileErrorException when not valid","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean hasValidExpiryDate(String detail) throws ReadStorageFileErrorException {","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"ZhongXiangWong"},"content":"            LocalDate.parse(detail, formatter);","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new ReadStorageFileErrorException(\"expiry date: \" + detail);","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"ZhongXiangWong"},"content":"        if (isInvalidDate(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new ReadStorageFileErrorException(\"expiry date: \" + detail);","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"ZhongXiangWong"},"content":"        return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":165,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":166,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether the encoded \u003ccode\u003equantity\u003c/code\u003e is valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param detail is the encoded quantity","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws ReadStorageFileErrorException when not valid","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws NumberFormatException when detail cannot be interpreted as a number","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean hasValidQuantity(String detail) throws ReadStorageFileErrorException {","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"ZhongXiangWong"},"content":"            double value \u003d Double.parseDouble(detail);","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"ZhongXiangWong"},"content":"            if (value \u003c 0 || value \u003e 9999) {","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"ZhongXiangWong"},"content":"                throw new ReadStorageFileErrorException(\"food quantity:\" + detail);","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"ZhongXiangWong"},"content":"            Ui.showError(INVALID_QUANTITY_ERROR);","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"ZhongXiangWong"},"content":"        return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether the encoded \u003ccode\u003ecategory\u003c/code\u003e is valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param detail is the encoded category","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid; false otherwise","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean hasValidCategory(String detail) {","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"ZhongXiangWong"},"content":"        for (FoodCategory category : FoodCategory.values()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"ZhongXiangWong"},"content":"            if (category.name().equals(detail)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"ZhongXiangWong"},"content":"                return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":196,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"ZhongXiangWong"},"content":"        return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":200,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":201,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":202,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether the encoded \u003ccode\u003eunit\u003c/code\u003e is valid.","lastModifiedDate":"2023-04-07"},{"lineNumber":203,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":204,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param detail is the encoded unit","lastModifiedDate":"2023-04-07"},{"lineNumber":205,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid; false otherwise","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":207,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean hasValidUnit(String detail) {","lastModifiedDate":"2023-04-07"},{"lineNumber":208,"author":{"gitId":"ZhongXiangWong"},"content":"        for (Unit unit : Unit.values()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"ZhongXiangWong"},"content":"            if (unit.abbreviation.equals(detail)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"ZhongXiangWong"},"content":"                return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"ZhongXiangWong"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":212,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":213,"author":{"gitId":"ZhongXiangWong"},"content":"        return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":214,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"ZhongXiangWong"},"content":"     * This method checks whether date is valid, based on the concept of leap year.","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param date is the date to be checked","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"ZhongXiangWong"},"content":"     * @return true if valid; false if otherwise","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"ZhongXiangWong"},"content":"    public static boolean isInvalidDate(String date) {","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"ZhongXiangWong"},"content":"        String[] splitString \u003d date.split(\"/\", 3);","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"ZhongXiangWong"},"content":"        String d \u003d splitString[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"ZhongXiangWong"},"content":"        String m \u003d splitString[1];","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"ZhongXiangWong"},"content":"        String y \u003d splitString[2];","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"ZhongXiangWong"},"content":"        if (Integer.parseInt(y) % 4 !\u003d 0 \u0026\u0026 m.equals(\"02\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"ZhongXiangWong"},"content":"            return d.equals(\"29\");","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"ZhongXiangWong"},"content":"        return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":231,"DavidVin357":3}},{"path":"src/main/java/seedu/duke/storage/FoodListEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":" * Encodes the {@code FoodList} object into a data file for storage.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":" * The code is adapted from","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookEncoder.java","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"public class FoodListEncoder {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String SEPARATOR \u003d \"|\";","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String NAME_IDENTIFIER \u003d \"n  \";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String EXPIRY_DATE_IDENTIFIER \u003d \"e  \";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String QUANTITY_IDENTIFIER \u003d \"q  \";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String UNIT_IDENTIFIER \u003d \"u  \";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String CATEGORY_IDENTIFIER \u003d \"c  \";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"     * Encodes all the \u003ccode\u003eFood\u003c/code\u003e in the \u003ccode\u003etoSave\u003c/code\u003e into a list of decodable and readable string","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"     * representation for storage.","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"     * Changed return type from List to ArrayList","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param toSave the foodList object that we want to encode the data of","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"    public static ArrayList\u003cString\u003e encodeFoodList(FoodList toSave) {","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"        final ArrayList\u003cString\u003e encodedFoodLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"        toSave.getFoodList().forEach(food -\u003e encodedFoodLists.add(encodeFoodToString(food)));","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        return encodedFoodLists;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"     * Encodes the attributes of \u003ccode\u003eFood\u003c/code\u003e into a decodable and readable string representation. All attributes","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"     * will be encoded (missing data / non-initialised data will be initialised as either 0 or NULL).","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"     * @param food the food object that contains attributes that are associated to it","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"    private static String encodeFoodToString(Food food) {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        final StringBuilder encodedFoodBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"        encodedFoodBuilder.append(SEPARATOR + NAME_IDENTIFIER).append(food.getName());","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"        encodedFoodBuilder.append(SEPARATOR + EXPIRY_DATE_IDENTIFIER).append(food.getExpiryDate());","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"        encodedFoodBuilder.append(SEPARATOR + QUANTITY_IDENTIFIER).append(food.getQuantity());","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"        encodedFoodBuilder.append(SEPARATOR + UNIT_IDENTIFIER).append(food.getUnit());","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        encodedFoodBuilder.append(SEPARATOR + CATEGORY_IDENTIFIER).append(food.getCategory());","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"        return encodedFoodBuilder.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":54}},{"path":"src/main/java/seedu/duke/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":" * Represents the file used to store food list data.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":" * The code is adapted from:","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"public class StorageFile {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"     * Default file path used.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"foodTrackerList.txt\";","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    public final Path path;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"    public StorageFile() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"    public StorageFile(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new InvalidStorageFilePathException(\"storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"     * Saves the {@code foodList} data to the storage file.","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"    public void save(FoodList foodList) throws StorageOperationException {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"            List\u003cString\u003e encodedFoodList \u003d FoodListEncoder.encodeFoodList(foodList);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"            Files.write(path, encodedFoodList);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ZhongXiangWong"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ZhongXiangWong"},"content":"     * Loads the {@code FoodList} data from this storage file, and then returns it.","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ZhongXiangWong"},"content":"     * Returns an empty {@code FoodList} if the file does not exist, or is not a regular file.","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ZhongXiangWong"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ZhongXiangWong"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ZhongXiangWong"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ZhongXiangWong"},"content":"    public FoodList load() throws StorageOperationException {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"ZhongXiangWong"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ZhongXiangWong"},"content":"            return new FoodList();","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ZhongXiangWong"},"content":"            return FoodListDecoder.decodeFoodList(Files.readAllLines(path));","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"ZhongXiangWong"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ZhongXiangWong":90}},{"path":"src/main/java/seedu/duke/utils/DateFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":" * Utility class for parsing the date","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"public class DateFormatter {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"    public static final String INVALID_DATE_PROVIDED \u003d \"Invalid date provided\";","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    public static final String DD_MM_YYYY \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DD_MM_YYYY);","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    public static LocalDate parse(String date) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DD_MM_YYYY);","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"            return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"            throw new DukeException(INVALID_DATE_PROVIDED);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"DavidVin357":28}},{"path":"src/main/java/seedu/duke/utils/Validator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.utils;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.IllegalValueException;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.Unit;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":" * Utility class for validating arguments to Food constructor","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"public class Validator {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"    public static final String PROVIDED_DATE_IS_NOT_IN_THE_FUTURE \u003d \"Provided date is not in the future\";","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    public static final String DATE_IS_NOT_VALID \u003d \"Date is not valid\";","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"    public static final String QUANTITY_IS_NOT_VALID \u003d \"Quantity is not valid\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    public static final String UNIT_IS_NOT_VALID \u003d \"Unit is not valid\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    public static boolean isExpiryDateValid(String date) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"            LocalDate expiryDate \u003d DateFormatter.parse(date);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"            if (expiryDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"                throw new IllegalValueException(PROVIDED_DATE_IS_NOT_IN_THE_FUTURE);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"            throw new IllegalValueException(DATE_IS_NOT_VALID);","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"    public static boolean isQuantityValid(Double q) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        if (q \u003c 0 || q \u003e 9999) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"            throw new DukeException(QUANTITY_IS_NOT_VALID);","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"    public static boolean isUnitValid(String unitName) throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"        for (Unit u : Unit.values()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"            if (u.abbreviation.equals(unitName)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"                return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"        throw new DukeException(UNIT_IS_NOT_VALID);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"DavidVin357":50}},{"path":"src/test/java/seedu/duke/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsx0314"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"tsx0314"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"tsx0314"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"tsx0314"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"tsx0314"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"tsx0314"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"tsx0314"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"tsx0314"},"content":"    void testSplitDetails_oneString_returnsStringsArrayInTwoParts() {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n Egg -e 21/03/2023\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"tsx0314"},"content":"        String[] expected \u003d {\"Egg\", \"21/03/2023\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"tsx0314"},"content":"        assertArrayEquals(expected, addFood.splitDetails(details));","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"tsx0314"},"content":"    void testSplitDetails_oneString_returnsStringsArrayInThreeParts() {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n Egg -e 21/03/2023 -c others\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"tsx0314"},"content":"        String[] expected \u003d {\"Egg\", \"21/03/2023\", \"others\"};","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"tsx0314"},"content":"        assertArrayEquals(expected, addFood.splitDetails(details));","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"tsx0314"},"content":"    void testSplitDetails_oneString_returnsStringsArrayInFourParts() {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n Egg -e 21/03/2023 -q 10 -u unit\";","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"tsx0314"},"content":"        String[] expected \u003d {\"Egg\", \"21/03/2023\", \"10\", \"unit\"};","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"tsx0314"},"content":"        assertArrayEquals(expected, addFood.splitDetails(details));","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"tsx0314"},"content":"    void testSplitDetails_oneString_returnsStringsArrayInFiveParts() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n Egg -e 21/03/2023 -c dairy -q 10 -u pieces\";","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"tsx0314"},"content":"        String[] expected \u003d {\"Egg\", \"21/03/2023\", \"10\", \"pieces\",\"dairy\"};","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"tsx0314"},"content":"        assertArrayEquals(expected, addFood.splitDetails(details));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"tsx0314"},"content":"    void testIsValidDate_validDate_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n egg -e 21/04/2028 -q 10 -u unit\";","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"tsx0314"},"content":"        String date \u003d addFood.splitDetails(details)[1];","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"tsx0314"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"tsx0314"},"content":"        LocalDate expiryDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"tsx0314"},"content":"        boolean expected \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"tsx0314"},"content":"        assertEquals(expected, addFood.isTheDateAfterCurrentDate(expiryDate));","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"tsx0314"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"tsx0314"},"content":"    void testIsValidDate_invalidDate_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"tsx0314"},"content":"        String details \u003d \" -n egg -e 21/10/2010 -q 10 -u unit\";","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"tsx0314"},"content":"        AddCommand addFood \u003d new AddCommand(details);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"tsx0314"},"content":"        String date \u003d addFood.splitDetails(details)[1];","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"tsx0314"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"tsx0314"},"content":"        LocalDate expiryDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"tsx0314"},"content":"        boolean expected \u003d false;","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"tsx0314"},"content":"        assertEquals(expected, addFood.isTheDateAfterCurrentDate(expiryDate));","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"tsx0314"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"tsx0314"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"tsx0314"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"tsx0314":67}},{"path":"src/test/java/seedu/duke/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wanjuin"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"wanjuin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"wanjuin"},"content":"import seedu.duke.general.Parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"wanjuin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"wanjuin"},"content":"import static seedu.duke.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"wanjuin"},"content":"class ExitCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"wanjuin"},"content":"    private final Parser p \u003d new Parser();","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"wanjuin"},"content":"    private final FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"wanjuin"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"wanjuin"},"content":"    void execute() throws DukeException {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"wanjuin"},"content":"        assertEquals(MESSAGE_EXIT_ACKNOWLEDGEMENT, p.parse(\"exit\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"wanjuin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"wanjuin"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"wanjuin"},"content":"    void isExit() throws DukeException {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"wanjuin"},"content":"        assertEquals(true, p.parse(\"exit\").isExit());","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"wanjuin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"wanjuin"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"wanjuin":24}},{"path":"src/test/java/seedu/duke/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.DAIRY;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.VEGETABLE;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.BEVERAGE;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.OTHERS;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"    private String getExpectedFeedback(int expectedNumber) {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"        final String FOUND_FOOD \u003d \"Found \" + expectedNumber + \" of food items\";","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"        final String NOT_FOUND \u003d \"No food found for such query\";","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        if (expectedNumber \u003e 0) {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"            return FOUND_FOOD;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"        return NOT_FOUND;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"    public void termSearch_withoutFlags_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Chicken egg\", \"25/04/2025\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Ostrich Egg  \", \"26/04/2025\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Cow\u0027s Milk\", \"27/04/2025\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(2), new FindCommand(\"EGG \").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withFreshFlag_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Expired egg\", \"25/04/2024\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Good Egg  \", \"26/04/2025\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Expired Milk\", \"27/04/2024\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Good Milk\", \"27/04/2025\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(2), new FindCommand(\"EGG --fresh\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withQuantityFlag_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 3.4, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(1), new FindCommand(\"water   --q 13\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withUnitFlag_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 3.4, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(1), new FindCommand(\"EGG --u kg\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withCategoryFlag_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 3.4, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(0), new FindCommand(\"EGG --c vegetable\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withFreshAndExpiredFlags_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 3.4, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(0), new FindCommand(\"EGG --fresh --expired\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"    @Test void termSearch_withAllFlags_numberOfFoundFood() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 3.4, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"L Sprite\", \"25/04/2024\", 3.34, \"l\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"L Orange Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(getExpectedFeedback(2),","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"                new FindCommand(\"water --fresh --c beverage --q 13 --u ml\").execute(foodList).feedbackToUser);","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"DavidVin357":91}},{"path":"src/test/java/seedu/duke/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.general.Parser;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.LinkedHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"class HelpCommandTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String SHOW_ALL_COMMANDS \u003d \"List of commands: \u0027add\u0027, \u0027list\u0027, \u0027remove\u0027, \u0027find\u0027,\"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ZhongXiangWong"},"content":"            + \" \u0027update\u0027, \u0027clear\u0027, \u0027exit\u0027.\"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nFor more detailed information on usage of specific command, type: help --COMMAND\";","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"    private static final String DEFAULT_HELP_MESSAGE \u003d \"Refer to our user guide for more in-depth details on\"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"            + \" how to use Food Supply Tracker:\"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"            + \"\\nhttps://ay2223s2-cs2113-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"    private FoodList foodList;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"    void helpCommand_multipleWithRegex_expectSeparateByRegex() {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"        String input \u003d \"--remove--find--add\";","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"        HelpCommand hc \u003d new HelpCommand(input);","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"ZhongXiangWong"},"content":"        HashSet\u003cString\u003e expectedOutput \u003d new LinkedHashSet\u003c\u003e(List.of(new String[]{\"\", \"remove\", \"find\", \"add\"}));","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, hc.getFilters());","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"    void helpCommand_withSpacesAndRegex_expectRemoveSpaceSeparateRegex() {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"        String input \u003d \" --   remove      --find--          add\";","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"        HelpCommand hc \u003d new HelpCommand(input);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"        HashSet\u003cString\u003e expectedOutput \u003d new LinkedHashSet\u003c\u003e(List.of(new String[]{\"\", \"remove\", \"find\", \"add\"}));","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, hc.getFilters());","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"    void helpCommand_withRepeatCommand_expectRemoveRepeat() {","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        String input \u003d \"--remove --find --remove --add --find\";","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"        HelpCommand hc \u003d new HelpCommand(input);","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"        HashSet\u003cString\u003e expectedOutput \u003d new LinkedHashSet\u003c\u003e(List.of(new String[]{\"\", \"remove\", \"find\", \"add\"}));","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, hc.getFilters());","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"    void commandResult_withFilterButNoCommand_expectDefaultMessage() {","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"        String input \u003d \"help --\";","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"ZhongXiangWong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"ZhongXiangWong"},"content":"            CommandResult result \u003d c.execute(foodList);","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"            String expectedOutput \u003d SHOW_ALL_COMMANDS + \u0027\\n\u0027 + DEFAULT_HELP_MESSAGE;","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"            assertEquals(expectedOutput, result.feedbackToUser);","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"            assert false;","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"            System.out.println(\"Unexpected Error\");","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ZhongXiangWong":64}},{"path":"src/test/java/seedu/duke/commands/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SebastianSoewanto"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"SebastianSoewanto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"SebastianSoewanto"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"SebastianSoewanto"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"SebastianSoewanto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"SebastianSoewanto"},"content":"class RemoveCommandTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"SebastianSoewanto"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"SebastianSoewanto"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"    public void removeIndex_commandString_numberOfFoodLeft() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"SebastianSoewanto"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Milk\", \"25/03/2025\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Bread\", \"18/03/2025\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Cheese\", \"26/06/2025\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"SebastianSoewanto"},"content":"        foodList.removeFood(2);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"SebastianSoewanto"},"content":"        int expectedOutput \u003d 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"SebastianSoewanto"},"content":"        assertEquals(expectedOutput, foodList.getNumberOfFood());","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"SebastianSoewanto"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"SebastianSoewanto"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"DavidVin357":5,"SebastianSoewanto":17}},{"path":"src/test/java/seedu/duke/commands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DavidVin357"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"DavidVin357"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.utils.Validator;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"DavidVin357"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.DAIRY;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.VEGETABLE;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.BEVERAGE;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.OTHERS;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"DavidVin357"},"content":"import static seedu.duke.food.FoodCategory.FRUIT;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"DavidVin357"},"content":"//@@author DavidVin357","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"DavidVin357"},"content":"public class UpdateCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    private String getExpectedFeedback(int foodIndex, FoodList foodList) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        return \"Updated food item successfully! \\n\" + foodList.getFood(foodIndex);","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"DavidVin357"},"content":"    String updateWithException(FoodList foodList, String arguments) {","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"DavidVin357"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"DavidVin357"},"content":"            return new UpdateCommand(arguments).execute(foodList).feedbackToUser;","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"DavidVin357"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"DavidVin357"},"content":"            return e.getMessage();","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"DavidVin357"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withUnitAndZeroQuantity_exception() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"Please set the quantity to change a unit\", updateWithException(foodList, \"1 --u kg\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withQuantityFlag_servingsUnit() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"DavidVin357"},"content":"        updateWithException(foodList, \"2 --u serving\");","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"servings\", foodList.getFood(1).getUnit());","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withCategoryFlag_othersCategory() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"DavidVin357"},"content":"        updateWithException(foodList, \"3 --c custom category\");","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(OTHERS, foodList.getFood(2).getCategory());","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withExpiryFlag_dateNotInFutureException() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(Validator.PROVIDED_DATE_IS_NOT_IN_THE_FUTURE, updateWithException(foodList, \"1 --e 05/05/1993\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withMultiWordNameFlag_customName() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"DavidVin357"},"content":"        updateWithException(foodList, \"1 --n frozen ratatouille\");","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"frozen ratatouille\", foodList.getFood(0).getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"DavidVin357"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"DavidVin357"},"content":"    void updateFood_withAllFlags_foodAttributes() throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"DavidVin357"},"content":"        FoodList foodList \u003d new FoodList();","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Eggs\", \"25/04/2024\", 0.0, \"kg\", DAIRY));","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"Unit egg\", \"25/04/2024\", 1.2, \"unit\", OTHERS));","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"KG Carrot\", \"25/04/2024\", 4.2, \"kg\", VEGETABLE));","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"DavidVin357"},"content":"        foodList.addFood(new Food(\"ML Water\", \"25/04/2024\", 13.0, \"ml\", BEVERAGE));","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"DavidVin357"},"content":"        updateWithException(foodList, \"1 --n sour pineapple   --c fruit --e 07/07/2024 --q 12.68 --u kg\");","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"DavidVin357"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"sour pineapple\", foodList.getFood(0).getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(FRUIT, foodList.getFood(0).getCategory());","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"07/07/2024\", foodList.getFood(0).getExpiryDate());","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(12.68, foodList.getFood(0).getQuantity());","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"DavidVin357"},"content":"        assertEquals(\"kg\", foodList.getFood(0).getUnit());","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"DavidVin357"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"DavidVin357"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"DavidVin357":101}},{"path":"src/test/java/seedu/duke/storage/FoodListDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class FoodListDecoderTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ZhongXiangWong":4}},{"path":"src/test/java/seedu/duke/storage/FoodListEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"DavidVin357"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.Food;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ZhongXiangWong"},"content":"import seedu.duke.food.FoodList;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ZhongXiangWong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ZhongXiangWong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ZhongXiangWong"},"content":"import static seedu.duke.food.FoodCategory.GRAIN;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ZhongXiangWong"},"content":"public class FoodListEncoderTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"ZhongXiangWong"},"content":"    //TODO: Test for case where there is more than 1 food in foodList","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"DavidVin357"},"content":"    void encodeFoodList_withExpiryDate_expectNameAndExpiry() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"DavidVin357"},"content":"        Food food \u003d new Food(\"peanuts\", \"11/11/2023\");","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ZhongXiangWong"},"content":"        FoodList fl \u003d new FoodList();","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ZhongXiangWong"},"content":"        fl.addFood(food);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e encodedFoodLists \u003d FoodListEncoder.encodeFoodList(fl);","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ZhongXiangWong"},"content":"        expectedOutput.add(\"|n  peanuts|e  11/11/2023|q  0.0|u  unit|c  OTHERS\");","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, encodedFoodLists);","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DavidVin357"},"content":"    void encodeFoodList_withExpiryDateAndQuantity_expectNameExpiryAndCategory() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"DavidVin357"},"content":"        Food food \u003d new Food(\"peanuts\", \"11/11/2023\", GRAIN);","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ZhongXiangWong"},"content":"        FoodList fl \u003d new FoodList();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ZhongXiangWong"},"content":"        fl.addFood(food);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e encodedFoodLists \u003d FoodListEncoder.encodeFoodList(fl);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ZhongXiangWong"},"content":"        expectedOutput.add(\"|n  peanuts|e  11/11/2023|q  0.0|u  unit|c  GRAIN\");","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, encodedFoodLists);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"DavidVin357"},"content":"    void encodeFoodList_withMultipleFood_expectMultipleFoodRecorded() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"DavidVin357"},"content":"        Food peanuts \u003d new Food(\"peanuts\", \"11/11/2023\");","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"DavidVin357"},"content":"        Food strawberry \u003d new Food(\"strawberries\", \"31/05/2023\");","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ZhongXiangWong"},"content":"        FoodList fl \u003d new FoodList();","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"ZhongXiangWong"},"content":"        fl.addFood(peanuts);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ZhongXiangWong"},"content":"        fl.addFood(strawberry);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e encodedFoodLists \u003d FoodListEncoder.encodeFoodList(fl);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ZhongXiangWong"},"content":"        expectedOutput.add(\"|n  peanuts|e  11/11/2023|q  0.0|u  unit|c  OTHERS\");","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"ZhongXiangWong"},"content":"        expectedOutput.add(\"|n  strawberries|e  31/05/2023|q  0.0|u  unit|c  OTHERS\");","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, encodedFoodLists);","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"ZhongXiangWong"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DavidVin357"},"content":"    void encodeFoodList_withExpiryDateAndQuantityWithUnits_expectNameExpiryAndQuantityWithUnits() throws DukeException {","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"DavidVin357"},"content":"        Food food \u003d new Food(\"peanuts\", \"11/11/2023\", 50.0, \"g\");","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ZhongXiangWong"},"content":"        FoodList fl \u003d new FoodList();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"ZhongXiangWong"},"content":"        fl.addFood(food);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"ZhongXiangWong"},"content":"        FoodListEncoder fle \u003d new FoodListEncoder();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e encodedFoodLists \u003d fle.encodeFoodList(fl);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"ZhongXiangWong"},"content":"        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"ZhongXiangWong"},"content":"        expectedOutput.add(\"|n  peanuts|e  11/11/2023|q  50.0|u  g|c  OTHERS\");","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"ZhongXiangWong"},"content":"        assertEquals(expectedOutput, encodedFoodLists);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"ZhongXiangWong"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ZhongXiangWong":56,"DavidVin357":10}},{"path":"src/test/java/seedu/duke/storage/StorageFileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZhongXiangWong"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ZhongXiangWong"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ZhongXiangWong"},"content":"public class StorageFileTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ZhongXiangWong"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ZhongXiangWong":4}}]
