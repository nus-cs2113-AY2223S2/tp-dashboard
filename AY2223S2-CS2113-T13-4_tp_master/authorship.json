[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"jar {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    manifest {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"        attributes \"Main-Class\": \"seedu.apollo.Apollo\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"    from {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"tasks.withType(Copy).all {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"    duplicatesStrategy \u0027exclude\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"sourceSets {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    main.java.srcDirs \u0027src/main/java\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    main.resources.srcDirs \u0027src/main/resources\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"    test.java.srcDirs \u0027src/test/java\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    mainClass \u003d \"seedu.apollo.Apollo\"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"    archiveBaseName \u003d \"apollo\"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"irving11119":25,"honglinshang":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"| Display                                                                                                    |           Name           |                       Github Profile                       |           Portfolio           |","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"|------------------------------------------------------------------------------------------------------------|:------------------------:|:----------------------------------------------------------:|:-----------------------------:|","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"| ![](https://lh3.googleusercontent.com/ogw/AAEL6siaN8FAHVYJkDB8wJIkojGsZD4UUHlXbD9XF3NJULQ\u003ds32-c-mo)        |       Goh Yi Xuan        |           [Github](https://github.com/yixuann02)           |  [Portfolio](team/yixuann02.md)  |","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                        |      Irving de Boer      |          [Github](https://github.com/irving11119)          |  [Portfolio](team/irving11119.md)  |","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"| ![](https://avatars.githubusercontent.com/u/88550208?v\u003d4)                                                  |      Hong Lin Shang      |         [Github](https://github.com/honglinshang)          | [Portfolio](team/honglinshang.md) |","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"| ![](https://avatars.githubusercontent.com/u/88520987?s\u003d400\u0026u\u003d69b02ea49edff29734123eb1af79204cf2b77566\u0026v\u003d4) |       Tan Wan Lin        |           [Github](https://github.com/T-Wan-Lin)           |  [Portfolio](team/wanlin.md)  |","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)                                                        | Poobalan Aatmika Lakshmi |    [Github](https://github.com/PoobalanAatmikaLakshmi)     | [Portfolio](team/aatmika.md)  |","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"irving11119":1,"yixuann02":2,"honglinshang":1,"T-Wan-Lin":3,"PoobalanAatmikaLakshmi":1,"-":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Apollo Developer Guide","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"## Table of Contents","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"1. [Acknowledgments](#acknowledgements)","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"2. [Design](#design)","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Architecture](#architecture)","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"    + [UI Component](#ui-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    + [Parser Component](#parser-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    + [Command Component](#command-component)","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Storage Component](#storage-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"3. [Implementation](#implementation)","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Add Module](#add-module)","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Delete Module](#delete-module)","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    + [List Modules](#list-modules)","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"    + [Show Module](#show-module)","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Add Task](#add-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Modify Task](#modify-task)","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Find Task](#find-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"    + [List Task](#list-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Find Task on Date](#find-task-on-date)","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    + [View Week](#view-week)","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Storage](#storage)","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Logging](#logging)","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"4. [Appendix](#appendix)","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"   + [Appendix A: Product Scope](#appendix-a--product-scope)","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"   + [Appendix B: User Stories](#appendix-b--user-stories)","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"   + [Appendix C: Non-Functional Requirements](#appendix-c--non-functional-requirements) ","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"   + [Appendix D: Glossary](#appendix-d--glossary)","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"   + [Appendix E: Instructions for manual testing](#appendix-e--instructions-for-manual-testing)","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"We would like to acknowledge Hong Lin Shang, whose Duke we built upon for our project. We would also like to acknowledge","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"the NUSMods Team, whose NUSMods API we used to scrape module data from.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"## Design","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Architecture","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"Below is the overall architecture diagram for Apollo.","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"![](../docs/uml-diagrams/SystemArchitecture.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"Given below is a quick overview of the main components of Apollo and how they interact with one another.","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"`Apollo` is the main class and it is responsible for:","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"* Load the plaintext files (save and moduleData) and files in the Resources folder to populate its internal memory of","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"  ModuleList and TaskList.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary. Updates the plaintext files","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"  (save and moduleData) and files in the Resources folder to reflect the current state of Apollo.","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"The rest of the App consists of the following components:","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"* `UI`: The UI of the App.","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"* `Parser`: Parses the user input.","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"* `Command`: Executes the command.","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"* `Data Storage`: Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"* `Resources`: Contains relevant module data scraped from NUSMods_API, which is a database.","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"The user\u0027s (NUS_Student) interaction with the UI will be parsed into a command which would update the DataStorage ","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"and eventually update the UI which is displayed back to the user. This would continue until the user exits the program, ","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"which would result in the latest data stored in DataStorage being saved into the plaintext files.","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### UI Component","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"### Parser Component","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"### Command Component","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Storage Component","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Implementation","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"### Add Module","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"The AddModule functionality allows users to add a module to their Module List. Beyond just adding their modules to the","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"module list, users are also able to add their specific lessons (e.g Lectures and Tutorials) to their module list.","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"This is facilitated by the AddMod command which is an extension of the Command class. Below is an example usage of how","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"the AddMod command can be used to add both modules and their specific lessons.","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"#### For when a user adds only a module (e.g CS2113) to the module list with no specific lessons:","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"Step 1: Define the Constructor :","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"When user executes the command `addmod cs2113` the Parser class calls the `AddModCommand()` method of the AddModCommand.","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"The constructor of the AddModCommand class takes in a moduleCode `cs2113` as a parameter and `allModules`. This","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"moduleCode is used to find `cs2113` from the ModuleData list.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"Step 2: Define the `setUpLogger()` method :","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"The `setUpLogger()` method sets up the logger for the DeleteModuleCommand class. It creates a ConsoleHandler and a","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"FileHandler to handle logging.","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"Step 3: Override the `execute()` method :","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"The `execute()` method is overridden to execute the delete module functionality. It takes in the necessary parameters,","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"including the `ModuleList`, `Ui`, `Storage`, `TaskList` and `allModules`.","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"Step 4: Check if the module exists in the list :","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"The first step in the `execute()` method is to split the parameters into the module code and the lesson type. It then","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"calls the `isAdded()` method of the `ModuleList` class to check if the module already exists in the list. If the module","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"exists, a `DuplicateModuleException` is thrown.","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"Step 5: Add the module to the ModuleList :","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"irving11119"},"content":"If the module does not exist, it is added to the `ModuleList` by calling the `add()` method of the `ModuleList` class.","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"The module is sorted alphabetically by the `sort()` method of the `ModuleList` class.","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"Step 6: Print the confirmation message :","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"A confirmation message is printed to the user indicating that the module has been successfully added. The message","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"includes the module code and title of the module added as well as the available lesson types for the module.","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"#### For when a user adds a module\u0027s specific lesson (e.g CS2113 -lec 1) to the module list:","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"Step 1: Define the Constructor :","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"irving11119"},"content":"When user executes the command `addmod cs2113 -lec 1` the Parser class calls the `AddModCommand()` method of the ","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"irving11119"},"content":"AddModCommand class. The constructor of the AddModCommand class takes in the string `cs2113 -lec 1` as a parameter and","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"irving11119"},"content":"`allModules`. The string is split into a moduleCode `cs2113`, lessonType `-lec` and `1` as class number.","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"Step 2: Define the `setUpLogger()` method :","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"irving11119"},"content":"The setUpLogger() method sets up the logger for the DeleteModuleCommand class. It creates a ConsoleHandler and a","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"irving11119"},"content":"FileHandler to handle logging.","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"irving11119"},"content":"Step 3: Override `execute()` method :","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"The `execute()` method is overridden to execute the delete module functionality. It takes in the necessary parameters,","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"irving11119"},"content":"including the ModuleList, Ui, Storage, and TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"irving11119"},"content":"Step 4: Calls the `handleMultiCommand()` method:","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"The `handleMultiCommand()` method is called to handle the command. It takes in `moduleList`, `lessonType` and `args` as","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"parameters. It then checks if the module already exists in the `ModuleList` by calling the `isAdded()` method.","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"Step 5: Add the module lessons to the ModuleList :","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"If the module already exists, the timetable of the classes are added to the module by calling the `addTimetable()` ","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"method which takes in `searchModule` and `lessonType` as parameters. If the module does not exist, it is added to the","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"Module list and the lessons are added to the module using the `addTimetable()` method of the `ModuleList` class.","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"Step 6: ","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"Print the confirmation message :","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"A confirmation message is printed to the user indicating that the module lesson has been successfully added.","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"UML Diagram for AddModCommand Class","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"![](../docs/uml-diagrams/AddModule-AddModuleCommand__Add_Module_.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":149,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Delete Module","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"The DeleteModule functionality allows users to remove either a module from the ModuleList or a lesson associated with ","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"the module. It is facilitated by DeleteModuleCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Given below is an example usage scenario and how the delete mechanism behaves at each step.","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"#### For when a user deletes only a module (e.g CS2113) from the module list:","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 1: Define the Constructor :","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"When user executes the command `delmod cs2113` the Parser class calls the `DeleteModuleCommand()` method of the","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"DeleteModuleCommand class. The constructor of the DeleteModuleCommand class takes in a moduleCode `cs2113` as a ","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"parameter. This moduleCode is","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"used to find `cs2113`  from the ModuleList.","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"Step 2: Define the `setUpLogger()` method :","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"The `setUpLogger()` method sets up the logger for the DeleteModuleCommand class. It creates a ConsoleHandler and a","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"FileHandler to handle logging.","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"Step 3: Override the `execute()` method :","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"The `execute()` method is overridden to execute the delete module functionality. It takes in the necessary parameters,","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"including the ModuleList, Ui, Storage, and TaskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 4: Find the module to delete :","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"The first step in the `execute()` method is to find the module using the module code parameter  `cs2113` by calling","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"the `findModule()` method of the moduleList class.","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If the module `cs2113` is not found, a ModuleNotFoundException is thrown.","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 5: Remove the module from the ModuleList :","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If `cs2113` is found, it is removed from the ModuleList by calling `remove()` method of moduleList class.","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 6: Print the confirmation message :","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"A confirmation message is printed to the user indicating that the `cs2113` has been successfully deleted.","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 7: Update the storage :","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The storage is updated with the new ModuleList without `cs2113`","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":185,"author":{"gitId":"irving11119"},"content":"#### For when a user deletes a specific lesson (e.g CS2113 -lec 1) from the module list:","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"Step 1: Define the Constructor :","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"When user executes the command `delmod cs2113 -lec 1` the Parser class calls the `DeleteModuleCommand()` method of the ","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"DeleteModuleCommand class. The constructor of the DeleteModuleCommand class takes in the string `cs2113 -lec 1` as a ","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"parameter. The string is split into a moduleCode `cs2113`, lessonType `-lec` and `1` as class number and stored in the","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"irving11119"},"content":"`args` array field of the `DeleteModule` class. ","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"Step 2: Define the `setUpLogger()` method :","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"The setUpLogger() method sets up the logger for the DeleteModuleCommand class. It creates a ConsoleHandler and a ","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"FileHandler to handle logging.","lastModifiedDate":"2023-03-21"},{"lineNumber":196,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":197,"author":{"gitId":"irving11119"},"content":"Step 3: Override `execute()` method :","lastModifiedDate":"2023-03-21"},{"lineNumber":198,"author":{"gitId":"irving11119"},"content":"The `execute()` method is overridden to execute the delete module functionality. It takes in the necessary parameters,","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"irving11119"},"content":"including the ModuleList, Ui, Storage, TaskList, AllModules and Calendar objects. The lesson type is determined by","lastModifiedDate":"2023-03-21"},{"lineNumber":200,"author":{"gitId":"irving11119"},"content":"calling the `getLessonType()` method of the `LessonType` class and parsing in `arg[1]` while the lesson number is ","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"irving11119"},"content":"set by `arg[2]`. If the lesson type is not valid, an`InvalidCommandException` is thrown.","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"irving11119"},"content":"Step 4: Calls the `handleMultiCommand()` method:","lastModifiedDate":"2023-03-21"},{"lineNumber":204,"author":{"gitId":"irving11119"},"content":"The `handleMultiCommand()` method is called to handle the command. It takes in `moduleList`, `lessonType` and `args` as","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"irving11119"},"content":"parameters. It then searches for the module using the `findModule()` method of the `ModuleList` class. If the module","lastModifiedDate":"2023-03-21"},{"lineNumber":206,"author":{"gitId":"irving11119"},"content":"is not found, a `ModuleNotFoundException` is thrown.","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":208,"author":{"gitId":"irving11119"},"content":"Step 5: Remove the module lessons from the ModuleList :","lastModifiedDate":"2023-03-21"},{"lineNumber":209,"author":{"gitId":"irving11119"},"content":"If the module is found, the timetable of the classes are removed from the module by calling the `removeTimetable()` ","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"irving11119"},"content":"method which takes in `searchModule` and `lessonType` as parameters. The `removeTimetable()` method of the `ModuleList`","lastModifiedDate":"2023-03-21"},{"lineNumber":211,"author":{"gitId":"irving11119"},"content":"will create a copy of the module timetable array list and search for the lesson to be removed. If the lesson type and ","lastModifiedDate":"2023-03-21"},{"lineNumber":212,"author":{"gitId":"irving11119"},"content":"class number matches, the lesson is removed from the original timetable array list using the `remove()` method. The","lastModifiedDate":"2023-03-21"},{"lineNumber":213,"author":{"gitId":"irving11119"},"content":"lesson is then marked as found by setting the `isFound` boolean to true. If the lesson is not found, a ","lastModifiedDate":"2023-03-21"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"`ClassNotFoundException` is thrown.","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"Step 6: Print the confirmation message :","lastModifiedDate":"2023-03-21"},{"lineNumber":217,"author":{"gitId":"irving11119"},"content":"A confirmation message is printed to the user indicating that the module lesson has been successfully deleted. It is","lastModifiedDate":"2023-03-21"},{"lineNumber":218,"author":{"gitId":"irving11119"},"content":"is printed by calling the `printModuleLessonDeleteMessage()` method of the `Ui` class. If the module is not found, ","lastModifiedDate":"2023-03-21"},{"lineNumber":219,"author":{"gitId":"irving11119"},"content":"the message is printed by calling the `printModuleNotFoundMessage()` method of the `Ui` class. If the ","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"irving11119"},"content":"argument is invalid, the message is printed by calling the `printInvalidCommand()` method of the `Ui` class.","lastModifiedDate":"2023-03-21"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":224,"author":{"gitId":"T-Wan-Lin"},"content":"### List Modules","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"yixuann02"},"content":"The ListModule functionality allows users to list the modules that are in the ModuleList. It is facilitated by ","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"yixuann02"},"content":"ListModuleCommand class which is an extension of the Command class. ","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"yixuann02"},"content":"Given below is an example usage scenario of how to list the modules in the ModuleList and how the mechanism behaves ","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"yixuann02"},"content":"at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"yixuann02"},"content":"class.","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"yixuann02"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"yixuann02"},"content":"Step 2. Override the `execute()` method: The `execute()` method is overridden to execute the list module","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"yixuann02"},"content":"functionality. It takes the necessary parameters, including the `Tasklist`, `Ui`, `Storage`, `ModuleList`,","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"yixuann02"},"content":"`allModule`, `calendar`.","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"yixuann02"},"content":"Step 3. Iterate through the list of modules: The `execute` method will iterate through `ModuleList` and call ","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"yixuann02"},"content":"`printModuleList()` method in the Ui class that takes in the list of modules, `ModuleList` that the user has updated,","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"yixuann02"},"content":"as a parameter. During the iteration, the `printModuleList()` method will get the number of modular credits for each ","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"yixuann02"},"content":"module the user is taking and calculate the total modular credits in that semester. If the list is empty, a message ","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"yixuann02"},"content":"is printed to the user indicating that there are no modules in the list. ","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"yixuann02"},"content":"Step 4. Print the confirmation message: A confirmation message is printed to the user indicating the list of modules ","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"yixuann02"},"content":"in `ModuleList` that the user updated. The message includes the module code and name, modular credits for each module ","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"yixuann02"},"content":"and  total modular credits the user is taking this semester.","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":250,"author":{"gitId":"irving11119"},"content":"UML Diagram for ListModuleCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"irving11119"},"content":"![](../docs/uml-diagrams/ListMod-ListModuleCommand.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":254,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":255,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":256,"author":{"gitId":"yixuann02"},"content":"### Show Module","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"yixuann02"},"content":"The ShowModule functionality allows users to see all the information of a specific module. The information includes ","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"yixuann02"},"content":"LessonTypes, ClassNumbers and the Day and Time of the lessons, sorted lexicographically. The use of flags, for eg. `-lec`, `-st` etc., allows ","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"yixuann02"},"content":"users to view specific LessonType information instead of all the information for the whole module.","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"yixuann02"},"content":"ShowModule is facilitated by ShowModuleCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"yixuann02"},"content":"Given below is an example usage scenario of how to view the information of a specific module using the moduleCode and ","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"yixuann02"},"content":"how the mechanism behaves at each step.","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"yixuann02"},"content":"#### For when a user request to show the module (e.g. CS2113):","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the Constructor: When user executes the command `showmod cs2113`, the Parser class calls the","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"yixuann02"},"content":"`ShowModuleCommand()` method of the ShowModuleCommand class. The constructor of the ShowModuleCommand class takes","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"yixuann02"},"content":"in a parameter of type `String`, which will be split into `moduleCode` and `-FLAG`. In this case, only `cs2113` is ","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"yixuann02"},"content":"parsed in as the parameter. This is then used to find `cs2113` from the module information. If the moduleCode, ","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"yixuann02"},"content":"`cs2113`, is not found, an `InvalidModule()` is thrown.","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"yixuann02"},"content":"Step 2. Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ShowModuleCommand ","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"yixuann02"},"content":"class. It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"yixuann02"},"content":"Step 3. Override the `execute()` method: The `execute()` method is overridden to execute the Show Module functionality.","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"honglinshang"},"content":"It takes in the necessary parameters, including the ModuleList, Ui, Storage, TaskList and Calendar.","lastModifiedDate":"2023-04-05"},{"lineNumber":280,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"yixuann02"},"content":"Step 4. Find the module to display information: The first step in the `execute()` method is to find the module from ","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"yixuann02"},"content":"`Module` class using the module code parameter `cs2113` by using the `findModule()` function of the `Module` class.","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"yixuann02"},"content":"Step 5. Print the confirmation message: A confirmation message is printed to the user indicating the information","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"yixuann02"},"content":"of the module requested by the user. The message includes the `ModuleCode`, `LessonTypes` of the module, `Classnumber` ","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"yixuann02"},"content":"of each `lessonTypes` and `Day` and `Time` of the existing `Classnumber`.","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"yixuann02"},"content":"#### For when a user request to show a specific lessonType of the module (e.g. CS2113 -st):","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the Constructor: When user executes the command `showmod cs2113`, the Parser class calls the","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"yixuann02"},"content":"`ShowModuleCommand()` method of the ShowModuleCommand class. The constructor of the ShowModuleCommand class takes","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"yixuann02"},"content":"in a parameter of type `String`, which will be split into `moduleCode`, `cs2113`, and `-FLAG`, `-st`. In this case, only `cs2113` is","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"yixuann02"},"content":"parsed in as the parameter. This is stored in the `args` array field of the `ShowModuleCommand` class.","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"yixuann02"},"content":"Step 2. Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ShowModuleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"yixuann02"},"content":"class. It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"yixuann02"},"content":"Step 3. Override the `execute()` method: The `execute()` method is overridden to execute the Show Module functionality.","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"honglinshang"},"content":"It takes in the necessary parameters, including the ModuleList, Ui, Storage, TaskList and Calendar objects. The lesson ","lastModifiedDate":"2023-04-05"},{"lineNumber":300,"author":{"gitId":"yixuann02"},"content":"type is determined by calling the `getLessonType()` method of the `lessonType` class and parsing in `args[1]` while ","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"yixuann02"},"content":"the moduleCode is set by `args[0]`. If the lessonType is not valid, an `InvalidCommandException` is thrown.","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"yixuann02"},"content":"Step 4. Calls the `handleMultiCommand()` method: The `handleMultiCommand()` method is called to handle the command. ","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"yixuann02"},"content":"It takes ini `moduleList`, `lessonType` and `args` as parameters.","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"yixuann02"},"content":"Step 5. Find the module to display information: The first step in the `execute()` method is to find the module from","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"yixuann02"},"content":"`Module` class using the module code parameter `cs2113` by using the `findModule()` function of the `Module` class.","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"yixuann02"},"content":"To find the lessonType of the module, `getLessonType()` is called to return the lessonType for the Show Module","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"yixuann02"},"content":"functionality.","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"yixuann02"},"content":"Step 6. Print the confirmation message: A confirmation message is printed to the user indicating the information","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"yixuann02"},"content":"of the module requested by the user. The message includes the `ModuleCode`, the specific `LessonType` of the module, ","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"yixuann02"},"content":"`Classnumber`of requested `lessonTypes` and `Day` and `Time` of the existing `Classnumber`.","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":316,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"T-Wan-Lin"},"content":"### Add Task","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":319,"author":{"gitId":"honglinshang"},"content":"The add task mechanism is facilitated by `AddCommand`. It extends `Command` with the ability to add three different ","lastModifiedDate":"2023-03-20"},{"lineNumber":320,"author":{"gitId":"honglinshang"},"content":"types of `Task`s to the TaskList, namely: `ToDo`, `Deadline`, and `Event`. ","lastModifiedDate":"2023-03-20"},{"lineNumber":321,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":322,"author":{"gitId":"honglinshang"},"content":"Given below is an example usage scenario and how the add task mechanism behaves at each step as the user adds an event.","lastModifiedDate":"2023-04-02"},{"lineNumber":323,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":324,"author":{"gitId":"honglinshang"},"content":"Step 1. The user enters the command `event concert /from 2023-06-06T20:00 /to 2023-06-06T22:00`.  ","lastModifiedDate":"2023-04-02"},{"lineNumber":325,"author":{"gitId":"honglinshang"},"content":"This is to add a `Task` with the description \"concert\" on Jun 6 2023 from 8-10pm to their TaskList. ","lastModifiedDate":"2023-03-20"},{"lineNumber":326,"author":{"gitId":"honglinshang"},"content":"The String containing the command is parsed in `Parser` and determined to be an `AddCommand`. ","lastModifiedDate":"2023-04-02"},{"lineNumber":327,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":328,"author":{"gitId":"honglinshang"},"content":"Step 2. Within `Parser`, an `AddCommand` is initialised with the String `command` \"event\". ","lastModifiedDate":"2023-04-02"},{"lineNumber":329,"author":{"gitId":"honglinshang"},"content":"The remaining params of the command are further parsed into Strings: `desc` \"concert\" (description), `from` ","lastModifiedDate":"2023-03-20"},{"lineNumber":330,"author":{"gitId":"honglinshang"},"content":"\"2023-06-06T20:00\" (start date), and `to` \"2023-06-06T22:00\" (end date) based on the delimiters \"/from\" and \"/to\". ","lastModifiedDate":"2023-03-20"},{"lineNumber":331,"author":{"gitId":"honglinshang"},"content":"- For `command` \"deadline\", remaining params are parsed into `desc` and `by` (due date) based on the delimiter \"/by\". ","lastModifiedDate":"2023-03-20"},{"lineNumber":332,"author":{"gitId":"honglinshang"},"content":"- For `command` \"todo\", all remaining params are parsed into `desc`.","lastModifiedDate":"2023-03-20"},{"lineNumber":333,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":334,"author":{"gitId":"honglinshang"},"content":"Step 3. The initialised `AddCommand` is returned to Apollo. ","lastModifiedDate":"2023-04-02"},{"lineNumber":335,"author":{"gitId":"honglinshang"},"content":"In the event of the following, an error message is printed and no more steps are executed.","lastModifiedDate":"2023-04-02"},{"lineNumber":336,"author":{"gitId":"honglinshang"},"content":"- Delimiters are not entered correctly","lastModifiedDate":"2023-03-20"},{"lineNumber":337,"author":{"gitId":"honglinshang"},"content":"- Remaining params of the command are empty (i.e. CLI input of user is \"todo\"/\"deadline\"/\"event\" only)","lastModifiedDate":"2023-04-05"},{"lineNumber":338,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":339,"author":{"gitId":"honglinshang"},"content":"Step 4. `Command#execute()` is called. This in turn calls `AddCommand#addTask()`. ","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"honglinshang"},"content":"`addTask()` will try to initialise a new `Event` by parsing the Strings `from` and `to` into LocalDateTimes.","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"honglinshang"},"content":"In the event of the following, an error message is printed and no more steps are executed.","lastModifiedDate":"2023-04-02"},{"lineNumber":342,"author":{"gitId":"honglinshang"},"content":"- String for date cannot be parsed into LocalDateTime (wrong format of input)","lastModifiedDate":"2023-03-20"},{"lineNumber":343,"author":{"gitId":"honglinshang"},"content":"- Task occurs entirely before the current date","lastModifiedDate":"2023-03-20"},{"lineNumber":344,"author":{"gitId":"honglinshang"},"content":"- (for `Event`) Start date occurs after end date","lastModifiedDate":"2023-03-20"},{"lineNumber":345,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":346,"author":{"gitId":"honglinshang"},"content":"Step 5. `addTask()` checks if the initialised `Event` clashes with any existing tasks. If so, ","lastModifiedDate":"2023-04-02"},{"lineNumber":347,"author":{"gitId":"honglinshang"},"content":"`Ui#printClashingEventMessage()` is called to print a warning message. ","lastModifiedDate":"2023-04-02"},{"lineNumber":348,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":349,"author":{"gitId":"honglinshang"},"content":"Step 6. Similarly, `addTask()` also checks if the initialised `Event` clashes with any existing lessons. If so,","lastModifiedDate":"2023-04-02"},{"lineNumber":350,"author":{"gitId":"honglinshang"},"content":"`Ui#printClashingEventModuleMessage()` is called to print a warning message.","lastModifiedDate":"2023-04-02"},{"lineNumber":351,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":352,"author":{"gitId":"honglinshang"},"content":"Step 7. The initialised `Event` is added to the `TaskList`. Return to `AddCommand#execute`.","lastModifiedDate":"2023-04-02"},{"lineNumber":353,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":354,"author":{"gitId":"honglinshang"},"content":"Step 8. If the Task has been added successfully, `Ui#printAddMessage()` prints a success message.","lastModifiedDate":"2023-04-02"},{"lineNumber":355,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":356,"author":{"gitId":"honglinshang"},"content":"Step 9. `Storage#updateTask()` is called to update the local save file to reflect the changes.","lastModifiedDate":"2023-04-02"},{"lineNumber":357,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":358,"author":{"gitId":"honglinshang"},"content":"![](../docs/uml-diagrams/AddCommand-AddCommand__for_Tasks_.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":359,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":360,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":361,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":362,"author":{"gitId":"T-Wan-Lin"},"content":"### Modify Task","lastModifiedDate":"2023-04-05"},{"lineNumber":363,"author":{"gitId":"T-Wan-Lin"},"content":"There are three ways to modify a task: delete, mark and unmark.","lastModifiedDate":"2023-04-05"},{"lineNumber":364,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":365,"author":{"gitId":"T-Wan-Lin"},"content":"#### Delete Task","lastModifiedDate":"2023-04-05"},{"lineNumber":366,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":367,"author":{"gitId":"T-Wan-Lin"},"content":"The DeleteTask functionality allows users to remove a task (todo, event and deadline) from the TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":368,"author":{"gitId":"T-Wan-Lin"},"content":"It is facilitated by the ModifyCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-19"},{"lineNumber":369,"author":{"gitId":"T-Wan-Lin"},"content":"Below is an example usage of how the DeleteTask command can be used to delete a task and how it behaves","lastModifiedDate":"2023-03-19"},{"lineNumber":370,"author":{"gitId":"T-Wan-Lin"},"content":"at each step.","lastModifiedDate":"2023-03-19"},{"lineNumber":371,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":372,"author":{"gitId":"T-Wan-Lin"},"content":"Step 1: Define the Constructor: When the user executes the command `delete 1`, the Parser class calls the","lastModifiedDate":"2023-03-19"},{"lineNumber":373,"author":{"gitId":"T-Wan-Lin"},"content":"`ModifyCommand()` method of the ModifyCommand. The constructor of the ModifyCommand class takes in the taskIndex `1`","lastModifiedDate":"2023-03-19"},{"lineNumber":374,"author":{"gitId":"T-Wan-Lin"},"content":"as a parameter. This index is used to find the task to be deleted from the TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":375,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":376,"author":{"gitId":"T-Wan-Lin"},"content":"Step 2: Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":377,"author":{"gitId":"T-Wan-Lin"},"content":"class.","lastModifiedDate":"2023-03-19"},{"lineNumber":378,"author":{"gitId":"T-Wan-Lin"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-19"},{"lineNumber":379,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":380,"author":{"gitId":"T-Wan-Lin"},"content":"Step 3: Override the `execute()` method: The `execute()` method is overridden to execute the delete task functionality.","lastModifiedDate":"2023-03-19"},{"lineNumber":381,"author":{"gitId":"T-Wan-Lin"},"content":"It takes in the necessary parameters, including the `TaskList`, `Ui`, `Storage`, `ModuleList`, `allModules`.","lastModifiedDate":"2023-03-19"},{"lineNumber":382,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":383,"author":{"gitId":"T-Wan-Lin"},"content":"Step 4: Find out how to modify the TaskList: The first step in the `execute()` method is to find out how to modify the","lastModifiedDate":"2023-03-19"},{"lineNumber":384,"author":{"gitId":"T-Wan-Lin"},"content":"TaskList. In this case, the task at a user-provided index is to be deleted.","lastModifiedDate":"2023-03-19"},{"lineNumber":385,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":386,"author":{"gitId":"T-Wan-Lin"},"content":"Step 5: Find the task to delete: Using the parameter `taskIndex`, the `execute()` method will iterate to that","lastModifiedDate":"2023-03-19"},{"lineNumber":387,"author":{"gitId":"T-Wan-Lin"},"content":"index in the `TaskList` and call the `remove()` method of the `TaskList` class. If the index is outside the bounds of","lastModifiedDate":"2023-03-19"},{"lineNumber":388,"author":{"gitId":"T-Wan-Lin"},"content":"the size of the `TaskList`, a `NumberFormatException` is thrown, calling the `printErrorForIdx()` method in the Ui class","lastModifiedDate":"2023-03-19"},{"lineNumber":389,"author":{"gitId":"T-Wan-Lin"},"content":"that takes in the size of the `TaskList` as a parameter.","lastModifiedDate":"2023-03-19"},{"lineNumber":390,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":391,"author":{"gitId":"T-Wan-Lin"},"content":"Step 6: Print the confirmation message: A confirmation message is printed to the user indicating what task has been","lastModifiedDate":"2023-03-19"},{"lineNumber":392,"author":{"gitId":"T-Wan-Lin"},"content":"successfully removed from the user-provided index of the `TaskList`. The message includes the task type, description","lastModifiedDate":"2023-03-19"},{"lineNumber":393,"author":{"gitId":"T-Wan-Lin"},"content":"(and date of the task deleted if the task is either an event or a deadline).","lastModifiedDate":"2023-03-19"},{"lineNumber":394,"author":{"gitId":"T-Wan-Lin"},"content":"It also includes the updated size of the `TaskList`, obtained with the `size()` method of the `TaskList` class.","lastModifiedDate":"2023-03-19"},{"lineNumber":395,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":396,"author":{"gitId":"T-Wan-Lin"},"content":"Step 7: Update the storage: The storage is updated with the new TaskList without the deleted task.","lastModifiedDate":"2023-03-19"},{"lineNumber":397,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":398,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":399,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":400,"author":{"gitId":"T-Wan-Lin"},"content":"#### Mark Task As Done","lastModifiedDate":"2023-04-05"},{"lineNumber":401,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":402,"author":{"gitId":"T-Wan-Lin"},"content":"The MarkTask functionality allows users to mark a task (todo, event and deadline) as done in their TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":403,"author":{"gitId":"T-Wan-Lin"},"content":"It is facilitated by the ModifyCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-19"},{"lineNumber":404,"author":{"gitId":"T-Wan-Lin"},"content":"Below is an example usage of how the MarkTask command can be used to mark a task as done.","lastModifiedDate":"2023-03-19"},{"lineNumber":405,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":406,"author":{"gitId":"T-Wan-Lin"},"content":"Step 1: Define the Constructor: When the user executes the command `mark 1`, the Parser class calls the","lastModifiedDate":"2023-03-19"},{"lineNumber":407,"author":{"gitId":"T-Wan-Lin"},"content":"`ModifyCommand()` method of the ModifyCommand. The constructor of the ModifyCommand class takes in the taskIndex `1`","lastModifiedDate":"2023-03-19"},{"lineNumber":408,"author":{"gitId":"T-Wan-Lin"},"content":"as a parameter. This index is used to find the task to be marked as done from the TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":409,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":410,"author":{"gitId":"T-Wan-Lin"},"content":"Step 2: Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":411,"author":{"gitId":"T-Wan-Lin"},"content":"class.","lastModifiedDate":"2023-03-19"},{"lineNumber":412,"author":{"gitId":"T-Wan-Lin"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-19"},{"lineNumber":413,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":414,"author":{"gitId":"T-Wan-Lin"},"content":"Step 3: Override the `execute()` method: The `execute()` method is overridden to execute the mark task functionality.","lastModifiedDate":"2023-03-19"},{"lineNumber":415,"author":{"gitId":"T-Wan-Lin"},"content":"It takes in the necessary parameters, including the `TaskList`, `Ui`, `Storage`, `ModuleList`, `allModules`.","lastModifiedDate":"2023-03-19"},{"lineNumber":416,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":417,"author":{"gitId":"T-Wan-Lin"},"content":"Step 4: Find out how to modify the TaskList: The first step in the `execute()` method is to find out how to modify the","lastModifiedDate":"2023-03-19"},{"lineNumber":418,"author":{"gitId":"T-Wan-Lin"},"content":"TaskList. In this case, the task at a user-provided index is to be marked as done.","lastModifiedDate":"2023-03-19"},{"lineNumber":419,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":420,"author":{"gitId":"T-Wan-Lin"},"content":"Step 5: Find the task to mark as done: Using the parameter `taskIndex`, the `execute()` method will iterate to that","lastModifiedDate":"2023-03-19"},{"lineNumber":421,"author":{"gitId":"T-Wan-Lin"},"content":"index in the `TaskList` and call the `setAsDone()` method of the `Task` class, setting the boolean `isDone` to `true`.","lastModifiedDate":"2023-03-19"},{"lineNumber":422,"author":{"gitId":"T-Wan-Lin"},"content":"If the index is outside the bounds of the size of the `TaskList`, a `NumberFormatException` is thrown,","lastModifiedDate":"2023-03-19"},{"lineNumber":423,"author":{"gitId":"T-Wan-Lin"},"content":"calling the `printErrorForIdx()` method in the Ui class that takes in the size of the `TaskList` as a parameter.","lastModifiedDate":"2023-03-19"},{"lineNumber":424,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":425,"author":{"gitId":"T-Wan-Lin"},"content":"Step 6: Print the confirmation message: A confirmation message is printed to the user indicating what task has been","lastModifiedDate":"2023-03-19"},{"lineNumber":426,"author":{"gitId":"T-Wan-Lin"},"content":"successfully marked as done from the user-provided index of the `TaskList`. The message includes the task type,","lastModifiedDate":"2023-03-19"},{"lineNumber":427,"author":{"gitId":"T-Wan-Lin"},"content":"description (and date of the task deleted if the task is either an event or a deadline).","lastModifiedDate":"2023-03-19"},{"lineNumber":428,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":429,"author":{"gitId":"T-Wan-Lin"},"content":"Step 7: Update the storage: The storage is updated with the new TaskList with the task marked with a cross next to it.","lastModifiedDate":"2023-03-19"},{"lineNumber":430,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":431,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":432,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":433,"author":{"gitId":"T-Wan-Lin"},"content":"#### Unmark Task ","lastModifiedDate":"2023-04-05"},{"lineNumber":434,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":435,"author":{"gitId":"T-Wan-Lin"},"content":"The UnmarkTask functionality allows users to toggle a task (todo, event and deadline) to *not* done in their TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":436,"author":{"gitId":"T-Wan-Lin"},"content":"It is facilitated by the ModifyCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-19"},{"lineNumber":437,"author":{"gitId":"T-Wan-Lin"},"content":"Below is an example usage of how the UnmarkTask command can be used to unmark a task as not done.","lastModifiedDate":"2023-03-19"},{"lineNumber":438,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":439,"author":{"gitId":"T-Wan-Lin"},"content":"Step 1: Define the Constructor: When the user executes the command `unmark 1`, the Parser class calls the","lastModifiedDate":"2023-03-19"},{"lineNumber":440,"author":{"gitId":"T-Wan-Lin"},"content":"`ModifyCommand()` method of the ModifyCommand. The constructor of the ModifyCommand class takes in the taskIndex `1`","lastModifiedDate":"2023-03-19"},{"lineNumber":441,"author":{"gitId":"T-Wan-Lin"},"content":"as a parameter. This index is used to find the task to be unmarked from the TaskList.","lastModifiedDate":"2023-03-19"},{"lineNumber":442,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":443,"author":{"gitId":"T-Wan-Lin"},"content":"Step 2: Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":444,"author":{"gitId":"T-Wan-Lin"},"content":"class.","lastModifiedDate":"2023-03-19"},{"lineNumber":445,"author":{"gitId":"T-Wan-Lin"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-19"},{"lineNumber":446,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":447,"author":{"gitId":"T-Wan-Lin"},"content":"Step 3: Override the `execute()` method: The `execute()` method is overridden to execute the mark task functionality.","lastModifiedDate":"2023-03-19"},{"lineNumber":448,"author":{"gitId":"T-Wan-Lin"},"content":"It takes in the necessary parameters, including the `TaskList`, `Ui`, `Storage`, `ModuleList`, `allModules`.","lastModifiedDate":"2023-03-19"},{"lineNumber":449,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":450,"author":{"gitId":"T-Wan-Lin"},"content":"Step 4: Find out how to modify the TaskList: The first step in the `execute()` method is to find out how to modify the","lastModifiedDate":"2023-03-19"},{"lineNumber":451,"author":{"gitId":"T-Wan-Lin"},"content":"TaskList. In this case, the task at a user-provided index is to be unmarked.","lastModifiedDate":"2023-03-19"},{"lineNumber":452,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":453,"author":{"gitId":"T-Wan-Lin"},"content":"Step 5: Find the task to unmark as not done: Using the parameter `taskIndex`, the `execute()` method will iterate to","lastModifiedDate":"2023-03-19"},{"lineNumber":454,"author":{"gitId":"T-Wan-Lin"},"content":"that index in the `TaskList` and call the `setAsDone()` method of the `Task` class, setting the boolean `isDone`","lastModifiedDate":"2023-03-19"},{"lineNumber":455,"author":{"gitId":"T-Wan-Lin"},"content":"to `false`.","lastModifiedDate":"2023-03-19"},{"lineNumber":456,"author":{"gitId":"T-Wan-Lin"},"content":"If the index is outside the bounds of the size of the `TaskList`, a `NumberFormatException` is thrown,","lastModifiedDate":"2023-03-19"},{"lineNumber":457,"author":{"gitId":"T-Wan-Lin"},"content":"calling the `printErrorForIdx()` method in the Ui class that takes in the size of the `TaskList` as a parameter.","lastModifiedDate":"2023-03-19"},{"lineNumber":458,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":459,"author":{"gitId":"T-Wan-Lin"},"content":"Step 6: Print the confirmation message: A confirmation message is printed to the user indicating what task has been","lastModifiedDate":"2023-03-19"},{"lineNumber":460,"author":{"gitId":"T-Wan-Lin"},"content":"successfully unmarked from the user-provided index of the `TaskList`. The message includes the task type,","lastModifiedDate":"2023-03-19"},{"lineNumber":461,"author":{"gitId":"T-Wan-Lin"},"content":"description (and date of the task deleted if the task is either an event or a deadline).","lastModifiedDate":"2023-03-19"},{"lineNumber":462,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":463,"author":{"gitId":"T-Wan-Lin"},"content":"Step 7: Update the storage: The storage is updated with the new TaskList with the task marked without a cross next to","lastModifiedDate":"2023-03-19"},{"lineNumber":464,"author":{"gitId":"T-Wan-Lin"},"content":"it.","lastModifiedDate":"2023-03-19"},{"lineNumber":465,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":466,"author":{"gitId":"honglinshang"},"content":"![](../docs/uml-diagrams/ModifyCommand-ModifyCommand__Unmark_Tasks_.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":467,"author":{"gitId":"honglinshang"},"content":"![](../docs/uml-diagrams/UnmarkCommandActivityDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":468,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":469,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":470,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":471,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":472,"author":{"gitId":"T-Wan-Lin"},"content":"### Find Task","lastModifiedDate":"2023-03-19"},{"lineNumber":473,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":474,"author":{"gitId":"yixuann02"},"content":"The FindTask functionality allows user to search for a task (todo, event and deadline) from the TaskList using a ","lastModifiedDate":"2023-03-22"},{"lineNumber":475,"author":{"gitId":"yixuann02"},"content":"specific keyword. The FindTask mechanism is facilitated by FindCommand which extends Command class. ","lastModifiedDate":"2023-03-22"},{"lineNumber":476,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":477,"author":{"gitId":"yixuann02"},"content":"Below is an example usage of how the FindTask command can be used to search for a task in the TaskList using a keyword ","lastModifiedDate":"2023-03-22"},{"lineNumber":478,"author":{"gitId":"yixuann02"},"content":"and how it behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":479,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":480,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the Constructor: When the user executes the command `find read`, the Parser class calls the ","lastModifiedDate":"2023-03-22"},{"lineNumber":481,"author":{"gitId":"yixuann02"},"content":"`FindCommand()` method of the FindCommand class. The constructor of the FindCommand class takes in the keyword ","lastModifiedDate":"2023-03-22"},{"lineNumber":482,"author":{"gitId":"yixuann02"},"content":"string `read` as a parameter. This string is used to find tasks in the TaskList that contains this keyword.","lastModifiedDate":"2023-03-22"},{"lineNumber":483,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":484,"author":{"gitId":"yixuann02"},"content":"Step 2: Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":485,"author":{"gitId":"yixuann02"},"content":"class.","lastModifiedDate":"2023-03-22"},{"lineNumber":486,"author":{"gitId":"yixuann02"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-22"},{"lineNumber":487,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":488,"author":{"gitId":"yixuann02"},"content":"Step 3. Override the `execute()` method: The `execute()` method is overridden to execute the find task ","lastModifiedDate":"2023-03-22"},{"lineNumber":489,"author":{"gitId":"yixuann02"},"content":"functionality. It takes the necessary parameters, including the `Tasklist`, `Ui`, `Storage`, `ModuleList`, ","lastModifiedDate":"2023-03-22"},{"lineNumber":490,"author":{"gitId":"yixuann02"},"content":"`allModule`, `calendar`.","lastModifiedDate":"2023-03-22"},{"lineNumber":491,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":492,"author":{"gitId":"yixuann02"},"content":"Step 4. Find the list of tasks containing the `KEYWORD`: Using the parameter string `KEYWORD`, the `execute()` method ","lastModifiedDate":"2023-03-22"},{"lineNumber":493,"author":{"gitId":"yixuann02"},"content":"will iterate through `TaskList` and call `printFoundList()` method in the Ui class that takes in a list of task,","lastModifiedDate":"2023-03-22"},{"lineNumber":494,"author":{"gitId":"yixuann02"},"content":"`ArrayList\u003cTasks\u003e`, containing the `KEYWORD` as a parameter. If the `KEYWORD` does not exist in any tasks ","lastModifiedDate":"2023-03-22"},{"lineNumber":495,"author":{"gitId":"yixuann02"},"content":"in `TaskList`, a message is printed to the user indicating that there are no matching tasks that contains the ","lastModifiedDate":"2023-03-22"},{"lineNumber":496,"author":{"gitId":"yixuann02"},"content":"`KEYWORD`.","lastModifiedDate":"2023-03-22"},{"lineNumber":497,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":498,"author":{"gitId":"yixuann02"},"content":"Step 5. Print the confirmation message: A confirmation message is printed to the user indicating the list of ","lastModifiedDate":"2023-03-22"},{"lineNumber":499,"author":{"gitId":"yixuann02"},"content":"tasks in `TaskList` that matches the `KEYWORD` input by the user. The message includes the task type, description and","lastModifiedDate":"2023-03-22"},{"lineNumber":500,"author":{"gitId":"yixuann02"},"content":"date of the task containing `KEYWORD` if the matching task is either an event or a deadline task.","lastModifiedDate":"2023-03-22"},{"lineNumber":501,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":502,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":504,"author":{"gitId":"T-Wan-Lin"},"content":"### List Task","lastModifiedDate":"2023-03-19"},{"lineNumber":505,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":506,"author":{"gitId":"yixuann02"},"content":"The ListTask functionality allows users to list the tasks (todo, event and deadline) that are in the TaskList. It is ","lastModifiedDate":"2023-03-22"},{"lineNumber":507,"author":{"gitId":"yixuann02"},"content":"facilitated by ListCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-22"},{"lineNumber":508,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":509,"author":{"gitId":"yixuann02"},"content":"Given below is an example usage scenario of how to list the tasks in the TaskList and how the mechanism behaves","lastModifiedDate":"2023-03-22"},{"lineNumber":510,"author":{"gitId":"yixuann02"},"content":"at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":511,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":512,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":513,"author":{"gitId":"yixuann02"},"content":"class.","lastModifiedDate":"2023-03-22"},{"lineNumber":514,"author":{"gitId":"yixuann02"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-22"},{"lineNumber":515,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":516,"author":{"gitId":"yixuann02"},"content":"Step 2. Override the `execute()` method: The `execute()` method is overridden to execute the list task","lastModifiedDate":"2023-03-22"},{"lineNumber":517,"author":{"gitId":"yixuann02"},"content":"functionality. It takes the necessary parameters, including the `Tasklist`, `Ui`, `Storage`, `ModuleList`,","lastModifiedDate":"2023-03-22"},{"lineNumber":518,"author":{"gitId":"yixuann02"},"content":"`allModule`, `calendar`.","lastModifiedDate":"2023-03-22"},{"lineNumber":519,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":520,"author":{"gitId":"T-Wan-Lin"},"content":"Step 3. Iterate through the list of tasks and perform sorting: The `execute()` method will iterate through `TaskList` ","lastModifiedDate":"2023-03-28"},{"lineNumber":521,"author":{"gitId":"T-Wan-Lin"},"content":"and first calls the","lastModifiedDate":"2023-03-28"},{"lineNumber":522,"author":{"gitId":"T-Wan-Lin"},"content":"`sortTaskByDay()` method in the TaskList class that takes in the list of tasks, `TaskList` that the user has updated ","lastModifiedDate":"2023-03-28"},{"lineNumber":523,"author":{"gitId":"T-Wan-Lin"},"content":"as a parameter. During the iteration, this method will first sort the task in the list by type with the method ","lastModifiedDate":"2023-03-28"},{"lineNumber":524,"author":{"gitId":"T-Wan-Lin"},"content":"`clusterByType()`, then by date with `deterministicSortForDeadline()` method for deadline type tasks sublist or ","lastModifiedDate":"2023-03-28"},{"lineNumber":525,"author":{"gitId":"T-Wan-Lin"},"content":"`deterministicSortForEvent()` for event type tasks sublist. The `clusterByType()` and deterministic sort ","lastModifiedDate":"2023-03-28"},{"lineNumber":526,"author":{"gitId":"T-Wan-Lin"},"content":"methods belong to the TaskList class. The `clusterByType()` method takes in the list of tasks, `TaskList` that the","lastModifiedDate":"2023-03-28"},{"lineNumber":527,"author":{"gitId":"T-Wan-Lin"},"content":"user has updated, as a parameter and returns a list of tasks sorted by type. The `deterministicSortForDeadline()` takes","lastModifiedDate":"2023-03-28"},{"lineNumber":528,"author":{"gitId":"T-Wan-Lin"},"content":"in two LocalDateTime objects which correspond to the dates of two deadlines being compared, whereas ","lastModifiedDate":"2023-03-28"},{"lineNumber":529,"author":{"gitId":"T-Wan-Lin"},"content":"the `deterministicSortForEvent()`takes in four LocalDateTime objects which correspond to the start and end dates of two ","lastModifiedDate":"2023-03-28"},{"lineNumber":530,"author":{"gitId":"T-Wan-Lin"},"content":"events being compared.","lastModifiedDate":"2023-03-28"},{"lineNumber":531,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":532,"author":{"gitId":"T-Wan-Lin"},"content":"Step 4. Iterate through the list of sorted tasks and print it:The `execute()` method then calls the `printList()` method ","lastModifiedDate":"2023-03-28"},{"lineNumber":533,"author":{"gitId":"T-Wan-Lin"},"content":"in the Ui class that takes in the list of tasks,`TaskList` that the user has updated, as a parameter. ","lastModifiedDate":"2023-03-28"},{"lineNumber":534,"author":{"gitId":"T-Wan-Lin"},"content":"During the iteration, the `printList()` method will check the `taskStatus` of each task and calculate","lastModifiedDate":"2023-03-28"},{"lineNumber":535,"author":{"gitId":"yixuann02"},"content":"the total number of unmarked tasks. If the list is empty, a message is printed to the user indicating that there are ","lastModifiedDate":"2023-03-22"},{"lineNumber":536,"author":{"gitId":"yixuann02"},"content":"no tasks in the list.","lastModifiedDate":"2023-03-22"},{"lineNumber":537,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":538,"author":{"gitId":"yixuann02"},"content":"Step 4. Print the confirmation message: A confirmation message is printed to the user indicating the list of tasks","lastModifiedDate":"2023-03-22"},{"lineNumber":539,"author":{"gitId":"yixuann02"},"content":"in `TaskList` that the user updated and the total number of unmarked tasks. The message includes the task type, ","lastModifiedDate":"2023-03-22"},{"lineNumber":540,"author":{"gitId":"yixuann02"},"content":"description and date of all tasks if the tasks are either an event or a deadline task.","lastModifiedDate":"2023-03-22"},{"lineNumber":541,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":542,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":543,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":544,"author":{"gitId":"T-Wan-Lin"},"content":"### Find Task on Date","lastModifiedDate":"2023-03-19"},{"lineNumber":545,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":546,"author":{"gitId":"yixuann02"},"content":"The Find Task on Date functionality allows user to search for a list of tasks (event and deadline) that are happening","lastModifiedDate":"2023-03-22"},{"lineNumber":547,"author":{"gitId":"honglinshang"},"content":"or due on a specific `date` in their TaskList. It is facilitated by the DateCommand class which is an extension of ","lastModifiedDate":"2023-04-05"},{"lineNumber":548,"author":{"gitId":"yixuann02"},"content":"the Command class.","lastModifiedDate":"2023-03-22"},{"lineNumber":549,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":550,"author":{"gitId":"yixuann02"},"content":"Below is an example usage of how the Find Task on Date command can be used to search for tasks happening or due on ","lastModifiedDate":"2023-03-22"},{"lineNumber":551,"author":{"gitId":"yixuann02"},"content":"a specific date in the TaskList and how it behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":552,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":553,"author":{"gitId":"yixuann02"},"content":"Step 1. Define the Constructor: When the user executes the command `date 2023-03-22`, the Parser class calls the    ","lastModifiedDate":"2023-03-22"},{"lineNumber":554,"author":{"gitId":"yixuann02"},"content":"`DateCommand()` method of the DateCommand class. The constructor of the DateCommand class takes in the dateString ","lastModifiedDate":"2023-03-22"},{"lineNumber":555,"author":{"gitId":"yixuann02"},"content":"`2023-03-22`  as a parameter. This date is used to find the corresponding tasks happening or due on this date from ","lastModifiedDate":"2023-03-22"},{"lineNumber":556,"author":{"gitId":"yixuann02"},"content":"the TaskList.","lastModifiedDate":"2023-03-22"},{"lineNumber":557,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":558,"author":{"gitId":"yixuann02"},"content":"Step 2. This date is then passed into the `LocalDate`. If the date parsed is in the wrong format (date format is not","lastModifiedDate":"2023-03-22"},{"lineNumber":559,"author":{"gitId":"yixuann02"},"content":"`yyyy-MM-dd`), a `DateTimeParseException` is thrown, calling the `printInvalidDate()` method in the Ui class.","lastModifiedDate":"2023-03-22"},{"lineNumber":560,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":561,"author":{"gitId":"yixuann02"},"content":"Step 3. Define the `setUpLogger()` method: The `setUpLogger()` method sets up the logger for the ModifyCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":562,"author":{"gitId":"yixuann02"},"content":"class.","lastModifiedDate":"2023-03-22"},{"lineNumber":563,"author":{"gitId":"yixuann02"},"content":"It creates a ConsoleHandler and a FileHandler to handle logging.","lastModifiedDate":"2023-03-22"},{"lineNumber":564,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":565,"author":{"gitId":"yixuann02"},"content":"Step 4. Override the `execute()` method: The `execute()` method is overridden to execute the find task","lastModifiedDate":"2023-03-22"},{"lineNumber":566,"author":{"gitId":"yixuann02"},"content":"functionality. It takes the necessary parameters, including the `Tasklist`, `Ui`, `Storage`, `ModuleList`,","lastModifiedDate":"2023-03-22"},{"lineNumber":567,"author":{"gitId":"yixuann02"},"content":"`allModule`, `calendar`.","lastModifiedDate":"2023-03-22"},{"lineNumber":568,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":569,"author":{"gitId":"yixuann02"},"content":"Step 5. Find the list of tasks happening or due on the `date`: Using the parameter string `date` in the format ","lastModifiedDate":"2023-03-22"},{"lineNumber":570,"author":{"gitId":"yixuann02"},"content":"`yyyy-MM-dd`, the `execute()` method will iterate through the `TaskList` to look for tasks that occurs on the given","lastModifiedDate":"2023-03-22"},{"lineNumber":571,"author":{"gitId":"yixuann02"},"content":"`date`. It will then call `printDateList()` method in the Ui class that takes in the list of tasks happening on the ","lastModifiedDate":"2023-03-22"},{"lineNumber":572,"author":{"gitId":"yixuann02"},"content":"given `date` and the LocalDate `date`. If there are no tasks on the specific `date`, a message is printed to the user ","lastModifiedDate":"2023-03-22"},{"lineNumber":573,"author":{"gitId":"yixuann02"},"content":"indicating that there are no tasks on that day.","lastModifiedDate":"2023-03-22"},{"lineNumber":574,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":575,"author":{"gitId":"yixuann02"},"content":"Step 6. Print the confirmation message: A confirmation message is printed to the user indicating the list of tasks in ","lastModifiedDate":"2023-03-22"},{"lineNumber":576,"author":{"gitId":"yixuann02"},"content":"`TaskList` that are occurring on the `date` input by the user. The message includes the task type, description, date","lastModifiedDate":"2023-03-22"},{"lineNumber":577,"author":{"gitId":"yixuann02"},"content":"and time of the task if the task is either an event or a deadline task.","lastModifiedDate":"2023-03-22"},{"lineNumber":578,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":579,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":580,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":581,"author":{"gitId":"honglinshang"},"content":"### View Week","lastModifiedDate":"2023-04-02"},{"lineNumber":582,"author":{"gitId":"honglinshang"},"content":"The `week` command allows the user to view their weekly schedule at a glance, including lessons, deadlines, and events.","lastModifiedDate":"2023-04-02"},{"lineNumber":583,"author":{"gitId":"honglinshang"},"content":"It is facilitated by `WeekCommand` which is an extension of the `Command` class.","lastModifiedDate":"2023-04-02"},{"lineNumber":584,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":585,"author":{"gitId":"honglinshang"},"content":"Given below is an example usage scenario and how the add task mechanism behaves at each step.","lastModifiedDate":"2023-04-02"},{"lineNumber":586,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":587,"author":{"gitId":"honglinshang"},"content":"Step 1. The user executes the command `week`. It is parsed by the `Parser` class which then creates a new `WeekCommand`.","lastModifiedDate":"2023-04-02"},{"lineNumber":588,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":589,"author":{"gitId":"honglinshang"},"content":"Step 2. The `execute()` method of `WeekCommand` is called. ","lastModifiedDate":"2023-04-02"},{"lineNumber":590,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":591,"author":{"gitId":"honglinshang"},"content":"Step 3. The dates of Monday and Sunday of the current week (`startWeek`, `endWeek`) are determined using `LocalDate`.","lastModifiedDate":"2023-04-02"},{"lineNumber":592,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":593,"author":{"gitId":"honglinshang"},"content":"Step 4. The parameters `startWeek`, `endWeek`, `taskList` (all tasks), and `calendar` (all lessons) are passed into `Ui`","lastModifiedDate":"2023-04-02"},{"lineNumber":594,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":595,"author":{"gitId":"honglinshang"},"content":"Step 5. Starting from Monday, the lessons and tasks occurring on each day of the week are printed out. ","lastModifiedDate":"2023-04-02"},{"lineNumber":596,"author":{"gitId":"honglinshang"},"content":"- Step 5a. The day of week is printed using the `determineDay()` method in `DayTypeUtil`. ","lastModifiedDate":"2023-04-02"},{"lineNumber":597,"author":{"gitId":"honglinshang"},"content":"- Step 5b. All lessons on that day are stored in an `ArrayList\u003cCalendarModule\u003e lessonsOnDay` using `calender.get()`. ","lastModifiedDate":"2023-04-02"},{"lineNumber":598,"author":{"gitId":"honglinshang"},"content":"  If no lessons occur on that day, Step 5c is skipped.","lastModifiedDate":"2023-04-02"},{"lineNumber":599,"author":{"gitId":"honglinshang"},"content":"- Step 5c. `lessonsOnDay` is passed into the method `printLessonsOnDay()` in `Ui`. ","lastModifiedDate":"2023-04-02"},{"lineNumber":600,"author":{"gitId":"honglinshang"},"content":"  The schedule of each lesson is stored in a new `Timetable`, then printed out in the desired format. ","lastModifiedDate":"2023-04-02"},{"lineNumber":601,"author":{"gitId":"honglinshang"},"content":"- Step 5d. Similarly, All tasks on that day are stored in an `TaskList tasksOnDay` using `taskList.getTasksOnDay()`.","lastModifiedDate":"2023-04-02"},{"lineNumber":602,"author":{"gitId":"honglinshang"},"content":"  If no lessons occur on that day, Step 5e is skipped.","lastModifiedDate":"2023-04-02"},{"lineNumber":603,"author":{"gitId":"honglinshang"},"content":"- Step 5e. `tasksOnDay` is passed into the method `printTasksOnDay()` in `Ui`. Each task is printed out.","lastModifiedDate":"2023-04-02"},{"lineNumber":604,"author":{"gitId":"honglinshang"},"content":"- Step 5f. The current day is increased to the following day.","lastModifiedDate":"2023-04-02"},{"lineNumber":605,"author":{"gitId":"honglinshang"},"content":"- Step 5g. Go back to Step 5a, stop after all lessons and tasks on Sunday have been printed. ","lastModifiedDate":"2023-04-02"},{"lineNumber":606,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":607,"author":{"gitId":"honglinshang"},"content":"![](../docs/uml-diagrams/Week-WeekCommand.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":608,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":609,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"},{"lineNumber":610,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":611,"author":{"gitId":"T-Wan-Lin"},"content":"### Storage","lastModifiedDate":"2023-03-19"},{"lineNumber":612,"author":{"gitId":"T-Wan-Lin"},"content":"(TO BE ADDED SOON)","lastModifiedDate":"2023-03-19"},{"lineNumber":613,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":614,"author":{"gitId":"T-Wan-Lin"},"content":"### Logging","lastModifiedDate":"2023-03-19"},{"lineNumber":615,"author":{"gitId":"T-Wan-Lin"},"content":"(TO BE ADDED SOON)","lastModifiedDate":"2023-03-19"},{"lineNumber":616,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":617,"author":{"gitId":"honglinshang"},"content":"# Appendix","lastModifiedDate":"2023-04-05"},{"lineNumber":618,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":619,"author":{"gitId":"honglinshang"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2023-04-05"},{"lineNumber":620,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":621,"author":{"gitId":"T-Wan-Lin"},"content":"#### Target user profile","lastModifiedDate":"2023-03-17"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":623,"author":{"gitId":"T-Wan-Lin"},"content":"The target user profile is an average NUS student who:","lastModifiedDate":"2023-03-17"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":625,"author":{"gitId":"T-Wan-Lin"},"content":"* has a need to manage a significant number of tasks (todo, event, deadline) and modules,","lastModifiedDate":"2023-03-17"},{"lineNumber":626,"author":{"gitId":"T-Wan-Lin"},"content":"* prefer desktop applications over other types of applications,","lastModifiedDate":"2023-03-17"},{"lineNumber":627,"author":{"gitId":"T-Wan-Lin"},"content":"* can type fast,","lastModifiedDate":"2023-03-17"},{"lineNumber":628,"author":{"gitId":"T-Wan-Lin"},"content":"* prefers typing to mouse interactions,","lastModifiedDate":"2023-03-17"},{"lineNumber":629,"author":{"gitId":"T-Wan-Lin"},"content":"* is reasonably comfortable using CLI apps.","lastModifiedDate":"2023-03-17"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":631,"author":{"gitId":"T-Wan-Lin"},"content":"#### Value proposition","lastModifiedDate":"2023-03-17"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":633,"author":{"gitId":"T-Wan-Lin"},"content":"Existing schedulers do not have access to NUS’s database, making it so that a student here would have to manually","lastModifiedDate":"2023-03-17"},{"lineNumber":634,"author":{"gitId":"T-Wan-Lin"},"content":"input all their lessons. We can expedite this process by creating a scheduler that sets itself up via module codes.","lastModifiedDate":"2023-03-17"},{"lineNumber":635,"author":{"gitId":"T-Wan-Lin"},"content":"It can also alert the user to possible event clashes.","lastModifiedDate":"2023-03-17"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":637,"author":{"gitId":"T-Wan-Lin"},"content":"Priority Legend:  ","lastModifiedDate":"2023-03-19"},{"lineNumber":638,"author":{"gitId":"T-Wan-Lin"},"content":"`***` - Highest priority (Must-haves) ","lastModifiedDate":"2023-03-19"},{"lineNumber":639,"author":{"gitId":"T-Wan-Lin"},"content":"`**` - Medium priority  (Should-haves)","lastModifiedDate":"2023-03-19"},{"lineNumber":640,"author":{"gitId":"T-Wan-Lin"},"content":"`*` - Lowest priority (Could-haves)","lastModifiedDate":"2023-03-19"},{"lineNumber":641,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":642,"author":{"gitId":"T-Wan-Lin"},"content":"## Appendix B: User Stories","lastModifiedDate":"2023-04-05"},{"lineNumber":643,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":644,"author":{"gitId":"T-Wan-Lin"},"content":"| Priority | Version |           As a/an ...           | I want to ...                                              | So that I can ...                                                             |","lastModifiedDate":"2023-03-19"},{"lineNumber":645,"author":{"gitId":"T-Wan-Lin"},"content":"|:--------:|:-------:|:-------------------------------:|:-----------------------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-05"},{"lineNumber":646,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |           expert user           | be able to quickly interface with the program using a CLI  | issue commands to the bot.                                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":647,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |            new user             | see usage instructions                                     | refer to them when I forget how to use the application.                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":648,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | find a to-do item by name                                  | locate a to-do without having to go through the entire list.                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":649,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | delete a to-do item                                        | remove items that I no longer need to keep track of.                          |","lastModifiedDate":"2023-04-05"},{"lineNumber":650,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | add a to-do item                                           | keep track of things that I need to do.                                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":651,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | add an event item                                          | keep track of events that I need to attend.                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":652,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |          busy student           | add a deadline item                                        | keep track of deadlines that I need to meet.                                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":653,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | list all items                                             | view all items that I have added.                                             |","lastModifiedDate":"2023-04-05"},{"lineNumber":654,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | mark a to-do item as done                                  | keep track of which to-do items I have completed.                             |","lastModifiedDate":"2023-04-05"},{"lineNumber":655,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | unmark a to-do item as not done                            | keep track of which to-do items I have not completed yet.                     |","lastModifiedDate":"2023-04-05"},{"lineNumber":656,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |              user               | view task count                                            | see how much I have to do.                                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":657,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |          undergraduate          | add modules                                                | keep track of the modules I am taking for the semester.                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":658,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |          undergraduate          | list all modules                                           | see all the modules I am taking for the semester.                             |","lastModifiedDate":"2023-04-05"},{"lineNumber":659,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v1.0   |          undergraduate          | view module count                                          | keep how many modules I have for the semester.                                |","lastModifiedDate":"2023-04-05"},{"lineNumber":660,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v1.0   |          undergraduate          | delete modules                                             | remove modules that I am no longer taking.                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":661,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |          undergraduate          | keep track of the total modular credits                    | plan my academic year.                                                        |","lastModifiedDate":"2023-04-05"},{"lineNumber":662,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v2.0   |             student             | add specific lesson types lessons for each module          | go to the correct classes at the right time.                                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":663,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v2.0   |             student             | delete specific lesson types for each module               | avoid going to a class I never signed up for.                                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":664,"author":{"gitId":"T-Wan-Lin"},"content":"|   ***    |  v2.0   |             student             | see my lesson timetable                                    | see the timings of my lessons for the week.                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":665,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |     over-committed student      | be alerted to clashes between events and module lessons    | rearrange conflicting events.                                                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":666,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |          busy student           | be alerted to clashes between deadlines and events         | avoid missing out on important deadlines.                                     |","lastModifiedDate":"2023-04-05"},{"lineNumber":667,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |          busy student           | be alerted to clashes between deadlines and module lessons | avoid missing out on important deadlines during lessons.                      |","lastModifiedDate":"2023-04-05"},{"lineNumber":668,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |        organised student        | be able to organise my tasklist according to type          | be able to read the tasklist more easily.                                     |","lastModifiedDate":"2023-04-05"},{"lineNumber":669,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |        organised student        | be able to organise my tasklist according to date          | prioritise deadlines and events correctly.                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":670,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |             student             | see my overall timetable                                   | see all lessons, events and module lessons at the same time.                  |","lastModifiedDate":"2023-04-05"},{"lineNumber":671,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |         curious student         | view module information                                    | see what a module is about without adding it to my module list.               |","lastModifiedDate":"2023-04-05"},{"lineNumber":672,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   | prospective student of a module | view module lesson information                             | see which lessons I am able to fit into my timetable.                         |","lastModifiedDate":"2023-04-05"},{"lineNumber":673,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.0   |             student             | list all lessons I have for a module                       | see if I registered for the right lessons.                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":674,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.1   |        forgetful student        | view which weeks my lessons occur                          | turn up for lesson on the correct weeks.                                      |","lastModifiedDate":"2023-04-05"},{"lineNumber":675,"author":{"gitId":"T-Wan-Lin"},"content":"|    **    |  v2.1   |         forgetful user          | view help menu for specific commands                       | get formatting options for each command without viewing the entire help menu. |","lastModifiedDate":"2023-04-05"},{"lineNumber":676,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":678,"author":{"gitId":"honglinshang"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2023-04-05"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":680,"author":{"gitId":"T-Wan-Lin"},"content":"* Apollo should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-03-19"},{"lineNumber":681,"author":{"gitId":"T-Wan-Lin"},"content":"* Apollo should be able to work on a typical CLI without any issues. It does not require installation of third-party","lastModifiedDate":"2023-04-05"},{"lineNumber":682,"author":{"gitId":"T-Wan-Lin"},"content":"  software.","lastModifiedDate":"2023-04-05"},{"lineNumber":683,"author":{"gitId":"T-Wan-Lin"},"content":"* Apollo should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-19"},{"lineNumber":684,"author":{"gitId":"T-Wan-Lin"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-17"},{"lineNumber":685,"author":{"gitId":"T-Wan-Lin"},"content":"  able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-17"},{"lineNumber":686,"author":{"gitId":"T-Wan-Lin"},"content":"* Apollo is free-to-use. No payment is required to use the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":687,"author":{"gitId":"T-Wan-Lin"},"content":"* The user interface should be intuitive enough for users who are new to the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":688,"author":{"gitId":"T-Wan-Lin"},"content":"* Apollo should respond to any user interaction within 3 seconds.","lastModifiedDate":"2023-04-05"},{"lineNumber":689,"author":{"gitId":"T-Wan-Lin"},"content":"* Module data for Apollo is limited to what is available on NUSMods, i.e. Apollo has module data for all modules offered","lastModifiedDate":"2023-04-05"},{"lineNumber":690,"author":{"gitId":"T-Wan-Lin"},"content":"  by NUS in AY22/23 Semester 1 and 2.","lastModifiedDate":"2023-04-05"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":692,"author":{"gitId":"honglinshang"},"content":"## Appendix D: Glossary","lastModifiedDate":"2023-04-05"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":694,"author":{"gitId":"T-Wan-Lin"},"content":"* *Mainstream OS* - Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-17"},{"lineNumber":695,"author":{"gitId":"T-Wan-Lin"},"content":"* *CLI* - Command Line Interface","lastModifiedDate":"2023-03-17"},{"lineNumber":696,"author":{"gitId":"T-Wan-Lin"},"content":"* *Modules* - Modules are the courses that students take in NUS. They are identified by a 6-character alphanumeric code.","lastModifiedDate":"2023-04-05"},{"lineNumber":697,"author":{"gitId":"T-Wan-Lin"},"content":"* *Modular Credits* - Modular credits are the credits that students earn for each module they take. They are used to","lastModifiedDate":"2023-04-05"},{"lineNumber":698,"author":{"gitId":"T-Wan-Lin"},"content":"  calculate the total number of credits a student has earned for the semester.","lastModifiedDate":"2023-04-05"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":700,"author":{"gitId":"honglinshang"},"content":"## Appendix E: Instructions for manual testing","lastModifiedDate":"2023-04-05"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":702,"author":{"gitId":"T-Wan-Lin"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-03-17"},{"lineNumber":703,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Note: These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-03-17"},{"lineNumber":704,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e testers are expected to do more *exploratory* testing.","lastModifiedDate":"2023-03-17"},{"lineNumber":705,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":706,"author":{"gitId":"T-Wan-Lin"},"content":"### Launch","lastModifiedDate":"2023-04-05"},{"lineNumber":707,"author":{"gitId":"T-Wan-Lin"},"content":"* Download the .jar file from the latest release here and copy it into an empty folder. ","lastModifiedDate":"2023-04-05"},{"lineNumber":708,"author":{"gitId":"T-Wan-Lin"},"content":"* Open a terminal in the folder and run the command `java -jar apollo.jar`. The CLI should appear in a few seconds.","lastModifiedDate":"2023-04-05"},{"lineNumber":709,"author":{"gitId":"T-Wan-Lin"},"content":"* Expected: The CLI should appear with a welcome message and a prompt to enter a command. Resize the CLI window size","lastModifiedDate":"2023-04-05"},{"lineNumber":710,"author":{"gitId":"T-Wan-Lin"},"content":"    for optimal text wrapping.","lastModifiedDate":"2023-04-05"},{"lineNumber":711,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":712,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":713,"author":{"gitId":"T-Wan-Lin"},"content":"Hello from","lastModifiedDate":"2023-04-05"},{"lineNumber":714,"author":{"gitId":"T-Wan-Lin"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-04-05"},{"lineNumber":715,"author":{"gitId":"T-Wan-Lin"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-04-05"},{"lineNumber":716,"author":{"gitId":"T-Wan-Lin"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-04-05"},{"lineNumber":717,"author":{"gitId":"T-Wan-Lin"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-04-05"},{"lineNumber":718,"author":{"gitId":"T-Wan-Lin"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-04-05"},{"lineNumber":719,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":720,"author":{"gitId":"T-Wan-Lin"},"content":"Your personal task and timetable manager!","lastModifiedDate":"2023-04-05"},{"lineNumber":721,"author":{"gitId":"T-Wan-Lin"},"content":"Enter \"help\" to see a list of commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":722,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":723,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":724,"author":{"gitId":"T-Wan-Lin"},"content":"### Sample test cases","lastModifiedDate":"2023-04-05"},{"lineNumber":725,"author":{"gitId":"T-Wan-Lin"},"content":"#### Invalid Commands","lastModifiedDate":"2023-04-05"},{"lineNumber":726,"author":{"gitId":"T-Wan-Lin"},"content":"1. Type `hello` and press enter.","lastModifiedDate":"2023-04-05"},{"lineNumber":727,"author":{"gitId":"T-Wan-Lin"},"content":"2. Any commands Apollo cannot understand will be treated as invalid commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":728,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":729,"author":{"gitId":"T-Wan-Lin"},"content":"Expected: Apollo should respond with an error message for invalid commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":730,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":731,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":732,"author":{"gitId":"T-Wan-Lin"},"content":"Sorry, but I don\u0027t know what that means :(","lastModifiedDate":"2023-04-05"},{"lineNumber":733,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":734,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":735,"author":{"gitId":"T-Wan-Lin"},"content":"#### Help Command","lastModifiedDate":"2023-04-05"},{"lineNumber":736,"author":{"gitId":"T-Wan-Lin"},"content":"1. Make sure you are in the main interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":737,"author":{"gitId":"T-Wan-Lin"},"content":"2. Sub-case 1: Type `help` and press enter.","lastModifiedDate":"2023-04-05"},{"lineNumber":738,"author":{"gitId":"T-Wan-Lin"},"content":"3. Sub-case 2: You may also type `help [COMMAND]` to get more information about a specific command. Example: `help addmod`","lastModifiedDate":"2023-04-05"},{"lineNumber":739,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":740,"author":{"gitId":"T-Wan-Lin"},"content":"Expected of Sub-case 1: The help menu should appear with the list of all commands available on Apollo with `help`.","lastModifiedDate":"2023-04-05"},{"lineNumber":741,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":742,"author":{"gitId":"T-Wan-Lin"},"content":"The help menu gives a summary of all the commands available in Apollo!","lastModifiedDate":"2023-04-05"},{"lineNumber":743,"author":{"gitId":"T-Wan-Lin"},"content":"Input `help` to see all available commands.Input \"help [COMMAND]\" for usage help and more information for a specific command.","lastModifiedDate":"2023-04-05"},{"lineNumber":744,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":745,"author":{"gitId":"T-Wan-Lin"},"content":"These are the available Task Commands and their corresponding commands (in brackets):","lastModifiedDate":"2023-04-05"},{"lineNumber":746,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":747,"author":{"gitId":"T-Wan-Lin"},"content":"1. `list` - Track and organises your tasklist!","lastModifiedDate":"2023-04-05"},{"lineNumber":748,"author":{"gitId":"T-Wan-Lin"},"content":"2. `todo [TASK]` - Adds a ToDo in your tasklist.","lastModifiedDate":"2023-04-05"},{"lineNumber":749,"author":{"gitId":"T-Wan-Lin"},"content":"3. `deadline [TASK] -[BY]` - Adds a Deadline in your tasklist.","lastModifiedDate":"2023-04-05"},{"lineNumber":750,"author":{"gitId":"T-Wan-Lin"},"content":"4. `event [TASK] -[FROM] -[TO]` - Adds an Event in your tasklist.","lastModifiedDate":"2023-04-05"},{"lineNumber":751,"author":{"gitId":"T-Wan-Lin"},"content":"5. `mark [IDX]` - Marks a task in your tasklist as done!","lastModifiedDate":"2023-04-05"},{"lineNumber":752,"author":{"gitId":"T-Wan-Lin"},"content":"6. `unmark [IDX]` - Unmarks a task in your tasklist as incomplete.","lastModifiedDate":"2023-04-05"},{"lineNumber":753,"author":{"gitId":"T-Wan-Lin"},"content":"7. `delete [IDX]` - Deletes a task from your list.","lastModifiedDate":"2023-04-05"},{"lineNumber":754,"author":{"gitId":"T-Wan-Lin"},"content":"8. `find [KEYWORD]` - Shows all tasks that contain a specified keyword.","lastModifiedDate":"2023-04-05"},{"lineNumber":755,"author":{"gitId":"T-Wan-Lin"},"content":"9. `date [DATE]` - Shows all tasks that occur on the specified date.","lastModifiedDate":"2023-04-05"},{"lineNumber":756,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":757,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":758,"author":{"gitId":"T-Wan-Lin"},"content":"These are the available Module Commands and their corresponding commands (in brackets):","lastModifiedDate":"2023-04-05"},{"lineNumber":759,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":760,"author":{"gitId":"T-Wan-Lin"},"content":"1. `listmod` - Track and organise your academic plan for this semester!","lastModifiedDate":"2023-04-05"},{"lineNumber":761,"author":{"gitId":"T-Wan-Lin"},"content":"2. `listmod [MODULE_CODE]` - See more information about the classes you\u0027ve added for a module in your list.","lastModifiedDate":"2023-04-05"},{"lineNumber":762,"author":{"gitId":"T-Wan-Lin"},"content":"3. `listmod [MODULE_CODE] -[FLAG]` - See more information about a specific class type for a module in your list","lastModifiedDate":"2023-04-05"},{"lineNumber":763,"author":{"gitId":"T-Wan-Lin"},"content":"4. `showmod [MODULE_CODE]` - See more information about the specified module.","lastModifiedDate":"2023-04-05"},{"lineNumber":764,"author":{"gitId":"T-Wan-Lin"},"content":"5. `showmod [MODULE_CODE] -[FLAG]` - View timing of specific lesson type for a chosen module","lastModifiedDate":"2023-04-05"},{"lineNumber":765,"author":{"gitId":"T-Wan-Lin"},"content":"6. `addmod [MODULE_CODE]` - Adds a module to your module list.","lastModifiedDate":"2023-04-05"},{"lineNumber":766,"author":{"gitId":"T-Wan-Lin"},"content":"7. `addmod [MODULE_CODE] -[FLAG] [LESSON NUMBER]` - Adds a chosen lesson of a specified module to your timetable! ","lastModifiedDate":"2023-04-05"},{"lineNumber":767,"author":{"gitId":"T-Wan-Lin"},"content":"8. `Remove a module (delmod [MODULE_CODE or IDX]` - Removes a Module you previously added by code or index in module list.","lastModifiedDate":"2023-04-05"},{"lineNumber":768,"author":{"gitId":"T-Wan-Lin"},"content":"9. `delmod [MODULE_CODE] -[FLAG] [LESSON NUMBER]` - Removes a lesson of a specified module from your timetable. ","lastModifiedDate":"2023-04-05"},{"lineNumber":769,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":770,"author":{"gitId":"T-Wan-Lin"},"content":"NOTE: showmod, addmod, delmod, listmod are commands with flags included in them. ","lastModifiedDate":"2023-04-05"},{"lineNumber":771,"author":{"gitId":"T-Wan-Lin"},"content":"Whatever in [THE SQUARE BRACKETS] are provided by you.For more information on the flags, please input \"help [COMMAND]\" exclusive of the square brackets. ","lastModifiedDate":"2023-04-05"},{"lineNumber":772,"author":{"gitId":"T-Wan-Lin"},"content":"For example, if you want to know more about the addmod command and its flags, input \"help addmod\".","lastModifiedDate":"2023-04-05"},{"lineNumber":773,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":774,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":775,"author":{"gitId":"T-Wan-Lin"},"content":"These are the Utility Commands:","lastModifiedDate":"2023-04-05"},{"lineNumber":776,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":777,"author":{"gitId":"T-Wan-Lin"},"content":"1. `week` - Displays your schedule for the week.","lastModifiedDate":"2023-04-05"},{"lineNumber":778,"author":{"gitId":"T-Wan-Lin"},"content":"2. `bye` - Exit the program","lastModifiedDate":"2023-04-05"},{"lineNumber":779,"author":{"gitId":"T-Wan-Lin"},"content":"3. `help` - Get a summary of all the commands available on Apollo.","lastModifiedDate":"2023-04-05"},{"lineNumber":780,"author":{"gitId":"T-Wan-Lin"},"content":"View help for a specific command by inputting help [COMMAND] ","lastModifiedDate":"2023-04-05"},{"lineNumber":781,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":782,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":783,"author":{"gitId":"T-Wan-Lin"},"content":"Expected of Sub-case 2: The help menu for that command should appear.","lastModifiedDate":"2023-04-05"},{"lineNumber":784,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":785,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":786,"author":{"gitId":"T-Wan-Lin"},"content":"Shows the information of a module, including Modular Credits, lesson types, lesson numbers and times.","lastModifiedDate":"2023-04-05"},{"lineNumber":787,"author":{"gitId":"T-Wan-Lin"},"content":"Format: showmod MODULE_CODE","lastModifiedDate":"2023-04-05"},{"lineNumber":788,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":789,"author":{"gitId":"T-Wan-Lin"},"content":"If you would like to view timing information on a specific lesson type of a module, you can use flags.","lastModifiedDate":"2023-04-05"},{"lineNumber":790,"author":{"gitId":"T-Wan-Lin"},"content":"Format: showmod MODULE_CODE -FLAG","lastModifiedDate":"2023-04-05"},{"lineNumber":791,"author":{"gitId":"T-Wan-Lin"},"content":"Example: showmod CS1010 -st","lastModifiedDate":"2023-04-05"},{"lineNumber":792,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":793,"author":{"gitId":"T-Wan-Lin"},"content":"NOTE: Different modules have different lesson types.","lastModifiedDate":"2023-04-05"},{"lineNumber":794,"author":{"gitId":"T-Wan-Lin"},"content":"It is recomended to run `showmod MODULE_CODE` to see the lesson types available for that module.","lastModifiedDate":"2023-04-05"},{"lineNumber":795,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":796,"author":{"gitId":"T-Wan-Lin"},"content":"There are -FLAGS for the various lessons options per module:","lastModifiedDate":"2023-04-05"},{"lineNumber":797,"author":{"gitId":"T-Wan-Lin"},"content":"-lec\t\t\tLECTURE","lastModifiedDate":"2023-04-05"},{"lineNumber":798,"author":{"gitId":"T-Wan-Lin"},"content":"-plec\t\t\tPACKAGED LECTURE","lastModifiedDate":"2023-04-05"},{"lineNumber":799,"author":{"gitId":"T-Wan-Lin"},"content":"-st \t\t\tSECTIONAL TEACHING","lastModifiedDate":"2023-04-05"},{"lineNumber":800,"author":{"gitId":"T-Wan-Lin"},"content":"-dlec\t\t\tDESIGN LECTURE","lastModifiedDate":"2023-04-05"},{"lineNumber":801,"author":{"gitId":"T-Wan-Lin"},"content":"-tut\t\t\tTUTORIAL","lastModifiedDate":"2023-04-05"},{"lineNumber":802,"author":{"gitId":"T-Wan-Lin"},"content":"-ptut\t\t\tPACKAGED TUTORIAL","lastModifiedDate":"2023-04-05"},{"lineNumber":803,"author":{"gitId":"T-Wan-Lin"},"content":"-rcit\t\t\tRECITATION","lastModifiedDate":"2023-04-05"},{"lineNumber":804,"author":{"gitId":"T-Wan-Lin"},"content":"-lab\t\t\tLABORATORY","lastModifiedDate":"2023-04-05"},{"lineNumber":805,"author":{"gitId":"T-Wan-Lin"},"content":"-ws \t\t\tWORKSHOP","lastModifiedDate":"2023-04-05"},{"lineNumber":806,"author":{"gitId":"T-Wan-Lin"},"content":"-smc\t\t\tSEMINAR STYLE MODULE CLASS","lastModifiedDate":"2023-04-05"},{"lineNumber":807,"author":{"gitId":"T-Wan-Lin"},"content":"-mp \t\t\tMINI PROJECT","lastModifiedDate":"2023-04-05"},{"lineNumber":808,"author":{"gitId":"T-Wan-Lin"},"content":"-tt2\t\t\tTUTORIAL TYPE 2","lastModifiedDate":"2023-04-05"},{"lineNumber":809,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":810,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":811,"author":{"gitId":"T-Wan-Lin"},"content":"#### Adding a ToDo/Event/Deadline","lastModifiedDate":"2023-04-05"},{"lineNumber":812,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":813,"author":{"gitId":"T-Wan-Lin"},"content":"#### Deleting a Todo/Event/Deadline","lastModifiedDate":"2023-04-05"},{"lineNumber":814,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":815,"author":{"gitId":"T-Wan-Lin"},"content":"#### Adding a Module","lastModifiedDate":"2023-04-05"},{"lineNumber":816,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":817,"author":{"gitId":"T-Wan-Lin"},"content":"#### Adding a Lesson","lastModifiedDate":"2023-04-05"},{"lineNumber":818,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":819,"author":{"gitId":"T-Wan-Lin"},"content":"#### Deleting a Module","lastModifiedDate":"2023-04-05"},{"lineNumber":820,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":821,"author":{"gitId":"T-Wan-Lin"},"content":"#### Deleting a Lesson","lastModifiedDate":"2023-04-05"},{"lineNumber":822,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":823,"author":{"gitId":"T-Wan-Lin"},"content":"### Saving Data","lastModifiedDate":"2023-04-05"},{"lineNumber":824,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":825,"author":{"gitId":"T-Wan-Lin"},"content":"1. Dealing with save files with erroneous data.","lastModifiedDate":"2023-04-05"},{"lineNumber":826,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":827,"author":{"gitId":"T-Wan-Lin"},"content":"The save file for tasks is located at save.txt within the *home folder* for Apollo. ","lastModifiedDate":"2023-04-05"},{"lineNumber":828,"author":{"gitId":"T-Wan-Lin"},"content":"The save file for modules is located at moduleData.txt within the *home folder* for Apollo.","lastModifiedDate":"2023-04-05"},{"lineNumber":829,"author":{"gitId":"T-Wan-Lin"},"content":"To simulate erroneous save files, edit either files in the data folder to contain erroneous data.","lastModifiedDate":"2023-04-05"},{"lineNumber":830,"author":{"gitId":"T-Wan-Lin"},"content":"You can input random characters, or delete some lines to simulate a corrupted save file. Apollo should be able to","lastModifiedDate":"2023-04-05"},{"lineNumber":831,"author":{"gitId":"T-Wan-Lin"},"content":"detect the errors and inform the user of the errors, skipping the erroneous data entirely.","lastModifiedDate":"2023-04-05"},{"lineNumber":832,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":833,"author":{"gitId":"T-Wan-Lin"},"content":"Example message when save.txt has errors when the first line has been mutated so that the data is no longer ","lastModifiedDate":"2023-04-05"},{"lineNumber":834,"author":{"gitId":"T-Wan-Lin"},"content":"in the correct format:","lastModifiedDate":"2023-04-05"},{"lineNumber":835,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":836,"author":{"gitId":"T-Wan-Lin"},"content":"Module Data loaded","lastModifiedDate":"2023-04-05"},{"lineNumber":837,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":838,"author":{"gitId":"T-Wan-Lin"},"content":"There is an error in save.txt at line 1","lastModifiedDate":"2023-04-05"},{"lineNumber":839,"author":{"gitId":"T-Wan-Lin"},"content":"Task 1 has been excluded. You can edit the save file at:","lastModifiedDate":"2023-04-05"},{"lineNumber":840,"author":{"gitId":"T-Wan-Lin"},"content":"save.txt","lastModifiedDate":"2023-04-05"},{"lineNumber":841,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":842,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":843,"author":{"gitId":"T-Wan-Lin"},"content":"Note: The above message will be displayed before the welcome message.","lastModifiedDate":"2023-04-05"},{"lineNumber":844,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":845,"author":{"gitId":"honglinshang"},"content":"[*Return to TOC*](#table-of-contents)","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"irving11119":126,"honglinshang":121,"yixuann02":166,"T-Wan-Lin":385,"PoobalanAatmikaLakshmi":35,"-":12}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```text","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## A personal timetable organiser","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Description","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo is a timetable organiser written in java made for the average NUS students by NUS students!","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo works as a desktop app for managing your tasks, events, deadlines and modules optimized for use via a Command","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Line Interface (CLI).","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"**If you can type fast, Apollo can get your timetable management done faster than traditional GUI apps.**","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Feature List(for V2.0)","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Integrate tasks and modules to make weekly schedule","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Task planner","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Add 3 different types of tasks : todos, deadlines, events","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Mark them as done or not done","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Search for tasks by keyword","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Filter tasks chronologically","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Find tasks by date","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* See list of tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Delete tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Module planner","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Add modules,their respective lesson types and lesson numbers","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Know how many Modular Credits (MCs) they are taking for the semester","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* See the list of modules they are taking","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Remove modules","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Be warned about clashing classes","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Timetable","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* See the tasks + classes for the day and week","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## How to install and run the project","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Prerequisites: java 11 (use the exact version)","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"1. Download the jar file from the releases below","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"2. Copy the jar file into an empty folder","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"3. Open a command window in that folder","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"4. Run the command `java -jar {filename}.jar` e.g `java -jar tp.jar`.","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If the set-up is correct you should see something like this below","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e Task :compileJava  ","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e Task :processResources UP-TO-DATE  ","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e Task :classes","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e Task :Apollo.main()","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e Module Data loaded","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Hello from","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Enter \"help\" to see a list of commands.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Useful links:","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":81,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Releases:","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* [v1.0](https://github.com/AY2223S2-CS2113-T13-4/tp/releases/tag/v1.0)","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":64,"-":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Apollo User Guide (as of V2.0)","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"## Introduction and Aim","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"Welcome to Apollo, a timetable organiser made for the average NUS students by NUS students!","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo is a desktop app for managing your tasks, events, deadlines and modules optimized for use via a Command Line","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"Interface (CLI) .","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"If you can type fast, Apollo can get your timetable management done faster than traditional GUI apps.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"## Table of Contents","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"2. [Features](#features)","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    + [Task Commands](#task-commands)","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    + [Module Commands](#module-commands)","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Utility Commands](#utility-commands)","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Loading and saving of data](#loading-and-saving-of-data)","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"3. [Command summary](#command-summary)","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"4. [FAQ](#faq)","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"## Quick Start","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"1. Ensure that you have Java `11` or above installed on your Personal Computer.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"2. Download the latest `tp.jar` from [here](https://github.com/AY2223S2-CS2113-T13-4/tp/releases).","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"3. Copy the file to the folder you want to use as the home folder for your Apollo. This folder must be *empty*.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"4. Open a command terminal, cd into the directory you put the jar file in and run the command `java -jar tp.jar`.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"5. On opening, Apollo should greet you with this:","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"Hello from","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"Your personal task and timetable manager!","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"Enter \"help\" to see a list of commands.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"**IMPORTANT:** ","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"- It is recommended that users **not** mutate the logger files. If the logger file is corrupted, severe errors will be logged","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"on the console by design. However, the application will still run normally and error messages thrown by the logger is not considered a bug.","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"- Users may edit the save.txt and the moduleData.txt files directly on a plaintext file editor but it is recommended ","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"  that users edit it with the application. This is to ensure that save data in the correct format so that the data can be","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"  correctly loaded upon relaunch.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"## Command Summary","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"|          Action           |              Format              |","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|:-------------------------:|:--------------------------------:|","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"|        List Tasks         |              `list`              |","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"|           Todo            |           `todo TASK`            |","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"|         Deadline          |     `deadline TASK /by DATE`     |","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"|           Event           | `event TASK /from DATE /to DATE` |","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"|           Mark            |            `mark IDX`            |","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"|          Unmark           |           `unmark IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"|        Delete Task        |           `delete IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"|  Find Tasks with Keyword  |          `find KEYWORD`          |","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"|    Find Tasks on Date     |           `date DATE`            |","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"|       List Modules        |            `listmod`             |","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| List Modules with lessons |         `listmod cs2113`         |","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"|        Add Module         |       `addmod MODULE_CODE`       |","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"|       Delete Module       |           `delmod IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"|  Show Module Information  |            `showmod`             |","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"|           Help            |              `help`              |","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"|     Help for Command      |          `help COMMAND`          |","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"|      Weekly Schedule      |              `week`              |","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"|            Bye            |              `bye`               |","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"    ","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e + Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e \u003e e.g. in \u0027todo TASK\u0027, `TASK` is a parameter that can be used as `todo read book`.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"\u003e + `DATE`s should be input in the format `yyyy-MM-ddThh:mm`.","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e \u003e e.g. `deadline read book /by 2023-10-30T23:59` sets a deadline for Oct 20 2023, 11:59PM","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"\u003e + Tasks that have occurred prior to the current date cannot be added. ","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"\u003e + `IDX` can be obtained by using `list` for tasks or `listmod` for modules.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e + By default, all newly added tasks are not completed.","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"## Features","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"## *Task Commands*","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"### `list` - Listing all saved tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"Shows a numbered list of all tasks (Todos, Events, Deadlines) in Apollo. `list` automatically sorts the tasks by type, ","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"then date within each type.","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `list`","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e list","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"You have a total of 7 tasks in your tasklist.","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"1.[D][ ] submit tutorial (by: Apr 01 2023, 11:59PM)","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"2.[D][ ] submit tutorial (by: May 01 2023, 11:59PM)","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"3.[D][ ] submit tutorial (by: May 03 2023, 11:59PM)","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"4.[E][ ] lecture (from: Apr 03 2023, 09:00AM to: May 03 2023, 11:00AM)","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"5.[E][ ] lecture (from: Apr 04 2023, 09:00AM to: May 03 2023, 11:00AM)","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"6.[E][ ] lecture (from: May 03 2023, 09:00AM to: May 03 2023, 11:00AM)","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"7.[T][ ] eat lunch","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"There are 7 unmarked tasks in your tasklist.","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"### `todo` - Adding a ToDo","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a normal task to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `todo TASK`","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e todo Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this todo:","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"   [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"### `deadline` - Adding a Deadline","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a task with a due date to Apollo. ","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If deadline clashes with any event or lesson type you will be alerted through a warning message. ","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"However, you will still be able to add it into the tasklist. ","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `deadline TASK -by DATE`","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `DATE` must be entered in the format `yyyy-MM-ddThh:mm`.","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e deadline submit tutorial -by 2023-03-30T23:59","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this deadline:","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"  [D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"### `event` - Adding an Event","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a task with a start and end date to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If there is an event in the tasklist that is clashing with any event added previously a warning message will be printed. ","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"However, you will still be able to add it. ","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `event TASK -from DATE -to DATE`","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `DATE` must be entered in the format `yyyy-MM-ddThh:mm`.","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e event holiday -from 2023-03-25T00:00 -to 2023-03-30T23:59","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this event:","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"  [E][ ] holiday (from: Mar 25 2023, 12:00AM to: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"### `mark` - Marking done","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"Marks the specified task as completed.","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `mark IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Note: `IDX` can be obtained by using `list` to find the task\u0027s index. You can only mark the same task as done once.","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e mark 4","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"Nice!, I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"[T][X] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"T-Wan-Lin"},"content":"### `unmark` - Marking not done","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"T-Wan-Lin"},"content":"Marks the specified task as not completed.  ","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `unmark IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Note: `IDX` can be obtained by using `list` to find the task\u0027s index. You can only unmark the same task as incomplete once.","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e unmark 4","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"  [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"### `delete` - Deleting a task","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"Deletes the specified task from Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `delete IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `IDX` can be obtained by using `list` to find the task\u0027s index.","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e delete 4","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"  [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"### `find` - Finding a task","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"Shows all tasks in Apollo that contain the specified keyword.","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e find tutorial","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"T-Wan-Lin"},"content":"1.[D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"T-Wan-Lin"},"content":"### `date` - Find tasks on date","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"T-Wan-Lin"},"content":"Shows all tasks in Apollo that occur on the specified date.","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `date DATE`","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `DATE` should be entered in the format `yyyy-MM-dd`.","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e date 2023-03-30","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the tasks happening on Mar 30 2023:","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"T-Wan-Lin"},"content":"1.[E][ ] holiday (from: Mar 25 2023, 12:00AM to: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"T-Wan-Lin"},"content":"2.[D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"## *Module Commands*","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"### `listmod` - Listing all modules","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"T-Wan-Lin"},"content":"Shows a list of all modules in Apollo. It will also show the total number of modular credits you have in this semester.","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"T-Wan-Lin"},"content":"The list will be automatically sorted in alphabetical order according to EduRec standards.","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"honglinshang"},"content":"Format: `listmod`","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"honglinshang"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"honglinshang"},"content":"\u003e\u003e listmod","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"honglinshang"},"content":"You are taking 3 module(s) this semester:","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"T-Wan-Lin"},"content":"1.CG1111A: Engineering Principles and Practice I (4 MCs)","lastModifiedDate":"2023-03-25"},{"lineNumber":236,"author":{"gitId":"T-Wan-Lin"},"content":"2.CS2113: Software Engineering \u0026 Object-Oriented Programming (4 MCs)","lastModifiedDate":"2023-03-25"},{"lineNumber":237,"author":{"gitId":"T-Wan-Lin"},"content":"3.DTK1234: Design Thinking (4 MCs)","lastModifiedDate":"2023-03-25"},{"lineNumber":238,"author":{"gitId":"T-Wan-Lin"},"content":"Total modular credits you have in this semester: 12","lastModifiedDate":"2023-03-25"},{"lineNumber":239,"author":{"gitId":"honglinshang"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### `listmod with lessons` - Lists all the lessons user is taking in that module","lastModifiedDate":"2023-04-05"},{"lineNumber":241,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Shows the list of classes user is taking for that module and their lesson type,day,timing and frequency","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u003e\u003e listmod cs2113","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"These are your classes for Module CS2113: ","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":246,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Lecture 1","lastModifiedDate":"2023-04-05"},{"lineNumber":247,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"   Friday 1600 - 1800 [Weekly]","lastModifiedDate":"2023-04-05"},{"lineNumber":248,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Tutorial 13","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"   Friday 1300 - 1400 [Weeks: 3-13]","lastModifiedDate":"2023-04-05"},{"lineNumber":250,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":252,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"T-Wan-Lin"},"content":"### `addmod` - Adding a module","lastModifiedDate":"2023-03-17"},{"lineNumber":254,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":255,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a module to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":256,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":257,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `addmod MODULE_CODE`","lastModifiedDate":"2023-03-17"},{"lineNumber":258,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `MODULE_CODE` can be either uppercase or lowercase. ","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":260,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e addmod cs2113","lastModifiedDate":"2023-03-17"},{"lineNumber":261,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this module:","lastModifiedDate":"2023-03-17"},{"lineNumber":262,"author":{"gitId":"T-Wan-Lin"},"content":"  CS2113: Software Engineering \u0026 Object-Oriented Programming","lastModifiedDate":"2023-03-17"},{"lineNumber":263,"author":{"gitId":"honglinshang"},"content":"Total modular credits you have in this semester: 12","lastModifiedDate":"2023-04-01"},{"lineNumber":264,"author":{"gitId":"honglinshang"},"content":"Enter \"addmod CS2113 -[FLAG] [LESSON NUMBER]\" to add lessons for this module.","lastModifiedDate":"2023-04-01"},{"lineNumber":265,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the lesson types for this module:","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"honglinshang"},"content":"Lecture (-lec)","lastModifiedDate":"2023-04-01"},{"lineNumber":267,"author":{"gitId":"honglinshang"},"content":"Tutorial (-tut)","lastModifiedDate":"2023-04-01"},{"lineNumber":268,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":269,"author":{"gitId":"T-Wan-Lin"},"content":"#### `addmod` flags","lastModifiedDate":"2023-03-18"},{"lineNumber":270,"author":{"gitId":"T-Wan-Lin"},"content":"There are many lesson options and types, the below is a list of all the flags and their respective lesson types.","lastModifiedDate":"2023-03-18"},{"lineNumber":271,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":272,"author":{"gitId":"T-Wan-Lin"},"content":"-lec        LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":273,"author":{"gitId":"T-Wan-Lin"},"content":"-plec       PACKAGED LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":274,"author":{"gitId":"T-Wan-Lin"},"content":"-st         SECTIONAL TEACHING","lastModifiedDate":"2023-03-18"},{"lineNumber":275,"author":{"gitId":"T-Wan-Lin"},"content":"-dlec       DESIGN LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":276,"author":{"gitId":"T-Wan-Lin"},"content":"-tut        TUTORIAL","lastModifiedDate":"2023-03-18"},{"lineNumber":277,"author":{"gitId":"T-Wan-Lin"},"content":"-ptut       PACKAGED TUTORIAL","lastModifiedDate":"2023-03-18"},{"lineNumber":278,"author":{"gitId":"T-Wan-Lin"},"content":"-rcit       RECITATION","lastModifiedDate":"2023-03-18"},{"lineNumber":279,"author":{"gitId":"T-Wan-Lin"},"content":"-lab        LABORATORY","lastModifiedDate":"2023-03-18"},{"lineNumber":280,"author":{"gitId":"T-Wan-Lin"},"content":"-ws         WORKSHOP","lastModifiedDate":"2023-03-18"},{"lineNumber":281,"author":{"gitId":"T-Wan-Lin"},"content":"-smc        SEMINAR STYLE MODULE CLASS","lastModifiedDate":"2023-03-18"},{"lineNumber":282,"author":{"gitId":"T-Wan-Lin"},"content":"-mp         MINI PROJECT","lastModifiedDate":"2023-03-18"},{"lineNumber":283,"author":{"gitId":"T-Wan-Lin"},"content":"-tt2        TUTORIAL TYPE 2","lastModifiedDate":"2023-03-18"},{"lineNumber":284,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":285,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":286,"author":{"gitId":"T-Wan-Lin"},"content":"To add a lesson, use the following format:","lastModifiedDate":"2023-03-18"},{"lineNumber":287,"author":{"gitId":"honglinshang"},"content":"`addmod MODULE_CODE -FLAG LESSON_NUMBER`","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":289,"author":{"gitId":"T-Wan-Lin"},"content":"Example:","lastModifiedDate":"2023-03-18"},{"lineNumber":290,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":291,"author":{"gitId":"T-Wan-Lin"},"content":"addmod CS1010 -st 1","lastModifiedDate":"2023-03-18"},{"lineNumber":292,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":293,"author":{"gitId":"T-Wan-Lin"},"content":"This will add the first section teaching lesson of CS1010 to your module list.","lastModifiedDate":"2023-03-18"},{"lineNumber":294,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If this lesson clashes with any of your other lessons a warning message will be displayed but you will still be able to add it.","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":296,"author":{"gitId":"T-Wan-Lin"},"content":"### `delmod` - Deleting a module","lastModifiedDate":"2023-03-17"},{"lineNumber":297,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":298,"author":{"gitId":"honglinshang"},"content":"Removes a module from Apollo. Can be done using either IDX or MODULE_CODE. ","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"irving11119"},"content":"#### `delmod` IDX","lastModifiedDate":"2023-03-22"},{"lineNumber":301,"author":{"gitId":"honglinshang"},"content":"\u003e Note: `IDX` can be obtained by using `listmod` to find the module\u0027s index.   ","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"honglinshang"},"content":"\u003e We assume that each user will take no more than the number of mods available in the current semester. ","lastModifiedDate":"2023-04-02"},{"lineNumber":303,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":304,"author":{"gitId":"honglinshang"},"content":"Format: `delmod IDX`","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":306,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":307,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e delmod 1","lastModifiedDate":"2023-03-17"},{"lineNumber":308,"author":{"gitId":"T-Wan-Lin"},"content":"Got it, removed CS2113 from your Module list.","lastModifiedDate":"2023-03-17"},{"lineNumber":309,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":310,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":311,"author":{"gitId":"irving11119"},"content":"#### `delmod` MODULE_CODE","lastModifiedDate":"2023-03-22"},{"lineNumber":312,"author":{"gitId":"irving11119"},"content":"Format: `delmod MODULE_CODE`","lastModifiedDate":"2023-03-22"},{"lineNumber":313,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":315,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e delmod dtk1234","lastModifiedDate":"2023-03-25"},{"lineNumber":316,"author":{"gitId":"T-Wan-Lin"},"content":"Got it, removed DTK1234 from your Module list.","lastModifiedDate":"2023-03-25"},{"lineNumber":317,"author":{"gitId":"T-Wan-Lin"},"content":"Total modular credits you have in this semester: 8","lastModifiedDate":"2023-03-25"},{"lineNumber":318,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":319,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":320,"author":{"gitId":"irving11119"},"content":"#### `delmod` flags","lastModifiedDate":"2023-03-22"},{"lineNumber":321,"author":{"gitId":"irving11119"},"content":"The lesson types and their corresponding guide are the same as `addmod` flags.","lastModifiedDate":"2023-03-22"},{"lineNumber":322,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":323,"author":{"gitId":"irving11119"},"content":"To delete a lesson, use the following format:","lastModifiedDate":"2023-03-22"},{"lineNumber":324,"author":{"gitId":"honglinshang"},"content":"`delmod MODULE_CODE -FLAG LESSON NUMBER`","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":326,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":327,"author":{"gitId":"irving11119"},"content":"\u003e\u003e delmod CS1010 -st 1","lastModifiedDate":"2023-03-22"},{"lineNumber":328,"author":{"gitId":"irving11119"},"content":"Deleting lessons for module: CS1010","lastModifiedDate":"2023-03-22"},{"lineNumber":329,"author":{"gitId":"irving11119"},"content":"Lessons deleted: SECTIONAL TEACHING - 1","lastModifiedDate":"2023-03-22"},{"lineNumber":330,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-22"},{"lineNumber":331,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":332,"author":{"gitId":"yixuann02"},"content":"### `showmod` - Show information of a module","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":334,"author":{"gitId":"yixuann02"},"content":"Shows the information of a module.","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `showmod MODULE_CODE`","lastModifiedDate":"2023-03-25"},{"lineNumber":336,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":337,"author":{"gitId":"yixuann02"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":338,"author":{"gitId":"yixuann02"},"content":"\u003e\u003e showmod cs1231","lastModifiedDate":"2023-03-23"},{"lineNumber":339,"author":{"gitId":"yixuann02"},"content":"Here are the lesson types for this module:","lastModifiedDate":"2023-03-23"},{"lineNumber":340,"author":{"gitId":"yixuann02"},"content":"Sectional Teaching (-st)","lastModifiedDate":"2023-03-23"},{"lineNumber":341,"author":{"gitId":"yixuann02"},"content":"Tutorial (-tut)","lastModifiedDate":"2023-03-23"},{"lineNumber":342,"author":{"gitId":"yixuann02"},"content":"Number of MC: 4","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"yixuann02"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"T-Wan-Lin"},"content":"#### `showmod` flags","lastModifiedDate":"2023-03-25"},{"lineNumber":345,"author":{"gitId":"T-Wan-Lin"},"content":"The lesson types and their corresponding guide are the same as `addmod` flags.","lastModifiedDate":"2023-03-25"},{"lineNumber":346,"author":{"gitId":"T-Wan-Lin"},"content":"To show the information on a lesson, use the following format:","lastModifiedDate":"2023-03-25"},{"lineNumber":347,"author":{"gitId":"T-Wan-Lin"},"content":"`showmod MODULE_CODE -FLAG`","lastModifiedDate":"2023-03-25"},{"lineNumber":348,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":349,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":350,"author":{"gitId":"irving11119"},"content":"\u003e\u003e showmod CS1010 -st","lastModifiedDate":"2023-03-25"},{"lineNumber":351,"author":{"gitId":"irving11119"},"content":"Here are all available lessons of type: SECTIONAL_TEACHING for CS1010:","lastModifiedDate":"2023-03-25"},{"lineNumber":352,"author":{"gitId":"irving11119"},"content":"Class Number: 1","lastModifiedDate":"2023-03-25"},{"lineNumber":353,"author":{"gitId":"irving11119"},"content":"   Monday 1200 - 1400","lastModifiedDate":"2023-03-25"},{"lineNumber":354,"author":{"gitId":"irving11119"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":355,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":356,"author":{"gitId":"irving11119"},"content":"The ordering of lessons in the list are sorted as follows:","lastModifiedDate":"2023-03-25"},{"lineNumber":357,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":358,"author":{"gitId":"irving11119"},"content":"1. Lesson Type","lastModifiedDate":"2023-03-25"},{"lineNumber":359,"author":{"gitId":"irving11119"},"content":"2. Lesson Number (lexicographically)","lastModifiedDate":"2023-03-25"},{"lineNumber":360,"author":{"gitId":"irving11119"},"content":"3. Lesson Day and time","lastModifiedDate":"2023-03-25"},{"lineNumber":361,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":362,"author":{"gitId":"T-Wan-Lin"},"content":"## *Utility Commands*","lastModifiedDate":"2023-04-04"},{"lineNumber":363,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"honglinshang"},"content":"### `help` - Viewing help","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"honglinshang"},"content":"Shows a menu of commands available in Apollo and their usage, as well as their required format/parameters.","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"honglinshang"},"content":"Format: `help`","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"T-Wan-Lin"},"content":"#### `help` for specific commands","lastModifiedDate":"2023-04-03"},{"lineNumber":371,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":372,"author":{"gitId":"T-Wan-Lin"},"content":"To see a shorter help menu for a specific command instead of the longer help command or to find out more about a command, ","lastModifiedDate":"2023-04-04"},{"lineNumber":373,"author":{"gitId":"T-Wan-Lin"},"content":"you can do so by typing `help COMMAND`.","lastModifiedDate":"2023-04-03"},{"lineNumber":374,"author":{"gitId":"T-Wan-Lin"},"content":"The below is a list of commands that you can use with `help`.","lastModifiedDate":"2023-04-03"},{"lineNumber":375,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":376,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `help COMMAND`","lastModifiedDate":"2023-04-03"},{"lineNumber":377,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":378,"author":{"gitId":"T-Wan-Lin"},"content":"|         Command         |                          Help/Information Message contains...                           |","lastModifiedDate":"2023-04-03"},{"lineNumber":379,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|:-----------------------:|:---------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-04-05"},{"lineNumber":380,"author":{"gitId":"T-Wan-Lin"},"content":"|         `list`          |                      information and format for list tasks command                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":381,"author":{"gitId":"T-Wan-Lin"},"content":"|         `todo`          |                                 format for todo command                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":382,"author":{"gitId":"T-Wan-Lin"},"content":"|       `deadline`        |                               format for deadline command                               |","lastModifiedDate":"2023-04-03"},{"lineNumber":383,"author":{"gitId":"T-Wan-Lin"},"content":"|         `event`         |                                format for event command                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":384,"author":{"gitId":"T-Wan-Lin"},"content":"|         `mark`          |                                 format for mark command                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":385,"author":{"gitId":"T-Wan-Lin"},"content":"|        `unmark`         |                                format for unmark command                                |","lastModifiedDate":"2023-04-03"},{"lineNumber":386,"author":{"gitId":"T-Wan-Lin"},"content":"|        `delete`         |                             format for delete task command                              |","lastModifiedDate":"2023-04-03"},{"lineNumber":387,"author":{"gitId":"T-Wan-Lin"},"content":"|         `find`          |                     format for finding matching tasks with keyword                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":388,"author":{"gitId":"T-Wan-Lin"},"content":"|         `date`          |                           format for finding tasks with date                            |","lastModifiedDate":"2023-04-03"},{"lineNumber":389,"author":{"gitId":"T-Wan-Lin"},"content":"|        `listmod`        |                     information and format for list module command                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":390,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| `listmod [MODULE_CODE]` |                 information and format for list specific module command                 |","lastModifiedDate":"2023-04-05"},{"lineNumber":391,"author":{"gitId":"T-Wan-Lin"},"content":"|        `addmod`         | information and format of adding modules and module lessons commands, with flag options |","lastModifiedDate":"2023-04-03"},{"lineNumber":392,"author":{"gitId":"T-Wan-Lin"},"content":"|        `delmod`         |       information and format of delete module command options, with flag options        |","lastModifiedDate":"2023-04-03"},{"lineNumber":393,"author":{"gitId":"T-Wan-Lin"},"content":"|        `showmod`        |                  information and format of show module command options                  |","lastModifiedDate":"2023-04-03"},{"lineNumber":394,"author":{"gitId":"T-Wan-Lin"},"content":"|          `bye`          |                         information and format for bye command                          |","lastModifiedDate":"2023-04-03"},{"lineNumber":395,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":396,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `help COMMAND`","lastModifiedDate":"2023-04-03"},{"lineNumber":397,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":398,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":399,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e help showmod","lastModifiedDate":"2023-04-03"},{"lineNumber":400,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":401,"author":{"gitId":"T-Wan-Lin"},"content":"Shows the information of a module, including Modular Credits, lesson types, lesson numbers and times.","lastModifiedDate":"2023-04-03"},{"lineNumber":402,"author":{"gitId":"T-Wan-Lin"},"content":"Format: showmod MODULE_CODE","lastModifiedDate":"2023-04-03"},{"lineNumber":403,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":404,"author":{"gitId":"T-Wan-Lin"},"content":"If you would like to view timing information on a specific lesson type of a module, you can use flags.","lastModifiedDate":"2023-04-03"},{"lineNumber":405,"author":{"gitId":"T-Wan-Lin"},"content":"Format: showmod MODULE_CODE -FLAG","lastModifiedDate":"2023-04-03"},{"lineNumber":406,"author":{"gitId":"T-Wan-Lin"},"content":"Example: showmod CS1010 -st","lastModifiedDate":"2023-04-03"},{"lineNumber":407,"author":{"gitId":"T-Wan-Lin"},"content":"NOTE: Different modules have different lesson types.","lastModifiedDate":"2023-04-03"},{"lineNumber":408,"author":{"gitId":"T-Wan-Lin"},"content":"It is recomended to run `showmod MODULE_CODE` to see the lesson types available for that module.","lastModifiedDate":"2023-04-03"},{"lineNumber":409,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":410,"author":{"gitId":"T-Wan-Lin"},"content":"There are -FLAGS for the various lessons options per module:","lastModifiedDate":"2023-04-03"},{"lineNumber":411,"author":{"gitId":"T-Wan-Lin"},"content":"-lec\t\t\tLECTURE","lastModifiedDate":"2023-04-03"},{"lineNumber":412,"author":{"gitId":"T-Wan-Lin"},"content":"-plec\t\t\tPACKAGED LECTURE","lastModifiedDate":"2023-04-03"},{"lineNumber":413,"author":{"gitId":"T-Wan-Lin"},"content":"-st \t\t\tSECTIONAL TEACHING","lastModifiedDate":"2023-04-03"},{"lineNumber":414,"author":{"gitId":"T-Wan-Lin"},"content":"-dlec\t\t\tDESIGN LECTURE","lastModifiedDate":"2023-04-03"},{"lineNumber":415,"author":{"gitId":"T-Wan-Lin"},"content":"-tut\t\t\tTUTORIAL","lastModifiedDate":"2023-04-03"},{"lineNumber":416,"author":{"gitId":"T-Wan-Lin"},"content":"-ptut\t\t\tPACKAGED TUTORIAL","lastModifiedDate":"2023-04-03"},{"lineNumber":417,"author":{"gitId":"T-Wan-Lin"},"content":"-rcit\t\t\tRECITATION","lastModifiedDate":"2023-04-03"},{"lineNumber":418,"author":{"gitId":"T-Wan-Lin"},"content":"-lab\t\t\tLABORATORY","lastModifiedDate":"2023-04-03"},{"lineNumber":419,"author":{"gitId":"T-Wan-Lin"},"content":"-ws \t\t\tWORKSHOP","lastModifiedDate":"2023-04-03"},{"lineNumber":420,"author":{"gitId":"T-Wan-Lin"},"content":"-smc\t\t\tSEMINAR STYLE MODULE CLASS","lastModifiedDate":"2023-04-03"},{"lineNumber":421,"author":{"gitId":"T-Wan-Lin"},"content":"-mp \t\t\tMINI PROJECT","lastModifiedDate":"2023-04-03"},{"lineNumber":422,"author":{"gitId":"T-Wan-Lin"},"content":"-tt2\t\t\tTUTORIAL TYPE 2","lastModifiedDate":"2023-04-03"},{"lineNumber":423,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":424,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":425,"author":{"gitId":"honglinshang"},"content":"### `week` - Viewing weekly schedule","lastModifiedDate":"2023-03-20"},{"lineNumber":426,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":427,"author":{"gitId":"honglinshang"},"content":"Shows a list of all lessons and tasks occurring during the current week (Mon to Sun).   ","lastModifiedDate":"2023-03-24"},{"lineNumber":428,"author":{"gitId":"honglinshang"},"content":"Format: `week`","lastModifiedDate":"2023-03-20"},{"lineNumber":429,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":430,"author":{"gitId":"T-Wan-Lin"},"content":"### `bye` - Exiting the program","lastModifiedDate":"2023-03-17"},{"lineNumber":431,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":432,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `exit`","lastModifiedDate":"2023-03-17"},{"lineNumber":433,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":434,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":435,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e bye ","lastModifiedDate":"2023-03-17"},{"lineNumber":436,"author":{"gitId":"T-Wan-Lin"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-17"},{"lineNumber":437,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":439,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":440,"author":{"gitId":"honglinshang"},"content":"## *Loading and saving of data*","lastModifiedDate":"2023-03-24"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":442,"author":{"gitId":"T-Wan-Lin"},"content":"- Apollo automatically loads up your todo and module lists on start-up.","lastModifiedDate":"2023-04-04"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":444,"author":{"gitId":"T-Wan-Lin"},"content":"- After any command that changes the data, Apollo will save the changes into your hard disk automatically.","lastModifiedDate":"2023-04-04"},{"lineNumber":445,"author":{"gitId":"T-Wan-Lin"},"content":"  No need to save manually!","lastModifiedDate":"2023-03-17"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":447,"author":{"gitId":"T-Wan-Lin"},"content":"- The save file for your tasks is located at save.txt within the *home folder* for Apollo.","lastModifiedDate":"2023-04-04"},{"lineNumber":448,"author":{"gitId":"T-Wan-Lin"},"content":"- The save file for your modules is located at moduleData.txt within the *home folder* for Apollo.","lastModifiedDate":"2023-04-04"},{"lineNumber":449,"author":{"gitId":"T-Wan-Lin"},"content":"- If either file is corrupted or has errors, Apollo will show you a warning before the welcome message.","lastModifiedDate":"2023-04-04"},{"lineNumber":450,"author":{"gitId":"T-Wan-Lin"},"content":"Example message when save.txt has errors:","lastModifiedDate":"2023-04-04"},{"lineNumber":451,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"T-Wan-Lin"},"content":"Module Data loaded","lastModifiedDate":"2023-04-04"},{"lineNumber":453,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-04"},{"lineNumber":454,"author":{"gitId":"T-Wan-Lin"},"content":"There is an error in save.txt at line 1","lastModifiedDate":"2023-04-04"},{"lineNumber":455,"author":{"gitId":"T-Wan-Lin"},"content":"Task 1 has been excluded. You can edit the save file at:","lastModifiedDate":"2023-04-04"},{"lineNumber":456,"author":{"gitId":"T-Wan-Lin"},"content":"save.txt","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-04"},{"lineNumber":458,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-04"},{"lineNumber":459,"author":{"gitId":"T-Wan-Lin"},"content":"Hello from","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"T-Wan-Lin"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-04-04"},{"lineNumber":461,"author":{"gitId":"T-Wan-Lin"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-04-04"},{"lineNumber":462,"author":{"gitId":"T-Wan-Lin"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-04-04"},{"lineNumber":463,"author":{"gitId":"T-Wan-Lin"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-04-04"},{"lineNumber":464,"author":{"gitId":"T-Wan-Lin"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-04-04"},{"lineNumber":465,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":466,"author":{"gitId":"T-Wan-Lin"},"content":"Your personal task and timetable manager!","lastModifiedDate":"2023-04-04"},{"lineNumber":467,"author":{"gitId":"T-Wan-Lin"},"content":"Enter \"help\" to see a list of commands.","lastModifiedDate":"2023-04-04"},{"lineNumber":468,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-04-04"},{"lineNumber":469,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-04-04"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"irving11119":31,"honglinshang":54,"yixuann02":12,"T-Wan-Lin":342,"PoobalanAatmikaLakshmi":21,"-":14}},{"path":"docs/team/honglinshang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"# Lin Shang - Project Portfolio Page","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"## Overview","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"- Author of original code that tp was built off of","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"- [My code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dhonglinshang\u0026breakdown\u003dtrue)    ","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"#### Enhancements Implemented","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"- Making TaskList, ModuleList extend ArrayList for better OOP","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"- Create week command (Shows user their weekly schedule according to the current date)","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"- Add clash warning for deadlines with other tasks and lessons","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"- JUnit tests with full branch coverage for ToDo, Deadline, Event","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"- JUnit tests for Add, Help, Exit Commands, Parser","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"- Patches, bug fixes","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"- Original UG from Duke","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"  - Includes Duke\u0027s commands (help, list, add tasks, mark/unmark tasks, delete tasks, find with keyword/date)","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"- Week Command","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"- Add Task","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"- View Week","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"- [PRs reviewed](https://github.com/AY2223S2-CS2113-T13-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Ahonglinshang+)","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"- Most instances of helping team members were done offline during our weekly meetings. ","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"honglinshang":26}},{"path":"docs/team/irving11119.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Irving - Project Portfolio Page","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"- [My code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dirving\u0026sort\u003dtotalCommits%20dsc\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dirving11119\u0026tabRepo\u003dAY2223S2-CS2113-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"#### Enhancements Implemented","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"- Added the ability to add modules to the module list and add classes to timetable","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"- Added the ability to delete modules by index and delete classes from timetable","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"- Added the ability to show class information for a module","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"- Added backend data integration with NUSMods API","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"- Contributed to JUnit tests with full branch coverage for AddModuleCommand, DeleteModuleCommand, AddClassCommand, DeleteClassCommand, ShowModuleCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"- Added/Elaborated on the following sections to the UG:","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"  - Adding a module","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"  - Deleting a module","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"  - Adding a class","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"  - Deleting a class","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"  - Showing a module","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"- Added/Elaborated on the following classes in the DG:","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"  - AddModuleCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"  - ListModuleCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"- Set up GitHub Team Org and Repository","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"- Set up issue tracker and milestones","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"- Assisted in maintaining the issue tracker","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"- Assisted in release management (v2.0)","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"- Incorporated external library (GSON) into project","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"- Scraped NUSMods API for module information using Python script","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"- [PRs reviewed](https://github.com/AY2223S2-CS2113-T13-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Airving11119+)","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"irving11119":28,"T-Wan-Lin":1,"-":5}},{"path":"docs/team/poobalanaatmikalakshmi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"# PoobalanAatmikaLakshmi - Project Portfolio Page","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- ### Summary of Contributions","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"-[My code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dPoobalanAatmikaLakshmi\u0026tabRepo\u003dAY2223S2-CS2113-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Enhancements Implemented","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Created classes for specific help for each of the commands in the task commands section of user guide ","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Modified parser to add specific help commands ","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Set up logger for help command class ","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Updated error message for AddCommand class particularly for the event-lesson clash","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Added functionality to handle duplicates in storage class","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Implemented code to detect events clashing with other events ","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Added code to detect duplicate modules in moduleList and its exception ","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Added some JUnit tests for Parser class ","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Added Junit tests for task command portion of help command class","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Patches ","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Updated user guide with information about clashes between event/deadline/modules ","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Updated user guide on listmod list module with lessons command ","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Delete Module ","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- UML diagrams for DateCommand, FindCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- Helped maintain issue tracker ","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"- [PRs Reviewed](https://github.com/AY2223S2-CS2113-T13-4/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3A%40me)","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":25,"-":5}},{"path":"docs/team/t-wan-lin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Wan Lin - Project Portfolio Page","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"## Overview","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"- [Breakdown of Code Contribution](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dwan-lin\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dT-Wan-Lin\u0026zR\u003dAY2223S2-CS2113-T13-4%2Ftp%5Bmaster%5D\u0026zACS\u003d109.1875\u0026zS\u003d2023-02-17\u0026zFS\u003dwan-lin\u0026zU\u003d2023-04-03\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"### Enhancements Implemented","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"- Sorting of tasklist by type and then date within each task subtype","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"- Created specific help commands for each command","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"- Sorting of module list according to EduRec standards","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"- Display of total modular credits taken by user","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"- Provide suggestion for deadline format if user insinuates deadline task in todo task","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"- Junit Tests for Parser, ModifyCommand, DateCommand, FindCommand, AddModuleCommand and Ui.","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"- Patches ","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"- Bug fixes","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"### Contributions to the UG","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"- Created framework for UG","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"- Delete task","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"- Unmark Task","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"- Mark Task","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"- List Tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"### Contributions to the DG","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"- Delete task","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"- Unmark Task","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"- Mark Task","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"- [PRs Reviewed](https://github.com/AY2223S2-CS2113-T13-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3At-wan-lin)","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"- [Issues Authored](https://github.com/AY2223S2-CS2113-T13-4/tp/issues?q\u003dis%3Aissue+author%3A%40me+is%3Aclosed)","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"- Created initial spreadsheet of user stories and use cases","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"- Most instances of helping team members were done offline during our weekly meetings.","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":34}},{"path":"docs/team/yixuann02.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"# Yi Xuan - Project Portfolio Page","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"## Overview","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"- [My code contributions](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d13-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dyixuann02\u0026tabRepo\u003dAY2223S2-CS2113-T13-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"#### Enhancements Implemented","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"- Added the ability to show class information for a module","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"- Added the ability to list the module list from timetable","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"- Added the ability to list specific module and classes from module list","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"- JUnit tests","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"- Patches, bug fixes","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"#### Contributions to the UG","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"- Added/Elaborated on the following sections to the UG:","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"    - Listing the module list","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"    - Listing a module and class from module list","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"    - Showing a module information","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"    - Showing a module class information","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"#### Contributions to the DG","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"- Added/Elaborated on the following classes in the DG:","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"  - ShowModuleCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"  - ListModuleWithLessonCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"  - FindCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"  - ListCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"- Assisted in maintaining the issue tracker","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"- Assisted group mates with their tasks","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"- [PRs reviewed](https://github.com/AY2223S2-CS2113-T13-4/tp/pulls?q\u003dis%3Apr+is%3Aopen+reviewed-by%3Ayixuann02)","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"yixuann02":33}},{"path":"docs/uml-source/AddCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"skinparam maxMessageSize 150","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"title AddCommand (for Tasks)","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"actor User","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"participant \":AddCommand\" as add","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"participant \":Event\" as Event","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"participant \":TaskList\" as TaskList","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"participant \":Calendar\" as Calendar","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"User -\u003e Apollo : \"event concert /from 2023-06-06T20:00 /to 2023-06-06T22:00\"","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"activate Apollo","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"activate Parser","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"Parser -\u003e add** : AddCommand()","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"add++","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"add -\u003e add ++ : setUpLogger()","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"add--","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"Apollo -\u003e add : execute()","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"Apollo --","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"activate add","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"add -\u003e add++ : addTask()","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"add -\u003e Event**","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"Event++","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"add -\u003e add++ : isClashingEvent()","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"TaskList --\u003e add","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"add--","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"alt Event clashes with Task","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"add -\u003e Ui : printClashingEventMessage()","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"end","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"add -\u003e add++ : warnEventModuleClash()","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"Calendar --\u003e add","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"alt Event clashes with Lesson","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"add -\u003e Ui : printClashingEventModuleMessage()","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"end","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"add--","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"add -\u003e TaskList++ : add()","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"add--","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"add \u003c-- TaskList--","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"add -\u003e Ui : printAddMessage()","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"add -\u003e Storage ++ : updateTask()","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"destroy add","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"honglinshang":57}},{"path":"docs/uml-source/AddModule.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"title AddModuleCommand (Add Module)","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"actor User","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"participant \":AddModuleCommand\" as AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"participant \":ModuleList\" as ModuleList","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"participant \":Module\" as Module","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"User -\u003e Apollo : \"addmod CS2113\"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"activate Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"activate Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"Parser -\u003e AddModuleCommand** : AddModuleCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"activate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"AddModuleCommand -\u003e AddModuleCommand : setUpLogger()","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"activate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"AddModuleCommand -\u003e Module** : Module()","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"activate Module","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"Module --\u003e AddModuleCommand : module","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"deactivate Module","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"destroy Module","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"AddModuleCommand --\u003e Parser: new AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"Parser -\u003e AddModuleCommand : execute()","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"activate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"alt args.length \u003d\u003d 3","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    AddModuleCommand -\u003e AddModuleCommand : handleMultiCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    activate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    AddModuleCommand -\u003e Ui : printClassAddedMessage()","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"    activate Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    Ui --\u003e AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"else","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"    AddModuleCommand -\u003e ModuleList: add(module)","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"    activate ModuleList","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    ModuleList --\u003e AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    deactivate ModuleList","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"    AddModuleCommand -\u003e ModuleList : sortModuleList()","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"    activate ModuleList","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"    ModuleList --\u003e AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"    deactivate ModuleList","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"    AddModuleCommand -\u003e Ui : printModuleAddedMessage()","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    activate Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"    Ui --\u003e AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"end","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"destroy Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"AddModuleCommand --\u003e Parser : AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"destroy AddModuleCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"Parser --\u003e Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"deactivate Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"destroy Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"deactivate Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"irving11119":71}},{"path":"docs/uml-source/DateCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"title DateCommand (Find tasks by date)","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"actor User","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":DateCommand\" as Date","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":TaskList\" as TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Task\" as Task","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":LocalDate\" as LocalDate","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"User -\u003e Apollo : \"date 2023-03-30\"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Parser -\u003e  Date** : DateCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Date++","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Date -\u003e Date++ : setUpLogger()","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Date -\u003e LocalDate: parse(2023-03-30)","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate LocalDate","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"LocalDate --\u003e Date: date","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate LocalDate","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy LocalDate","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo -\u003e Date : execute()","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo --","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Date","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Date --\u003e TaskList : getTasksOnDate()","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"TaskList -\u003e TaskList++ : tasksOnDate \u003d new TaskList()","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"loop for each Task in TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    TaskList -\u003e Task: isOnDate()","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    activate Task","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    Task --\u003e TaskList :","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    deactivate Task","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    destroy Task","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    alt task occurs during date","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    TaskList -\u003e TaskList : add()","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    end","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"end","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"TaskList --\u003e Date : tasksOnDate","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Date -\u003e Ui : printDateList(tasksOnDate,date)","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Ui --\u003e Date","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy Date","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":64}},{"path":"docs/uml-source/FindCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"title FindCommand (Find tasks)","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"actor User","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":FindCommand\" as Find","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":TaskList\" as TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Task\" as Task","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"participant \":String\" as String","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"User -\u003e Apollo : \"find book\"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Parser -\u003e Find** : FindCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Find++","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Find -\u003e Find++ : setUpLogger()","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo -\u003e Find : execute()","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo --","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Find","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Find --\u003e TaskList : findTasks(\"book\")","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"TaskList -\u003e String : toLowerCase()","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate String","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"String --\u003e TaskList : \"book\"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate String","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy String","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"TaskList -\u003e Task : getdescription()","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Task","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Task --\u003e TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate Task","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"TaskList --\u003e Find: filteredTasks","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Find -\u003e Ui : printFoundList()","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"activate Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Ui --\u003e Find","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"deactivate Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"destroy Find","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":60}},{"path":"docs/uml-source/ListMod.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"title ListModuleCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"actor User","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"participant \":ListModuleCommand\" as ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"User -\u003e Apollo : \"listmod\"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"activate Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"activate Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"Parser -\u003e ListMod** : ListModuleCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"activate ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"ListMod -\u003e ListMod : setUpLogger()","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"activate ListMod","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"deactivate ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"ListMod -\u003e Parser: ListModuleCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"deactivate ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"Parser -\u003e ListMod : execute()","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"activate ListMod","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"ListMod -\u003e Ui : printModuleList()","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"Ui --\u003e ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"destroy Ui","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"ListMod --\u003e Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"deactivate ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"destroy ListMod","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"Parser --\u003e Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"deactivate Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"destroy Parser","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"deactivate Apollo","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"irving11119":44}},{"path":"docs/uml-source/ModifyCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"skinparam maxMessageSize 150","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"title ModifyCommand (Unmark Tasks)","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"actor User","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":ModifyCommand\" as modify","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":TaskList\" as TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"User -\u003e Apollo : \"Unmark 1\"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"activate Apollo","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"activate Parser","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"Parser -\u003e modify** : ModifyCommand()","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"modify++","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo -\u003e modify : execute()","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo--","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"activate modify","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"modify -\u003e modify++ : unmarkTask()","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"TaskList --\u003e modify","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"modify --","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"alt Task marked as complete previously","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"modify -\u003e TaskList++: get()","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"TaskList -\u003e TaskList ++ :setDone()","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"modify \u003c-- TaskList--","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"destroy TaskList","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"modify -\u003e Ui : ui.printMarkNotDone()","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"modify -\u003e Storage ++: updateTask()","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"destroy Storage","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"return","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"else Task marked as incomplete previously","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"modify -\u003e Ui : ui.printTaskHasBeenMarkedPreviously()","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"end","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"destroy modify","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"T-Wan-Lin":48}},{"path":"docs/uml-source/SystemArchitecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"skinparam maxMessageSize 150","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"skinparam wrapWidth 150","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"skinparam component {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"  BackgroundColor FloralWhite","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"  BorderColor Black","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"  ArrowColor Crimson","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"node \"Apollo (Application)\" {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"  [Apollo]","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"  [UI]","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"  [Parser]","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"  [Command]","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"  [Data Storage]","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"  [Resources]","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"actor NUS_Student","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"database NUSMods_API","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"folder \"local save files\" {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"    [save.txt]","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    [moduleData.txt]","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"[Apollo] --\u003e [UI]","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"[Apollo] --\u003e [Data Storage]","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"[Apollo] --\u003e [Parser]","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"[Apollo] --\u003e [Command]","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"NUS_Student \u003c-.-\u003e [UI]","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"[UI] --\u003e [Parser]","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"[Parser] --\u003e [Command]","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"[Command] --\u003e [UI]","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"[Command] --\u003e [Data Storage]","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"NUSMods_API -right-\u003e [Resources]","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"[Resources] -right-\u003e [Data Storage]","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"\"local save files\"\u003c--\u003e[Data Storage]","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"T-Wan-Lin":44}},{"path":"docs/uml-source/UnmarkCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"start","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":":User executes unmark command;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"if () then ([validformat])","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"  :Create new ModifyCommand Object;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"  :Execute ModifyCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"  :Iterate to corresponding index in TaskList;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"  if(done \u003d\u003d true) then (true)","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"    :Mark task as incomplete;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    :Set done to false;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    :Update TaskList;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    :Update Storage;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"    :Print success message;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"  else (false)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"    :Print message that task has never been marked as done;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    endif","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"else([invalidformat])","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    :Print error message;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"endif","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"stop","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"T-Wan-Lin":27}},{"path":"docs/uml-source/Week.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"title WeekCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"actor User","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"participant \":Apollo\" as Apollo","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"participant \":WeekCommand\" as week","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"participant \":DayTypeUtil\" as DayTypeUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"participant \":Calendar\" as Calendar","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"participant \":TaskList\" as TaskList","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"User -\u003e Apollo : \"week\"","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"activate Apollo","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"Apollo -\u003e Parser : getCommand()","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"activate Parser","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"Parser -\u003e week** : WeekCommand()","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"week++","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"return","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"Apollo -\u003e week : execute()","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"Apollo --","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"activate week","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"week -\u003e Ui : printWeek()","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"activate Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"loop 7 times","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    Ui -\u003e DayTypeUtil : determineDay()","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    activate DayTypeUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    return","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    destroy DayTypeUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    Ui -\u003e Calendar : get()","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    activate Calendar","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    Calendar --\u003e Ui : lessonsOnDay","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    destroy Calendar","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    alt lessonsOnDay.size() \u003e 0","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    Ui -\u003e Ui : printLessonsOnDay()","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    activate Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    end","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"    Ui -\u003e TaskList : getTasksOnDate()","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    activate TaskList","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    TaskList --\u003e Ui : tasksOnDay","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    destroy TaskList","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    alt tasksOnDay.size() \u003e 0","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    Ui -\u003e Ui : printTasksOnDay()","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    activate Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    deactivate Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    end","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"end","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"destroy Ui","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"destroy week","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"honglinshang":61}},{"path":"src/main/java/seedu/apollo/Apollo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":" * Main class for running Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"public class Apollo {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    public static final String FILE_PATH \u003d \"save.txt\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    private static final String MODULE_DATA_FILEPATH \u003d \"moduleData.txt\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    private static Storage storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    private static ModuleList moduleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    private static ModuleList moduleData;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"    private static Calendar calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * Initialises Ui, Storage, and TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * @param filePath Location of the local save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    public Apollo(String filePath, String moduleDataFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        storage \u003d new Storage(filePath, moduleDataFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        calendar \u003d new Calendar();","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            moduleData \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"            moduleList \u003d storage.loadModuleList(ui, moduleData, calendar);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     * Reads, executes, and prints outputs of user commands continually.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"     * Stops after ExitCommand is called.","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If there are issues with saving to the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"        assert (ui !\u003d null \u0026 storage !\u003d null \u0026 taskList !\u003d null \u0026 moduleData !\u003d null \u0026 moduleList !\u003d null) :","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"                \"Initialising Apollo\";","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"            ui.showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"            Command c \u003d Parser.getCommand(fullCommand, ui, taskList.size(), moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"                c.execute(taskList, ui, storage, moduleList, moduleData, calendar);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"                isExit \u003d c.isExit;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"            ui.showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"     * Initialises and runs Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"            new Apollo(FILE_PATH, MODULE_DATA_FILEPATH).run();","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        } catch (UnexpectedException unexpectedException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"            ui.printUnexpectedException(unexpectedException);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"irving11119":21,"honglinshang":59,"-":6}},{"path":"src/main/java/seedu/apollo/calendar/Calendar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.InvalidSaveFile;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.CalendarModule;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.utils.DayTypeUtil.determineDay;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":" * Calendar class that stores the modules user is taking in a 2D ArrayList.","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"public class Calendar extends ArrayList\u003cArrayList\u003cCalendarModule\u003e\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"     *  Constructor for Calendar.","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    public Calendar() {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        super(7);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"            this.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"     * Adds a module to the calendar.","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param module The module to be added.","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"     * @throws InvalidSaveFile If the module timetable is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"    public void addModule(Module module) throws InvalidSaveFile {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            for (Timetable timetable : module.getModuleTimetable()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"                CalendarModule calendarModule \u003d new CalendarModule(module.getCode(),","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"                        module.getTitle(), module.getModuleCredits());","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"                calendarModule.setSchedule(timetable);","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"                int index \u003d determineDay(calendarModule.getDay());","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"                if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"                    throw new InvalidSaveFile();","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"                this.get(index).add(calendarModule);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"                this.sortDayByTime(this.get(index));","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"            return;","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"     * Returns a list of modules for the day based on the week of the semester.","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"     * @param week The current week of the semester.","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"     * @param day The day of the week.","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"     * @return An array list of modules for the day.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cCalendarModule\u003e getModulesForDay(int week, int day) {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cCalendarModule\u003e calendarModules \u003d this.get(day);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cCalendarModule\u003e modulesForDay \u003d new ArrayList\u003c\u003e(calendarModules);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"        for (CalendarModule lesson : modulesForDay) {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"            if (!lesson.isCurrentWeek(week)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"                calendarModules.remove(lesson);","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"        return calendarModules;","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"     * Creates an empty calendar","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"    public void clearCalendar() {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"            this.get(i).clear();","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"     * Sorts the lessons in a day by start time and end time.","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"     * @param day The array list containing lessons for the day.","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"    private void sortDayByTime(ArrayList\u003cCalendarModule\u003e day){","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"        day.sort((CalendarModule lesson1, CalendarModule lesson2) -\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"            SimpleDateFormat format \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"            try {","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"                Date startTime1 \u003d format.parse(lesson1.getSchedule().getStartTime());","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"irving11119"},"content":"                Date endTime1 \u003d format.parse(lesson1.getSchedule().getEndTime());","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"                Date startTime2 \u003d format.parse(lesson2.getSchedule().getStartTime());","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"                Date endTime2 \u003d format.parse(lesson2.getSchedule().getEndTime());","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"                return this.determineSort(startTime1, endTime1, startTime2, endTime2);","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"                return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"irving11119"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"irving11119"},"content":"     * Determines the order of the lessons based on start time and end time.","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"irving11119"},"content":"     * @param startTime1 The start time of the first lesson.","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"     * @param endTime1 The end time of the first lesson.","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"     * @param startTime2 The start time of the second lesson.","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"irving11119"},"content":"     * @param endTime2 The end time of the second lesson.","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"irving11119"},"content":"     * @return The order of the lessons.","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"irving11119"},"content":"    private int determineSort(Date startTime1, Date endTime1, Date startTime2, Date endTime2) {","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"irving11119"},"content":"        // if both lessons start at the same time","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"        if (startTime1.equals(startTime2)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"irving11119"},"content":"            // lesson2 ends first","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"irving11119"},"content":"            if (endTime1.after(endTime2)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"irving11119"},"content":"                return 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"                // lesson1 ends first","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"            } else if (endTime1.before(endTime2)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"                return -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"                // Both lessons end at the same time","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"irving11119"},"content":"                return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"        } else if (startTime1.after(startTime2)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"            return 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"            return -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"irving11119":131,"T-Wan-Lin":13}},{"path":"src/main/java/seedu/apollo/calendar/SemesterUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.calendar;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"public class SemesterUtils {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"    private static final LocalDate SEMESTER_START \u003d LocalDate.of(2023, 1, 9);","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"    private static final LocalDate SEMESTER_END \u003d LocalDate.of(2023, 5, 6);","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    private static final LocalDate RECESS_START \u003d LocalDate.of(2023, 2, 19);","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"    private static final LocalDate RECESS_END \u003d LocalDate.of(2023, 2, 27);","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"     * Returns the week number of the semester for a particular date.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"     * @param date The date to be checked.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"     * @return The week number of the semester.","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    public static int getWeekNumber(LocalDate date) {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"        int daysBetween;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"        int weekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        if (date.isBefore(SEMESTER_START) || date.isAfter(SEMESTER_END)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"            return 0;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        if (date.isBefore(RECESS_END) \u0026\u0026 date.isAfter(RECESS_START)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"            return -1;","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"        if (date.isAfter(RECESS_END) || date.isEqual(RECESS_END)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"            daysBetween \u003d (int) DAYS.between(RECESS_END, date);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"            weekNumber \u003d determineWeekNumber(daysBetween);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"            weekNumber +\u003d 6;","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"            daysBetween \u003d (int) DAYS.between(SEMESTER_START, date);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            weekNumber \u003d determineWeekNumber(daysBetween);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"        return weekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"     * Returns the calculated week number based on the day interval between two dates.","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"     * @param daysBetween The day interval between two dates.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"     * @return The calculated week number of the semester.","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"    private static int determineWeekNumber(int daysBetween) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        int weekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"        weekNumber \u003d daysBetween / 7 + 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"        return weekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"irving11119":59}},{"path":"src/main/java/seedu/apollo/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":" * Parent class of all types of Commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    public Boolean isExit \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @param taskList TaskList containing all currently saved tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints output messages to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @param storage Updates the local save file if the TaskList is modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If something unexpected occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) throws UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    protected void setExit() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"     * Returns the LessonType of the command.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"     * @param arg Command to be checked.","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"     * @return LessonType of the command.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"     * @throws IllegalCommandException If the command is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"    protected LessonType getCommand(String arg) throws IllegalCommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"        switch (arg) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"        case \"-lec\":","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"            return LessonType.LECTURE;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"        case \"-plec\":","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_LECTURE;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"        case \"-st\":","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"            return LessonType.SECTIONAL_TEACHING;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"        case \"-dlec\":","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"            return LessonType.DESIGN_LECTURE;","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        case \"-tut\":","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"        case \"-ptut\":","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_TUTORIAL;","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"        case \"-rcit\":","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"            return LessonType.RECITATION;","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"        case \"-lab\":","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"            return LessonType.LABORATORY;","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        case \"-ws\":","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"            return LessonType.WORKSHOP;","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"        case \"-smc\":","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"            return LessonType.SEMINAR_STYLE_MODULE_CLASS;","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"        case \"-mp\":","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"            return LessonType.MINI_PROJECT;","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"        case \"-tt2\":","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL_TYPE_2;","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"        default:","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":47,"honglinshang":27}},{"path":"src/main/java/seedu/apollo/command/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.exception.module.DuplicateModuleException;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.LessonAddedException;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.InvalidSaveFile;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.CalendarModule;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.utils.DayTypeUtil.determineDay;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.utils.LessonTypeUtil.determineLessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"public class AddModuleCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddModuleCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    private Module module;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    private String[] args;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"     * Constructor for AddModuleCommand.","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"     * @param param The module code of the module to be added.","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"     * @param allModules The list of all modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"     * @throws InvalidModule If the module code is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    public AddModuleCommand(String param, ModuleList allModules) throws InvalidModule, IllegalCommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"        assert (param !\u003d null) : \"AddModuleCommand: Params should not be null!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"        assert (allModules !\u003d null) : \"AddModuleCommand: Module list should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        args \u003d param.split(\"\\\\s+\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"        if (args.length !\u003d 3 \u0026\u0026 args.length !\u003d 1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"        String moduleCode \u003d args[0];","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        Module toAdd \u003d allModules.findModule(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"        if (toAdd \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"            throw new InvalidModule();","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"        module \u003d new Module(toAdd.getCode(), toAdd.getTitle(), toAdd.getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for AddModuleCommand class.","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"irving11119"},"content":"     * Checks if the module is already in the module list.","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"     * @param moduleList The list of modules.","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"     * @param module The module to be checked.","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"     * @return True if the module is already in the list of modules.","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public boolean isAdded(ModuleList moduleList, Module module) {","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"        for (Module mod: moduleList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"            if (mod.getCode().equals(module.getCode())) {","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"irving11119"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"irving11119"},"content":"            if (args.length \u003d\u003d 3) {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"irving11119"},"content":"                handleMultiCommand(moduleList, allModules, args, ui, calendar);","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"irving11119"},"content":"                ui.printClassAddedMessage(args[0].toUpperCase(), getCommand(args[1]), args[2]);","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"irving11119"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"                if (isAdded(moduleList, module)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"irving11119"},"content":"                    throw new DuplicateModuleException();","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"                if (module !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"                    moduleList.add(module);","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"T-Wan-Lin"},"content":"                    moduleList.sortModules();","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"                    Module referenceModule \u003d allModules.findModule(module.getCode());","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"                    ui.printAddModuleMessage(module, moduleList, getLessonTypes(referenceModule));","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"            storage.updateModule(moduleList, calendar);","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"IO Exception\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        } catch (DuplicateModuleException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"            ui.printDuplicateModule(module);","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidLessonType();","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"irving11119"},"content":"        } catch (LessonAddedException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"irving11119"},"content":"            ui.printLessonExists();","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"irving11119"},"content":"        } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"     * Handles the case where the user wants to add a class to a module.","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"     * @param moduleList The list of modules.","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"     * @param allModules Module backend data.","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"     * @throws IllegalCommandException If the command is invalid.","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"     * @throws ClassNotFoundException If the lesson type is invalid.","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"     * @throws LessonAddedException If the lesson already exists.","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"    private void handleMultiCommand(ModuleList moduleList, ModuleList allModules, String[] args, Ui ui,","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"                                    Calendar calendar) throws IllegalCommandException, ClassNotFoundException,","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"            LessonAddedException {","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"        LessonType lessonType \u003d this.getCommand(args[1]);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"        Module searchModule \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"        for (Module module: allModules){","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"            if (module.getCode().equalsIgnoreCase(this.module.getCode())){","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"                searchModule \u003d module;","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"        if (this.isAdded(moduleList, module)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"irving11119"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"            for (Module module: moduleList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"                if (module.getCode().equals(this.module.getCode())){","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"                    this.module.setTimetable(module.getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"irving11119"},"content":"                    break;","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"irving11119"},"content":"                index++;","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"            module.setTimetable(moduleList.get(index).getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"            if (module.hasLessonType(lessonType)){","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"                throw new LessonAddedException();","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"irving11119"},"content":"            addTimetable(searchModule, lessonType, args[2], ui, calendar);","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"            moduleList.get(index).setTimetable(module.getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"            module.createNewTimeTable();","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"            addTimetable(searchModule, lessonType, args[2], ui, calendar);","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"irving11119"},"content":"            moduleList.add(module);","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":201,"author":{"gitId":"irving11119"},"content":"     * Adds the timetable to the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"irving11119"},"content":"     * @param searchModule The module to be searched.","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"irving11119"},"content":"     * @param lessonType The lesson type to be added.","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"irving11119"},"content":"     * @param args The arguments of the command.","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"irving11119"},"content":"     * @throws ClassNotFoundException If the lesson type is invalid.","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"irving11119"},"content":"    private void addTimetable(Module searchModule, LessonType lessonType, String args, Ui ui, Calendar calendar)","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"irving11119"},"content":"            throws ClassNotFoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"irving11119"},"content":"        Boolean isFound \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e listCopy \u003d new ArrayList\u003c\u003e(searchModule.getModuleTimetable());","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable: listCopy){","lastModifiedDate":"2023-04-01"},{"lineNumber":213,"author":{"gitId":"irving11119"},"content":"            LessonType searchLessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"            if (searchLessonType.equals(lessonType) \u0026\u0026 timetable.getClassNumber().equals(args)){","lastModifiedDate":"2023-04-03"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"                if (module.getModuleTimetable() \u003d\u003d null){","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"irving11119"},"content":"                    module.createNewTimeTable();","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"irving11119"},"content":"                module.getModuleTimetable().add(timetable);","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"irving11119"},"content":"                checkClashingLesson(calendar, timetable, ui);","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":222,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"irving11119"},"content":"        if (!isFound){","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"irving11119"},"content":"            throw new ClassNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"irving11119"},"content":"     * Returns the available lesson type of the module.","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"irving11119"},"content":"     * @param module The module being checked.","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"irving11119"},"content":"     * @return The lesson types available for this module.","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cLessonType\u003e getLessonTypes(Module module) {","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cLessonType\u003e lessonTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : module.getModuleTimetable()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"irving11119"},"content":"            LessonType lessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"irving11119"},"content":"            if (!lessonTypes.contains(lessonType) \u0026\u0026 lessonType !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"irving11119"},"content":"                lessonTypes.add(lessonType);","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"irving11119"},"content":"        return lessonTypes;","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"irving11119"},"content":"     * Checks if the lesson clashes with another lesson.","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"irving11119"},"content":"     * @param calendar The calendar of the user containing timetable information.","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"irving11119"},"content":"     * @param timetable The timetable of the lesson to be checked.","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"irving11119"},"content":"     * @param ui The ui of the user for message printing.","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"irving11119"},"content":"    private void checkClashingLesson(Calendar calendar, Timetable timetable, Ui ui) {","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"irving11119"},"content":"        String day \u003d timetable.getDay();","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"irving11119"},"content":"        int index \u003d determineDay(day);","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"irving11119"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"irving11119"},"content":"            return;","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cCalendarModule\u003e calendarModules \u003d calendar.get(index);","lastModifiedDate":"2023-04-04"},{"lineNumber":263,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":264,"author":{"gitId":"irving11119"},"content":"        if (calendarModules.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-04"},{"lineNumber":265,"author":{"gitId":"irving11119"},"content":"            return;","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"irving11119"},"content":"        for (CalendarModule lessonModule: calendarModules) {","lastModifiedDate":"2023-04-04"},{"lineNumber":269,"author":{"gitId":"irving11119"},"content":"            Timetable schedule \u003d lessonModule.getSchedule();","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"irving11119"},"content":"            if (isLessonClashing(schedule, timetable) \u0026\u0026 isSameWeek(schedule, timetable)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"irving11119"},"content":"                ui.printClashingLesson();","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"irving11119"},"content":"                break;","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"irving11119"},"content":"     * Checks if a lesson clashes with another lesson.","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"irving11119"},"content":"     * @param schedule The lesson to be checked.","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"irving11119"},"content":"     * @param timetable The lesson to be checked against.","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"irving11119"},"content":"     * @return True if the timetable clashes with another timetable.","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"irving11119"},"content":"    private boolean isLessonClashing(Timetable schedule, Timetable timetable) {","lastModifiedDate":"2023-04-01"},{"lineNumber":285,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"irving11119"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"HHmm\");","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"irving11119"},"content":"            Date start1 \u003d format.parse(schedule.getStartTime());","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"irving11119"},"content":"            Date start2 \u003d format.parse(timetable.getStartTime());","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"irving11119"},"content":"            Date end1 \u003d format.parse(schedule.getEndTime());","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"irving11119"},"content":"            Date end2 \u003d format.parse(timetable.getEndTime());","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"irving11119"},"content":"            if (start1.equals(start2) || end1.equals(end2)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"irving11119"},"content":"            if (start1.after(start2) \u0026\u0026 start1.before(end2)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"irving11119"},"content":"            if (start2.after(start1) \u0026\u0026 start2.before(end1)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"irving11119"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"irving11119"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":311,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":312,"author":{"gitId":"irving11119"},"content":"     * Checks if the two lessons occur in the same week.","lastModifiedDate":"2023-04-04"},{"lineNumber":313,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":314,"author":{"gitId":"irving11119"},"content":"     * @param timetable1 The timetable to be checked.","lastModifiedDate":"2023-04-04"},{"lineNumber":315,"author":{"gitId":"irving11119"},"content":"     * @param timetable2 The timetable to be checked against.","lastModifiedDate":"2023-04-04"},{"lineNumber":316,"author":{"gitId":"irving11119"},"content":"     * @return True if the timetable is in the same week.","lastModifiedDate":"2023-04-04"},{"lineNumber":317,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":318,"author":{"gitId":"irving11119"},"content":"    private boolean isSameWeek(Timetable timetable1, Timetable timetable2) {","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cInteger\u003e week1 \u003d timetable1.getWeeks();","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cInteger\u003e week2 \u003d timetable2.getWeeks();","lastModifiedDate":"2023-04-04"},{"lineNumber":322,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":323,"author":{"gitId":"irving11119"},"content":"        for (int weeks: week1) {","lastModifiedDate":"2023-04-04"},{"lineNumber":324,"author":{"gitId":"irving11119"},"content":"            if (week2.contains(weeks)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":325,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":326,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":327,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":328,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":329,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":330,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":331,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":332,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":333,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":285,"yixuann02":7,"honglinshang":3,"T-Wan-Lin":32,"PoobalanAatmikaLakshmi":6}},{"path":"src/main/java/seedu/apollo/command/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.ClassNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.InvalidSaveFile;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.ModuleNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.utils.LessonTypeUtil.determineLessonType;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * For {@code delmod} command.","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * Delete Module Command class that finds the module using moduleCode and removes it from the ModuleList","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"public class DeleteModuleCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteModuleCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    protected String[] args;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    public DeleteModuleCommand(String params) throws IllegalCommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        String[] args \u003d params.split(\"\\\\s+\");","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        if (args.length !\u003d 1 \u0026\u0026 args.length !\u003d 3) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"        this.args \u003d args;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"        this.setUpLogger();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar){","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"            if (args.length \u003d\u003d 3) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"                handleMultiCommand(moduleList, ui);","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"                // module code is the only argument","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"                String listParam \u003d args[0];","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"                String moduleCode;","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"                if (isInteger(listParam)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"                    int index \u003d Integer.parseInt(listParam);","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"                    if (index \u003e moduleList.size() || index \u003c 1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"                        throw new NumberFormatException();","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"                    }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"                    moduleCode \u003d moduleList.get(index - 1).getCode();","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"                    moduleList.remove(index - 1);","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"                } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"                    moduleCode \u003d listParam;","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"                    Module toDelete \u003d moduleList.findModule(listParam);","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"                    if (toDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"                        throw new ModuleNotFoundException();","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"                    }","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"                    moduleList.remove(toDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"                ui.printModuleDeleteMessage(moduleCode, moduleList);","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"            storage.updateModule(moduleList, calendar);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"        } catch (ModuleNotFoundException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"            ui.printUnsuccessfulModuleDelete(args[0]);","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printTotalModularCredits(moduleList);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"        } catch (IOException | InvalidSaveFile e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForModIdx(moduleList.size());","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"irving11119"},"content":"     * Checks if the string is an integer.","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"     * @param param String to be checked.","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"irving11119"},"content":"     * @return Boolean value of whether the string is an integer.","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"irving11119"},"content":"    private Boolean isInteger(String param) {","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"            Integer.parseInt(param);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"irving11119"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"irving11119"},"content":"        return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"irving11119"},"content":"     * Handles the deletion of a lesson from a module.","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"irving11119"},"content":"     * @param moduleList ModuleList to be deleted from.","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"     * @param ui Ui to print messages.","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"     * @throws ModuleNotFoundException If the module is not found.","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"    private void handleMultiCommand(ModuleList moduleList, Ui ui) throws ModuleNotFoundException {","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"        String moduleCode \u003d args[0];","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"irving11119"},"content":"        String command \u003d args[1];","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"        String lessonNumber \u003d args[2];","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"            LessonType lessonType \u003d getCommand(command);","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"            Module toDelete \u003d moduleList.findModule(moduleCode);","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"            if (toDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"                throw new ModuleNotFoundException();","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"            this.deleteTimetable(toDelete, lessonType, lessonNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"            ui.printModuleLessonDeleteMessage(moduleCode, lessonType, lessonNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"irving11119"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"irving11119"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"irving11119"},"content":"            ui.printClassNotAdded();","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"irving11119"},"content":"     * Deletes the lesson from the module.","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"     * @param module Module to be deleted from.","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"     * @param lessonType Type of lesson to be deleted.","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"     * @param lessonNumber Number of lesson to be deleted.","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"     * @throws ClassNotFoundException If the lesson is not found.","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"    private void deleteTimetable(Module module, LessonType lessonType, String lessonNumber)","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"            throws ClassNotFoundException {","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"        Boolean isFound \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"        if (module.getModuleTimetable() \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"            throw new ClassNotFoundException();","lastModifiedDate":"2023-04-01"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e copyList \u003d new ArrayList\u003c\u003e(module.getModuleTimetable());","lastModifiedDate":"2023-03-21"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"        //searches for lesson of specified type and number","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable :copyList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"            String classNumber \u003d timetable.getClassNumber();","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"            String type \u003d timetable.getLessonType();","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"            LessonType lessonType1 \u003d determineLessonType(type);","lastModifiedDate":"2023-03-21"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"irving11119"},"content":"            if (lessonType1 \u003d\u003d lessonType \u0026\u0026 classNumber.equals(lessonNumber)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"                module.getModuleTimetable().remove(timetable);","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"irving11119"},"content":"        // if the lesson is not found, throws an exception","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"irving11119"},"content":"        if (!isFound) {","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"            throw new ClassNotFoundException();","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":145,"honglinshang":4,"T-Wan-Lin":31,"PoobalanAatmikaLakshmi":11}},{"path":"src/main/java/seedu/apollo/command/module/ListModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"public class ListModuleCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListModuleCommand\");","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"    public ListModuleCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ListModuleCommand class.","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"        assert (moduleList !\u003d null) : \"ListModuleCommand: ModuleList should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        ui.printModuleList(moduleList);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":11,"yixuann02":49,"honglinshang":1}},{"path":"src/main/java/seedu/apollo/command/module/ListModuleWithLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.EmptyLessonTypesInTimetable;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.LessonTypeNotAddedException;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.LessonTypeNotInModuleException;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.ModuleNotAddedException;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"import static seedu.apollo.utils.LessonTypeUtil.determineLessonType;","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"public class ListModuleWithLessonCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListModuleCommand\");","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"    private String[] args;","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"    private Module module;","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"     * Constructor for ListModuleWithLessonCommand.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"     * @param params     The parameters the user passes into the command.","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"     * @param allModules The list of all modules.","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"     * @throws InvalidModule If the module code is invalid.","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"    public ListModuleWithLessonCommand(String params, ModuleList allModules) throws InvalidModule,","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"            IllegalCommandException {","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"        assert (params !\u003d null) : \"ListModuleWithLessonCommand: ModuleCode should not be null!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"        args \u003d params.split(\"\\\\s+\");","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"        if (args.length !\u003d 1 \u0026\u0026 args.length !\u003d 2) {","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"        String moduleCode \u003d args[0];","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"        Module checkMod \u003d allModules.findModule(moduleCode);","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"        if (checkMod \u003d\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"            throw new InvalidModule();","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"        module \u003d new Module(checkMod.getCode(), checkMod.getTitle(), checkMod.getModuleCredits());","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ListModuleWithLessonCommand class.","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"yixuann02"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"yixuann02"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"yixuann02"},"content":"            copyModuleListData(moduleList);","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"yixuann02"},"content":"            if (args.length \u003d\u003d 2) {","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"yixuann02"},"content":"                handleMultiCommand(ui, allModules);","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"yixuann02"},"content":"            } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"yixuann02"},"content":"                handleSingleCommand(ui);","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"        } catch (ModuleNotAddedException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"yixuann02"},"content":"            ui.printLessonNotInList(module.getCode());","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"yixuann02"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"yixuann02"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":114,"author":{"gitId":"yixuann02"},"content":"        } catch (LessonTypeNotAddedException e) {","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"yixuann02"},"content":"            ui.printLessonsNotAdded(module.getCode());","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"yixuann02"},"content":"        } catch (LessonTypeNotInModuleException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"yixuann02"},"content":"            ui.printLessonTypeNotInModule();","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"yixuann02"},"content":"        } catch (EmptyLessonTypesInTimetable e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"yixuann02"},"content":"            ui.printEmptyLessonTypeInModuleList();","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"yixuann02"},"content":"     * Handles the command when user wants to see the timetable added of a module.","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"yixuann02"},"content":"     * @param ui The Ui object to print the timetable.","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"yixuann02"},"content":"    private void handleSingleCommand(Ui ui) throws EmptyLessonTypesInTimetable {","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cLessonType\u003e checkLessonTypes \u003d getLessonTypes(module);","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"yixuann02"},"content":"        if (checkLessonTypes.isEmpty()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"yixuann02"},"content":"            throw new EmptyLessonTypesInTimetable();","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTimetable\u003e copyList \u003d new ArrayList\u003c\u003e(module.getModuleTimetable());","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTimetable\u003e parseList \u003d sortTimetable(copyList);","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"yixuann02"},"content":"        ui.printModuleListWithLesson(module, parseList);","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"yixuann02"},"content":"     * Copies the timetable information into the private module.","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"yixuann02"},"content":"     * @param moduleList The list of modules.","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"yixuann02"},"content":"     * @throws LessonTypeNotAddedException If a lesson type has not been added into module list.","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"yixuann02"},"content":"     * @throws ModuleNotAddedException If the lessons have not been added into module list.","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":146,"author":{"gitId":"yixuann02"},"content":"    private void copyModuleListData(ModuleList moduleList) throws LessonTypeNotAddedException,","lastModifiedDate":"2023-04-03"},{"lineNumber":147,"author":{"gitId":"yixuann02"},"content":"            ModuleNotAddedException {","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":149,"author":{"gitId":"yixuann02"},"content":"        if (!isInModuleList(moduleList, module)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"yixuann02"},"content":"            throw new ModuleNotAddedException();","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":152,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"yixuann02"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-04-03"},{"lineNumber":154,"author":{"gitId":"yixuann02"},"content":"        for (Module module1 : moduleList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":155,"author":{"gitId":"yixuann02"},"content":"            if (module1.getCode().equals(module.getCode())) {","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"yixuann02"},"content":"                module.setTimetable(module1.getModuleTimetable());","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"yixuann02"},"content":"                break;","lastModifiedDate":"2023-04-03"},{"lineNumber":158,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":159,"author":{"gitId":"yixuann02"},"content":"            index++;","lastModifiedDate":"2023-04-03"},{"lineNumber":160,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"yixuann02"},"content":"        module.setTimetable(moduleList.get(index).getModuleTimetable());","lastModifiedDate":"2023-04-03"},{"lineNumber":162,"author":{"gitId":"yixuann02"},"content":"        if (module.getModuleTimetable() \u003d\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"yixuann02"},"content":"            throw new LessonTypeNotAddedException();","lastModifiedDate":"2023-04-03"},{"lineNumber":164,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":165,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":166,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":167,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":168,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":169,"author":{"gitId":"yixuann02"},"content":"     * Returns the available lesson type of the module.","lastModifiedDate":"2023-04-03"},{"lineNumber":170,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":171,"author":{"gitId":"yixuann02"},"content":"     * @param module The module being checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":172,"author":{"gitId":"yixuann02"},"content":"     * @return The lesson types available for this module.","lastModifiedDate":"2023-04-03"},{"lineNumber":173,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"yixuann02"},"content":"    private ArrayList\u003cLessonType\u003e getLessonTypes(Module module) {","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cLessonType\u003e lessonTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":176,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : module.getModuleTimetable()) {","lastModifiedDate":"2023-04-03"},{"lineNumber":177,"author":{"gitId":"yixuann02"},"content":"            LessonType lessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-04-03"},{"lineNumber":178,"author":{"gitId":"yixuann02"},"content":"            if (!lessonTypes.contains(lessonType) \u0026\u0026 lessonType !\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":179,"author":{"gitId":"yixuann02"},"content":"                lessonTypes.add(lessonType);","lastModifiedDate":"2023-04-03"},{"lineNumber":180,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":181,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":182,"author":{"gitId":"yixuann02"},"content":"        return lessonTypes;","lastModifiedDate":"2023-04-03"},{"lineNumber":183,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":184,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":185,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":186,"author":{"gitId":"yixuann02"},"content":"     * Sorts the timetable by lesson type, class number and class time .","lastModifiedDate":"2023-04-03"},{"lineNumber":187,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":188,"author":{"gitId":"yixuann02"},"content":"     * @param copyList The list of lessons to be sorted.","lastModifiedDate":"2023-04-03"},{"lineNumber":189,"author":{"gitId":"yixuann02"},"content":"     * @return The sorted list of lessons.","lastModifiedDate":"2023-04-03"},{"lineNumber":190,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":191,"author":{"gitId":"yixuann02"},"content":"    private ArrayList\u003cTimetable\u003e sortTimetable(ArrayList\u003cTimetable\u003e copyList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":192,"author":{"gitId":"yixuann02"},"content":"        Comparator\u003cTimetable\u003e compareByLessonType \u003d Comparator.comparing(Timetable::getLessonType);","lastModifiedDate":"2023-04-03"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"        Comparator\u003cTimetable\u003e compareByClassNumber \u003d Comparator.comparing(Timetable::getClassNumber);","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"yixuann02"},"content":"        Comparator\u003cTimetable\u003e compareAll \u003d compareByLessonType.thenComparing(compareByClassNumber);","lastModifiedDate":"2023-04-03"},{"lineNumber":195,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTimetable\u003e parseList \u003d","lastModifiedDate":"2023-04-03"},{"lineNumber":196,"author":{"gitId":"yixuann02"},"content":"                copyList.stream().sorted(compareAll).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-04-03"},{"lineNumber":197,"author":{"gitId":"yixuann02"},"content":"        return parseList;","lastModifiedDate":"2023-04-03"},{"lineNumber":198,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":199,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":200,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":201,"author":{"gitId":"yixuann02"},"content":"     * Checks if the module is in the module list.","lastModifiedDate":"2023-04-03"},{"lineNumber":202,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":203,"author":{"gitId":"yixuann02"},"content":"     * @param moduleList The list of modules.","lastModifiedDate":"2023-04-03"},{"lineNumber":204,"author":{"gitId":"yixuann02"},"content":"     * @param module     The module to be checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":205,"author":{"gitId":"yixuann02"},"content":"     * @return True if the module is in the list of modules.","lastModifiedDate":"2023-04-03"},{"lineNumber":206,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":207,"author":{"gitId":"yixuann02"},"content":"    public boolean isInModuleList(ModuleList moduleList, Module module) {","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"yixuann02"},"content":"        for (Module moduleCheck : moduleList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":209,"author":{"gitId":"yixuann02"},"content":"            if (moduleCheck.getCode().equals(module.getCode())) {","lastModifiedDate":"2023-04-03"},{"lineNumber":210,"author":{"gitId":"yixuann02"},"content":"                return true;","lastModifiedDate":"2023-04-03"},{"lineNumber":211,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":212,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":213,"author":{"gitId":"yixuann02"},"content":"        return false;","lastModifiedDate":"2023-04-03"},{"lineNumber":214,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":215,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":216,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":217,"author":{"gitId":"yixuann02"},"content":"     * Handles the command when user wants to see the timetable added of a specific lesson type.","lastModifiedDate":"2023-04-03"},{"lineNumber":218,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":219,"author":{"gitId":"yixuann02"},"content":"     * @param ui The Ui object to print the timetable.","lastModifiedDate":"2023-04-03"},{"lineNumber":220,"author":{"gitId":"yixuann02"},"content":"     * @throws IllegalCommandException If the command is invalid.","lastModifiedDate":"2023-04-03"},{"lineNumber":221,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":222,"author":{"gitId":"yixuann02"},"content":"    private void handleMultiCommand(Ui ui, ModuleList allModules) throws IllegalCommandException,","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"yixuann02"},"content":"            LessonTypeNotInModuleException {","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":225,"author":{"gitId":"yixuann02"},"content":"        String type \u003d args[1];","lastModifiedDate":"2023-04-03"},{"lineNumber":226,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":227,"author":{"gitId":"yixuann02"},"content":"        LessonType lessonType \u003d getCommand(type);","lastModifiedDate":"2023-04-03"},{"lineNumber":228,"author":{"gitId":"yixuann02"},"content":"        if (lessonType \u003d\u003d null) {","lastModifiedDate":"2023-04-03"},{"lineNumber":229,"author":{"gitId":"yixuann02"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-04-03"},{"lineNumber":230,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":231,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":232,"author":{"gitId":"yixuann02"},"content":"        if (!isExistLessonType(allModules, lessonType)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":233,"author":{"gitId":"yixuann02"},"content":"            throw new LessonTypeNotInModuleException();","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":236,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTimetable\u003e timetableList \u003d new ArrayList\u003c\u003e(module.getModuleTimetable());","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cTimetable\u003e timetableInModuleList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : timetableList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":241,"author":{"gitId":"yixuann02"},"content":"            LessonType checkType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-04-03"},{"lineNumber":242,"author":{"gitId":"yixuann02"},"content":"            assert (checkType !\u003d null) : \"ListModuleWithLessonCommand: Lesson type should not be null!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":243,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":244,"author":{"gitId":"yixuann02"},"content":"            if (checkType.equals(lessonType)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":245,"author":{"gitId":"yixuann02"},"content":"                timetableInModuleList.add(timetable);","lastModifiedDate":"2023-04-04"},{"lineNumber":246,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":247,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":248,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":249,"author":{"gitId":"yixuann02"},"content":"        if (timetableInModuleList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-04"},{"lineNumber":250,"author":{"gitId":"yixuann02"},"content":"            ui.printLessonTypeNotAdded(module.getCode(), lessonType);","lastModifiedDate":"2023-04-03"},{"lineNumber":251,"author":{"gitId":"yixuann02"},"content":"        } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":252,"author":{"gitId":"yixuann02"},"content":"            sortTimetable(timetableInModuleList);","lastModifiedDate":"2023-04-04"},{"lineNumber":253,"author":{"gitId":"yixuann02"},"content":"            ui.printSpecificTimetable(module, lessonType, timetableInModuleList);","lastModifiedDate":"2023-04-04"},{"lineNumber":254,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":255,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":256,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":257,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":258,"author":{"gitId":"yixuann02"},"content":"    private boolean isExistLessonType(ModuleList allModules, LessonType lessonType) {","lastModifiedDate":"2023-04-04"},{"lineNumber":259,"author":{"gitId":"yixuann02"},"content":"        Module checkMod \u003d allModules.findModule(args[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":260,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cLessonType\u003e checkLesson \u003d getLessonTypes(checkMod);","lastModifiedDate":"2023-04-04"},{"lineNumber":261,"author":{"gitId":"yixuann02"},"content":"        for (LessonType toCheckType : checkLesson) {","lastModifiedDate":"2023-04-04"},{"lineNumber":262,"author":{"gitId":"yixuann02"},"content":"            if (toCheckType.equals(lessonType)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":263,"author":{"gitId":"yixuann02"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":264,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":265,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":266,"author":{"gitId":"yixuann02"},"content":"        return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":268,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":269,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"irving11119":1,"yixuann02":268}},{"path":"src/main/java/seedu/apollo/command/module/ShowModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"import static seedu.apollo.utils.LessonTypeUtil.determineLessonType;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"public class ShowModuleCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ShowModuleCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"    private String[] args;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"    private Module module;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"     * Constructor for ShowModuleCommand.","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"     * @param params     The parameters the user passes into the command.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"     * @param allModules The list of all modules.","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"     * @throws InvalidModule If the module code is invalid.","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    public ShowModuleCommand(String params, ModuleList allModules) throws InvalidModule, IllegalCommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"        assert (params !\u003d null) : \"ShowModuleCommand: ModuleCode should not be null!\";","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"        assert (allModules !\u003d null) : \"ShowModuleCommand: Module list should not be null!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"        args \u003d params.split(\"\\\\s+\");","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        if (args.length !\u003d 2 \u0026\u0026 args.length !\u003d 1) {","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        String moduleCode \u003d args[0];","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"        Module checkMod \u003d allModules.findModule(moduleCode);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"        if (checkMod \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"            throw new InvalidModule();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"        module \u003d checkMod;","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ShowModuleCommand class.","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"                        Calendar calendar)  {","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"        assert (module !\u003d null) : \"ShowModuleCommand: Module should not be null!\";","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"            if (args.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"                handleMultiCommand(ui);","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"            } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"                Module referenceModule \u003d allModules.findModule(module.getCode());","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"yixuann02"},"content":"                ArrayList\u003cTimetable\u003e copyList \u003d new ArrayList\u003c\u003e(referenceModule.getModuleTimetable());","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"                ArrayList\u003cTimetable\u003e parseList \u003d sortTimetable(copyList);","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"yixuann02"},"content":"                ui.printShowModuleMessage(module, getLessonTypes(referenceModule), parseList);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"yixuann02"},"content":"     * Returns the available lesson type of the module.","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"yixuann02"},"content":"     * @param module The module being checked.","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"yixuann02"},"content":"     * @return The lesson types available for this module.","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"    private ArrayList\u003cLessonType\u003e getLessonTypes(Module module) {","lastModifiedDate":"2023-04-01"},{"lineNumber":119,"author":{"gitId":"yixuann02"},"content":"        ArrayList\u003cLessonType\u003e lessonTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : module.getModuleTimetable()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"yixuann02"},"content":"            LessonType lessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"yixuann02"},"content":"            if (!lessonTypes.contains(lessonType) \u0026\u0026 lessonType !\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"yixuann02"},"content":"                lessonTypes.add(lessonType);","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"yixuann02"},"content":"        return lessonTypes;","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"     * Handles the command when the user wants to see the timetable of a specific lesson type.","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"     * @param ui The Ui object to print the timetable.","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"    private void handleMultiCommand(Ui ui) throws IllegalCommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"        String type \u003d args[1];","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"        LessonType lessonType \u003d getCommand(type);","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"        if (lessonType \u003d\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e copyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e timetableList \u003d module.getModuleTimetable();","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"        if (timetableList \u003d\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : timetableList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"irving11119"},"content":"            LessonType checkType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"irving11119"},"content":"            assert (checkType !\u003d null) : \"ShowModuleCommand: Lesson type should not be null!\";","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"            if (checkType.equals(lessonType)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"                copyList.add(timetable);","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"        if (copyList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"            ui.printNoLessonType();","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"            sortTimetable(copyList);","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"            ui.printModuleLessonTimetable(module, lessonType, copyList);","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"     * Sorts the timetable by lesson type, class number and class time .","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"     * @param copyList The list of lessons to be sorted.","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"     * @return The sorted list of lessons.","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"    private ArrayList\u003cTimetable\u003e sortTimetable(ArrayList\u003cTimetable\u003e copyList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"        Comparator\u003cTimetable\u003e compareByLessonType \u003d Comparator.comparing(Timetable::getLessonType);","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"        Comparator\u003cTimetable\u003e compareByClassNumber \u003d Comparator.comparing(Timetable::getClassNumber);","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"        Comparator\u003cTimetable\u003e compareAll \u003d compareByLessonType.thenComparing(compareByClassNumber);","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e parseList \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"                copyList.stream().sorted(compareAll).collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"        return parseList;","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"irving11119":76,"yixuann02":104}},{"path":"src/main/java/seedu/apollo/command/task/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.CalendarModule;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Event;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.calendar.SemesterUtils.getWeekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DEADLINE_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_EVENT_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_TODO_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":" * Add Command class that adds a Task to the existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":" * Handles {@code todo}, {@code deadline}, and {@code event} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"public class AddCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    protected String command;","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    protected String desc;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    protected String by;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    protected String from;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    protected String to;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the type and description of the task given in the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     * @param command Type of task being added (ToDo, Deadline, or Event).","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"     * @param param   Description of task given by user (including date(s) for Deadline, Event).","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline     If the Deadline being added has the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent        If the Event being added has the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command word cannot be understood.","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"    public AddCommand(String command, String param) throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        assert (command.equals(COMMAND_TODO_WORD) | command.equals(COMMAND_DEADLINE_WORD) |","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"                command.equals(COMMAND_EVENT_WORD)) : \"AddCommand: Invalid Add Command\";","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d param;","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"            String[] paramAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d paramAndBy[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"            this.by \u003d paramAndBy[1];","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"            String[] paramAndFromTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d paramAndFromTo[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"            this.from \u003d paramAndFromTo[1];","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"            this.to \u003d paramAndFromTo[2];","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Adding Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for AddCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"                assert (new File(\"apollo.log\").createNewFile()) : \"Error creating logger\";","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"     * Executes adding a Task to the TaskList and updating the hard disk.","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList to be added to.","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"     * @param ui       Prints success or error message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"     * @param storage  Gets updated after the Task has been added.","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command stored is not recognised.","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar)","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"            addTask(taskList, calendar, ui);","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if(e.getMessage().contains(\"Invalid date\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"                ui.dateNotWithinCalender();","lastModifiedDate":"2023-04-01"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"            } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"                ui.printInvalidDateTime();","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"        } catch (DateOverException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"            ui.printDateOverException(e);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"        } catch (DateOrderException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"            ui.printDateOrderException();","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"        assert (taskList.size() \u003e initialSize) : \"AddCommand : Task not added successfully\";","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"        ui.printAddMessage(taskList.get(taskList.size() - 1));","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"     * Adds a Task to the TaskList based on data in the class.","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList to be added to.","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"honglinshang"},"content":"     * @param calendar The lesson schedule of the user.","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"honglinshang"},"content":"     * @param ui       For printing messages in event of clashes.","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"honglinshang"},"content":"     * @throws DateTimeParseException If any date is entered in the wrong format.","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException      If any date of the task occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOrderException     If an Event\u0027s end date occurs before its start date.","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException    If the command stored is not recognised.","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"honglinshang"},"content":"    private void addTask(TaskList taskList, Calendar calendar, Ui ui)","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"honglinshang"},"content":"            throws DateTimeParseException, DateOverException, DateOrderException, UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        switch (command) {","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"            ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2023-04-01"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"            taskList.add(todo);","lastModifiedDate":"2023-04-01"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"            if (todo.getDescription().contains(\"by\")||todo.getDescription().contains(\"/by\")||","lastModifiedDate":"2023-04-01"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"                    todo.getDescription().contains(\"due\")){","lastModifiedDate":"2023-04-01"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"                ui.deadlineSuggestion();","lastModifiedDate":"2023-04-01"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":181,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"honglinshang"},"content":"            Deadline deadline \u003d new Deadline(desc, by);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"            warnDeadlineClash(ui, taskList, calendar, deadline.getByDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"            taskList.add(deadline);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            Event event \u003d new Event(desc, from, to);","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (isClashingEvent(taskList, event.getToDate(), event.getFromDate())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                ui.printClashingEventMessage();","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"            warnEventModuleClash(ui, calendar, event);","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            taskList.add(event);","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Adding Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":202,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"     * Prints warning message to user with all tasks and lessons that clash with the deadline.","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"     * Will not print anything if there are no clashes.","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"honglinshang"},"content":"     * @param ui       For printing warning message.","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"honglinshang"},"content":"     * @param taskList Existing tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"     * @param calendar Existing lessons.","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"     * @param by       Due date of the deadline being added.","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"irving11119"},"content":"    private void warnDeadlineClash(Ui ui, TaskList taskList, Calendar calendar, LocalDateTime by) {","lastModifiedDate":"2023-04-01"},{"lineNumber":212,"author":{"gitId":"honglinshang"},"content":"        TaskList clashTasks \u003d taskList.getTasksOnDate(by.toLocalDate());","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"honglinshang"},"content":"        DayOfWeek day \u003d by.getDayOfWeek();","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"        int dayNum \u003d day.getValue() - 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"        int week \u003d getWeekNumber(by.toLocalDate());","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cCalendarModule\u003e clashLessons \u003d calendar.getModulesForDay(week, dayNum);","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.sortTaskByDay(clashTasks);","lastModifiedDate":"2023-04-01"},{"lineNumber":218,"author":{"gitId":"honglinshang"},"content":"        ui.printClashingDeadlineMessage(clashTasks, clashLessons);","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"     * Checks if an event user wants to add clashes with existing events.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The ArrayList containing the tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"     * @param from     The time that event starts.","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"     * @param to       The time that event ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if there is a clash, {@code false} otherwise.","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"irving11119"},"content":"    private boolean isClashingEvent(TaskList taskList, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                if ((event.getFromDate().isAfter(to) || event.getToDate().isBefore(from))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                    continue;","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"irving11119"},"content":"     * Checks if an event user wants to add clashes with existing lessons.","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"irving11119"},"content":"     * @param ui       For printing warning message.","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"irving11119"},"content":"     * @param calendar The timetable of lessons stored in an ArrayList.","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"irving11119"},"content":"     * @param event    The event to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"irving11119"},"content":"     * @return true if there is a clash, false otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"irving11119"},"content":"    private void warnEventModuleClash(Ui ui, Calendar calendar, Event event) {","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"irving11119"},"content":"        LocalDateTime eventStart \u003d event.getFromDate();","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"irving11119"},"content":"        LocalDateTime eventEnd \u003d event.getToDate();","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"irving11119"},"content":"        LocalDateTime currentDay \u003d eventStart;","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"irving11119"},"content":"        do {","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            DayOfWeek currentDayOfWeek \u003d currentDay.getDayOfWeek();","lastModifiedDate":"2023-04-02"},{"lineNumber":258,"author":{"gitId":"irving11119"},"content":"            int currentDayIndex \u003d currentDayOfWeek.getValue() - 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":259,"author":{"gitId":"irving11119"},"content":"            String currentDayString \u003d currentDay.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (isClashingEventModule(calendar.get(currentDayIndex), eventStart, eventEnd, currentDayString)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":261,"author":{"gitId":"irving11119"},"content":"                ui.printClashingEventModuleMessage();","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"irving11119"},"content":"                return;","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":265,"author":{"gitId":"irving11119"},"content":"            currentDay \u003d currentDay.plusDays(1);","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        } while (!currentDay.isAfter(eventEnd));","lastModifiedDate":"2023-04-02"},{"lineNumber":267,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"irving11119"},"content":"     * Checks if an event user wants to add clashes with existing lessons.","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"irving11119"},"content":"     * @param calendarModule The ArrayList containing the lessons.","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"irving11119"},"content":"     * @param eventStart     The time that event starts.","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"irving11119"},"content":"     * @param eventEnd       The time that event ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"irving11119"},"content":"     * @param currentDate    The date of which being checked.","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"irving11119"},"content":"     * @return true if there is a clash, false otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"irving11119"},"content":"    private boolean isClashingEventModule(ArrayList\u003cCalendarModule\u003e calendarModule, LocalDateTime eventStart,","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"irving11119"},"content":"                                          LocalDateTime eventEnd, String currentDate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"irving11119"},"content":"        DateTimeFormatter formatterFull \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"irving11119"},"content":"        DateTimeFormatter formatterPartial \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"irving11119"},"content":"        for (CalendarModule module : calendarModule) {","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"irving11119"},"content":"            if (module.getSchedule() \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"irving11119"},"content":"                continue;","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"irving11119"},"content":"            LocalDate date \u003d LocalDate.parse(currentDate, formatterPartial);","lastModifiedDate":"2023-04-04"},{"lineNumber":289,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":290,"author":{"gitId":"irving11119"},"content":"            int currentWeek \u003d getWeekNumber(date);","lastModifiedDate":"2023-04-04"},{"lineNumber":291,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":292,"author":{"gitId":"irving11119"},"content":"            ArrayList\u003cInteger\u003e weeks \u003d module.getSchedule().getWeeks();","lastModifiedDate":"2023-04-04"},{"lineNumber":293,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":294,"author":{"gitId":"irving11119"},"content":"            if (!weeks.contains(currentWeek)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":295,"author":{"gitId":"irving11119"},"content":"                continue;","lastModifiedDate":"2023-04-04"},{"lineNumber":296,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":297,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":298,"author":{"gitId":"irving11119"},"content":"            String moduleStartString \u003d currentDate + \" \" + module.getSchedule().getStartTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"irving11119"},"content":"            String moduleEndString \u003d currentDate + \" \" + module.getSchedule().getEndTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"irving11119"},"content":"            LocalDateTime lessonStart \u003d LocalDateTime.parse(moduleStartString, formatterFull);","lastModifiedDate":"2023-04-04"},{"lineNumber":301,"author":{"gitId":"irving11119"},"content":"            LocalDateTime lessonEnd \u003d LocalDateTime.parse(moduleEndString, formatterFull);","lastModifiedDate":"2023-04-04"},{"lineNumber":302,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"irving11119"},"content":"            if (isEventLessonClashing(eventStart, eventEnd, lessonStart, lessonEnd) \u0026\u0026","lastModifiedDate":"2023-04-02"},{"lineNumber":304,"author":{"gitId":"irving11119"},"content":"                    isDuringSemester(eventStart,eventEnd)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":305,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":306,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":313,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":314,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Checks if event occurs during the academic semester 1 or 2","lastModifiedDate":"2023-04-01"},{"lineNumber":315,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param eventStart The start time of the event","lastModifiedDate":"2023-04-01"},{"lineNumber":316,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param eventEnd  The end time of the event","lastModifiedDate":"2023-04-01"},{"lineNumber":317,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return","lastModifiedDate":"2023-04-01"},{"lineNumber":318,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":319,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    private boolean isDuringSemester(LocalDateTime eventStart,LocalDateTime eventEnd) {","lastModifiedDate":"2023-04-01"},{"lineNumber":320,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        LocalDateTime startSemesterTwo \u003d LocalDateTime.of(2023, 1, 9, 0, 0);","lastModifiedDate":"2023-04-01"},{"lineNumber":321,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        LocalDateTime endSemesterTwo\u003d LocalDateTime.of(2023,5,7,0,0);","lastModifiedDate":"2023-04-01"},{"lineNumber":322,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        LocalDateTime startSemesterOne \u003d LocalDateTime.of(2023,8,14,0,0);","lastModifiedDate":"2023-04-01"},{"lineNumber":323,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        LocalDateTime endSemesterOne \u003d LocalDateTime.of(2023,11,10,0,0);","lastModifiedDate":"2023-04-01"},{"lineNumber":324,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return (!startSemesterTwo.isAfter(eventEnd) \u0026\u0026 !endSemesterTwo.isBefore(eventStart))","lastModifiedDate":"2023-04-01"},{"lineNumber":325,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                || (!startSemesterOne.isAfter(eventEnd) \u0026\u0026 !endSemesterOne.isBefore(eventStart));","lastModifiedDate":"2023-04-01"},{"lineNumber":326,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":327,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":328,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":329,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":330,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"irving11119"},"content":"     * Checks if an event and lesson overlap.","lastModifiedDate":"2023-03-28"},{"lineNumber":332,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":333,"author":{"gitId":"irving11119"},"content":"     * @param eventStart The start time of the event.","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"irving11119"},"content":"     * @param eventEnd   The end time of the event.","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"irving11119"},"content":"     * @param lessonStart The start time of the lesson.","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"irving11119"},"content":"     * @param lessonEnd   The end time of the lesson.","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"irving11119"},"content":"     * @return true if there is a clash, false otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"irving11119"},"content":"    private boolean isEventLessonClashing(LocalDateTime eventStart, LocalDateTime eventEnd, LocalDateTime lessonStart,","lastModifiedDate":"2023-04-01"},{"lineNumber":340,"author":{"gitId":"irving11119"},"content":"                                          LocalDateTime lessonEnd) {","lastModifiedDate":"2023-03-28"},{"lineNumber":341,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"irving11119"},"content":"        if (eventStart.isEqual(lessonStart) \u0026\u0026 eventEnd.isEqual(lessonEnd)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":343,"author":{"gitId":"irving11119"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":344,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":345,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":346,"author":{"gitId":"irving11119"},"content":"        if (eventStart.isBefore(lessonStart) \u0026\u0026 eventEnd.isAfter(lessonEnd)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"irving11119"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"irving11119"},"content":"        if (eventStart.isAfter(lessonStart) \u0026\u0026 eventEnd.isBefore(lessonEnd)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"irving11119"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"irving11119"},"content":"        if (eventStart.isBefore(lessonStart) \u0026\u0026 eventEnd.isBefore(lessonEnd)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":355,"author":{"gitId":"irving11119"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":356,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":357,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"irving11119"},"content":"        return eventStart.isAfter(lessonStart) \u0026\u0026 eventEnd.isAfter(lessonEnd);","lastModifiedDate":"2023-03-28"},{"lineNumber":359,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":361,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":120,"honglinshang":139,"yixuann02":36,"T-Wan-Lin":12,"PoobalanAatmikaLakshmi":54}},{"path":"src/main/java/seedu/apollo/command/task/DateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":" * Date Command class that shortlists Tasks that occur on the given date.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"public class DateCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DateCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    LocalDate date;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the given date to shortlist for.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * @param dateString User input of the date, should be in format {@code yyyy-MM-dd}.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDateTime If the input date does not fit the above format.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    public DateCommand (String dateString) throws InvalidDateTime {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"        assert dateString !\u003d null : \"DateCommand: dateString should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            this.date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            assert dateString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\") : \"Date string should be in format yyyy-MM-dd\";","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for DateCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"                assert(new File(\"apollo.log\").createNewFile()) : \"Error in creating save file\";","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"     * Shortlists and prints Tasks from the TaskList that occur during the given date.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"        ui.printDateList(taskList.getTasksOnDate(date), date);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":10,"honglinshang":37,"yixuann02":37}},{"path":"src/main/java/seedu/apollo/command/task/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":" * Find Command class that shortlists Tasks that contain a given keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"public class FindCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"FindCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"    protected String keyword;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the given keyword to shortlist for.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     * @param keyword User input of the keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for FindCommand class.","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"     * Shortlists and prints Tasks from the TaskList that contain the given keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"     * @param ui       Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        assert (keyword !\u003d null) : \"FindCommand: Keyword should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"        ui.printFoundList(taskList.findTasks(keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":8,"honglinshang":28,"yixuann02":41}},{"path":"src/main/java/seedu/apollo/command/task/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":" * List Command class that shows user a list of all the Tasks they have input.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"public class ListCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"    public ListCommand() {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ListCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     * Prints out all Tasks from the TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     * @param ui       Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.sortTaskByDay(taskList);","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        ui.printList(taskList);","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":8,"honglinshang":18,"yixuann02":42,"T-Wan-Lin":1}},{"path":"src/main/java/seedu/apollo/command/task/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DELETE_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_MARK_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_UNMARK_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":" * Mark and Delete Command class that modifies an existing Task from the TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":" * Handles {@code mark}, {@code unmark}, and {@code delete} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"public class ModifyCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ModifyCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    protected String command;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    protected int idx;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the type and description of the task given in the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     * @param command Type of modification command being executed (mark, unmark, delete).","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * @param param Contains the index of the task to be modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     * @param size Current number of tasks in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"     * @throws NumberFormatException If idx cannot be parsed, or is outside the current range of tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    public ModifyCommand(String command, String param, int size) throws NumberFormatException {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        assert (command.equals(COMMAND_MARK_WORD) | command.equals(COMMAND_UNMARK_WORD) |","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"                command.equals(COMMAND_DELETE_WORD)) : \"ModifyCommand: Invalid Modify Command\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"        assert param !\u003d null : \"ModifyCommand: param cannot be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"        if (idx \u003c 0 || idx \u003e\u003d size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ModifyCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"    private void markTaskAsDone(TaskList taskList, Ui ui) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"        if (!taskList.get(idx).isDone()){","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"            taskList.get(idx).setDone(true);","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printMarkDone(taskList.get(idx));","lastModifiedDate":"2023-04-01"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printTaskHasBeenMarkedPreviously();","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"    private void unmarkTask(TaskList taskList, Ui ui) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"        if (taskList.get(idx).isDone()){","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"            taskList.get(idx).setDone(false);","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printMarkNotDone(taskList.get(idx));","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printTaskHasBeenUnmarkedPreviously();","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"     * Executes the modification of a Task in the TaskList based on data in the class.","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList of existing Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints success or error message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"     * @param storage Gets updated after the TaskList has been modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command stored is not recognised.","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar)","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"            throws UnexpectedException, IndexOutOfBoundsException, NumberFormatException {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"        switch(command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"            markTaskAsDone(taskList, ui);","lastModifiedDate":"2023-04-01"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"            unmarkTask(taskList, ui);","lastModifiedDate":"2023-04-01"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DELETE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"            int initialCount \u003d taskList.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"            ui.printDeleted(taskList.get(idx), taskList.size());","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"            taskList.remove(idx);","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"            int finalCount \u003d taskList.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"            assert (finalCount \u003d\u003d initialCount - 1) : \"ModifyCommand : Unsuccessful deletion\";","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Modifying Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":12,"honglinshang":65,"yixuann02":39,"T-Wan-Lin":22}},{"path":"src/main/java/seedu/apollo/command/utils/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" * Exit Command class that allows user to exit the program.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     * Prints exit message.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * Sets the exit status of the Command to be true.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints exit message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        this.setExit();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":8,"honglinshang":20}},{"path":"src/main/java/seedu/apollo/command/utils/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.io.File;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * Parent class of all help commands","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class HelpCommand extends Command implements LoggerInterface {","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    private static Logger logger \u003d Logger.getLogger(\"HelpCommand\");","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * Prints list of all available Commands and their abilities.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints list of Commands to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Sets up logger for   HelpCommand class.","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        try {","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":8,"honglinshang":16,"PoobalanAatmikaLakshmi":47}},{"path":"src/main/java/seedu/apollo/command/utils/WeekCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":" * Week Command class that displays the user\u0027s schedule for the week","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"public class WeekCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        ZoneId zid \u003d ZoneId.of(\"Asia/Singapore\");","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        LocalDate now \u003d LocalDate.now(zid);","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        LocalDate startWeek \u003d now.with(DayOfWeek.MONDAY);","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        LocalDate endWeek \u003d now.with(DayOfWeek.SUNDAY);","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"        ui.printWeek(taskList, calendar, startWeek, endWeek);","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"honglinshang":29}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/AddModHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"public class AddModHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printAddModHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/DateHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DateHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printDateHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/DeadlineHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DeadlineHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printDeadlineHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":15}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/DeleteHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DeleteHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printDeleteHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/DeleteModHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"public class DeleteModHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printDeleteModHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":16}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/EventHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class EventHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printEventHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/ExitHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"public class ExitHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printExitHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/FindHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class FindHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printFindHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/ListHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class ListHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printListHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":15}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/ListModuleHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"public class ListModuleHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printListModuleHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":15}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/MarkHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class MarkHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printMarkHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/ShowModHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"public class ShowModHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printShowModuleHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":16}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/SpecifiedAidHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"public class SpecifiedAidHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printHelpCommandHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/TodoHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class TodoHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printTodoHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/UnmarkHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class UnmarkHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Override","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ui.printUnmarkHelpMessage();","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"T-Wan-Lin":2,"PoobalanAatmikaLakshmi":14}},{"path":"src/main/java/seedu/apollo/command/utils/specifichelpcommand/WeekHelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.utils.specifichelpcommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"public class WeekHelpCommand extends HelpCommand {","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules,","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"                        Calendar calendar) {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"        ui.printWeekHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"T-Wan-Lin":14}},{"path":"src/main/java/seedu/apollo/exception/module/ClassNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class ClassNotFoundException extends Throwable{","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DuplicateModuleException extends Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":4}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyAddModException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class EmptyAddModException extends Throwable {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyDelModException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class EmptyDelModException extends Throwable{","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyLessonTypesInTimetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":" * Throw exception if no lesson type added to module in module list.","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"public class EmptyLessonTypesInTimetable extends Throwable{","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"yixuann02":7}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyShowModException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"public class EmptyShowModException extends Throwable {","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"yixuann02":4}},{"path":"src/main/java/seedu/apollo/exception/module/InvalidModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class InvalidModule extends Throwable{","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/LessonAddedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class LessonAddedException extends Throwable{","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/LessonTypeNotAddedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":" * Throw exception if specific lesson type has not been added to module list.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"public class LessonTypeNotAddedException extends Throwable{","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"yixuann02":7}},{"path":"src/main/java/seedu/apollo/exception/module/LessonTypeNotInModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":" * Throw exception if a module does not have this lesson type.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"public class LessonTypeNotInModuleException extends Throwable{","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"yixuann02":7}},{"path":"src/main/java/seedu/apollo/exception/module/ModuleNotAddedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":" * Throw exception if module does not exist in module list.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"public class ModuleNotAddedException extends Throwable{","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"yixuann02":7}},{"path":"src/main/java/seedu/apollo/exception/module/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class ModuleNotFoundException extends Exception {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":1,"honglinshang":3}},{"path":"src/main/java/seedu/apollo/exception/task/DateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the end date is before the start date of an event.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class DateOrderException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/DateOverException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.task.Task.printPattern;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DEADLINE_WORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.ui.Parser.COMMAND_EVENT_WORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the Task being added occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class DateOverException extends Throwable {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    private final String type;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    private final String description;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * Initialises the exception with details of the Task that was not successfully added.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @param type Type of task (Deadline or Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @param by Due date (if task is Deadline).","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @param from Start date (if task is Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * @param to End date (if task is Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    public DateOverException(String type, String description, LocalDateTime by, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"        assert (type.equals(\"deadline\") | type.equals(\"event\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        switch (type) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"            return type + \": \" + description + \" (by: \" + by.format(printPattern) + \")\";","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"            return type + \": \" + description + \" (from: \" + from.format(printPattern) +","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"                    \" to: \" + to.format(printPattern) + \")\";","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"            return \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"honglinshang":54}},{"path":"src/main/java/seedu/apollo/exception/task/EmptyTaskDescException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the description of a task is left empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class EmptyTaskDescException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the date and time is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidDateTime extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when a deadline is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidDeadline extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when an event is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidEvent extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/DuplicateModuleInTextFileException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-04-01"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"/**","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * Exception class for when there is a duplicate module in the moduleData.txt","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" */","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DuplicateModuleInTextFileException extends Throwable {","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":7}},{"path":"src/main/java/seedu/apollo/exception/utils/EmptyKeywordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the keyword of a search is left empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class EmptyKeywordException extends Throwable{","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/IllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when command is not understood by Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class IllegalCommandException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/InvalidSaveFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the local save file has been corrupted.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidSaveFile extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/module/CalendarModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"public class CalendarModule extends Module {","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    private Timetable schedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"     * Constructor for CalendarModule.","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"     * @param moduleCode The module code of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"     * @param moduleName The module name of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"     * @param moduleCredits The module credits of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"    public CalendarModule(String moduleCode, String moduleName, String moduleCredits) {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"        super(moduleCode, moduleName, moduleCredits);","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"     * Sets the schedule of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"     * @param schedule The schedule of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"    public void setSchedule(Timetable schedule) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"     * Gets the schedule of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"     * @return The schedule of the module.","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    public Timetable getSchedule() {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        return schedule;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"     * Gets the day of the module lesson.","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"     * @return The day of the module lesson.","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"    public String getDay() {","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"        return schedule.getDay();","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"     * Checks if the module is scheduled for the current week.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"     * @param week The current week.","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"     * @return True if the module is scheduled for the current week.","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    public boolean isCurrentWeek(int week) {","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cInteger\u003e weeks \u003d schedule.getWeeks();","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"        return weeks.contains(week);","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"irving11119":59}},{"path":"src/main/java/seedu/apollo/module/LessonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public enum LessonType {","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"    LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"    PACKAGED_LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"    SECTIONAL_TEACHING,","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    DESIGN_LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"    TUTORIAL,","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"    PACKAGED_TUTORIAL,","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"    RECITATION,","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    LABORATORY,","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"    WORKSHOP,","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    SEMINAR_STYLE_MODULE_CLASS,","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    MINI_PROJECT,","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    TUTORIAL_TYPE_2,","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":17}},{"path":"src/main/java/seedu/apollo/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.utils.LessonTypeUtil.determineLessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":" * Class representing a Module.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":" * Contains the Module\u0027s code and name.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"public class Module {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    private String code;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"    private String title;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    private String moduleCredits;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    private ArrayList\u003cTimetable\u003e timetable;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"     * Initialises the Module with its corresponding code and name.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param moduleCode The code of the module e.g. CS2113","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param moduleName The name of the module e.g. Software Engineering and Object-Oriented Programming","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    public Module(String moduleCode, String moduleName, String moduleCredits) {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"        this.code \u003d moduleCode;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"        this.title \u003d moduleName;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        this.moduleCredits \u003d moduleCredits;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"     * Retrieves a String with the module\u0027s code.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return String of the module code","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    public String getCode() {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"        return code;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"     * Retrieves a String with the module\u0027s name.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return String of the module name","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"        return title;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"     * Retrieves a String with the module\u0027s credit.","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"     * @return String of the module credit","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"    public String getModuleCredits() {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"        return moduleCredits;","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"    public void setTimetable(ArrayList\u003cTimetable\u003e timetable) {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"     * Retrieves a ArrayList with the module\u0027s timetable information.","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"     * @return ArrayList of the module timetable information.","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cTimetable\u003e getModuleTimetable() {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"        return timetable;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out the Module in desired format.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"        return code + \": \" + title;","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Creates a new Timetable","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"    public void createNewTimeTable() {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"        this.timetable \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"     * Checks if the module has a lesson of the specified lesson type.","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"     * @param lessonType The lesson type to be checked.","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"     * @return True if the module has a lesson of the specified lesson type.","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"    public Boolean hasLessonType(LessonType lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"        if (this.timetable \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : this.timetable) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"            LessonType checkLessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"            assert checkLessonType !\u003d null : \"Lesson type should not be null\";","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"            if (checkLessonType.equals(lessonType)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"    public CalendarModule toCalendarModule() {","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"        CalendarModule calendarModule \u003d new CalendarModule(this.code, this.title, this.moduleCredits);","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : this.timetable) {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"irving11119"},"content":"            calendarModule.setSchedule(timetable);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"        return calendarModule;","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":68,"yixuann02":5,"T-Wan-Lin":37,"PoobalanAatmikaLakshmi":3}},{"path":"src/main/java/seedu/apollo/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.ModuleNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * ModuleList class is a modified ArrayList of Modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class ModuleList extends ArrayList\u003cModule\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"     * Finds the module in the ModuleList which matches the module name.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module to be found.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     * @return module in the ModuleList which matches the module name.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     * @throws ModuleNotFoundException If the moduleCode is not found in allModules.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    public Module findModule(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"        Module module \u003d this.stream().filter(mod -\u003e mod.getCode().equalsIgnoreCase(moduleCode))","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"                .findFirst().orElse(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return module;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts the ModuleList in alphabetical order.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    public void sortModules() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"        this.sort(Comparator.comparing(Module::getCode));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     * Calculate the total modular credit in ArrayList of all modules.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * @return Total modular credits.","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    public int getTotalModuleCredits() {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"        int totalSemesterCredits \u003d 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"        for (Module module : this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"            totalSemesterCredits +\u003d Integer.parseInt(module.getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        return totalSemesterCredits;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":7,"yixuann02":7,"honglinshang":13,"T-Wan-Lin":17,"PoobalanAatmikaLakshmi":4}},{"path":"src/main/java/seedu/apollo/module/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * A class representing a timetable for the week.","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"public class Timetable {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter parsePattern \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.ENGLISH);","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter printPattern \u003d DateTimeFormatter.ofPattern(\"hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    private static final int NUMBER_OF_WEEKS \u003d 13;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    private String classNumber;","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"    private String lessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"    private String day;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    private String startTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    private String endTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    private ArrayList\u003cInteger\u003e weeks;","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Gets the class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return The class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    public String getClassNumber() {","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        return classNumber;","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Sets the class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"     * @param classNumber The class number to set.","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    public void setClassNumber(String classNumber) {","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        this.classNumber \u003d classNumber;","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Gets the type of lesson.","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return The type of lesson.","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"    public String getLessonType() {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"        return lessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"    public String getDay() {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        return day;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        return startTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"        return endTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cInteger\u003e getWeeks() {","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"        return weeks;","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"     * This method compresses the weeks of a lesson into a String that can be used for the UI.","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param   timetable       The timetable of the lesson.","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return  The formatted String representation of the weeks.","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"    public String compressedWeeks(Timetable timetable) {","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"        assert timetable !\u003d null : \"Timetable cannot be null\";","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"        ArrayList\u003cInteger\u003e unfilteredWeeks \u003d timetable.getWeeks();","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"        assert unfilteredWeeks !\u003d null : \"Weeks cannot be null\";","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"        ArrayList\u003cInteger\u003e filteredWeeks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"        String formattedWeeks;","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"        //First, check if the lesson spans the whole 13-week semester","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"        if (unfilteredWeeks.size() \u003d\u003d NUMBER_OF_WEEKS) {","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"            formattedWeeks \u003d \"[Weekly]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"            return formattedWeeks;","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"        int firstWeek \u003d unfilteredWeeks.get(0);","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"        int lastWeek \u003d unfilteredWeeks.get(unfilteredWeeks.size() - 1);","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"        if (lastWeek - firstWeek \u003d\u003d unfilteredWeeks.size() - 1) {","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"            //else if is continguous, then compress","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"            filteredWeeks.add(firstWeek);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"            filteredWeeks.add(lastWeek);","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"            //else print all weeks lesson occurs on","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"            filteredWeeks \u003d unfilteredWeeks;","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"        //return String representation","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"        if (filteredWeeks.size() \u003d\u003d unfilteredWeeks.size()){","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"            formattedWeeks \u003d \"[\"+ \"Weeks: \" + arrayListToString(filteredWeeks, \", \") + \"]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"            formattedWeeks \u003d \"[\"+ \"Weeks: \" + filteredWeeks.get(0) + \"-\" + filteredWeeks.get(1) + \"]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"        return formattedWeeks;","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"     * This method converts an ArrayList of Integers into a String.","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param arrayList The ArrayList to be converted.","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param delimiter The delimiter to separate the elements of the ArrayList.","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return String representation of the ArrayList.","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"    public String arrayListToString(ArrayList\u003cInteger\u003e arrayList, String delimiter){","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"        for (int i \u003d 0; i \u003c arrayList.size(); i++) {","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"            stringBuilder.append(arrayList.get(i));","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"            if (i !\u003d arrayList.size() - 1) {","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"                stringBuilder.append(delimiter);","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"irving11119"},"content":"    public void setWeeks(ArrayList\u003cInteger\u003e weeks) {","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"        return lessonType + \": \" + getStartTime() + \"-\" + getEndTime();","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":46,"honglinshang":9,"T-Wan-Lin":59,"PoobalanAatmikaLakshmi":17}},{"path":"src/main/java/seedu/apollo/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.InvalidSaveFile;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.exception.utils.DuplicateModuleInTextFileException;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Event;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.utils.LoggerInterface;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":" * Storage class that initialises the task list and updates the save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"public class Storage implements LoggerInterface {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    // Location of save file","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    protected static String filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    protected static String moduleDataFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    // ints indicating position of terms in each line of the save file","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    private static final int TYPE_POS \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    private static final int STATUS_POS \u003d 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    private static final int PARAM_POS \u003d 8;","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    // chars representing type of Tasks within the save file","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_TODO_WORD \u003d \u0027T\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_DEADLINE_WORD \u003d \u0027D\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_EVENT_WORD \u003d \u0027E\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     * Initialise Storage class, set filePath.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"     * @param filePath Location of the local save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"    public Storage(String filePath, String moduleDataFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"        Storage.moduleDataFilePath \u003d moduleDataFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"        setUpLogger();","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"     * Sets up logger for Storage class.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"    public void setUpLogger() {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"     * Overwrites the existing save file based on the current TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"     * @param taskList Contains all stored tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If something goes wrong during the overwriting process.","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"    public void updateTask(TaskList taskList) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"        FileWriter overwrite \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"            String desc \u003d task.getDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"            String stat \u003d task.getStatus();","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"            switch (type) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"T | \" + stat + \" | \" + desc + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"                Deadline tempDeadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"                String by \u003d tempDeadline.getBy(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"D | \" + stat + \" | \" + desc + \" /by \" + by + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"            case \"event\":","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"                Event tempEvent \u003d (Event) task;","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"                String from \u003d tempEvent.getFrom(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"                String to \u003d tempEvent.getTo(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"E | \" + stat + \" | \" + desc + \" /from \" + from + \" /to \" + to + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"            default:","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"                throw new IOException();","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"        overwrite.close();","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"     * Loads data from the save file into a new TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"     * If save file is not found, creates a new save file and returns an empty TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints out error messages to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of Tasks (containing data from save file / empty).","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If save file is not found, and a new one cannot be created.","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"    public TaskList loadTaskList(Ui ui) throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"        File save \u003d new File(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"            newTaskList \u003d readFileContents(save, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"            return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"            save.createNewFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"            logger.log(Level.INFO, \"File not found, creating new file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"            return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"     * Updates the moduleData file stored on the hard disk.","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"     * @param modules Contains all stored modules.","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If save file is not found.","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"    public void updateModule(ModuleList modules, Calendar calendar) throws IOException, InvalidSaveFile {","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"        FileWriter overwrite \u003d new FileWriter(moduleDataFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"        calendar.clearCalendar();","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"        for (Module module : modules) {","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"            calendar.addModule(module);","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"            String code \u003d module.getCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"            overwrite.write(code + \"|\");","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"            writeModules(overwrite, module);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"        overwrite.close();","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"     * Reads all lines in the moduleData file, initialises them as an ModuleList of Modules.","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param overwrite","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param module","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"     * @throws IOException","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"    private void writeModules(FileWriter overwrite, Module module) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e timetableList \u003d module.getModuleTimetable();","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"        if (timetableList !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"irving11119"},"content":"            for (Timetable timetable : timetableList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"irving11119"},"content":"                overwrite.write(timetable.getLessonType() + \":\" + timetable.getClassNumber() + \"|\");","lastModifiedDate":"2023-04-03"},{"lineNumber":184,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"        overwrite.write(\"\\n\");","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"     * Reads all lines in the moduleData file, initialises them as an ModuleList of Modules.","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"     * @param ui         Prints out error messages to user.","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"     * @param allModules Contains all stored modules.","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"     * @return ModuleList of Tasks (containing data from save file / empty).","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If save file is not found.","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"irving11119"},"content":"    public ModuleList loadModuleList(Ui ui, ModuleList allModules, Calendar calendar) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"irving11119"},"content":"        ModuleList newModuleList \u003d new ModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"irving11119"},"content":"        File save \u003d new File(moduleDataFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"irving11119"},"content":"            newModuleList \u003d readModuleFileContents(save, ui, allModules, calendar);","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"            return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"irving11119"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"            logger.log(Level.INFO, \"File for ModuleList not found, creating new file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"irving11119"},"content":"            save.createNewFile();","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"irving11119"},"content":"            return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"honglinshang"},"content":"     * Reads all lines in the save file, initialises them as an TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"irving11119"},"content":"     * Loads data from the data file into a new ArrayList of Modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"     * @return ArrayList of Modules (containing data from save file / empty).","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"     * @throws FileNotFoundException If save file is not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"irving11119"},"content":"    public ModuleList loadModuleData() throws FileNotFoundException {","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"irving11119"},"content":"            ClassLoader classloader \u003d Thread.currentThread().getContextClassLoader();","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"            Reader reader \u003d new InputStreamReader(classloader.getResourceAsStream(\"data.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            Type moduleDataType \u003d new TypeToken\u003cModuleList\u003e() {","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }.getType();","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"irving11119"},"content":"            Gson gson \u003d new Gson();","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"            ModuleList moduleDataList \u003d gson.fromJson(reader, moduleDataType);","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"Module Data loaded\");","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"irving11119"},"content":"            return moduleDataList;","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"irving11119"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":229,"author":{"gitId":"irving11119"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":230,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":232,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"honglinshang"},"content":"     * Reads all lines in the save file, initialises them as an ArrayList of Tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"honglinshang"},"content":"     * @param save Save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of initialised Tasks based on uncorrupted data in save file.","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"honglinshang"},"content":"     * @throws FileNotFoundException If the save file cannot be found at filePath.","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"honglinshang"},"content":"    private static TaskList readFileContents(File save, Ui ui) throws FileNotFoundException {","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"honglinshang"},"content":"        Scanner s \u003d new Scanner(save);","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"honglinshang"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"honglinshang"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"honglinshang"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"honglinshang"},"content":"                counter++;","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"honglinshang"},"content":"                newTaskList.add(newTask(s.nextLine()));","lastModifiedDate":"2023-04-04"},{"lineNumber":249,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"honglinshang"},"content":"                ui.printInvalidSaveFile(counter, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                logger.log(Level.INFO, \"Error in reading data from file\");","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"honglinshang"},"content":"            } catch (DateOverException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"honglinshang"},"content":"                ui.printExistingDateOver(e);","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        logger.log(Level.INFO, \"Successfully read \" + counter + \" tasks from save file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"honglinshang"},"content":"        return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"irving11119"},"content":"    private static ModuleList readModuleFileContents(File save, Ui ui, ModuleList allModules, Calendar calendar)","lastModifiedDate":"2023-03-19"},{"lineNumber":261,"author":{"gitId":"irving11119"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2023-03-11"},{"lineNumber":262,"author":{"gitId":"irving11119"},"content":"        Scanner s \u003d new Scanner(save);","lastModifiedDate":"2023-03-11"},{"lineNumber":263,"author":{"gitId":"irving11119"},"content":"        ModuleList newModuleList \u003d new ModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":264,"author":{"gitId":"irving11119"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":265,"author":{"gitId":"irving11119"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":266,"author":{"gitId":"irving11119"},"content":"            try {","lastModifiedDate":"2023-03-11"},{"lineNumber":267,"author":{"gitId":"irving11119"},"content":"                String moduleInfo \u003d s.nextLine();","lastModifiedDate":"2023-03-18"},{"lineNumber":268,"author":{"gitId":"irving11119"},"content":"                String[] moduleInfoArgs \u003d moduleInfo.split(\"\\\\|\");","lastModifiedDate":"2023-03-18"},{"lineNumber":269,"author":{"gitId":"irving11119"},"content":"                String moduleCode \u003d moduleInfoArgs[0];","lastModifiedDate":"2023-03-18"},{"lineNumber":270,"author":{"gitId":"irving11119"},"content":"                if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":271,"author":{"gitId":"irving11119"},"content":"                    throw new InvalidSaveFile();","lastModifiedDate":"2023-03-18"},{"lineNumber":272,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":273,"author":{"gitId":"irving11119"},"content":"                Module newModule \u003d allModules.findModule(moduleCode);","lastModifiedDate":"2023-03-18"},{"lineNumber":274,"author":{"gitId":"irving11119"},"content":"                if (newModule \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":275,"author":{"gitId":"irving11119"},"content":"                    throw new InvalidSaveFile();","lastModifiedDate":"2023-03-11"},{"lineNumber":276,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-11"},{"lineNumber":277,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":278,"author":{"gitId":"irving11119"},"content":"                Module module \u003d new Module(newModule.getCode(), newModule.getTitle(), newModule.getModuleCredits());","lastModifiedDate":"2023-03-19"},{"lineNumber":279,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                if (isAdded(newModuleList, module)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":280,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                    throw new DuplicateModuleInTextFileException();","lastModifiedDate":"2023-04-01"},{"lineNumber":281,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":282,"author":{"gitId":"irving11119"},"content":"                addLessons(module, newModule, moduleInfoArgs);","lastModifiedDate":"2023-03-19"},{"lineNumber":283,"author":{"gitId":"irving11119"},"content":"                calendar.addModule(module);","lastModifiedDate":"2023-03-19"},{"lineNumber":284,"author":{"gitId":"irving11119"},"content":"                newModuleList.add(module);","lastModifiedDate":"2023-03-19"},{"lineNumber":285,"author":{"gitId":"irving11119"},"content":"                counter++;","lastModifiedDate":"2023-03-11"},{"lineNumber":286,"author":{"gitId":"irving11119"},"content":"            } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":287,"author":{"gitId":"irving11119"},"content":"                ui.printInvalidSaveFile(counter, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":288,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            } catch (DuplicateModuleInTextFileException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":289,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                ui.printDuplicateModuleInTextFile(counter);","lastModifiedDate":"2023-04-01"},{"lineNumber":290,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":291,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":292,"author":{"gitId":"irving11119"},"content":"        return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":293,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":294,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":295,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":296,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Checks if the module is already in the module file.","lastModifiedDate":"2023-04-01"},{"lineNumber":297,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-04-01"},{"lineNumber":298,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param moduleList The list of modules.","lastModifiedDate":"2023-04-01"},{"lineNumber":299,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param module The module to be checked.","lastModifiedDate":"2023-04-01"},{"lineNumber":300,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return True if the module is already in the module file.","lastModifiedDate":"2023-04-01"},{"lineNumber":301,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":302,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public static boolean isAdded(ModuleList moduleList, Module module) {","lastModifiedDate":"2023-04-01"},{"lineNumber":303,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        for (Module mod: moduleList) {","lastModifiedDate":"2023-04-01"},{"lineNumber":304,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (mod.getCode().equals(module.getCode())) {","lastModifiedDate":"2023-04-01"},{"lineNumber":305,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                return true;","lastModifiedDate":"2023-04-01"},{"lineNumber":306,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":307,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":308,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return false;","lastModifiedDate":"2023-04-01"},{"lineNumber":309,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":310,"author":{"gitId":"irving11119"},"content":"    private static void addLessons(Module module, Module searchModule, String[] moduleInfo) {","lastModifiedDate":"2023-03-19"},{"lineNumber":311,"author":{"gitId":"irving11119"},"content":"        module.createNewTimeTable();","lastModifiedDate":"2023-03-19"},{"lineNumber":312,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":313,"author":{"gitId":"irving11119"},"content":"        for (int i \u003d 1; i \u003c moduleInfo.length; i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":314,"author":{"gitId":"irving11119"},"content":"            String[] lessonInfo \u003d moduleInfo[i].split(\":\");","lastModifiedDate":"2023-03-19"},{"lineNumber":315,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":316,"author":{"gitId":"irving11119"},"content":"            for (Timetable timetable: searchModule.getModuleTimetable()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":317,"author":{"gitId":"irving11119"},"content":"                if (timetable.getLessonType().equals(lessonInfo[0])","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"irving11119"},"content":"                        \u0026\u0026 timetable.getClassNumber().equals(lessonInfo[1])) {","lastModifiedDate":"2023-04-03"},{"lineNumber":319,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":320,"author":{"gitId":"irving11119"},"content":"                    if (!module.getModuleTimetable().contains(timetable)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":321,"author":{"gitId":"irving11119"},"content":"                        module.getModuleTimetable().add(timetable);","lastModifiedDate":"2023-03-19"},{"lineNumber":322,"author":{"gitId":"irving11119"},"content":"                    }","lastModifiedDate":"2023-03-19"},{"lineNumber":323,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":324,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":325,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":326,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":327,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":328,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":329,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":330,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":331,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":332,"author":{"gitId":"honglinshang"},"content":"     * Interprets a line from the save file, returns it as a new Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":333,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":334,"author":{"gitId":"honglinshang"},"content":"     * @param text Line from the save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"honglinshang"},"content":"     * @return Corresponding Task to data stored in {@code text}.","lastModifiedDate":"2023-03-08"},{"lineNumber":336,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidSaveFile If any line in the input data is not of the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":337,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":338,"author":{"gitId":"honglinshang"},"content":"    private static Task newTask(String text) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":339,"author":{"gitId":"honglinshang"},"content":"        char type;","lastModifiedDate":"2023-04-01"},{"lineNumber":340,"author":{"gitId":"honglinshang"},"content":"        Boolean isDone;","lastModifiedDate":"2023-04-01"},{"lineNumber":341,"author":{"gitId":"honglinshang"},"content":"        String param;","lastModifiedDate":"2023-04-01"},{"lineNumber":342,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":343,"author":{"gitId":"honglinshang"},"content":"            type \u003d getType(text);","lastModifiedDate":"2023-04-01"},{"lineNumber":344,"author":{"gitId":"honglinshang"},"content":"            isDone \u003d isStatusDone(text);","lastModifiedDate":"2023-04-01"},{"lineNumber":345,"author":{"gitId":"honglinshang"},"content":"            param \u003d getParam(text);","lastModifiedDate":"2023-04-01"},{"lineNumber":346,"author":{"gitId":"honglinshang"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":347,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-04-01"},{"lineNumber":348,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":349,"author":{"gitId":"honglinshang"},"content":"        switch (type) {","lastModifiedDate":"2023-03-08"},{"lineNumber":350,"author":{"gitId":"honglinshang"},"content":"        case TXT_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":351,"author":{"gitId":"honglinshang"},"content":"            return newToDo(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":352,"author":{"gitId":"honglinshang"},"content":"        case TXT_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":353,"author":{"gitId":"honglinshang"},"content":"            return newDeadline(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":354,"author":{"gitId":"honglinshang"},"content":"        case TXT_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":355,"author":{"gitId":"honglinshang"},"content":"            return newEvent(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":356,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":357,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":358,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":359,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":360,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":361,"author":{"gitId":"honglinshang"},"content":"    private static char getType(String text) throws InvalidSaveFile {","lastModifiedDate":"2023-04-04"},{"lineNumber":362,"author":{"gitId":"honglinshang"},"content":"        char type \u003d text.charAt(TYPE_POS);","lastModifiedDate":"2023-04-04"},{"lineNumber":363,"author":{"gitId":"honglinshang"},"content":"        if (type !\u003d TXT_TODO_WORD \u0026 type !\u003d TXT_DEADLINE_WORD \u0026 type !\u003d TXT_EVENT_WORD) {","lastModifiedDate":"2023-04-04"},{"lineNumber":364,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-04-04"},{"lineNumber":365,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":366,"author":{"gitId":"honglinshang"},"content":"        return type;","lastModifiedDate":"2023-04-04"},{"lineNumber":367,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":368,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":369,"author":{"gitId":"honglinshang"},"content":"    private static Boolean isStatusDone(String text) throws InvalidSaveFile {","lastModifiedDate":"2023-04-04"},{"lineNumber":370,"author":{"gitId":"honglinshang"},"content":"        char status \u003d text.charAt(STATUS_POS);","lastModifiedDate":"2023-04-04"},{"lineNumber":371,"author":{"gitId":"honglinshang"},"content":"        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2023-04-04"},{"lineNumber":372,"author":{"gitId":"honglinshang"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":373,"author":{"gitId":"honglinshang"},"content":"        } else if (status \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2023-04-04"},{"lineNumber":374,"author":{"gitId":"honglinshang"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":375,"author":{"gitId":"honglinshang"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":376,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":378,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":379,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":380,"author":{"gitId":"honglinshang"},"content":"    private static String getParam(String text) {","lastModifiedDate":"2023-03-08"},{"lineNumber":381,"author":{"gitId":"honglinshang"},"content":"        return text.substring(PARAM_POS);","lastModifiedDate":"2023-03-08"},{"lineNumber":382,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":383,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":384,"author":{"gitId":"honglinshang"},"content":"    private static ToDo newToDo(Boolean isDone, String param) {","lastModifiedDate":"2023-03-08"},{"lineNumber":385,"author":{"gitId":"honglinshang"},"content":"        ToDo newToDo \u003d new ToDo(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":386,"author":{"gitId":"honglinshang"},"content":"        newToDo.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":387,"author":{"gitId":"honglinshang"},"content":"        return newToDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":388,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":389,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":390,"author":{"gitId":"honglinshang"},"content":"    private static Deadline newDeadline(Boolean isDone, String param) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":391,"author":{"gitId":"honglinshang"},"content":"        final String[] paramAndBy;","lastModifiedDate":"2023-03-08"},{"lineNumber":392,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":393,"author":{"gitId":"honglinshang"},"content":"            paramAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":394,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDeadline e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":395,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":396,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":397,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-04-01"},{"lineNumber":398,"author":{"gitId":"honglinshang"},"content":"            Deadline newDeadline \u003d new Deadline(paramAndBy[0], paramAndBy[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":399,"author":{"gitId":"honglinshang"},"content":"            newDeadline.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":400,"author":{"gitId":"honglinshang"},"content":"            return newDeadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":401,"author":{"gitId":"honglinshang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":402,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-04-01"},{"lineNumber":403,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":404,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":405,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":406,"author":{"gitId":"honglinshang"},"content":"    private static Event newEvent(Boolean isDone, String param) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":407,"author":{"gitId":"honglinshang"},"content":"        final String[] paramAndFromTo;","lastModifiedDate":"2023-03-08"},{"lineNumber":408,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":409,"author":{"gitId":"honglinshang"},"content":"            paramAndFromTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":410,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidEvent e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":411,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":412,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":413,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":414,"author":{"gitId":"honglinshang"},"content":"            Event newEvent \u003d new Event(paramAndFromTo[0], paramAndFromTo[1], paramAndFromTo[2]);","lastModifiedDate":"2023-03-08"},{"lineNumber":415,"author":{"gitId":"honglinshang"},"content":"            newEvent.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":416,"author":{"gitId":"honglinshang"},"content":"            return newEvent;","lastModifiedDate":"2023-03-08"},{"lineNumber":417,"author":{"gitId":"honglinshang"},"content":"        } catch (DateTimeParseException | DateOrderException e) {","lastModifiedDate":"2023-04-01"},{"lineNumber":418,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":419,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":420,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":421,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":422,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":178,"honglinshang":211,"yixuann02":1,"T-Wan-Lin":6,"PoobalanAatmikaLakshmi":26}},{"path":"src/main/java/seedu/apollo/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" * Deadlines are a type of Task that have a set due date,","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" * along with the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    public static final String DEADLINE_LABEL \u003d \"D\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task, with added parsing for due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * If parsing is not possible, save due date as String.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param byString String describing the due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @throws DateTimeParseException If due date is not entered in right format.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException If due date occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    public Deadline(String description, String byString)","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"            throws DateTimeParseException, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d LocalDateTime.parse(byString);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        if (by.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"            throw new DateOverException(getType(), description, by, null, null);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the due date of the Deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    public String getBy(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        return by.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        return \"deadline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    public LocalDateTime getByDate() {","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"        return by;","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        LocalDate byDate \u003d by.toLocalDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        return date.isEqual(byDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + DEADLINE_LABEL + \"][\" + getStatus() + \"] \" + description + \" (by: \" + getBy(printPattern) + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"honglinshang":73,"T-Wan-Lin":3,"PoobalanAatmikaLakshmi":1}},{"path":"src/main/java/seedu/apollo/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":" * Events are a type of Task that have a set start date and end date,","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":" * along with the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    public static final String EVENT_LABEL \u003d \"E\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task, with added parsing for start and end dates.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     * If parsing is not possible, save date(s) as String(s).","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * @param fromString String describing the start date.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * @param toString String describing the end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * @throws DateTimeParseException If either date is not entered in right format.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOrderException If end date occurs before the start date.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException If end date occurs before the current date.","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    public Event(String description, String fromString, String toString)","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"            throws DateTimeParseException, DateOrderException, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d LocalDateTime.parse(fromString);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d LocalDateTime.parse(toString);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"            throw new DateOrderException();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        if (to.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"            throw new DateOverException(getType(), description, null, from, to);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the start date of the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed start date.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"    public String getFrom(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"        return from.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the end date of the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    public String getTo(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        return to.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"    public LocalDateTime getFromDate() {","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"        return from;","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"    public LocalDateTime getToDate() {","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"        return to;","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"        return \"event\";","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"        LocalDate fromDate \u003d from.toLocalDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"        LocalDate toDate \u003d to.toLocalDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        boolean isBefore \u003d date.isBefore(fromDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"        boolean isAfter \u003d date.isAfter(toDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"        return !(isBefore | isAfter);","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + EVENT_LABEL + \"][\" + getStatus() + \"] \" + description +","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"                \" (from: \" + getFrom(printPattern) + \" to: \" + getTo(printPattern) + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"irving11119":1,"honglinshang":92,"T-Wan-Lin":7,"PoobalanAatmikaLakshmi":12}},{"path":"src/main/java/seedu/apollo/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":" * Parent class of all types of Tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":" * Contains the Task\u0027s description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    // Formatters used to parse and print date and time","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter storePattern \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter printPattern \u003d DateTimeFormatter","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"            .ofPattern(\"MMM dd yyyy, hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    protected String description;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     * Initialises the Task with its description sets its status as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the type of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     * @return String describing the type of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        return \"task\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"     * @return String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     * Check if the Task has been done.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if the Task is done, {@code false} otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        return isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing status of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     * @return \"X\" if the Task is done, \" \" otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"     * Set the status of the Task based on the input.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"     * @param done Boolean describing the status of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"     * Given a date, determine if it occurs during the duration of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"     * @param date Date to be checked","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if there is overlap, {@code false} otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"     * Prints out the Task in desired format","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":2,"honglinshang":92}},{"path":"src/main/java/seedu/apollo/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" * TaskList class is a modified ArrayList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * Get a shortlisted list of all Tasks that overlap with the given date.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     * @param date The given date to check for.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     * @return ArrayList of all shortlisted tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    public TaskList getTasksOnDate(LocalDate date) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        TaskList tasksOnDate \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        for (Task task : this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"                tasksOnDate.add(task);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        return tasksOnDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * Get a shortlisted list of all Tasks that contain the given keyword in their description.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     * @param keyword The given keyword to check for.","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of all shortlisted tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"        String lowerKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        Stream\u003cTask\u003e filteredTasks \u003d this.stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(lowerKeyword));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"        return (ArrayList\u003cTask\u003e) filteredTasks.collect(Collectors.toList());","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"     * Groups tasks with the same type within the TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"    public void clusterByType() {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"        this.sort(Comparator.comparing(Task::getType));","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"     * Determines the order of the events based on their respective from and to dates.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts events in natural time order.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param startDay1 The start day of the first event.","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param endDay1   The end day of the first event.","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param startDay2 The start day of the second event.","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param endDay2   The end day of the second event.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return The order of the events.","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"    private int deterministicSortForEvent(LocalDateTime startDay1, LocalDateTime endDay1, LocalDateTime startDay2,","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"                                          LocalDateTime endDay2) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"        assert startDay1 !\u003d null : \"Start day of first event should not be null\";","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"        assert endDay1 !\u003d null : \"End day of first event should not be null\";","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"        assert startDay2 !\u003d null : \"Start day of second event should not be null\";","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"        assert endDay2 !\u003d null : \"End day of second event should not be null\";","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"        //both events have same start time","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"        if (startDay1.equals(startDay2)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"            //if event2 ends first","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"            if (endDay2.isAfter(endDay1)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"                return 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"                //event1 ends first","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"            } else if (endDay1.isBefore(endDay2)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"                return -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"                //both events end at the same time","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"                return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"        } else if (startDay1.isAfter(startDay2)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"            return 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"            return -1;","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"     * Determines the order of the deadlines based on their respective due dates.","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param deadline1 The deadline of the first deadline task.","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param deadline2 The deadline of the second deadline task.","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return The order of the deadlines.","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"    private int deterministicSortForDeadline(LocalDateTime deadline1, LocalDateTime deadline2) {","lastModifiedDate":"2023-04-01"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"        assert deadline1 !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"        assert deadline2 !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"        if (deadline1.isAfter(deadline2)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"            return 1;","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"        } else if (deadline1.isBefore(deadline2)) {","lastModifiedDate":"2023-04-01"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"            return -1;","lastModifiedDate":"2023-04-01"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"        } else {","lastModifiedDate":"2023-04-01"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"            return 0;","lastModifiedDate":"2023-04-01"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts the deadline tasks in the TaskList by their respective due dates.","lastModifiedDate":"2023-04-01"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param allTasks","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"    private void sortDeadlineTasks(TaskList allTasks){","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"        assert allTasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"        allTasks.sort((Task task1, Task task2) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"            if (task1 instanceof Deadline \u0026\u0026 task2 instanceof Deadline) {","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"                LocalDateTime deadline1Date \u003d ((Deadline) task1).getByDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"                LocalDateTime deadline2Date \u003d ((Deadline) task2).getByDate();","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"                return deterministicSortForDeadline(deadline1Date, deadline2Date);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"T-Wan-Lin"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"T-Wan-Lin"},"content":"                return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":129,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":130,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts the event tasks in the TaskList by their respective from and to dates.","lastModifiedDate":"2023-04-01"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param allTasks","lastModifiedDate":"2023-04-01"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"    private void sortEventTasks(TaskList allTasks){","lastModifiedDate":"2023-04-01"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"        assert allTasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-04-01"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"        allTasks.sort((Task task1, Task task2) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"            if (task1 instanceof Event \u0026\u0026 task2 instanceof Event) {","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"T-Wan-Lin"},"content":"                LocalDateTime startDay1 \u003d ((Event) task1).getFromDate();","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"T-Wan-Lin"},"content":"                LocalDateTime endDay1 \u003d ((Event) task1).getToDate();","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"T-Wan-Lin"},"content":"                LocalDateTime startDay2 \u003d ((Event) task2).getFromDate();","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"T-Wan-Lin"},"content":"                LocalDateTime endDay2 \u003d ((Event) task2).getToDate();","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"                return deterministicSortForEvent(startDay1, endDay1, startDay2, endDay2);","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"                return 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"        });","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts the TaskList by date.","lastModifiedDate":"2023-04-01"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param allTasks The TaskList containing different task types to be sorted.","lastModifiedDate":"2023-04-01"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"T-Wan-Lin"},"content":"    public void sortTaskByDay(TaskList allTasks) {","lastModifiedDate":"2023-04-01"},{"lineNumber":158,"author":{"gitId":"T-Wan-Lin"},"content":"        assert allTasks !\u003d null : \"TaskList should not be null\";","lastModifiedDate":"2023-04-01"},{"lineNumber":159,"author":{"gitId":"T-Wan-Lin"},"content":"        allTasks.clusterByType();","lastModifiedDate":"2023-04-01"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"        //do nothing for todo type tasks","lastModifiedDate":"2023-04-01"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-04-01"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"            if (allTasks.get(i).getType().equals(\"deadline\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"                sortDeadlineTasks(allTasks);","lastModifiedDate":"2023-04-01"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"            } else if (allTasks.get(i).getType().equals(\"event\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"                sortEventTasks(allTasks);","lastModifiedDate":"2023-04-01"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-04-01"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":8,"honglinshang":37,"T-Wan-Lin":124}},{"path":"src/main/java/seedu/apollo/task/ToDo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * ToDos are a type of Task that have only the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public static final String TODO_LABEL \u003d \"T\";","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"        return description;","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        return \"todo\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + TODO_LABEL + \"][\" + getStatus() + \"] \" + description;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"honglinshang":35,"T-Wan-Lin":3}},{"path":"src/main/java/seedu/apollo/ui/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.module.AddModuleCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.module.DeleteModuleCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.module.ListModuleCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.module.ListModuleWithLessonCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.utils.WeekCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.command.module.ShowModuleCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.DateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.ModifyCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.AddModHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DateHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeadlineHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeleteHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeleteModHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.EventHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.ExitCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ExitHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.FindHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ListHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ListModuleHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.MarkHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ShowModHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.SpecifiedAidHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.TodoHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.UnmarkHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.WeekHelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.EmptyAddModException;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.EmptyDelModException;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.module.EmptyShowModException;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.EmptyKeywordException;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.EmptyTaskDescException;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":" * Parser class that makes sense of user commands or text.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"public class Parser {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    // User command words understood by Apollo","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_EXIT_WORD \u003d \"bye\";","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_HELP_WORD \u003d \"help\";","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_LIST_WORD \u003d \"list\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_WEEK_WORD \u003d \"week\";","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DATE_WORD \u003d \"date\";","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_FIND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_MARK_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_UNMARK_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DELETE_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_TODO_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_EVENT_WORD \u003d \"event\";","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"    public static final String COMMAND_ADD_MODULE_WORD \u003d \"addmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"    public static final String COMMAND_LIST_MODULE_WORD \u003d \"listmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"    public static final String COMMAND_DELETE_MODULE_WORD \u003d \"delmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"    public static final String COMMAND_SHOW_MODULE_DETAILS_WORD \u003d \"showmod\";","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"     * Returns the corresponding Command to the user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"     * @param userCommand Command line input from user.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"     * @param ui          Prints out error messages if command cannot be parsed.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"     * @param size        Number of tasks saved in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"     * @return Corresponding Command class to user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If an unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"    public static Command getCommand(String userCommand, Ui ui, int size, ModuleList moduleData)","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        final String[] split \u003d userCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"            return parseCommand(split, size, moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"        } catch (EmptyTaskDescException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"            ui.printEmptyDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        } catch (EmptyKeywordException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"            ui.printEmptyKeyword();","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"        } catch (EmptyAddModException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"            ui.printEmptyAddMod();","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"        } catch (EmptyDelModException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"            ui.printEmptyDelMod();","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIdx(size);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDeadline e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidDeadline();","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidEvent e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidEvent();","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDateTime e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidDate();","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"        } catch (InvalidModule e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidModule();","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"yixuann02"},"content":"        } catch (EmptyShowModException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"            ui.printEmptyShowModCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"        return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"     * Adds data from user input into the corresponding Command class that is returned.","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"     * @param size  Number of tasks saved in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"     * @return Command class with data from user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDateTime         If the input format for a date and time is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"     * @throws EmptyKeywordException   If keyword is left empty (for Find command).","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"     * @throws NumberFormatException   If the index is left empty (for Mark, Delete commands).","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"     * @throws EmptyTaskDescException  If task description is left empty (for Add command).","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline         If the input format for adding a deadline is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent            If the input format for adding an event is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"     * @throws IllegalCommandException If an unknown command is input by the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException     If some unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"yixuann02"},"content":"     * @throws InvalidModule           If the module does not exist","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"yixuann02"},"content":"     * @throws EmptyDelModException    If there is no input for module code","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"yixuann02"},"content":"     * @throws EmptyAddModException    If there is no input for module code","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"yixuann02"},"content":"     * @throws EmptyShowModException   If there is no input for module code","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"    private static Command parseCommand(String[] split, int size, ModuleList moduleData)","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"            throws InvalidDateTime, EmptyKeywordException, EmptyTaskDescException, InvalidDeadline, InvalidEvent,","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            IllegalCommandException, IllegalArgumentException, NumberFormatException, UnexpectedException,","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            InvalidModule, EmptyAddModException, EmptyDelModException, EmptyShowModException {","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"        String command \u003d split[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"yixuann02"},"content":"        case COMMAND_SHOW_MODULE_DETAILS_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"yixuann02"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"yixuann02"},"content":"                throw new EmptyShowModException();","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"yixuann02"},"content":"            return new ShowModuleCommand(split[1], moduleData);","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"        case COMMAND_LIST_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"yixuann02"},"content":"            if (isOneWord(split)) {","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"                return new ListModuleCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"yixuann02"},"content":"            return new ListModuleWithLessonCommand(split[1], moduleData);","lastModifiedDate":"2023-04-03"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EXIT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_HELP_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (isOneWord(split)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                return new HelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":162,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":163,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            if (!isOneWordSecondClause(split[1])) {","lastModifiedDate":"2023-04-03"},{"lineNumber":164,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-04-03"},{"lineNumber":165,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":166,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":167,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            HelpCommand newHelpCommand \u003d chooseHelpCommand(split[1]);","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return newHelpCommand;","lastModifiedDate":"2023-04-02"},{"lineNumber":170,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":171,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_LIST_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"honglinshang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_WEEK_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"honglinshang"},"content":"            return new WeekCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DATE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"                throw new InvalidDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"honglinshang"},"content":"            return new DateCommand(split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_FIND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyKeywordException();","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"honglinshang"},"content":"            return new FindCommand(split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DELETE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"honglinshang"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"honglinshang"},"content":"            return new ModifyCommand(command, split[1], size);","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyTaskDescException();","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"            return new AddCommand(command, split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"irving11119"},"content":"        case COMMAND_ADD_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"irving11119"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"irving11119"},"content":"                throw new EmptyAddModException();","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"            return new AddModuleCommand(split[1], moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"irving11119"},"content":"        case COMMAND_DELETE_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"irving11119"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"irving11119"},"content":"                throw new EmptyDelModException();","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"            String moduleCode \u003d split[1];","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"irving11119"},"content":"            return new DeleteModuleCommand(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":231,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":232,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Method that selects which help command class to invoke","lastModifiedDate":"2023-04-02"},{"lineNumber":233,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-04-02"},{"lineNumber":234,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param helpCommandName","lastModifiedDate":"2023-04-02"},{"lineNumber":235,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return The appropriate HelpCommandClass child","lastModifiedDate":"2023-04-02"},{"lineNumber":236,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @throws IllegalArgumentException If an unknown command is input by the user.","lastModifiedDate":"2023-04-02"},{"lineNumber":237,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public static HelpCommand chooseHelpCommand(String helpCommandName) throws IllegalArgumentException {","lastModifiedDate":"2023-04-02"},{"lineNumber":239,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        switch (helpCommandName) {","lastModifiedDate":"2023-04-02"},{"lineNumber":240,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"list\":","lastModifiedDate":"2023-04-02"},{"lineNumber":241,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new ListHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":242,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"todo\":","lastModifiedDate":"2023-04-02"},{"lineNumber":243,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new TodoHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":244,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"deadline\":","lastModifiedDate":"2023-04-02"},{"lineNumber":245,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new DeadlineHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":246,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"event\":","lastModifiedDate":"2023-04-02"},{"lineNumber":247,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new EventHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":248,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"mark\":","lastModifiedDate":"2023-04-02"},{"lineNumber":249,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new MarkHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":250,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"unmark\":","lastModifiedDate":"2023-04-02"},{"lineNumber":251,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new UnmarkHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":252,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"delete\":","lastModifiedDate":"2023-04-02"},{"lineNumber":253,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new DeleteHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":254,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"find\":","lastModifiedDate":"2023-04-02"},{"lineNumber":255,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new FindHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":256,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        case \"date\":","lastModifiedDate":"2023-04-02"},{"lineNumber":257,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            return new DateHelpCommand();","lastModifiedDate":"2023-04-02"},{"lineNumber":258,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"listmod\":","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"T-Wan-Lin"},"content":"            return new ListModuleHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"help\":","lastModifiedDate":"2023-04-03"},{"lineNumber":261,"author":{"gitId":"T-Wan-Lin"},"content":"            return new SpecifiedAidHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":262,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"bye\":","lastModifiedDate":"2023-04-03"},{"lineNumber":263,"author":{"gitId":"T-Wan-Lin"},"content":"            return new ExitHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":264,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"week\":","lastModifiedDate":"2023-04-03"},{"lineNumber":265,"author":{"gitId":"T-Wan-Lin"},"content":"            return new WeekHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":266,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"delmod\":","lastModifiedDate":"2023-04-03"},{"lineNumber":267,"author":{"gitId":"T-Wan-Lin"},"content":"            return new DeleteModHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":268,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"showmod\":","lastModifiedDate":"2023-04-03"},{"lineNumber":269,"author":{"gitId":"T-Wan-Lin"},"content":"            return new ShowModHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":270,"author":{"gitId":"T-Wan-Lin"},"content":"        case \"addmod\":","lastModifiedDate":"2023-04-03"},{"lineNumber":271,"author":{"gitId":"T-Wan-Lin"},"content":"            return new AddModHelpCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":272,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        default:","lastModifiedDate":"2023-04-02"},{"lineNumber":273,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            throw new IllegalArgumentException(\"Invalid command name: \" + helpCommandName);","lastModifiedDate":"2023-04-02"},{"lineNumber":274,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":275,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":276,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":277,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":278,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"honglinshang"},"content":"     * Checks if the user\u0027s input parameter is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"honglinshang"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if the input parameter is empty, {@code false} otherwise.","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"honglinshang"},"content":"    private static Boolean isEmptyParam(String[] split) {","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"honglinshang"},"content":"        return (split.length !\u003d 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":289,"author":{"gitId":"T-Wan-Lin"},"content":"     * Checks if the user\u0027s input is only one word.","lastModifiedDate":"2023-03-15"},{"lineNumber":290,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":291,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-15"},{"lineNumber":292,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return {@code true} if the input is only one word, {@code false} otherwise.","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Boolean isOneWord(String[] split) {","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"T-Wan-Lin"},"content":"        return (split.length \u003d\u003d 1);","lastModifiedDate":"2023-03-15"},{"lineNumber":296,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":299,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Checks if user input a one word [command] when using the help [command] function","lastModifiedDate":"2023-04-03"},{"lineNumber":300,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param myString Second clause of user input with the command user needs help for","lastModifiedDate":"2023-04-03"},{"lineNumber":301,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return {@code true} if user input a one word command,{@code false} otherwise","lastModifiedDate":"2023-04-03"},{"lineNumber":302,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":303,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    private static Boolean isOneWordSecondClause(String myString) {","lastModifiedDate":"2023-04-03"},{"lineNumber":304,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String[] words \u003d myString.split(\"\\\\s+\");","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return (words.length \u003d\u003d 1);","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":309,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    private static Boolean isTwoWord(String[] split) {","lastModifiedDate":"2023-04-02"},{"lineNumber":310,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return (split.length \u003d\u003d 2);","lastModifiedDate":"2023-04-02"},{"lineNumber":311,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":312,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"honglinshang"},"content":"     * Separates a Deadline\u0027s input data into its description, and due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"honglinshang"},"content":"     * @param param User input data describing the Deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed user input split into description and due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline If the user did not input the due date in the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"honglinshang"},"content":"    public static String[] parseDeadline(String param) throws InvalidDeadline {","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"T-Wan-Lin"},"content":"        String[] split \u003d param.trim().split(\"\\\\s-by\\\\s\", 2);","lastModifiedDate":"2023-04-03"},{"lineNumber":322,"author":{"gitId":"honglinshang"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2023-03-08"},{"lineNumber":323,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidDeadline();","lastModifiedDate":"2023-03-08"},{"lineNumber":324,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-03-08"},{"lineNumber":326,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":327,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":328,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":329,"author":{"gitId":"honglinshang"},"content":"     * Separates an Event\u0027s input data into its description, start date, and end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":330,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":331,"author":{"gitId":"honglinshang"},"content":"     * @param param User input data describing the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":332,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed user input split into description, start date, and end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":333,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent If the user did not input the start or end date in the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":334,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"honglinshang"},"content":"    public static String[] parseEvent(String param) throws InvalidEvent {","lastModifiedDate":"2023-03-08"},{"lineNumber":336,"author":{"gitId":"T-Wan-Lin"},"content":"        String[] split \u003d param.trim().split(\"\\\\s-from\\\\s|\\\\s-to\\\\s\", 3);","lastModifiedDate":"2023-04-03"},{"lineNumber":337,"author":{"gitId":"T-Wan-Lin"},"content":"        String[] checkFromToOrder \u003d Arrays.copyOfRange(param.trim().split(\" -\"), 1, 3);","lastModifiedDate":"2023-04-03"},{"lineNumber":338,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":339,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        if ((split.length !\u003d 3)||(!checkFromToOrder[0].startsWith(\"from\") || !checkFromToOrder[1].startsWith(\"to\"))){","lastModifiedDate":"2023-03-15"},{"lineNumber":340,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidEvent();","lastModifiedDate":"2023-03-08"},{"lineNumber":341,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":342,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-03-08"},{"lineNumber":343,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":344,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":345,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":49,"honglinshang":147,"yixuann02":21,"T-Wan-Lin":59,"PoobalanAatmikaLakshmi":69}},{"path":"src/main/java/seedu/apollo/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.CalendarModule;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.utils.LessonTypeUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.calendar.SemesterUtils.getWeekNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.utils.DayTypeUtil.determineDay;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":" * User Interface class that deals with inputs from and outputs to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"public class Ui {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    // Scanner to read user inputs on CLI","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     * Get user input from CLI.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     * @return String containing the CLI input.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"     * Prints out a line divider.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    public void showLine() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"    public void showSmallLine() {","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"_____________________________\");","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printApolloLogo() {","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Hello from\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"                \" ____    ____    _____  __      __       _____\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"                \"|  _  | |  _ \\\\  | ___ | | |     | |     | ___ |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"                \"| |_| | | |_| | | | | | | |     | |     | | | |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"                \"| | | | |  __/  | |_| | | |___  | |___  | |_| |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"                \"|_| |_| |_|     \\\\_____/ |_____| |_____| \\\\_____/\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"                \"\\n\" +","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Your personal task and timetable manager!\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"                \"Enter \\\"help\\\" to see a list of commands.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"        showLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"        printApolloLogo();","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"     * For {@code help} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"     * Prints out a list of all available commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"        printHelpCommandOptions();","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"        printTaskCommands();","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"        showLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"        printModuleCommands();","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"        printNote();","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"        showLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"        printUtility();","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printHelpCommandOptions(){","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"The help menu gives a summary of all the commands available in Apollo!\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Input `help` to see all available commands.\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Input \\\"help [COMMAND]\\\" for usage help and more information for a specific command.\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printHelpCommandHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"The help menu gives a summary of all the commands available in Apollo!\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: help\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"                \"For specific command help:\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: help [COMMAND]\\n\" + \"Example: help showmod\");","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printTaskCommands(){","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.print(\"These are the available Task Commands and their corresponding commands (in brackets):\\n\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"                \"1. `list` - Track and organises your tasklist!\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"                \"2. `todo [TASK]` - Adds a ToDo in your tasklist.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"                \"3. `deadline [TASK] -[BY]` - Adds a Deadline in your tasklist.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"                \"4. `event [TASK] -[FROM] -[TO]` - Adds an Event in your tasklist.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"                \"5. `mark [IDX]` - Marks a task in your tasklist as done!\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"                \"6. `unmark [IDX]` - Unmarks a task in your tasklist as incomplete.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"                \"7. `delete [IDX]` - Deletes a task from your list.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"                \"8. `find [KEYWORD]` - Shows all tasks that contain a specified keyword.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"                \"9. `date [DATE]` - Shows all tasks that occur on the specified date.\\n\\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printModuleCommands(){","lastModifiedDate":"2023-04-01"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.print(\"These are the available Module Commands and their corresponding commands (in brackets):\\n\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"                \"1. `listmod` - Track and organise your academic plan for this semester!\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"                \"2. `listmod [MODULE_CODE]` - See more information about the classes you\u0027ve added \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"                \"for a module in your list.\\n\"+","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"                \"3. `listmod [MODULE_CODE] -[FLAG]` - See more information about a specific class type \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"                \"for a module in your list\\n\"+","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"                \"4. `showmod [MODULE_CODE]` - \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"                \"See more information about the specified module.\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"                +","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"T-Wan-Lin"},"content":"                \"5. `showmod [MODULE_CODE] -[FLAG]` - \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"T-Wan-Lin"},"content":"                \"View timing of specific\" + \" lesson type for a chosen module\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"T-Wan-Lin"},"content":"                +","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"                \"6. `addmod [MODULE_CODE]` - Adds a module to your module list.\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"                \"7. `addmod [MODULE_CODE] -[FLAG] [LESSON NUMBER]` - Adds a chosen lesson of a \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"T-Wan-Lin"},"content":"                \"specified module to your timetable! \\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"T-Wan-Lin"},"content":"                \"8. `Remove a module (delmod [MODULE_CODE or IDX]` - Removes a Module you previously added by code \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"T-Wan-Lin"},"content":"                \"or index in module list.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"                \"9. `delmod [MODULE_CODE] -[FLAG] [LESSON NUMBER]` \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"                \"- Removes a lesson of a specified module from your timetable. \\n\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printUtility() {","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.print(\"These are the Utility Commands:\\n\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"                \"1. `week` - Displays your schedule for the week.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"                \"2. `bye` - Exit the program\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"                \"3. `help` - Get a summary of all the commands available on Apollo.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"T-Wan-Lin"},"content":"                \"View help for a specific command by inputting help [COMMAND] \\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"T-Wan-Lin"},"content":"        );","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"    private void printNote(){","lastModifiedDate":"2023-04-03"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"NOTE: \"+\"showmod, addmod, delmod, listmod are commands with flags included in them. \\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Whatever in [THE SQUARE BRACKETS] are provided by you.\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"                \"For more information on the flags, please input \\\"help [COMMAND]\\\" exclusive of the square brackets.\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"                \" \\n\" + \"For example, if you want to know more about the addmod command and its flags, input \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"                \"\\\"help addmod\\\".\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"     * For {@code list} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given.","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"     * @param allTasks TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"honglinshang"},"content":"    public void printList(TaskList allTasks) {","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"honglinshang"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"You have a total of \" + allTasks.size() + \" tasks in your tasklist.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"yixuann02"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"yixuann02"},"content":"        int unmarkedTaskSize \u003d 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + allTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"yixuann02"},"content":"            if (!allTasks.get(i).isDone()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"yixuann02"},"content":"                unmarkedTaskSize +\u003d 1;","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"There are \" + unmarkedTaskSize + \" unmarked tasks in your tasklist.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"honglinshang"},"content":"     * Prints out the user\u0027s schedule for the week.","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"honglinshang"},"content":"     * @param taskList Contains details about the user\u0027s tasks during the week.","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"     * @param calendar Contains details about the user\u0027s lessons during the week.","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"honglinshang"},"content":"    public void printWeek(TaskList taskList, Calendar calendar, LocalDate startWeek, LocalDate endWeek) {","lastModifiedDate":"2023-04-02"},{"lineNumber":187,"author":{"gitId":"honglinshang"},"content":"        LocalDate curr \u003d startWeek;","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"        int weekNumber \u003d getWeekNumber(curr);","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Here\u0027s your week from \" + startWeek + \" to \" + endWeek + \":\");","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"honglinshang"},"content":"            showSmallLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":192,"author":{"gitId":"honglinshang"},"content":"            System.out.println(determineDay(i) + \"\\n\");","lastModifiedDate":"2023-04-02"},{"lineNumber":193,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"honglinshang"},"content":"            // lessons","lastModifiedDate":"2023-04-02"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"            ArrayList\u003cCalendarModule\u003e modulesOnDay \u003d calendar.getModulesForDay(weekNumber, i);","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"honglinshang"},"content":"            if (modulesOnDay.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-02"},{"lineNumber":197,"author":{"gitId":"honglinshang"},"content":"                System.out.println(\"There are no lessons on this day.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"honglinshang"},"content":"            } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":199,"author":{"gitId":"honglinshang"},"content":"                printLessonsOnDay(modulesOnDay);","lastModifiedDate":"2023-04-02"},{"lineNumber":200,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"honglinshang"},"content":"            System.out.println();","lastModifiedDate":"2023-04-02"},{"lineNumber":202,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"            // tasks","lastModifiedDate":"2023-04-02"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"            TaskList tasksOnDay \u003d taskList.getTasksOnDate(curr);","lastModifiedDate":"2023-04-02"},{"lineNumber":205,"author":{"gitId":"honglinshang"},"content":"            if (tasksOnDay.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-02"},{"lineNumber":206,"author":{"gitId":"honglinshang"},"content":"                System.out.println(\"There are no tasks on this day.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"honglinshang"},"content":"            } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"                printTasksOnDay(tasksOnDay);","lastModifiedDate":"2023-04-02"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"honglinshang"},"content":"            // go to next day","lastModifiedDate":"2023-04-02"},{"lineNumber":212,"author":{"gitId":"honglinshang"},"content":"            curr \u003d curr.plusDays(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"honglinshang"},"content":"    private void printLessonsOnDay(ArrayList\u003cCalendarModule\u003e modulesOnDay) {","lastModifiedDate":"2023-04-02"},{"lineNumber":217,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Lessons:\");","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"honglinshang"},"content":"        for (CalendarModule module : modulesOnDay) {","lastModifiedDate":"2023-04-02"},{"lineNumber":219,"author":{"gitId":"honglinshang"},"content":"            Timetable schedule \u003d module.getSchedule();","lastModifiedDate":"2023-04-01"},{"lineNumber":220,"author":{"gitId":"honglinshang"},"content":"            System.out.println(schedule.getStartTime() + \"-\" + schedule.getEndTime() + \": \" +","lastModifiedDate":"2023-04-01"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"                    module.getCode() + \" \" + schedule.getLessonType() + \" (\" + schedule.getClassNumber() + \")\");","lastModifiedDate":"2023-04-03"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"    private void printTasksOnDay(TaskList tasksOnDay) {","lastModifiedDate":"2023-04-02"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Tasks:\");","lastModifiedDate":"2023-04-02"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"honglinshang"},"content":"        for (Task task : tasksOnDay) {","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"honglinshang"},"content":"            count++;","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"honglinshang"},"content":"            System.out.println(count + \". \" + task);","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"honglinshang"},"content":"    public void printClashingDeadlineMessage(TaskList clashTasks, ArrayList\u003cCalendarModule\u003e clashLessons) {","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"honglinshang"},"content":"        if (clashTasks.size() \u003d\u003d 0 \u0026 clashLessons.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Heads up, your deadline occurs on the same day as these!\");","lastModifiedDate":"2023-04-02"},{"lineNumber":239,"author":{"gitId":"honglinshang"},"content":"        showSmallLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":240,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"honglinshang"},"content":"        if (clashLessons.size() !\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"Lessons:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"honglinshang"},"content":"            for (CalendarModule module : clashLessons) {","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"honglinshang"},"content":"                System.out.println( \" - \" + module.getCode() + \" \" + module.getSchedule());","lastModifiedDate":"2023-04-02"},{"lineNumber":245,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"honglinshang"},"content":"            System.out.println();","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"honglinshang"},"content":"        if (clashTasks.size() !\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"Tasks:\");","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"honglinshang"},"content":"            for (Task task : clashTasks) {","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"honglinshang"},"content":"                System.out.println(\" - \" + task);","lastModifiedDate":"2023-04-02"},{"lineNumber":253,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"honglinshang"},"content":"        showSmallLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":256,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":258,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":259,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"yixuann02"},"content":"     * For {@code list} command.","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"yixuann02"},"content":"     * Prints all Modules within the ArrayList given","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"yixuann02"},"content":"     * @param allModules ArrayList of Modules","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printModuleList(ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"yixuann02"},"content":"        if (allModules.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"yixuann02"},"content":"            System.out.println(\"There are no modules in your module list!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"yixuann02"},"content":"            return;","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"You are taking \" + allModules.size() + \" module(s) this semester:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"yixuann02"},"content":"        for (int i \u003d 0; i \u003c allModules.size(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"T-Wan-Lin"},"content":"            System.out.printf(\"%d.%s (%s MCs)%n\", i + 1, allModules.get(i).toString(),","lastModifiedDate":"2023-03-18"},{"lineNumber":273,"author":{"gitId":"T-Wan-Lin"},"content":"                    allModules.get(i).getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":274,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"T-Wan-Lin"},"content":"        printTotalModularCredits(allModules);","lastModifiedDate":"2023-03-18"},{"lineNumber":276,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":279,"author":{"gitId":"yixuann02"},"content":"     * Prints out the timetable of a module added by the user in the module list.","lastModifiedDate":"2023-04-03"},{"lineNumber":280,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":281,"author":{"gitId":"yixuann02"},"content":"     * @param newModule Module that has just been added.","lastModifiedDate":"2023-04-03"},{"lineNumber":282,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":283,"author":{"gitId":"yixuann02"},"content":"    public void printModuleListWithLesson(Module newModule, ArrayList\u003cTimetable\u003e timetableList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":284,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"These are your classes for Module \" + newModule.getCode() + \": \\n\");","lastModifiedDate":"2023-04-04"},{"lineNumber":285,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : timetableList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":286,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":287,"author":{"gitId":"irving11119"},"content":"            System.out.println(timetable.getLessonType() + \" \" + timetable.getClassNumber() + \u0027\\n\u0027 +","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"yixuann02"},"content":"                    \"   \" + timetable.getDay() + \" \" + timetable.getStartTime() + \" - \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":289,"author":{"gitId":"T-Wan-Lin"},"content":"                    timetable.getEndTime() + \" \" + timetable.compressedWeeks(timetable));","lastModifiedDate":"2023-04-04"},{"lineNumber":290,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":291,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":292,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":293,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":294,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":295,"author":{"gitId":"yixuann02"},"content":"     * Prints out message to inform user no lesson has been added to this module.","lastModifiedDate":"2023-04-03"},{"lineNumber":296,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":297,"author":{"gitId":"yixuann02"},"content":"     * @param moduleCode The code of the module checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":298,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":299,"author":{"gitId":"yixuann02"},"content":"    public void printLessonsNotAdded(String moduleCode) {","lastModifiedDate":"2023-04-03"},{"lineNumber":300,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"You have not added any lessons or classes to this module: \" + moduleCode);","lastModifiedDate":"2023-04-03"},{"lineNumber":301,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":302,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":303,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":304,"author":{"gitId":"yixuann02"},"content":"     * Prints out message to inform user the specific lesson type has not been added to this module.","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"yixuann02"},"content":"     * @param moduleCode The code of the module checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"yixuann02"},"content":"     * @param lessonType The lesson type of this module to be checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":309,"author":{"gitId":"yixuann02"},"content":"    public void printLessonTypeNotAdded(String moduleCode, LessonType lessonType) {","lastModifiedDate":"2023-04-03"},{"lineNumber":310,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"You have not added \" + lessonType + \" lesson type for this module: \" + moduleCode);","lastModifiedDate":"2023-04-03"},{"lineNumber":311,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":312,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":313,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":314,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":315,"author":{"gitId":"yixuann02"},"content":"     * Prints out message to inform user that this module is not added into the module list.","lastModifiedDate":"2023-04-03"},{"lineNumber":316,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":317,"author":{"gitId":"yixuann02"},"content":"     * @param moduleCode The code of the module checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":318,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":319,"author":{"gitId":"yixuann02"},"content":"    public void printLessonNotInList(String moduleCode) {","lastModifiedDate":"2023-04-03"},{"lineNumber":320,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"This module \" + moduleCode + \" is not in your Module List.\");","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":322,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":323,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":324,"author":{"gitId":"yixuann02"},"content":"     * Prints out message to inform user that the module does not have this lesson type.","lastModifiedDate":"2023-04-05"},{"lineNumber":325,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":326,"author":{"gitId":"yixuann02"},"content":"    public void printLessonTypeNotInModule() {","lastModifiedDate":"2023-04-04"},{"lineNumber":327,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"This lesson type does not exist in this module!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":328,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":329,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":330,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":331,"author":{"gitId":"yixuann02"},"content":"     * Prints out message to inform user that user has not added any classes.","lastModifiedDate":"2023-04-05"},{"lineNumber":332,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":333,"author":{"gitId":"yixuann02"},"content":"    public void printEmptyLessonTypeInModuleList() {","lastModifiedDate":"2023-04-05"},{"lineNumber":334,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"You have not any classes to this module.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":335,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":336,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":337,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":338,"author":{"gitId":"yixuann02"},"content":"     * Prints out the timetable of a specific lesson type for a module in the module list.","lastModifiedDate":"2023-04-03"},{"lineNumber":339,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":340,"author":{"gitId":"yixuann02"},"content":"     * @param module The module to be checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":341,"author":{"gitId":"yixuann02"},"content":"     * @param lessonType The lesson type of the module to be checked.","lastModifiedDate":"2023-04-03"},{"lineNumber":342,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":343,"author":{"gitId":"yixuann02"},"content":"    public void printSpecificTimetable(Module module, LessonType lessonType, ArrayList\u003cTimetable\u003e copyList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":344,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"Here is your lesson of type: \" + lessonType.toString() + \" for \"","lastModifiedDate":"2023-04-03"},{"lineNumber":345,"author":{"gitId":"yixuann02"},"content":"                + module.getCode() + \":\");","lastModifiedDate":"2023-04-03"},{"lineNumber":346,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":347,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : copyList) {","lastModifiedDate":"2023-04-03"},{"lineNumber":348,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"Class Number: \" + timetable.getClassNumber());","lastModifiedDate":"2023-04-04"},{"lineNumber":349,"author":{"gitId":"yixuann02"},"content":"            System.out.println(\"   \" + timetable.getDay() + \" \" + timetable.getStartTime() + \" - \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":350,"author":{"gitId":"T-Wan-Lin"},"content":"                                timetable.getEndTime() + \" \" + timetable.compressedWeeks(timetable));","lastModifiedDate":"2023-04-04"},{"lineNumber":351,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":352,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":353,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":354,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":355,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * For {@code delmod} command.","lastModifiedDate":"2023-03-09"},{"lineNumber":356,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints message for successful deletion of Module.","lastModifiedDate":"2023-03-10"},{"lineNumber":357,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":358,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module which was deleted.","lastModifiedDate":"2023-03-10"},{"lineNumber":359,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":360,"author":{"gitId":"honglinshang"},"content":"    public void printModuleDeleteMessage(String moduleCode, ModuleList moduleList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":361,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Got it, removed \" + moduleCode.toUpperCase() + \" from your Module list.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":362,"author":{"gitId":"honglinshang"},"content":"        printTotalModularCredits(moduleList);","lastModifiedDate":"2023-03-20"},{"lineNumber":363,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":364,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":365,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":366,"author":{"gitId":"honglinshang"},"content":"     * For {@code delmod} command.","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"honglinshang"},"content":"     * Prints message if Module cannot be found for unsuccessful deletion of Module.","lastModifiedDate":"2023-03-10"},{"lineNumber":368,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":369,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module which was not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":370,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":371,"author":{"gitId":"honglinshang"},"content":"    public void printUnsuccessfulModuleDelete(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":372,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Sorry, the module \" + moduleCode + \" does not exist in your Module list!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":373,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":374,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":375,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":376,"author":{"gitId":"honglinshang"},"content":"     * For {@code todo}, {@code deadline}, and {@code event} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":377,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful adding of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":378,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":379,"author":{"gitId":"honglinshang"},"content":"     * @param newTask Task that has just been added.","lastModifiedDate":"2023-03-08"},{"lineNumber":380,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":381,"author":{"gitId":"honglinshang"},"content":"    public void printAddMessage(Task newTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":382,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Got it. I\u0027ve added this \" + newTask.getType() + \":\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":383,"author":{"gitId":"honglinshang"},"content":"                \"  \" + newTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":384,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":385,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":386,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":387,"author":{"gitId":"T-Wan-Lin"},"content":"     * For {@code addmod} command.","lastModifiedDate":"2023-03-18"},{"lineNumber":388,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out message for successful adding of Module.","lastModifiedDate":"2023-03-18"},{"lineNumber":389,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":390,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param newModule Module that has just been added.","lastModifiedDate":"2023-03-18"},{"lineNumber":391,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":392,"author":{"gitId":"honglinshang"},"content":"    public void printAddModuleMessage(Module newModule, ModuleList allModules, ArrayList\u003cLessonType\u003e lessonTypes) {","lastModifiedDate":"2023-03-20"},{"lineNumber":393,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Got it. I\u0027ve added this module:\\n\" +","lastModifiedDate":"2023-03-10"},{"lineNumber":394,"author":{"gitId":"honglinshang"},"content":"                \"  \" + newModule);","lastModifiedDate":"2023-03-20"},{"lineNumber":395,"author":{"gitId":"honglinshang"},"content":"        printTotalModularCredits(allModules);","lastModifiedDate":"2023-03-20"},{"lineNumber":396,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Enter \\\"addmod \" + newModule.getCode() + \" -[FLAG] [LESSON NUMBER]\\\" \" +","lastModifiedDate":"2023-03-20"},{"lineNumber":397,"author":{"gitId":"honglinshang"},"content":"                \"to add lessons for this module.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":398,"author":{"gitId":"honglinshang"},"content":"        printLessonTypeMessage(lessonTypes);","lastModifiedDate":"2023-03-20"},{"lineNumber":399,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":400,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":401,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"yixuann02"},"content":"     * For {@code showmod} command","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"yixuann02"},"content":"     * Prints out message existing Module information","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"yixuann02"},"content":"     * @param newModule Module that needs to show information","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"yixuann02"},"content":"    public void printShowModuleMessage(Module newModule, ArrayList\u003cLessonType\u003e lessonTypes,","lastModifiedDate":"2023-03-23"},{"lineNumber":408,"author":{"gitId":"yixuann02"},"content":"                                       ArrayList\u003cTimetable\u003e timetableList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":409,"author":{"gitId":"yixuann02"},"content":"        System.out.println(newModule.getCode() + \u0027\\n\u0027 +","lastModifiedDate":"2023-03-23"},{"lineNumber":410,"author":{"gitId":"yixuann02"},"content":"                \"Number of MC: \" + newModule.getModuleCredits());","lastModifiedDate":"2023-03-23"},{"lineNumber":411,"author":{"gitId":"yixuann02"},"content":"        printLessonTypeMessage(lessonTypes);","lastModifiedDate":"2023-03-23"},{"lineNumber":412,"author":{"gitId":"irving11119"},"content":"        System.out.println();","lastModifiedDate":"2023-03-24"},{"lineNumber":413,"author":{"gitId":"yixuann02"},"content":"        for (Timetable timetable : timetableList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":414,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":415,"author":{"gitId":"irving11119"},"content":"            System.out.println(timetable.getLessonType() + \" \" + timetable.getClassNumber() + \u0027\\n\u0027 +","lastModifiedDate":"2023-04-03"},{"lineNumber":416,"author":{"gitId":"T-Wan-Lin"},"content":"                    \"   \" + timetable.getDay() + \" \" + timetable.getStartTime() + \" - \"","lastModifiedDate":"2023-04-04"},{"lineNumber":417,"author":{"gitId":"T-Wan-Lin"},"content":"                    + timetable.getEndTime() + \" \" + timetable.compressedWeeks(timetable));","lastModifiedDate":"2023-04-04"},{"lineNumber":418,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":419,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":420,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":421,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":422,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":423,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":424,"author":{"gitId":"T-Wan-Lin"},"content":"     * For {@code addmod, delmod, listmod} commands.","lastModifiedDate":"2023-03-18"},{"lineNumber":425,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out total modular credits of all modules in the ModuleList.","lastModifiedDate":"2023-03-18"},{"lineNumber":426,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":427,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param allModules ArrayList of Modules","lastModifiedDate":"2023-03-18"},{"lineNumber":428,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":429,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printTotalModularCredits(ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":430,"author":{"gitId":"honglinshang"},"content":"        int moduleCredits \u003d allModules.getTotalModuleCredits();","lastModifiedDate":"2023-03-20"},{"lineNumber":431,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Total modular credits you have in this semester: \" + moduleCredits);","lastModifiedDate":"2023-03-20"},{"lineNumber":432,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":433,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":434,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":435,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":436,"author":{"gitId":"honglinshang"},"content":"     * For {@code mark} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":437,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful marking of Task as done.","lastModifiedDate":"2023-03-08"},{"lineNumber":438,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":439,"author":{"gitId":"honglinshang"},"content":"     * @param doneTask Task that has just been marked as done.","lastModifiedDate":"2023-03-08"},{"lineNumber":440,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":441,"author":{"gitId":"honglinshang"},"content":"    public void printMarkDone(Task doneTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":442,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Nice!, I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":443,"author":{"gitId":"honglinshang"},"content":"                \"  \" + doneTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":444,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":445,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":446,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":447,"author":{"gitId":"honglinshang"},"content":"     * For {@code unmark} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":448,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful marking of Task as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":449,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":450,"author":{"gitId":"honglinshang"},"content":"     * @param notDoneTask Task that has just been marked as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":451,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":452,"author":{"gitId":"honglinshang"},"content":"    public void printMarkNotDone(Task notDoneTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":453,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":454,"author":{"gitId":"honglinshang"},"content":"                \"  \" + notDoneTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":455,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":456,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":457,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":458,"author":{"gitId":"honglinshang"},"content":"     * For {@code delete} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":459,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful deletion of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":460,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":461,"author":{"gitId":"honglinshang"},"content":"     * @param deletedTask Task that will be deleted.","lastModifiedDate":"2023-03-08"},{"lineNumber":462,"author":{"gitId":"honglinshang"},"content":"     * @param size        Number of tasks left in the list after deletion.","lastModifiedDate":"2023-03-08"},{"lineNumber":463,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":464,"author":{"gitId":"honglinshang"},"content":"    public void printDeleted(Task deletedTask, int size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":465,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":466,"author":{"gitId":"honglinshang"},"content":"                \"  \" + deletedTask + \"\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":467,"author":{"gitId":"honglinshang"},"content":"                \"Now you have \" + (size - 1) + \" tasks in the list\");","lastModifiedDate":"2023-03-08"},{"lineNumber":468,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":469,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":470,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":471,"author":{"gitId":"honglinshang"},"content":"     * For {@code find} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":472,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given, all containing a certain keyword.","lastModifiedDate":"2023-03-10"},{"lineNumber":473,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":474,"author":{"gitId":"honglinshang"},"content":"     * @param foundTasks TaskList of Tasks containing a keyword.","lastModifiedDate":"2023-03-10"},{"lineNumber":475,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":476,"author":{"gitId":"irving11119"},"content":"    public void printFoundList(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":477,"author":{"gitId":"honglinshang"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":478,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no matching tasks!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":479,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":480,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":481,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":482,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":483,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + foundTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":484,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":485,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":486,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":487,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":488,"author":{"gitId":"honglinshang"},"content":"     * For {@code date} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":489,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given, all happening on a certain date.","lastModifiedDate":"2023-03-10"},{"lineNumber":490,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":491,"author":{"gitId":"honglinshang"},"content":"     * @param happeningTasks TaskList of Tasks happening on a date.","lastModifiedDate":"2023-03-10"},{"lineNumber":492,"author":{"gitId":"honglinshang"},"content":"     * @param date           Date that was used to shortlist the tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":493,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":494,"author":{"gitId":"honglinshang"},"content":"    public void printDateList(TaskList happeningTasks, LocalDate date) {","lastModifiedDate":"2023-03-10"},{"lineNumber":495,"author":{"gitId":"irving11119"},"content":"        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH));","lastModifiedDate":"2023-03-14"},{"lineNumber":496,"author":{"gitId":"honglinshang"},"content":"        if (happeningTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":497,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks on \" + dateString + \"!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":498,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":499,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":500,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Here are the tasks happening on \" + dateString + \":\");","lastModifiedDate":"2023-03-08"},{"lineNumber":501,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c happeningTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":502,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + happeningTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":503,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":504,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":505,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":506,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":507,"author":{"gitId":"honglinshang"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-03-08"},{"lineNumber":508,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":509,"author":{"gitId":"honglinshang"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":510,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":511,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":512,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":513,"author":{"gitId":"honglinshang"},"content":"    // error messages","lastModifiedDate":"2023-03-08"},{"lineNumber":514,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":515,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":516,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the index entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":517,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":518,"author":{"gitId":"honglinshang"},"content":"     * @param size Number of tasks within the current TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":519,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":520,"author":{"gitId":"honglinshang"},"content":"    public void printErrorForIdx(int size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":521,"author":{"gitId":"honglinshang"},"content":"        boolean isEmptyTaskList \u003d (size \u003d\u003d 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":522,"author":{"gitId":"honglinshang"},"content":"        if (!isEmptyTaskList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":523,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"Please enter [idx] in the form of an integer from 1 to \" + size);","lastModifiedDate":"2023-03-08"},{"lineNumber":524,"author":{"gitId":"honglinshang"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":525,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":526,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":527,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":528,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":529,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":530,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the index entered does not fit the format.","lastModifiedDate":"2023-03-22"},{"lineNumber":531,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":532,"author":{"gitId":"irving11119"},"content":"     * @param size Number of modules within the current ModuleList.","lastModifiedDate":"2023-03-22"},{"lineNumber":533,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":534,"author":{"gitId":"irving11119"},"content":"    public void printErrorForModIdx(int size) {","lastModifiedDate":"2023-03-22"},{"lineNumber":535,"author":{"gitId":"irving11119"},"content":"        boolean isEmptyModuleList \u003d (size \u003d\u003d 0);","lastModifiedDate":"2023-03-22"},{"lineNumber":536,"author":{"gitId":"irving11119"},"content":"        if (!isEmptyModuleList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":537,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"Please enter [idx] in the form of an integer from 1 to \" + size);","lastModifiedDate":"2023-03-22"},{"lineNumber":538,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":539,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"There are no modules in your list!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":540,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":541,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":542,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":543,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":544,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if reading or writing to the hard disk throws an IO error.","lastModifiedDate":"2023-03-08"},{"lineNumber":545,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":546,"author":{"gitId":"honglinshang"},"content":"    public void printErrorForIO() {","lastModifiedDate":"2023-03-08"},{"lineNumber":547,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Something went wrong with the hard disk :(\");","lastModifiedDate":"2023-03-08"},{"lineNumber":548,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":549,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":550,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":551,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the deadline entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":552,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":553,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidDeadline() {","lastModifiedDate":"2023-03-08"},{"lineNumber":554,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Please enter deadline as \\\"deadline [task] -by [date]\\\".\");","lastModifiedDate":"2023-04-03"},{"lineNumber":555,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":556,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":557,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":558,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the event entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":559,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":560,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidEvent() {","lastModifiedDate":"2023-03-08"},{"lineNumber":561,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Please enter event as \\\"event [task] -from [date] -to [date]\\\".\");","lastModifiedDate":"2023-04-03"},{"lineNumber":562,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":563,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":564,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":565,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the date entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":566,"author":{"gitId":"honglinshang"},"content":"     * For new Deadline, Event.","lastModifiedDate":"2023-03-19"},{"lineNumber":567,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":568,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidDateTime() {","lastModifiedDate":"2023-03-08"},{"lineNumber":569,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please enter [date]s in the format of yyyy-MM-ddThh:mm.\\n\" +","lastModifiedDate":"2023-03-19"},{"lineNumber":570,"author":{"gitId":"honglinshang"},"content":"                \"eg. \\\"2023-10-30T23:59\\\" for Oct 20 2023, 11:59PM\");","lastModifiedDate":"2023-03-19"},{"lineNumber":571,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":572,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":573,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":574,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints error message if date cannot exist in calendar","lastModifiedDate":"2023-04-01"},{"lineNumber":575,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":576,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void dateNotWithinCalender() {","lastModifiedDate":"2023-04-01"},{"lineNumber":577,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Please enter a valid date\");","lastModifiedDate":"2023-04-01"},{"lineNumber":578,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":579,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":580,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":581,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the date entered does not fit the format.","lastModifiedDate":"2023-03-19"},{"lineNumber":582,"author":{"gitId":"honglinshang"},"content":"     * For Date command.","lastModifiedDate":"2023-03-19"},{"lineNumber":583,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":584,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidDate() {","lastModifiedDate":"2023-03-19"},{"lineNumber":585,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please enter date in the format of yyyy-MM-dd.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":586,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":587,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":588,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":589,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the command entered is not understood by Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":590,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":591,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":592,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-03-08"},{"lineNumber":593,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":594,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":595,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":596,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if there is corrupted data in the save file when initially reading from it.","lastModifiedDate":"2023-03-08"},{"lineNumber":597,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":598,"author":{"gitId":"honglinshang"},"content":"     * @param counter  Index of the line of the save file that is corrupted.","lastModifiedDate":"2023-03-08"},{"lineNumber":599,"author":{"gitId":"honglinshang"},"content":"     * @param filePath The location at which the save file is stored.","lastModifiedDate":"2023-03-08"},{"lineNumber":600,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":601,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidSaveFile(int counter, String filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":602,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":603,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"There is an error in save.txt at line \" + counter + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":604,"author":{"gitId":"honglinshang"},"content":"                \"Task \" + counter + \" has been excluded. You can view the save file at:\" + filePath);","lastModifiedDate":"2023-04-04"},{"lineNumber":605,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":606,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":607,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":608,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":609,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints error message if there are duplicate modules in the moduleData.txt file","lastModifiedDate":"2023-04-01"},{"lineNumber":610,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":611,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printDuplicateModuleInTextFile(int counter){","lastModifiedDate":"2023-04-01"},{"lineNumber":612,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"There is a duplicate module detected in the moduleData.txt at line \"","lastModifiedDate":"2023-04-01"},{"lineNumber":613,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                + (counter + 1) + \".\\n\" + \"Ignoring duplicate modules\");","lastModifiedDate":"2023-04-01"},{"lineNumber":614,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":615,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":616,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":617,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the user does not specify the description of a task.","lastModifiedDate":"2023-03-08"},{"lineNumber":618,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":619,"author":{"gitId":"honglinshang"},"content":"    public void printEmptyDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":620,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops! The description of a task cannot be empty.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":621,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":622,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":623,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":624,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the user does not specify the keyword of a search.","lastModifiedDate":"2023-03-08"},{"lineNumber":625,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":626,"author":{"gitId":"honglinshang"},"content":"    public void printEmptyKeyword() {","lastModifiedDate":"2023-03-08"},{"lineNumber":627,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please specify a keyword to do the search with!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":628,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":629,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":630,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":631,"author":{"gitId":"yixuann02"},"content":"     * Prints error message if the user does not specify the module code for module information.","lastModifiedDate":"2023-03-23"},{"lineNumber":632,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":633,"author":{"gitId":"yixuann02"},"content":"    public void printEmptyShowModCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":634,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"Please enter a module code!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":635,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":636,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":637,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":638,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints error message if the start date of an event occurs after the end date.","lastModifiedDate":"2023-04-01"},{"lineNumber":639,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":640,"author":{"gitId":"honglinshang"},"content":"    public void printDateOrderException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":641,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops, the start date for your event occurs after the end date!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":642,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":643,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":644,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":645,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the task being added occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":646,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":647,"author":{"gitId":"honglinshang"},"content":"     * @param exception Contains details about the task that was not added successfully.","lastModifiedDate":"2023-03-16"},{"lineNumber":648,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":649,"author":{"gitId":"honglinshang"},"content":"    public void printDateOverException(DateOverException exception) {","lastModifiedDate":"2023-03-16"},{"lineNumber":650,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops, your \" + exception + \" occurs before today!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":651,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":652,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":653,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":654,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the task being loaded from hard disk occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":655,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":656,"author":{"gitId":"honglinshang"},"content":"     * @param exception Contains details about the task that was not added successfully.","lastModifiedDate":"2023-03-16"},{"lineNumber":657,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":658,"author":{"gitId":"honglinshang"},"content":"    public void printExistingDateOver(DateOverException exception) {","lastModifiedDate":"2023-03-16"},{"lineNumber":659,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Deleting old \" + exception);","lastModifiedDate":"2023-03-16"},{"lineNumber":660,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":661,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":662,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":663,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if an unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":664,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":665,"author":{"gitId":"honglinshang"},"content":"     * @param unexpectedException Contains detail message saying where unexpected exception occurred.","lastModifiedDate":"2023-03-13"},{"lineNumber":666,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":667,"author":{"gitId":"honglinshang"},"content":"    public void printUnexpectedException(UnexpectedException unexpectedException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":668,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oh no... Something went wrong while doing the following: \" +","lastModifiedDate":"2023-03-13"},{"lineNumber":669,"author":{"gitId":"honglinshang"},"content":"                unexpectedException.getMessage() + \"\\nExiting Apollo...\");","lastModifiedDate":"2023-03-13"},{"lineNumber":670,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":671,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":672,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":673,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user tries to add a module which does not exist.","lastModifiedDate":"2023-03-10"},{"lineNumber":674,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":675,"author":{"gitId":"irving11119"},"content":"    public void printInvalidModule() {","lastModifiedDate":"2023-03-10"},{"lineNumber":676,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This module does not exist, or is not available this semester!\\n\" +","lastModifiedDate":"2023-04-01"},{"lineNumber":677,"author":{"gitId":"irving11119"},"content":"                \"Please refer to official NUS module list for more information.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":678,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":679,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":680,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":681,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user does not specify the module to add.","lastModifiedDate":"2023-03-10"},{"lineNumber":682,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":683,"author":{"gitId":"irving11119"},"content":"    public void printEmptyAddMod() {","lastModifiedDate":"2023-03-10"},{"lineNumber":684,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Please specify a module to add!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":685,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":686,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":687,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":688,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user does not specify the module to delete.","lastModifiedDate":"2023-03-10"},{"lineNumber":689,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":690,"author":{"gitId":"irving11119"},"content":"    public void printEmptyDelMod() {","lastModifiedDate":"2023-03-10"},{"lineNumber":691,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Please specify a module to delete!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":692,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":693,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":694,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":695,"author":{"gitId":"honglinshang"},"content":"     * Prints warning that the module being added by the user has been added before.","lastModifiedDate":"2023-03-20"},{"lineNumber":696,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":697,"author":{"gitId":"honglinshang"},"content":"     * @param module The module being added.","lastModifiedDate":"2023-03-20"},{"lineNumber":698,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":699,"author":{"gitId":"honglinshang"},"content":"    public void printDuplicateModule(Module module) {","lastModifiedDate":"2023-03-20"},{"lineNumber":700,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Module already added in Module List!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":701,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Enter \\\"addmod \" + module.getCode() + \" -[FLAG] [LESSON NUMBER]\\\" \" +","lastModifiedDate":"2023-03-20"},{"lineNumber":702,"author":{"gitId":"honglinshang"},"content":"                \"to add lessons for this module.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":703,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":704,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":705,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":706,"author":{"gitId":"irving11119"},"content":"     * Prints the available lesson types for that module.","lastModifiedDate":"2023-03-18"},{"lineNumber":707,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":708,"author":{"gitId":"irving11119"},"content":"     * @param lessonTypes List of lesson types for that module.","lastModifiedDate":"2023-03-18"},{"lineNumber":709,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":710,"author":{"gitId":"irving11119"},"content":"    public void printLessonTypeMessage(ArrayList\u003cLessonType\u003e lessonTypes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":711,"author":{"gitId":"irving11119"},"content":"        if (lessonTypes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":712,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"This module has no lessons.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":713,"author":{"gitId":"irving11119"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":714,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":715,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Here are the lesson types for this module:\");","lastModifiedDate":"2023-03-18"},{"lineNumber":716,"author":{"gitId":"honglinshang"},"content":"        lessonTypes.sort(Comparator.comparing(Enum::toString));","lastModifiedDate":"2023-03-20"},{"lineNumber":717,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":718,"author":{"gitId":"irving11119"},"content":"        for (LessonType lessonType : lessonTypes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":719,"author":{"gitId":"honglinshang"},"content":"            System.out.println(LessonTypeUtil.enumToString(lessonType, true));","lastModifiedDate":"2023-03-20"},{"lineNumber":720,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":721,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":722,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":723,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":724,"author":{"gitId":"irving11119"},"content":"     * Prints message when lesson is added to a timetable.","lastModifiedDate":"2023-03-21"},{"lineNumber":725,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":726,"author":{"gitId":"irving11119"},"content":"     * @param moduleCode  Module code of the module whose lesson is being added.","lastModifiedDate":"2023-03-21"},{"lineNumber":727,"author":{"gitId":"irving11119"},"content":"     * @param lessonType  Type of lesson being added.","lastModifiedDate":"2023-03-21"},{"lineNumber":728,"author":{"gitId":"irving11119"},"content":"     * @param classNumber Class number of the lesson being added.","lastModifiedDate":"2023-03-21"},{"lineNumber":729,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":730,"author":{"gitId":"irving11119"},"content":"    public void printClassAddedMessage(String moduleCode, LessonType lessonType, String classNumber) {","lastModifiedDate":"2023-03-18"},{"lineNumber":731,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Adding lesson type: \" + lessonType + \" for Module: \" + moduleCode);","lastModifiedDate":"2023-03-18"},{"lineNumber":732,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Class Number: \" + classNumber);","lastModifiedDate":"2023-03-18"},{"lineNumber":733,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":734,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":735,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":736,"author":{"gitId":"irving11119"},"content":"     * Prints message when lesson is Invalid.","lastModifiedDate":"2023-03-21"},{"lineNumber":737,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":738,"author":{"gitId":"irving11119"},"content":"    public void printInvalidLessonType() {","lastModifiedDate":"2023-03-18"},{"lineNumber":739,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This lesson type does not exist!\");","lastModifiedDate":"2023-03-18"},{"lineNumber":740,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":741,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":742,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":743,"author":{"gitId":"irving11119"},"content":"     * Prints message when lesson has already been added to the timetable.","lastModifiedDate":"2023-03-21"},{"lineNumber":744,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":745,"author":{"gitId":"irving11119"},"content":"    public void printLessonExists() {","lastModifiedDate":"2023-03-18"},{"lineNumber":746,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This lesson type already exists for this lesson!\");","lastModifiedDate":"2023-03-18"},{"lineNumber":747,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":748,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":749,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":750,"author":{"gitId":"irving11119"},"content":"     * Prints message when lesson has not been added to the timetable.","lastModifiedDate":"2023-03-21"},{"lineNumber":751,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":752,"author":{"gitId":"irving11119"},"content":"    public void printClassNotAdded() {","lastModifiedDate":"2023-03-21"},{"lineNumber":753,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This class has not been added to your timetable!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":754,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":755,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":756,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":757,"author":{"gitId":"irving11119"},"content":"     * Prints message when lesson is deleted from the timetable.","lastModifiedDate":"2023-03-21"},{"lineNumber":758,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":759,"author":{"gitId":"irving11119"},"content":"     * @param moduleCode   Module code of the module whose lesson is being deleted.","lastModifiedDate":"2023-03-21"},{"lineNumber":760,"author":{"gitId":"irving11119"},"content":"     * @param lessonType   Type of lesson being deleted.","lastModifiedDate":"2023-03-21"},{"lineNumber":761,"author":{"gitId":"irving11119"},"content":"     * @param lessonNumber Class number of the lesson being deleted.","lastModifiedDate":"2023-03-21"},{"lineNumber":762,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":763,"author":{"gitId":"irving11119"},"content":"    public void printModuleLessonDeleteMessage(String moduleCode, LessonType lessonType, String lessonNumber) {","lastModifiedDate":"2023-03-21"},{"lineNumber":764,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Deleting lessons for module: \" + moduleCode.toUpperCase());","lastModifiedDate":"2023-03-21"},{"lineNumber":765,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Lessons Deleted: \" + lessonType + \" - \" + lessonNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":766,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":767,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":768,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":769,"author":{"gitId":"irving11119"},"content":"     * Prints message when a module has no timetable information.","lastModifiedDate":"2023-03-24"},{"lineNumber":770,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":771,"author":{"gitId":"irving11119"},"content":"    public void printNoTimetableMessage() {","lastModifiedDate":"2023-03-24"},{"lineNumber":772,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This module has no timetable information\");","lastModifiedDate":"2023-03-24"},{"lineNumber":773,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":774,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":775,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":776,"author":{"gitId":"irving11119"},"content":"     * Prints a message when a module does not have that particular lesson type.","lastModifiedDate":"2023-03-24"},{"lineNumber":777,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":778,"author":{"gitId":"irving11119"},"content":"    public void printNoLessonType() {","lastModifiedDate":"2023-03-24"},{"lineNumber":779,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This module does not have this lesson type\");","lastModifiedDate":"2023-03-24"},{"lineNumber":780,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":781,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":782,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":783,"author":{"gitId":"irving11119"},"content":"     * Prints message of lesson schedule for a particular lesson type for a module","lastModifiedDate":"2023-03-24"},{"lineNumber":784,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":785,"author":{"gitId":"irving11119"},"content":"     * @param module The module whose lesson schedule is being printed.","lastModifiedDate":"2023-03-24"},{"lineNumber":786,"author":{"gitId":"irving11119"},"content":"     * @param lessonType The lesson type whose schedule is being printed.","lastModifiedDate":"2023-03-24"},{"lineNumber":787,"author":{"gitId":"irving11119"},"content":"     * @param copyList The list of lessons of that lesson type for that module.","lastModifiedDate":"2023-03-24"},{"lineNumber":788,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":789,"author":{"gitId":"irving11119"},"content":"    public void printModuleLessonTimetable(Module module, LessonType lessonType, ArrayList\u003cTimetable\u003e copyList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":790,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Here are all available lessons of type: \" + lessonType.toString() + \" for \"","lastModifiedDate":"2023-03-24"},{"lineNumber":791,"author":{"gitId":"irving11119"},"content":"                + module.getCode() + \":\");","lastModifiedDate":"2023-03-24"},{"lineNumber":792,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":793,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : copyList) {","lastModifiedDate":"2023-03-24"},{"lineNumber":794,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"Class Number: \" + timetable.getClassNumber());","lastModifiedDate":"2023-04-03"},{"lineNumber":795,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"   \" + timetable.getDay() + \" \" + timetable.getStartTime() + \" - \" +","lastModifiedDate":"2023-03-24"},{"lineNumber":796,"author":{"gitId":"T-Wan-Lin"},"content":"                    timetable.getEndTime() + \" \" + timetable.compressedWeeks(timetable));","lastModifiedDate":"2023-04-04"},{"lineNumber":797,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":798,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":799,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":800,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":801,"author":{"gitId":"irving11119"},"content":"     * Prints message when the user tries to add a lesson that clashes with another lesson in the timetable.","lastModifiedDate":"2023-03-24"},{"lineNumber":802,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":803,"author":{"gitId":"irving11119"},"content":"    public void printClashingLesson() {","lastModifiedDate":"2023-03-24"},{"lineNumber":804,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This lesson clashes with another lesson in your timetable!\");","lastModifiedDate":"2023-03-24"},{"lineNumber":805,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":806,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":807,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printClashingEventMessage() {","lastModifiedDate":"2023-03-27"},{"lineNumber":808,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"This event clashes with another event in your timetable!\");","lastModifiedDate":"2023-03-27"},{"lineNumber":809,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":810,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":811,"author":{"gitId":"irving11119"},"content":"    public void printClashingEventModuleMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":812,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This event clashes with a lesson in your timetable!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":813,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":814,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":815,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":816,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints a message when user tries to mark an already done task as done again.","lastModifiedDate":"2023-04-01"},{"lineNumber":817,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":818,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printTaskHasBeenMarkedPreviously() {","lastModifiedDate":"2023-04-01"},{"lineNumber":819,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"You have already marked this task as done previously.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":820,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":821,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":822,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":823,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints a message when user tries to mark an already incomplete task as not done again.","lastModifiedDate":"2023-04-01"},{"lineNumber":824,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":825,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printTaskHasBeenUnmarkedPreviously(){","lastModifiedDate":"2023-04-01"},{"lineNumber":826,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"This task was never marked as done!\");","lastModifiedDate":"2023-04-01"},{"lineNumber":827,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":828,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":829,"author":{"gitId":"T-Wan-Lin"},"content":"    public void deadlineSuggestion(){","lastModifiedDate":"2023-04-01"},{"lineNumber":830,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"This todo seems to suggest that this is a deadline type task.\\n\" +\"You could consider \" +","lastModifiedDate":"2023-04-01"},{"lineNumber":831,"author":{"gitId":"T-Wan-Lin"},"content":"                \"using the deadline command instead.\\n\");","lastModifiedDate":"2023-04-01"},{"lineNumber":832,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":833,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":834,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":835,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":836,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for date command","lastModifiedDate":"2023-04-02"},{"lineNumber":837,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":838,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printDateHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":839,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Shows all tasks in Apollo that occur on the specified date.\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":840,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":841,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: date DATE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":842,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":843,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"Note: `DATE` should be entered in the format `yyyy-MM-dd`.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":844,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":845,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":846,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for find command","lastModifiedDate":"2023-04-02"},{"lineNumber":847,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":848,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printFindHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":849,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Shows all tasks in Apollo that contain the specified keyword.\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":850,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":851,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: find KEYWORD\");","lastModifiedDate":"2023-04-03"},{"lineNumber":852,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":853,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":854,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for delete command","lastModifiedDate":"2023-04-02"},{"lineNumber":855,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":856,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printDeleteHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":857,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Deletes the specified task from Apollo.\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":858,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":859,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"Format: `delete IDX`\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":860,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":861,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"Note: `IDX` can be obtained by using `list` to find the task\u0027s index.\\n\");","lastModifiedDate":"2023-04-02"},{"lineNumber":862,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":863,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":864,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for unmark command","lastModifiedDate":"2023-04-02"},{"lineNumber":865,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":866,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printUnmarkHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":867,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Marks the specified task as not completed. \\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":868,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":869,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: unmark IDX\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":870,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":871,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"Note: `IDX` can be obtained by using `list` to find the task\u0027s index.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":872,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":873,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":874,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for mark command","lastModifiedDate":"2023-04-02"},{"lineNumber":875,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":876,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printMarkHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":877,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Marks the specified task as completed.\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":878,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":879,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: mark IDX\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":880,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":881,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"Note: `IDX` can be obtained by using `list` to find the task\u0027s index.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":882,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":883,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":884,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for event command","lastModifiedDate":"2023-04-02"},{"lineNumber":885,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":886,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printEventHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":887,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Adds a task with a start and end date to Apollo.\\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":888,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"If there is an event in the tasklist that is clashing with any event added previously \" +","lastModifiedDate":"2023-04-02"},{"lineNumber":889,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"a warning message will be printed. \\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":890,"author":{"gitId":"T-Wan-Lin"},"content":"                \"However, you will still be able to add it.\\n\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":891,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: event TASK -from DATE -to DATE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":892,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Note: DATE must be entered in the format yyyy-MM-ddThh:mm.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":893,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":894,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":895,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for list command","lastModifiedDate":"2023-04-02"},{"lineNumber":896,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":897,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printListHelpCommand() {","lastModifiedDate":"2023-04-02"},{"lineNumber":898,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Shows a numbered list of all tasks (Todos, Events, Deadlines) in Apollo. \" +","lastModifiedDate":"2023-04-02"},{"lineNumber":899,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"`list` automatically sorts the tasks by type, \\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":900,"author":{"gitId":"T-Wan-Lin"},"content":"                \"then date within each type.\" + \"Format: list\");","lastModifiedDate":"2023-04-03"},{"lineNumber":901,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":902,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":903,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for todo command","lastModifiedDate":"2023-04-02"},{"lineNumber":904,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":905,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printTodoHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":906,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Adds a normal task to Apollo.\\nFormat: todo TASK\");","lastModifiedDate":"2023-04-03"},{"lineNumber":907,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":908,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":909,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints a help message for deadline command","lastModifiedDate":"2023-04-02"},{"lineNumber":910,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":911,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printDeadlineHelpMessage() {","lastModifiedDate":"2023-04-02"},{"lineNumber":912,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Adds a task with a due date to Apollo \\n\" + \"Format: deadline TASK -by DATE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":913,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Note: DATE must be entered in the format yyyy-MM-ddThh:mm.\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":914,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"If deadline clashes with any event or lesson type you will be alerted through a warning message. \\n\" +","lastModifiedDate":"2023-04-02"},{"lineNumber":915,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \"However, you will still be able to add it into the tasklist.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":916,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":917,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":918,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printListModuleWithoutFlagsHelpMessage(){","lastModifiedDate":"2023-04-05"},{"lineNumber":919,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Shows the list of modules you are taking for this semester, \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":920,"author":{"gitId":"T-Wan-Lin"},"content":"                \"alongisde total Modular Credits (MC).\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":921,"author":{"gitId":"T-Wan-Lin"},"content":"                \"The list will be automatically sorted in alphabetical order according to EduRec standards.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":922,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: listmod\\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":923,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":924,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":925,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printListModuleWithCodeHelpMessage(){","lastModifiedDate":"2023-04-05"},{"lineNumber":926,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"To see all class timings for all lesson types that you have added for a module in your \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":927,"author":{"gitId":"T-Wan-Lin"},"content":"                \"list, \\n\" + \"you can append the module code to the listmod command. \\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":928,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: listmod MODULE_CODE\\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":929,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":930,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":931,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printListModuleWithFlagHelpMessage(){","lastModifiedDate":"2023-04-05"},{"lineNumber":932,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"To see all class timings for a specific lesson type that you have added \" +","lastModifiedDate":"2023-04-05"},{"lineNumber":933,"author":{"gitId":"T-Wan-Lin"},"content":"                \"for a module in your list, \\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":934,"author":{"gitId":"T-Wan-Lin"},"content":"                \"you can append the module code and the lesson type flag to the listmod command. \\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":935,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: listmod MODULE_CODE -FLAG\\n\" + \"Example: listmod CS1010 -st\\n\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":936,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Note: You must have added a module and at least one lesson into your list. \\n\");","lastModifiedDate":"2023-04-05"},{"lineNumber":937,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":938,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":939,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printListModuleHelpMessage() {","lastModifiedDate":"2023-04-05"},{"lineNumber":940,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":941,"author":{"gitId":"T-Wan-Lin"},"content":"        printListModuleWithoutFlagsHelpMessage();","lastModifiedDate":"2023-04-05"},{"lineNumber":942,"author":{"gitId":"T-Wan-Lin"},"content":"        printListModuleWithCodeHelpMessage();","lastModifiedDate":"2023-04-05"},{"lineNumber":943,"author":{"gitId":"T-Wan-Lin"},"content":"        printListModuleWithFlagHelpMessage();","lastModifiedDate":"2023-04-05"},{"lineNumber":944,"author":{"gitId":"T-Wan-Lin"},"content":"        printModuleFlagOptions();","lastModifiedDate":"2023-04-05"},{"lineNumber":945,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":946,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":947,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printExitHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":948,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Exit Apollo.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":949,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: bye\");","lastModifiedDate":"2023-04-03"},{"lineNumber":950,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":951,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printWeekHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":952,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Shows your timetable for the current week.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":953,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: week\");","lastModifiedDate":"2023-04-03"},{"lineNumber":954,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":955,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":956,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":957,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out a list of all available lesson types and their flags.","lastModifiedDate":"2023-04-03"},{"lineNumber":958,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":959,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printModuleFlagOptions() {","lastModifiedDate":"2023-04-03"},{"lineNumber":960,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"There are -FLAGS for the various lessons options per module:\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":961,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-lec\\t\\t\\t\" + \"LECTURE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":962,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-plec\\t\\t\\t\" + \"PACKAGED LECTURE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":963,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-st \\t\\t\\t\" + \"SECTIONAL TEACHING\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":964,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-dlec\\t\\t\\t\" + \"DESIGN LECTURE\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":965,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-tut\\t\\t\\t\" + \"TUTORIAL\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":966,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-ptut\\t\\t\\t\" + \"PACKAGED TUTORIAL\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":967,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-rcit\\t\\t\\t\" + \"RECITATION\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":968,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-lab\\t\\t\\t\" + \"LABORATORY\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":969,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-ws \\t\\t\\t\" + \"WORKSHOP\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":970,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-smc\\t\\t\\t\" + \"SEMINAR STYLE MODULE CLASS\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":971,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-mp \\t\\t\\t\" + \"MINI PROJECT\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":972,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"-tt2\\t\\t\\t\" + \"TUTORIAL TYPE 2\");","lastModifiedDate":"2023-04-03"},{"lineNumber":973,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":974,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":975,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printDelmodOptions() {","lastModifiedDate":"2023-04-03"},{"lineNumber":976,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Removes a module from Apollo. Can be done using either IDX or MODULE_CODE.\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":977,"author":{"gitId":"T-Wan-Lin"},"content":"               \"Deletion by IDX (Note: IDX can be obtained by using listmod to find the module\u0027s index):\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":978,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: delmod IDX\\n\\n\" + \"Delete by MODULE_CODE:\\n\"+\"Format: delmod MODULE_CODE\\n\" );","lastModifiedDate":"2023-04-03"},{"lineNumber":979,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":980,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":981,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printDeleteLessonMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":982,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"You can delete a module lesson from your timetable.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":983,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: delmod MODULE_CODE -FLAG LESSON_NUMBER\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":984,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Example: delmod CS2113T -lec 1\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":985,"author":{"gitId":"T-Wan-Lin"},"content":"                \"NOTE: LESSON_NUMBER must strictly follow that of NUSMods. If it is Lecture 01 and Lecture 1, \\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":986,"author":{"gitId":"T-Wan-Lin"},"content":"                \"the corresponding flag inputs are -lec 01 and -lec 1 respectively.\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":987,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":988,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":989,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printDeleteModHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":990,"author":{"gitId":"T-Wan-Lin"},"content":"        printDelmodOptions();","lastModifiedDate":"2023-04-03"},{"lineNumber":991,"author":{"gitId":"T-Wan-Lin"},"content":"        printDeleteLessonMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":992,"author":{"gitId":"T-Wan-Lin"},"content":"        printModuleFlagOptions();","lastModifiedDate":"2023-04-03"},{"lineNumber":993,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":994,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":995,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":996,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printAddModuleHelp(){","lastModifiedDate":"2023-04-03"},{"lineNumber":997,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Add a module into your module list.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":998,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: addmod MODULE_CODE\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":999,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1000,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1001,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1002,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printAddModuleLessonHelp(){","lastModifiedDate":"2023-04-03"},{"lineNumber":1003,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"You can also add module lessons into your timetable.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1004,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: addmod MODULE_CODE -FLAG LESSON_NUMBER\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1005,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Example: addmod CS2113 -lec 1\\n\"+","lastModifiedDate":"2023-04-03"},{"lineNumber":1006,"author":{"gitId":"T-Wan-Lin"},"content":"                \"NOTE: LESSON_NUMBER must strictly follow that of NUSMods. If it is Lecture 01 and Lecture 1, \\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1007,"author":{"gitId":"T-Wan-Lin"},"content":"                \"the corresponding flag inputs are -lec 01 and -lec 1 respectively.\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1008,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1009,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1010,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1011,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printAddModHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":1012,"author":{"gitId":"T-Wan-Lin"},"content":"        printAddModuleHelp();","lastModifiedDate":"2023-04-03"},{"lineNumber":1013,"author":{"gitId":"T-Wan-Lin"},"content":"        printAddModuleLessonHelp();","lastModifiedDate":"2023-04-03"},{"lineNumber":1014,"author":{"gitId":"T-Wan-Lin"},"content":"        printModuleFlagOptions();","lastModifiedDate":"2023-04-03"},{"lineNumber":1015,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1016,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1017,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printShowModuleInfoHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":1018,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Shows the information of a module, including Modular Credits, lesson types, lesson numbers \"","lastModifiedDate":"2023-04-03"},{"lineNumber":1019,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"and times.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1020,"author":{"gitId":"T-Wan-Lin"},"content":"                \"Format: showmod MODULE_CODE\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1021,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1022,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1023,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1024,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printShowLessonInfoHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":1025,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"If you would like to view timing information on a specific lesson type of a module, \" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1026,"author":{"gitId":"T-Wan-Lin"},"content":"                \"you can use flags.\\n\"","lastModifiedDate":"2023-04-03"},{"lineNumber":1027,"author":{"gitId":"T-Wan-Lin"},"content":"                +  \"Format: showmod MODULE_CODE -FLAG\\n\" + \"Example: showmod CS1010 -st\\n\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":1028,"author":{"gitId":"T-Wan-Lin"},"content":"                \"NOTE: Different modules have different lesson types.\\n\" +","lastModifiedDate":"2023-04-03"},{"lineNumber":1029,"author":{"gitId":"T-Wan-Lin"},"content":"                \"It is recomended to run `showmod MODULE_CODE` to see the lesson types available for that module.\\n\");","lastModifiedDate":"2023-04-03"},{"lineNumber":1030,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1031,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1032,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printShowModuleHelpMessage(){","lastModifiedDate":"2023-04-03"},{"lineNumber":1033,"author":{"gitId":"T-Wan-Lin"},"content":"        printShowModuleInfoHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":1034,"author":{"gitId":"T-Wan-Lin"},"content":"        printShowLessonInfoHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":1035,"author":{"gitId":"T-Wan-Lin"},"content":"        printModuleFlagOptions();","lastModifiedDate":"2023-04-03"},{"lineNumber":1036,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":1037,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1038,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":153,"honglinshang":392,"yixuann02":118,"T-Wan-Lin":274,"PoobalanAatmikaLakshmi":101}},{"path":"src/main/java/seedu/apollo/utils/DayTypeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.utils;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"public class DayTypeUtil {","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"     * Converts a DayOfWeek enum to an integer.","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"     * @param dayInt The integer to be converted.","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"     * @return The  DayFfWeek enum representation of the integer.","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    public static DayOfWeek determineDay(int dayInt) {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"        switch (dayInt) {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"        case 0:","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.MONDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"        case 1:","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.TUESDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"        case 2:","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.WEDNESDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        case 3:","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.THURSDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        case 4:","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.FRIDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        case 5:","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.SATURDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        case 6:","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"            return DayOfWeek.SUNDAY;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"            return null;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     * Converts a day string to an integer.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     * @param day The string to be converted.","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * @return The integer representation of the day string.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    public static int determineDay(String day) {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"        switch (day) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"        case \"Monday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"            return 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"        case \"Tuesday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"            return 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"        case \"Wednesday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"            return 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"        case \"Thursday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"            return 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        case \"Friday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"            return 4;","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"        case \"Saturday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"            return 5;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        case \"Sunday\":","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"            return 6;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"            return -1;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"irving11119":14,"honglinshang":47}},{"path":"src/main/java/seedu/apollo/utils/LessonTypeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.utils;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"public class LessonTypeUtil {","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"     * Converts a lesson type string to a LessonType enum.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"     * @param lessonType The string to be converted.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"     * @return The LessonType enum representation of the string.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    public static LessonType determineLessonType(String lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"        switch (lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"        case \"Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"            return LessonType.LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"        case \"Packaged Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"        case \"Sectional Teaching\":","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"            return LessonType.SECTIONAL_TEACHING;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"        case \"Design Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"            return LessonType.DESIGN_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"        case \"Tutorial\":","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        case \"Packaged Tutorial\":","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"        case \"Recitation\":","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"            return LessonType.RECITATION;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        case \"Laboratory\":","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"            return LessonType.LABORATORY;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"        case \"Workshop\":","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"            return LessonType.WORKSHOP;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"        case \"Seminar-Style Module Class\":","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"            return LessonType.SEMINAR_STYLE_MODULE_CLASS;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        case \"Mini-Project\":","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"            return LessonType.MINI_PROJECT;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        case \"Tutorial Type 2\":","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL_TYPE_2;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"            return null;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"     * Converts a LessonType enum to a string.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"     * @param lessonType The LessonType enum to be converted.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"     * @param isFlag Whether the string should be a flag.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"     * @return The string representation of the LessonType enum.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    public static String enumToString(LessonType lessonType, Boolean isFlag){","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"        switch (lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        case LECTURE:","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"            return \"Lecture\" + (isFlag ? \" (-lec)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"        case PACKAGED_LECTURE:","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"            return \"Packaged Lecture\" + (isFlag ? \" (-plec)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"        case SECTIONAL_TEACHING:","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"            return \"Sectional Teaching\" + (isFlag ? \" (-st)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"        case DESIGN_LECTURE:","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"            return \"Design Lecture\" + (isFlag ? \" (-dlec)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        case TUTORIAL:","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"            return \"Tutorial\" + (isFlag ? \" (-tut)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"        case PACKAGED_TUTORIAL:","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            return \"Packaged Tutorial\" + (isFlag ? \" (-ptut)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"        case RECITATION:","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"            return \"Recitation\" + (isFlag ? \" (-rcit)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"        case LABORATORY:","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"            return \"Laboratory\" + (isFlag ? \" (-lab)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"        case WORKSHOP:","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"            return \"Workshop\" + (isFlag ? \" (-ws)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"        case SEMINAR_STYLE_MODULE_CLASS:","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"            return \"Seminar-Style Module Class\" + (isFlag ? \" (-smc)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"        case MINI_PROJECT:","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"            return \"Mini-Project\" + (isFlag ? \" (-mp)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"        case TUTORIAL_TYPE_2:","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            return \"Tutorial Type 2\" + (isFlag ? \" (-tt2)\" : \"\");","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"            return null;","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":68,"honglinshang":13}},{"path":"src/main/java/seedu/apollo/utils/LoggerInterface.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.utils;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public interface LoggerInterface {","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"    public void setUpLogger();","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":5}},{"path":"src/test/java/seedu/apollo/ApolloTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"class ApolloTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"irving11119":2,"-":10}},{"path":"src/test/java/seedu/apollo/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"class ParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_normalDeadline_expectDescriptionAndBy() throws InvalidDeadline {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -by tomorrow\";","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        String[] descriptionAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"test\", descriptionAndBy[0]);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"tomorrow\", descriptionAndBy[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_noBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        String param \u003d \"test\";","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_emptyBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -by \";","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_noDescription_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"  -by tomorrow\";","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    void getCommand_invalidCommand_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"draw\";","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_normalEvent_expectDescriptionAndFromAndTo() throws InvalidEvent {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -from 2023-10-29T23:59 -to 2023-10-30T23:59\";","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"        String[] descriptionAndFromAndTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"test\", descriptionAndFromAndTo[0]);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"2023-10-29T23:59\", descriptionAndFromAndTo[1]);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"2023-10-30T23:59\", descriptionAndFromAndTo[2]);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noDescription_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"  -from 2023-10-29T23:59 -to 2023-10-30T23:59\";","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyFrom_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -from -to 2023-10-30T23:59\";","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -from 2023-10-29T23:59 today -to \";","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyFromAndTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -from -to\";","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noFromAndTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test\";","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noFrom_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -to 2023-10-30T23:59\";","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test -from today\";","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseEvent_toBeforeFrom_expectException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"wedding -to 6pm -from 9am\";","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertThrows(InvalidEvent.class, () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseModule_invalidModuleCode_expectException() throws UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"addmod cs4949\";","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, moduleList);","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"yixuann02"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"yixuann02"},"content":"    void getCommand_noKeywordFind_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"yixuann02"},"content":"        String userCommand \u003d \"find\";","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"yixuann02"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"yixuann02"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"yixuann02"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noModuleAdded_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"addmod\";","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noModuleDeleted_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"delmod\";","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noMarkIndex_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"mark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noUnmarkIndex_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"unmark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_nonIntegerMarkIndex_expectException() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"mark a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_nonIntegerUnmarkIndex_expectException() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"unmark a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noTodoDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"todo\";","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noEventDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"event\";","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noDeadlineDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"deadline\";","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noDate_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"date\";","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":230,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":231,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":232,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":233,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_extraWordHelp() throws UnexpectedException {","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help me\";","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":243,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_extraWordList() throws UnexpectedException {","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"list all my tasks\";","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-22"},{"lineNumber":247,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":253,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_extraWordListMod() throws UnexpectedException {","lastModifiedDate":"2023-03-22"},{"lineNumber":254,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"listmod all my modules\";","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_extraWordExit() throws UnexpectedException {","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"bye bye\";","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-22"},{"lineNumber":267,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":268,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":270,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"irving11119"},"content":"    void parseShowMod_emptyDescription_expectsNoException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"irving11119"},"content":"        String userCommand \u003d \"showmod\";","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"irving11119"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"irving11119"},"content":"        int size \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e Parser.getCommand(userCommand, ui, size, null));","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":279,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_extraWord_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help event hi\";","lastModifiedDate":"2023-04-04"},{"lineNumber":281,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-04-04"},{"lineNumber":285,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":287,"author":{"gitId":"T-Wan-Lin"},"content":"    ","lastModifiedDate":"2023-04-05"},{"lineNumber":288,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"irving11119":15,"honglinshang":35,"yixuann02":8,"T-Wan-Lin":192,"PoobalanAatmikaLakshmi":39}},{"path":"src/test/java/seedu/apollo/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"class UiTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    void printList_normalInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        TaskList taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        assertDoesNotThrow(() -\u003e ui.printList(taskList));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"    void printList_emptyInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    void printFoundList_normalInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printFoundList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"    void printFoundList_emptyInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printFoundList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"    void printModuleList_emptyInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printModuleList(moduleList));","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"    void printModuleList_normalInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"        moduleList.add(new Module(\"CS1010\", \"Programming Methodology\", \"4\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printModuleList(moduleList));","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":21,"honglinshang":2,"T-Wan-Lin":43}},{"path":"src/test/java/seedu/apollo/command/WeekCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.utils.WeekCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"class WeekCommandTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    WeekCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"    void testExecute_emptySchedule_expectsNoException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        WeekCommand newWeekCommand \u003d new WeekCommand();","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newWeekCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"irving11119":31,"honglinshang":1}},{"path":"src/test/java/seedu/apollo/command/module/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"class AddModuleCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"    AddModuleCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    void testAddModuleCommand_invalidParams_expectsIllegalCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e new AddModuleCommand(\"addmod modules\", allModules));","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    void testAddModuleCommand_validParams_expectsNoException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e new AddModuleCommand(\"CS2113\", allModules));","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    void testAddModuleCommand_existingLessonType_expectsNoException() throws IllegalCommandException, InvalidModule {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        AddModuleCommand newCommand \u003d new AddModuleCommand(\"cs2113 -tut 05\", allModules);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"        newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e new AddModuleCommand(\"cs2113 -tut 06\", allModules)","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"                .execute(taskList, ui, storage,moduleList, allModules, calendar));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    void testAddModuleCommand_duplicateModule_expectsNoException() throws IllegalCommandException, InvalidModule {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"        AddModuleCommand newCommand \u003d new AddModuleCommand(\"cs2113\", allModules);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e new AddModuleCommand(\"cs2113\", allModules)","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"                .execute(taskList, ui, storage,moduleList, allModules, calendar));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"irving11119":29,"honglinshang":2,"T-Wan-Lin":24}},{"path":"src/test/java/seedu/apollo/command/module/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"class DeleteModuleCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    DeleteModuleCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    void testDeleteModuleCommand_invalidParams_expectsIllegalCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e new DeleteModuleCommand(\"delete module\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"    void testDeleteModuleCommand_validParams_expectsNoException() throws","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"            FileNotFoundException, IllegalCommandException, InvalidModule {","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        AddModuleCommand newCommand  \u003d new AddModuleCommand(\"CS2113\", allModules);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"        newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e new DeleteModuleCommand(\"CS2113\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"    void testDeleteModuleCommand_invalidLessonType_expectsNoException()","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"            throws IllegalCommandException, FileNotFoundException, InvalidModule {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"        new AddModuleCommand(\"CS2113 -lec 1\", allModules).","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"                execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"        DeleteModuleCommand newCommand \u003d new DeleteModuleCommand(\"CS2113 -lc 1\");","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newCommand.execute(new TaskList(), new Ui(),","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"                new Storage(\"test.txt\", \"testModuleData.txt\"), new ModuleList(),","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"                new ModuleList(), new Calendar()));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"    void testDeleteModuleCommand_classNotInList_expectsNoException() throws IllegalCommandException, InvalidModule {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"        new AddModuleCommand(\"CS2113 -tut 05\", allModules).","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"                execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"        DeleteModuleCommand newCommand \u003d new DeleteModuleCommand(\"CS2113 -tut 04\");","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newCommand.execute(new TaskList(), new Ui(),","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"                new Storage(\"test.txt\", \"testModuleData.txt\"), moduleList,","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"                allModules, calendar));","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"    void testDeleteModuleCommand_invalidModuleCode_expectsNoException() throws IllegalCommandException, InvalidModule {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"        new AddModuleCommand(\"CS2113 -tut 05\", allModules).","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"                execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"        DeleteModuleCommand newCommand \u003d new DeleteModuleCommand(\"CS2114 -tut 04\");","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newCommand.execute(new TaskList(), new Ui(),","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"                new Storage(\"test.txt\", \"testModuleData.txt\"), moduleList,","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"                allModules, calendar));","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"irving11119":76}},{"path":"src/test/java/seedu/apollo/command/module/ListModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"class ListModuleCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    ListModuleCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"    void testExecute_emptyModuleList_expectsNoException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e new ListModuleCommand()","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"                .execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"irving11119":32}},{"path":"src/test/java/seedu/apollo/command/module/ShowModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"class ShowModuleCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"    ShowModuleCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"    void testConstructor_invalidModule_expectsInvalidModuleException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"        assertThrows(InvalidModule.class, () -\u003e new ShowModuleCommand(\"CS21134\", allModules));","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    void testExecute_illegalCommand_expectsIllegalCommandException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"        assertThrows(IllegalCommandException.class, () -\u003e new ShowModuleCommand(\"CS2113 -mod 1\", allModules)","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"                .execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"irving11119":39}},{"path":"src/test/java/seedu/apollo/command/task/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Event;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.task.Task.printPattern;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"test1.txt\");","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    ModuleList allModules \u003d new ModuleList();","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    void execute_normalToDo_expectAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        AddCommand addCommand \u003d new AddCommand(\"todo\", \"add junit tests\");","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        Task result \u003d taskList.get(0);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        assertTrue(result instanceof ToDo);","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"add junit tests\", result.getDescription());","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    void execute_normalDeadline_expectAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"deadline\", \"submit homework -by 2024-01-01T23:59\");","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        Task result \u003d taskList.get(0);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        assertTrue(result instanceof Deadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"submit homework\", result.getDescription());","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"Jan 01 2024, 11:59PM\", ((Deadline) result).getBy(printPattern));","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    void newAddCommand_invalidDeadline_expectException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class, () -\u003e new AddCommand(\"deadline\", \"submit homework\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    void execute_invalidDateTimeDeadline_expectNoAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"deadline\", \"submit homework -by tomorrow\");","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    void execute_overDateTimeDeadline_expectNoAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"deadline\", \"submit homework -by 2022-01-01T00:00\");","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"    void execute_normalEvent_expectAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\",","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"                \"concert -from 2024-01-01T10:00 -to 2024-01-01T13:00\");","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"        Task result \u003d taskList.get(0);","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"        assertTrue(result instanceof Event);","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"concert\", result.getDescription());","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"Jan 01 2024, 10:00AM\", ((Event) result).getFrom(printPattern));","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"Jan 01 2024, 01:00PM\", ((Event) result).getTo(printPattern));","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"    void newAddCommand_invalidEvent_expectException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidEvent.class, () -\u003e new AddCommand(\"event\", \"concert\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"    void execute_invalidDateTimeEvent_expectNoAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\", \"concert -from now -to later\");","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"    void execute_overDateTimeEvent_expectNoAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\", \"concert -from 2022-01-01T23:59 -to 2022-02-01T00:00\");","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"    void execute_wrongOrderDateTimeEvent_expectNoAdd() throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"        AddCommand addCommand \u003d new AddCommand(\"event\", \"concert -from 2024-12-12T23:59 -to 2024-01-01T00:00\");","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"        addCommand.execute(taskList, ui, storage, moduleList, allModules, calendar);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"honglinshang":101,"T-Wan-Lin":7}},{"path":"src/test/java/seedu/apollo/command/task/DateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.exception.task.InvalidDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"class DateCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    DateCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_emptyTaskList_expectsNoException() throws InvalidDateTime {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"        DateCommand newDateCommand \u003d new DateCommand(\"2023-10-10\");","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newDateCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_populatedTaskList_expectsNoException() throws InvalidDateTime, DateOverException {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"        DateCommand newDateCommand \u003d new DateCommand(\"2023-10-10\");","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.add(new Deadline(\"submit tutorial\", \"2023-10-10T23:59\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newDateCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"irving11119":1,"T-Wan-Lin":49}},{"path":"src/test/java/seedu/apollo/command/task/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"class FindCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    FindCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_emptyTaskList_expectNoExceptions() {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"        FindCommand newFindCommand \u003d new FindCommand(\"test\");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newFindCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_populatedTaskList_expectNoExceptions() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        FindCommand newFindCommand \u003d new FindCommand(\"lunch\");","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.add(new ToDo (\"lunch with friends\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newFindCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"irving11119":1,"T-Wan-Lin":42}},{"path":"src/test/java/seedu/apollo/command/task/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"class ListCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"    ListCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    void testListCommandExecute_emptyTaskList_expectsNoException() throws FileNotFoundException {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"        ListCommand newCommand \u003d new ListCommand();","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    void testListCommandExecute_normalList_expectsNoException() throws FileNotFoundException {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        ListCommand newCommand \u003d new ListCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        taskList.add(new ToDo(\"Test Junit\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"        assertDoesNotThrow(() -\u003e newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"irving11119":42}},{"path":"src/test/java/seedu/apollo/command/task/ModifyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"class ModifyCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    ModifyCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_invalidDeleteCommand_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"delete\", \"a\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_invalidMarkCommand_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"mark\", \"a\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_invalidUnmarkCommand_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"unmark\", \"a\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_deleteInEmptyTaskList_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"delete\", \"1\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_markInEmptyTaskList_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"mark\", \"2\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"    void newModifyCommand_unmarkInEmptyTaskList_expectException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(NumberFormatException.class, () -\u003e new ModifyCommand(\"unmark\", \"3\", taskList.size()));","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_deleteInPopulatedTaskList_expectNoException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.add(new ToDo(\"lunch with friends\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"        ModifyCommand newModifyCommand \u003d new ModifyCommand(\"delete\", \"1\", taskList.size());","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newModifyCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_unmarkInPopulatedTaskList_expectNoException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.add(new ToDo(\"lunch with friends\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"        ModifyCommand newModifyCommand \u003d new ModifyCommand(\"unmark\", \"1\", taskList.size());","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newModifyCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"    void testExecute_markInPopulatedTaskList_expectNoException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"        taskList.add(new ToDo(\"lunch with friends\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"        ModifyCommand newModifyCommand \u003d new ModifyCommand(\"mark\", \"1\", taskList.size());","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e newModifyCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"T-Wan-Lin":78}},{"path":"src/test/java/seedu/apollo/command/task/SpecificHelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.AddModHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DateHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeadlineHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeleteHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.DeleteModHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.EventHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ExitHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.FindHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ListHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ListModuleHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.MarkHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.ShowModHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.SpecifiedAidHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.TodoHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.utils.specifichelpcommand.UnmarkHelpCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.utils.specifichelpcommand.WeekHelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"class SpecificHelpCommandTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\");","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    Calendar calendar \u003d new Calendar();","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public SpecificHelpCommandTest() throws FileNotFoundException {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_invalidCommand_expectException() throws IllegalArgumentException {","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help draw\";","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.chooseHelpCommand(userCommand));","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_trailingArgument_expectException() throws IllegalArgumentException{","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help showmod hello\";","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Parser.chooseHelpCommand(userCommand));","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_listHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help list\";","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(ListHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_todoHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help todo\";","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(TodoHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_eventHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help event\";","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(EventHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_deadlineHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help deadline\";","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(DeadlineHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_markHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help mark\";","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(MarkHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_unMarkHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help unmark\";","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(UnmarkHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_deleteHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help delete\";","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(DeleteHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_findHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help find\";","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(FindHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseHelpCommand_dateHelpCommand_expectNoException() throws UnexpectedException {","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"help date\";","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertEquals(DateHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_showmodHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help showmod\";","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(ShowModHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_listModuleHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help listmod\";","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(ListModuleHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_weekHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help week\";","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":185,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(WeekHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":188,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_addModuleHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help addmod\";","lastModifiedDate":"2023-04-05"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(AddModHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_deleteModuleHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help delmod\";","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":205,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(DeleteModHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":206,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":207,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseHelpCommand_specificHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help help\";","lastModifiedDate":"2023-04-05"},{"lineNumber":213,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(SpecifiedAidHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":219,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":220,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"T-Wan-Lin"},"content":"    void exitHelpCommand_specificHelpCommand_expectNoException() throws UnexpectedException{","lastModifiedDate":"2023-04-05"},{"lineNumber":222,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"help bye\";","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-04-05"},{"lineNumber":224,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(ExitHelpCommand.class, newCommand.getClass());","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"T-Wan-Lin"},"content":"                newCommand.execute(taskList, ui, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":231,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"T-Wan-Lin":84,"PoobalanAatmikaLakshmi":147}},{"path":"src/test/java/seedu/apollo/command/utils/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.stub.UiStub;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"class ExitCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    TaskList taskList;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    Storage storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    ModuleList moduleList;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    ModuleList allModules;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    Calendar calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    void execute_normalExitCommand_expectIsExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        Command exitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"        assertDoesNotThrow(() -\u003e exitCommand.execute(taskList, uiStub, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        assertTrue(exitCommand.isExit);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"honglinshang":30}},{"path":"src/test/java/seedu/apollo/command/utils/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.stub.UiStub;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.calendar.Calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"class HelpCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    TaskList taskList;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    UiStub uiStub \u003d new UiStub();","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    Storage storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    ModuleList moduleList;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    ModuleList allModules;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    Calendar calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    void execute_normalHelpCommand_expectNoException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        Command helpCommand \u003d new HelpCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        assertDoesNotThrow(() -\u003e helpCommand.execute(taskList, uiStub, storage, moduleList, allModules, calendar));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"honglinshang":27}},{"path":"src/test/java/seedu/apollo/module/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"class ModuleListTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    void addModule_invalidModuleCode_expectNull() {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        ModuleList allModules \u003d new ModuleList();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"        String invalidModuleCode \u003d \"cg2113\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(invalidModuleCode));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"        assertNull(allModules.findModule(invalidModuleCode));","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    void findModule_invalidModuleCode_expectNull() throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\" );","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"        ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        assertNull(modules.findModule(\"CS2040C\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    void findModule_validModuleCode_returnsModule() throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\" );","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        Module validModule \u003d allModules.findModule(\"CS2113\");","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        assertEquals(validModule, modules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":29,"honglinshang":12}},{"path":"src/test/java/seedu/apollo/stub/UiStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.stub;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"public class UiStub extends Ui {","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"honglinshang":15}},{"path":"src/test/java/seedu/apollo/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"class DeadlineTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    Deadline deadline \u003d new Deadline(\"test\", \"2024-01-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    DeadlineTest() throws DateOverException {}","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    void newDeadline_normalDeadline_expectDeadline() throws DateOverException {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        deadline \u003d new Deadline(\"test\", \"2025-01-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[D][ ] test (by: Jan 01 2025, 11:59PM)\", deadline.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    void newDeadline_invalidDate_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"                () -\u003e deadline \u003d new Deadline(\"test\", \"tomorrow\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    void newDeadline_overDate_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateOverException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"                () -\u003e deadline \u003d new Deadline(\"test\", \"2022-01-01T23:59\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    void getType_normalDeadline_expectDeadlineString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"deadline\", deadline.getType());","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    void getByDate_normalDeadline_expectLocalDateTime() {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(\"2024-01-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"        assertEquals(by, deadline.getByDate());","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_onDate_expectTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-01-01\");","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        assertTrue(deadline.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_notOnDate_expectFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-01-02\");","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        assertFalse(deadline.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    void testToString_markedDeadline_expectString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        deadline.setDone(true);","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[D][X] test (by: Jan 01 2024, 11:59PM)\", deadline.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"honglinshang":68}},{"path":"src/test/java/seedu/apollo/task/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"class EventTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    Event event \u003d new Event(\"test\", \"2024-01-01T23:59\", \"2024-02-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    EventTest() throws DateOrderException, DateOverException {}","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    void newEvent_normalEvent_expectEvent() throws DateOverException, DateOrderException {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        event \u003d new Event(\"test\", \"2025-01-01T23:59\", \"2025-02-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[E][ ] test (from: Jan 01 2025, 11:59PM to: Feb 01 2025, 11:59PM)\", event.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    void newEvent_invalidFrom_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"                () -\u003e event \u003d new Event(\"test\", \"today\", \"2025-02-01T23:59\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    void newEvent_invalidTo_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"                () -\u003e event \u003d new Event(\"test\", \"2025-01-01T23:59\", \"later\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    void newEvent_overDate_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateOverException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"                () -\u003e event \u003d new Event(\"test\", \"2022-01-01T23:59\", \"2022-02-01T23:59\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    void newEvent_orderDate_expectException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"        assertThrows(DateOrderException.class,","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"                () -\u003e event \u003d new Event(\"test\", \"2025-01-02T23:59\", \"2025-01-01T23:59\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    void getType_normalEvent_expectEventString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"event\", event.getType());","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    void getFromDate_normalEvent_expectLocalDateTime() {","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2024-01-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        assertEquals(from, event.getFromDate());","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    void getToDate_normalEvent_expectLocalDateTime() {","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2024-02-01T23:59\");","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        assertEquals(to, event.getToDate());","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_sameAsFrom_expectTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-01-01\");","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"        assertTrue(event.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_sameAsTo_expectTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-01-02\");","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        assertTrue(event.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_betweenFromTo_expectTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2024-01-15\");","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"        assertTrue(event.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"    void isOnDate_notOnDate_expectFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"        LocalDate date \u003d LocalDate.parse(\"2025-01-01\");","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"        assertFalse(event.isOnDate(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"    void testToString_markedEvent_expectString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"        event.setDone(true);","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[E][X] test (from: Jan 01 2024, 11:59PM to: Feb 01 2024, 11:59PM)\", event.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"honglinshang":98}},{"path":"src/test/java/seedu/apollo/task/ToDoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"class ToDoTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"    ToDo toDo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"    void getType_normalToDo_expectToDoString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"todo\", toDo.getType());","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    void testToString_unmarkedToDo_expectString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[T][ ] test\", toDo.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    void testToString_markedToDo_expectString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        toDo.setDone(true);","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"[T][X] test\", toDo.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"honglinshang":26}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"rm moduleData.txt","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"rm save.txt","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honglinshang":2,"-":24}}]
