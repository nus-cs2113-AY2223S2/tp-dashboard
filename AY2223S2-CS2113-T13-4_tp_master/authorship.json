[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"jar {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    manifest {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"        attributes \"Main-Class\": \"seedu.apollo.Apollo\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"    from {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"tasks.withType(Copy).all {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"    duplicatesStrategy \u0027exclude\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"sourceSets {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"    main.java.srcDirs \u0027src/main/java\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    main.resources.srcDirs \u0027src/main/resources\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"    test.java.srcDirs \u0027src/test/java\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    mainClass \u003d \"seedu.apollo.Apollo\"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"    archiveBaseName \u003d \"apollo\"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"irving11119":25,"honglinshang":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"Display |   Name   |                   Github Profile                    | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"--------|:--------:|:---------------------------------------------------:|:---------:","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yi Xuan  |            [Github](https://github.com/)            | [Portfolio](team/yixuan.md)","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Irving de Boer  |      [Github](https://github.com/irving11119)       | [Portfolio](team/irving.md)","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"![](https://avatars.githubusercontent.com/u/88550208?v\u003d4) | Hong Lin Shang |      [Github](https://github.com/honglinshang)      | [Portfolio](team/linshang.md)","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wan Lin |            [Github](https://github.com/)            | [Portfolio](team/wanlin.md)","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Poobalan Aatmika Lakshmi  | [Github](https://github.com/PoobalanAatmikaLakshmi) | [Portfolio](team/aatmika.md)","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"irving11119":1,"honglinshang":5,"PoobalanAatmikaLakshmi":1,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Apollo Developer Guide","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"## Table of Contents","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"1. [Acknowledgments](#acknowledgements)","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"2. [Design](#design)","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Architecture](#architecture)","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"    + [UI Component](#ui-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Logic Component](#logic-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Model Component](#model-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Storage Component](#storage-component)","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Common Classes](#common-classes)","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"3. [Implementation](#implementation)","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Add Module](#add-module)","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Delete Module](#delete-module)","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"    + [List Module](#list-module)","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Add Task](#add-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Delete Task](#delete-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Mark Task](#mark-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Unmark Task](#unmark-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Find Task](#find-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    + [List Task](#list-task)","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Find Task on Date](#find-task-on-date)","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Storage](#storage)","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Logging](#logging)","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"4. [Documentation, logging, testing, configuration, dev-ops](#documentations-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Documentation](#documentation)","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Logging](#logging)","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Testing](#testing)","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Configuration](#configuration)","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Dev-ops](#dev-ops)","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"5. [Appendix A: Requirements](#appendix-a-requirements)","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Product Scope](#product-scope)","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"        + [Target User Profile](#target-user-profile)","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"        + [Value Proposition](#value-proposition)","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"    + [User Stories](#user-stories)","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Use Cases](#use-cases)","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Glossary](#glossary)","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"6. [Appendix B: Instructions for manual testing](#appendix-b-instructions-for-manual-testing)","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Launch and Shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"We would like to acknowledge:","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Design \u0026 implementation","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Architecture","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### UI Component","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Logic Component","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Model Component","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Storage Component","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Common Classes","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Implementation","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Delete Module","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The DeleteModule functionality allows users to remove a module from the ModuleList.","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"It is facilitated by DeleteModuleCommand class which is an extension of the Command class.","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Given below is an example usage scenario and how the delete mechanism behaves at each step.","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 1: Define the Constructor :","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"When user executes the command `delmod cs2113` the Parser class calls the `DeleteModuleCommand()` method of the","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"DeleteModuleCommand class.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The constructor of the DeleteModuleCommand class takes in a","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"moduleCode `cs2113` as a parameter. This moduleCode is","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"used to find `cs2113`  from the ModuleList.","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 2: Define the setUpLogger() method :","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The setUpLogger() method sets up the logger for the DeleteModuleCommand class. It creates a ConsoleHandler and a","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"FileHandler to handle logging.","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 3: Override the execute() method :","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The execute() method is overridden to execute the delete module functionality. It takes in the necessary parameters,","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"including the ModuleList, Ui, Storage, and TaskList.","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 4: Find the module to delete :","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The first step in the execute() method is to find the module using the module code parameter  `cs2113` by calling","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"the `findModule()` method of the moduleList class.","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If the module `cs2113` is not found, a ModuleNotFoundException is thrown.","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 5: Remove the module from the ModuleList :","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"If `cs2113` is found, it is removed from the ModuleList by calling `remove()` method of moduleList class.","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 6: Print the confirmation message :","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"A confirmation message is printed to the user indicating that the `cs2113` has been successfully deleted.","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Step 7: Update the storage :","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"The storage is updated with the new ModuleList without `cs2113`","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"### Documentation","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"### Logging","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"### Testing","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"### Configuration","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"### Dev-ops","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"## Appendix A: Requirements","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"### Product scope","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"#### Target user profile","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"The target user profile is an average NUS student who:","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"* has a need to manage a significant number of tasks (todo, event, deadline) and modules,","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"* prefer desktop applications over other types of applications,","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"* can type fast,","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"* prefers typing to mouse interactions,","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"* is reasonably comfortable using CLI apps.","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"T-Wan-Lin"},"content":"#### Value proposition","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"Existing schedulers do not have access to NUS’s database, making it so that a student here would have to manually","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"input all their lessons. We can expedite this process by creating a scheduler that sets itself up via module codes.","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"T-Wan-Lin"},"content":"It can also alert the user to possible event clashes.","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":130,"author":{"gitId":"T-Wan-Lin"},"content":"### User Stories","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"| Priority | Version | As a ... | I want to ...             | So that I can ...                                           |","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"|:--------:|:-------:|:--------:|:--------------------------|-------------------------------------------------------------|","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"|          |  v1.0   | new user | see usage instructions    | refer to them when I forget how to use the application      |","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"|          |  v2.0   |   user   | find a to-do item by name | locate a to-do without having to go through the entire list |","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"## Use Cases","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"T-Wan-Lin"},"content":"* Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"T-Wan-Lin"},"content":"* Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"T-Wan-Lin"},"content":"* A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"  able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"* *Mainstream OS* - Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"* *CLI* - Command Line Interface","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"*","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"## Appendix B: Instructions for manual testing","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Note: These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e testers are expected to do more *exploratory* testing. ","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"T-Wan-Lin":86,"PoobalanAatmikaLakshmi":54,"-":16}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```text","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## A personal timetable organiser","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Description","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo is a timetable organiser written in java made for the average NUS students by NUS students!","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Apollo works as a desktop app for managing your tasks, events, deadlines and modules optimized for use via a Command","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Line Interface (CLI).","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"**If you can type fast, Apollo can get your timetable management done faster than traditional GUI apps.**","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Feature List(for V2.0)","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"### Integrate tasks and modules to make weekly schedule","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Task planner","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Add 3 different types of tasks : todos,deadlines,events","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Mark them as done or not done","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Search for tasks by keyword","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Filter tasks chronologically","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* See list of tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Delete tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Module planner","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Add modules and their lectures/tutorials","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Remove modules","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* Be warned about clashing classes","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"#### Timetable","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* See the tasks + classes for the day","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## How to install and run the project","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"Prerequisites: java 11 (use the exact version)","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"1. Download the jar file from the releases below","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"2. Copy the jar file into an empty folder","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"3. Open a command window in that folder","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"4. Run the command `java -jar {filename}.jar` e.g `java -jar tp.jar`","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Useful links:","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"## Releases:","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"* [v1.0](https://github.com/AY2223S2-CS2113-T13-4/tp/releases/tag/v1.0)","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":43,"-":17}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"# Apollo User Guide (as of V2.0)","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"T-Wan-Lin"},"content":"## Introduction and Aim","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"Welcome to Apollo, a timetable organiser made for the average NUS students by NUS students!","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo is a desktop app for managing your tasks, events, deadlines and modules optimized for use via a Command Line","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"T-Wan-Lin"},"content":"Interface (CLI) .","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"If you can type fast, Apollo can get your timetable management done faster than traditional GUI apps.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"## Table of Contents","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"2. [Features](#features)","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`help` - Viewing help](#help---viewing-help)","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`list` - Listing all saved tasks](#list---listing-all-saved-tasks)","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`todo` - Adding a ToDo](#todo---adding-a-todo)","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`deadline` - Adding a Deadline](#deadline---adding-a-deadline)","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`event` - Adding an Event](#event---adding-an-event)","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`mark` - Marking done](#mark---marking-done)","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`unmark` - Marking not done](#unmark---marking-not-done)","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`delete` - Deleting a task](#delete---deleting-a-task)","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`find` - Finding a task](#find---finding-a-task)","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`date` - Find tasks on date](#date---find-tasks-on-date)","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`addmod` - Adding a module](#addmod---adding-a-module)","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"      + [`addmod` flags](#addmod-flags)","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`delmod` - Deleting a module](#delmod---deleting-a-module)","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`listmod` - Listing all modules](#listmod---listing-all-modules)","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    + [`bye` - Exiting the program](#bye---exiting-the-program)","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"    + [Loading and saving of data](#loading-and-saving-of-data)","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"3. [Command summary](#command-summary)","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"4. [FAQ](#faq)","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"## Quick Start","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"1. Ensure that you have Java `11` or above installed on your Personal Computer.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"2. Download the latest `tp.jar` from [here]().","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"3. Copy the file to the folder you want to use as the home folder for your Apollo. This folder must be *empty*.","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"4. Open a command terminal, cd into the directory you put the jar file in and run the command `java -jar tp.jar`.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"5. On opening, Apollo should greet you with this:","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"Hello from","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":" ____    ____    _____  __      __       _____","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"|  _  | |  _ \\  | ___ | | |     | |     | ___ |","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"| |_| | | |_| | | | | | | |     | |     | | | |","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"| | | | |  __/  | |_| | | |___  | |___  | |_| |","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"|_| |_| |_|     \\_____/ |_____| |_____| \\_____/","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"Enter \"help\" to see a list of commands.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"____________________________________________________________","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"## Command Summary","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"|    Action     |              Format              |","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"|:-------------:|:--------------------------------:|","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"|     Help      |              `help`              |","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"|  List Tasks   |              `list`              |","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"|     Todo      |           `todo TASK`            |","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"|   Deadline    |     `deadline TASK /by DATE`     |","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"|     Event     | `event TASK /from DATE /to DATE` |","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"|     Mark      |            `mark IDX`            |","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"|    Unmark     |           `unmark IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"|  Delete Task  |           `delete IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"|     Find      |          `find KEYWORD`          |","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"|     Date      |           `date DATE`            |","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"|      Bye      |              `bye`               |","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"|  Add Module   |       `addmod MODULE_CODE`       |","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"| Delete Module |           `delmod IDX`           |","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"| List Modules  |            `listmod`             |","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e + Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e \u003e e.g. in \u0027todo TASK\u0027, `TASK` is a parameter that can be used as `todo read book`.","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e + The `date` command only considers tasks when `DATE` is input in the format `yyyy-MM-ddThh:mm`.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e \u003e e.g. `deadline read book /by 2023-10-30T23:59` sets a deadline for Oct 20 2023, 11:59PM","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e + By default, all newly added tasks are not completed.","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"## Features","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"### `help` - Viewing help","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"Shows a menu of commands available in Apollo and their usage, as well as their required format/parameters.","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `help`","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"### `list` - Listing all saved tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"Shows a numbered list of all tasks (Todos, Events, Deadlines) in Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `list`","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"Sample output:","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e list","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"You have a total of 4 tasks in your tasklist.","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"1.[T][ ] Eat Lunch","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"2.[E][ ] holiday (from: Mar 25 2023, 12:00AM to: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"3.[D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"4.[T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"There are 4 unmarked tasks in your tasklist.","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"### `todo` - Adding a ToDo","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a normal task to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `todo TASK`","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"Example input:","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e todo Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this todo:","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"   [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"T-Wan-Lin"},"content":"### `deadline` - Adding a Deadline","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a task with a due date to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `deadline TASK /by DATE`","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"T-Wan-Lin"},"content":"- Enter `DATE` in `yyyy-MM-ddThh:mm` format to use `date` on this task.","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e deadline submit tutorial /by 2023-03-30T23:59","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this deadline:","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"  [D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"### `event` - Adding an Event","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a task with a start and end date to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `event TASK /from DATE /to DATE`","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"T-Wan-Lin"},"content":"- Enter `DATE` in `yyyy-MM-ddThh:mm` format to use `date` on this task.","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e event holiday /from 2023-03-25T00:00 /to 2023-03-30T23:59","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this event:","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"  [E][ ] holiday (from: Mar 25 2023, 12:00AM to: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"### `mark` - Marking done","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"Marks the specified task as completed.","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `mark IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"- `IDX` can be obtained by using `list` to find the task\u0027s index.","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e mark 4","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"Nice!, I\u0027ve marked this task as done:","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"[T][X] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"### `unmark` - Marking not done","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"Marks the specified task as not completed.","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `unmark IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":169,"author":{"gitId":"T-Wan-Lin"},"content":"- `IDX` can be obtained by using `list` to find the task\u0027s index.","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e unmark 4","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"  [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"### `delete` - Deleting a task","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"Deletes the specified task from Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `delete IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"- `IDX` can be obtained by using `list` to find the task\u0027s index.","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e delete 4","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"  [T][ ] Feed the fish","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"T-Wan-Lin"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"### `find` - Finding a task","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"Shows all tasks in Apollo that contain the specified keyword.","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e find tutorial","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"1.[D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"T-Wan-Lin"},"content":"### `date` - Find tasks on date","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"T-Wan-Lin"},"content":"Shows all tasks in Apollo that occur on the specified date.","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `date DATE`","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"T-Wan-Lin"},"content":"- `DATE` should be entered in the format `yyyy-MM-dd`.","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e date 2023-03-30","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the tasks happening on Mar 30 2023:","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"T-Wan-Lin"},"content":"1.[E][ ] holiday (from: Mar 25 2023, 12:00AM to: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"T-Wan-Lin"},"content":"2.[D][ ] submit tutorial (by: Mar 30 2023, 11:59PM)","lastModifiedDate":"2023-03-17"},{"lineNumber":216,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"T-Wan-Lin"},"content":"### `addmod` - Adding a module","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"T-Wan-Lin"},"content":"Adds a module to Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `addmod MODULE_CODE`","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Note: `MODULE_CODE` can be either uppercase or lowercase. However, if the module code is not found in NUSMods,","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e Apollo will not add the invalid module into the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":225,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":227,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e addmod cs2113","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"T-Wan-Lin"},"content":"Got it. I\u0027ve added this module:","lastModifiedDate":"2023-03-17"},{"lineNumber":229,"author":{"gitId":"T-Wan-Lin"},"content":"  CS2113: Software Engineering \u0026 Object-Oriented Programming","lastModifiedDate":"2023-03-17"},{"lineNumber":230,"author":{"gitId":"T-Wan-Lin"},"content":"Total modular credits you have in this semester: 36","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"T-Wan-Lin"},"content":"Here are the lesson types for this module:","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"T-Wan-Lin"},"content":"LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"T-Wan-Lin"},"content":"TUTORIAL","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"T-Wan-Lin"},"content":"To see how to add lessons, enter \u0027help\u0027.","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":236,"author":{"gitId":"T-Wan-Lin"},"content":"#### `addmod` flags","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"T-Wan-Lin"},"content":"There are many lesson options and types, the below is a list of all the flags and their respective lesson types.","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"T-Wan-Lin"},"content":"-lec        LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"T-Wan-Lin"},"content":"-plec       PACKAGED LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"T-Wan-Lin"},"content":"-st         SECTIONAL TEACHING","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"T-Wan-Lin"},"content":"-dlec       DESIGN LECTURE","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"T-Wan-Lin"},"content":"-tut        TUTORIAL","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"T-Wan-Lin"},"content":"-ptut       PACKAGED TUTORIAL","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"T-Wan-Lin"},"content":"-rcit       RECITATION","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"T-Wan-Lin"},"content":"-lab        LABORATORY","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"T-Wan-Lin"},"content":"-ws         WORKSHOP","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"T-Wan-Lin"},"content":"-smc        SEMINAR STYLE MODULE CLASS","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"T-Wan-Lin"},"content":"-mp         MINI PROJECT","lastModifiedDate":"2023-03-18"},{"lineNumber":250,"author":{"gitId":"T-Wan-Lin"},"content":"-tt2        TUTORIAL TYPE 2","lastModifiedDate":"2023-03-18"},{"lineNumber":251,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":252,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"T-Wan-Lin"},"content":"To add a lesson, use the following format:","lastModifiedDate":"2023-03-18"},{"lineNumber":254,"author":{"gitId":"T-Wan-Lin"},"content":"`addmod MODULE_CODE -FLAG [LESSON NUMBER]`","lastModifiedDate":"2023-03-18"},{"lineNumber":255,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":256,"author":{"gitId":"T-Wan-Lin"},"content":"Example:","lastModifiedDate":"2023-03-18"},{"lineNumber":257,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":258,"author":{"gitId":"T-Wan-Lin"},"content":"addmod CS1010 -st 1","lastModifiedDate":"2023-03-18"},{"lineNumber":259,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-18"},{"lineNumber":260,"author":{"gitId":"T-Wan-Lin"},"content":"This will add the first section teaching lesson of CS1010 to your module list.","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":262,"author":{"gitId":"T-Wan-Lin"},"content":"### `delmod` - Deleting a module","lastModifiedDate":"2023-03-17"},{"lineNumber":263,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":264,"author":{"gitId":"T-Wan-Lin"},"content":"Removes a module from Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":265,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `delmod IDX`","lastModifiedDate":"2023-03-17"},{"lineNumber":266,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":267,"author":{"gitId":"T-Wan-Lin"},"content":"- `IDX` can be obtained by using `list` to find the task\u0027s index.","lastModifiedDate":"2023-03-17"},{"lineNumber":268,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":269,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":270,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e delmod 1","lastModifiedDate":"2023-03-17"},{"lineNumber":271,"author":{"gitId":"T-Wan-Lin"},"content":"Got it, removed CS2113 from your Module list.","lastModifiedDate":"2023-03-17"},{"lineNumber":272,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":273,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":274,"author":{"gitId":"T-Wan-Lin"},"content":"### `listmod` - Listing all modules","lastModifiedDate":"2023-03-17"},{"lineNumber":275,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":276,"author":{"gitId":"T-Wan-Lin"},"content":"Shows a list of all modules in Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":277,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `listmod`","lastModifiedDate":"2023-03-17"},{"lineNumber":278,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":279,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e listmod","lastModifiedDate":"2023-03-17"},{"lineNumber":281,"author":{"gitId":"T-Wan-Lin"},"content":"You are taking 7 module(s) this semester:","lastModifiedDate":"2023-03-17"},{"lineNumber":282,"author":{"gitId":"T-Wan-Lin"},"content":"1.CDE2000: Creating Narratives","lastModifiedDate":"2023-03-17"},{"lineNumber":283,"author":{"gitId":"T-Wan-Lin"},"content":"2.CG2023: Signals and Systems","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"T-Wan-Lin"},"content":"3.CS2040C: Data Structures and Algorithms","lastModifiedDate":"2023-03-17"},{"lineNumber":285,"author":{"gitId":"T-Wan-Lin"},"content":"4.EE2026: Digital Design","lastModifiedDate":"2023-03-17"},{"lineNumber":286,"author":{"gitId":"T-Wan-Lin"},"content":"5.EE2211: Introduction to Machine Learning","lastModifiedDate":"2023-03-17"},{"lineNumber":287,"author":{"gitId":"T-Wan-Lin"},"content":"6.EE4204: Computer Networks","lastModifiedDate":"2023-03-17"},{"lineNumber":288,"author":{"gitId":"T-Wan-Lin"},"content":"7.MA2002: Calculus","lastModifiedDate":"2023-03-17"},{"lineNumber":289,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":290,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":291,"author":{"gitId":"T-Wan-Lin"},"content":"### `bye` - Exiting the program","lastModifiedDate":"2023-03-17"},{"lineNumber":292,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":293,"author":{"gitId":"T-Wan-Lin"},"content":"Format: `exit`","lastModifiedDate":"2023-03-17"},{"lineNumber":294,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":295,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":296,"author":{"gitId":"T-Wan-Lin"},"content":"\u003e\u003e bye ","lastModifiedDate":"2023-03-17"},{"lineNumber":297,"author":{"gitId":"T-Wan-Lin"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2023-03-17"},{"lineNumber":298,"author":{"gitId":"T-Wan-Lin"},"content":"```","lastModifiedDate":"2023-03-17"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":300,"author":{"gitId":"T-Wan-Lin"},"content":"### Loading and saving of data","lastModifiedDate":"2023-03-17"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":302,"author":{"gitId":"T-Wan-Lin"},"content":"Apollo automatically loads up your todo and module lists on start-up.","lastModifiedDate":"2023-03-17"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":304,"author":{"gitId":"T-Wan-Lin"},"content":"After any command that changes the data, Apollo will save the changes into your hard disk automatically.","lastModifiedDate":"2023-03-17"},{"lineNumber":305,"author":{"gitId":"T-Wan-Lin"},"content":"No need to save manually!","lastModifiedDate":"2023-03-17"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":307,"author":{"gitId":"T-Wan-Lin"},"content":"The save file for your tasks is located at save.txt within the *home folder* for Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":308,"author":{"gitId":"T-Wan-Lin"},"content":"The save file for your modules is located at moduleData.txt within the *home folder* for Apollo.","lastModifiedDate":"2023-03-17"},{"lineNumber":309,"author":{"gitId":"T-Wan-Lin"},"content":"If either file is corrupted, Apollo will show you a warning before the welcome message.","lastModifiedDate":"2023-03-17"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"T-Wan-Lin":300,"-":14}},{"path":"docs/team/linshang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"# Lin Shang - Project Portfolio Page","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"## Overview","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"Nothing","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"honglinshang":7}},{"path":"src/main/java/seedu/apollo/Apollo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":" * Main class for running Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"public class Apollo {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    public static final String FILE_PATH \u003d \"save.txt\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"    private static final String MODULE_DATA_FILEPATH \u003d \"moduleData.txt\";","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    private static Storage storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    private static TaskList taskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    private static ModuleList moduleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    private static ModuleList moduleData;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    private static Ui ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     * Initialises Ui, Storage, and TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * @param filePath Location of the local save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    public Apollo(String filePath, String moduleDataFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        storage \u003d new Storage(filePath, moduleDataFilePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"            moduleData \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"            moduleList \u003d storage.loadModuleList(ui, moduleData);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"     * Reads, executes, and prints outputs of user commands continually.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"     * Stops after ExitCommand is called.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If there are issues with saving to the hard disk.","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        assert (ui !\u003d null \u0026 storage !\u003d null \u0026 taskList !\u003d null \u0026 moduleData !\u003d null \u0026 moduleList !\u003d null) :","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"                \"Initialising Apollo\";","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"            ui.showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"            Command c \u003d Parser.getCommand(fullCommand, ui, taskList.size(), moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"                c.execute(taskList, ui, storage, moduleList, moduleData);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"                isExit \u003d c.isExit;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"            ui.showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"     * Initialises and runs Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"            new Apollo(FILE_PATH, MODULE_DATA_FILEPATH).run();","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"        } catch (UnexpectedException unexpectedException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"            ui.printUnexpectedException(unexpectedException);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"irving11119":18,"honglinshang":59,"-":6}},{"path":"src/main/java/seedu/apollo/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" * Parent class of all types of Commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public Boolean isExit \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     * @param taskList TaskList containing all currently saved tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints output messages to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     * @param storage Updates the local save file if the TaskList is modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If something unexpected occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules)","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    protected void setExit() {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":6,"honglinshang":27}},{"path":"src/main/java/seedu/apollo/command/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.exception.module.DuplicateModuleException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.LessonAddedException;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Timetable;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddModuleCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"    private Module module;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"    private String params;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"     * Constructor for AddModuleCommand.","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"     * @param param The module code of the module to be added.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"     * @param allModules The list of all modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"     * @throws InvalidModule If the module code is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    public AddModuleCommand(String param, ModuleList allModules) throws InvalidModule, IllegalCommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"        AddModuleCommand.setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"        assert (param !\u003d null) : \"AddModuleCommand: Params should not be null!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"        assert (allModules !\u003d null) : \"AddModuleCommand: Module list should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"        params \u003d param;","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"        String[] args \u003d param.split(\"\\\\s+\");","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"        if (args.length !\u003d 3 \u0026\u0026 args.length !\u003d 1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        String moduleCode \u003d args[0];","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"        Module toAdd \u003d allModules.findModule(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"        if (toAdd \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"            throw new InvalidModule();","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        module \u003d new Module(toAdd.getCode(), toAdd.getTitle(), toAdd.getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public boolean isAdded(ModuleList moduleList, Module module) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"        for (Module mod: moduleList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"            if (mod.getCode().equals(module.getCode())) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"            String[] args \u003d params.split(\"\\\\s+\");","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"irving11119"},"content":"            if (args.length \u003d\u003d 3) {","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"irving11119"},"content":"                handleMultiCommand(moduleList, allModules, args);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"irving11119"},"content":"                ui.printClassAddedMessage(args[0].toUpperCase(), getCommand(args[1]), args[2]);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"irving11119"},"content":"            } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"irving11119"},"content":"                if (isAdded(moduleList, module)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"                    throw new DuplicateModuleException();","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"                if (module !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"                    moduleList.add(module);","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"                    moduleList.sortModules();","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"                    Module referenceModule \u003d allModules.findModule(module.getCode());","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"irving11119"},"content":"                    ui.printAddModuleMessage(module);","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"                    ui.printTotalModularCredits(moduleList);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"irving11119"},"content":"                    ui.printLessonTypeMessage(getLessonTypes(referenceModule));","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"                    ui.printAddLessonOptions();","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"irving11119"},"content":"            storage.updateModule(moduleList);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"irving11119"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"IO Exception\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        } catch (DuplicateModuleException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            ui.printDuplicateModule();","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"irving11119"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidLessonType();","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"irving11119"},"content":"        } catch (LessonAddedException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"irving11119"},"content":"            ui.printLessonExists();","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"irving11119"},"content":"    private void handleMultiCommand(ModuleList moduleList, ModuleList allModules, String[] args)","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"irving11119"},"content":"            throws IllegalCommandException, ClassNotFoundException, LessonAddedException {","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"        LessonType lessonType \u003d this.getCommand(args[1]);","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"irving11119"},"content":"        Module searchModule \u003d null;","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"        for (Module module1: allModules){","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"irving11119"},"content":"            if (module1.getCode().equalsIgnoreCase(this.module.getCode())){","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"irving11119"},"content":"                searchModule \u003d module1;","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"irving11119"},"content":"                break;","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"        if (this.isAdded(moduleList, module)){","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"            for (Module module: moduleList){","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"irving11119"},"content":"                if (module.getCode().equals(this.module.getCode())){","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"irving11119"},"content":"                    this.module.setTimetable(module.getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"                    break;","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"                index++;","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"            module.setTimetable(moduleList.get(index).getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"            if (module.hasLessonType(lessonType)){","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"                throw new LessonAddedException();","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"            addTimetable(searchModule, lessonType, args[2]);","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"            moduleList.get(index).setTimetable(module.getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"            module.createNewTimeTable();","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"            addTimetable(searchModule, lessonType, args[2]);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"            moduleList.add(module);","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"    private void addTimetable(Module searchModule, LessonType lessonType, String args) throws ClassNotFoundException {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"        Boolean isFound \u003d false;","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTimetable\u003e copyList \u003d new ArrayList\u003c\u003e(searchModule.getModuleTimetable());","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable: copyList){","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"            LessonType searchLessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"irving11119"},"content":"            if (searchLessonType.equals(lessonType) \u0026\u0026 timetable.getClassnumber().equals(args)){","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"                module.getModuleTimetable().add(timetable);","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"                isFound \u003d true;","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"irving11119"},"content":"        if (!isFound){","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"irving11119"},"content":"            throw new ClassNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cLessonType\u003e getLessonTypes(Module module) {","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cLessonType\u003e lessonTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : module.getModuleTimetable()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"            LessonType lessonType \u003d determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"            if (!lessonTypes.contains(lessonType) \u0026\u0026 lessonType !\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"                lessonTypes.add(lessonType);","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"irving11119"},"content":"        return lessonTypes;","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"irving11119"},"content":"    private LessonType getCommand(String arg) throws IllegalCommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"irving11119"},"content":"        switch (arg) {","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"        case \"-lec\":","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"irving11119"},"content":"            return LessonType.LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"irving11119"},"content":"        case \"-plec\":","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"irving11119"},"content":"        case \"-st\":","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"irving11119"},"content":"            return LessonType.SECTIONAL_TEACHING;","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"irving11119"},"content":"        case \"-dlec\":","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"irving11119"},"content":"            return LessonType.DESIGN_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"irving11119"},"content":"        case \"-tut\":","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"irving11119"},"content":"        case \"-ptut\":","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"irving11119"},"content":"        case \"-rcit\":","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"irving11119"},"content":"            return LessonType.RECITATION;","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"irving11119"},"content":"        case \"-lab\":","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"irving11119"},"content":"            return LessonType.LABORATORY;","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"irving11119"},"content":"        case \"-ws\":","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"irving11119"},"content":"            return LessonType.WORKSHOP;","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"irving11119"},"content":"        case \"-smc\":","lastModifiedDate":"2023-03-18"},{"lineNumber":221,"author":{"gitId":"irving11119"},"content":"            return LessonType.SEMINAR_STYLE_MODULE_CLASS;","lastModifiedDate":"2023-03-18"},{"lineNumber":222,"author":{"gitId":"irving11119"},"content":"        case \"-mp\":","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"irving11119"},"content":"            return LessonType.MINI_PROJECT;","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"irving11119"},"content":"        case \"-tt2\":","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL_TYPE_2;","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"irving11119"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"irving11119"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":229,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"irving11119"},"content":"    public static LessonType determineLessonType(String lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"irving11119"},"content":"        switch (lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"irving11119"},"content":"        case \"Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"irving11119"},"content":"            return LessonType.LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"irving11119"},"content":"        case \"Packaged Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"irving11119"},"content":"        case \"Sectional Teaching\":","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"irving11119"},"content":"            return LessonType.SECTIONAL_TEACHING;","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"irving11119"},"content":"        case \"Design Lecture\":","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"irving11119"},"content":"            return LessonType.DESIGN_LECTURE;","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"irving11119"},"content":"        case \"Tutorial\":","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"irving11119"},"content":"        case \"Packaged Tutorial\":","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"irving11119"},"content":"            return LessonType.PACKAGED_TUTORIAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"irving11119"},"content":"        case \"Recitation\":","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"irving11119"},"content":"            return LessonType.RECITATION;","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"irving11119"},"content":"        case \"Laboratory\":","lastModifiedDate":"2023-03-18"},{"lineNumber":248,"author":{"gitId":"irving11119"},"content":"            return LessonType.LABORATORY;","lastModifiedDate":"2023-03-18"},{"lineNumber":249,"author":{"gitId":"irving11119"},"content":"        case \"Workshop\":","lastModifiedDate":"2023-03-18"},{"lineNumber":250,"author":{"gitId":"irving11119"},"content":"            return LessonType.WORKSHOP;","lastModifiedDate":"2023-03-18"},{"lineNumber":251,"author":{"gitId":"irving11119"},"content":"        case \"Seminar-Style Module Class\":","lastModifiedDate":"2023-03-18"},{"lineNumber":252,"author":{"gitId":"irving11119"},"content":"            return LessonType.SEMINAR_STYLE_MODULE_CLASS;","lastModifiedDate":"2023-03-18"},{"lineNumber":253,"author":{"gitId":"irving11119"},"content":"        case \"Mini-Project\":","lastModifiedDate":"2023-03-18"},{"lineNumber":254,"author":{"gitId":"irving11119"},"content":"            return LessonType.MINI_PROJECT;","lastModifiedDate":"2023-03-18"},{"lineNumber":255,"author":{"gitId":"irving11119"},"content":"        case \"Tutorial Type 2\":","lastModifiedDate":"2023-03-18"},{"lineNumber":256,"author":{"gitId":"irving11119"},"content":"            return LessonType.TUTORIAL_TYPE_2;","lastModifiedDate":"2023-03-18"},{"lineNumber":257,"author":{"gitId":"irving11119"},"content":"        default:","lastModifiedDate":"2023-03-18"},{"lineNumber":258,"author":{"gitId":"irving11119"},"content":"            return null;","lastModifiedDate":"2023-03-18"},{"lineNumber":259,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":260,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":261,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":262,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":215,"honglinshang":1,"T-Wan-Lin":37,"PoobalanAatmikaLakshmi":9}},{"path":"src/main/java/seedu/apollo/command/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.ModuleNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * For {@code delmod} command.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * Delete Module Command class that finds the module using moduleCode and removes it from the ModuleList","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DeleteModuleCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    protected String moduleCode;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"    public DeleteModuleCommand(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"        DeleteModuleCommand.setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"T-Wan-Lin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"            Module toDelete \u003d moduleList.findModule(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"            if (toDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"                throw new ModuleNotFoundException();","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"            moduleList.remove(toDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            ui.printModuleDeleteMessage(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"            moduleList.totalModuleCredits();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"            storage.updateModule(moduleList);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        } catch (ModuleNotFoundException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"            ui.printUnsuccessfulModuleDelete(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"            ui.printTotalModularCredits(moduleList);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":17,"honglinshang":4,"T-Wan-Lin":37,"PoobalanAatmikaLakshmi":15}},{"path":"src/main/java/seedu/apollo/command/module/ListModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"public class ListModuleCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"        assert (moduleList !\u003d null) : \"ListModuleCommand: ModuleList should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"        ui.printModuleList(moduleList);","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":9,"yixuann02":6,"honglinshang":1}},{"path":"src/main/java/seedu/apollo/command/task/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Event;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DEADLINE_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_EVENT_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_TODO_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":" * Add Command class that adds a Task to the existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":" * Handles {@code todo}, {@code deadline}, and {@code event} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    protected String command;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    protected String desc;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    protected String by;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    protected String from;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    protected String to;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the type and description of the task given in the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"     * @param command Type of task being added (ToDo, Deadline, or Event).","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"     * @param param   Description of task given by user (including date(s) for Deadline, Event).","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline     If the Deadline being added has the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent        If the Event being added has the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command word cannot be understood.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    public AddCommand(String command, String param) throws InvalidDeadline, InvalidEvent, UnexpectedException {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"        AddCommand.setUpLogger();","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"        assert (command.equals(COMMAND_TODO_WORD) | command.equals(COMMAND_DEADLINE_WORD) |","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"                command.equals(COMMAND_EVENT_WORD)) : \"AddCommand: Invalid Add Command\";","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d param;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"            String[] paramAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d paramAndBy[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"            this.by \u003d paramAndBy[1];","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"            String[] paramAndFromTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"            this.desc \u003d paramAndFromTo[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"            this.from \u003d paramAndFromTo[1];","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"            this.to \u003d paramAndFromTo[2];","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Adding Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for AddCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"yixuann02"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"     * Executes adding a Task to the TaskList and updating the hard disk.","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList to be added to.","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"     * @param ui       Prints success or error message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"     * @param storage  Gets updated after the Task has been added.","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command stored is not recognised.","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules)","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"        int initialSize \u003d taskList.size();","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"            addTask(taskList);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"        } catch (DateOverException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"            ui.printDateOverException(e);","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"        } catch (DateOrderException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"            ui.printDateOrderException();","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"        assert (taskList.size() \u003e initialSize) : \"AddCommand : Task not added successfully\";","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"        ui.printAddMessage(taskList.get(taskList.size() - 1));","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"     * Adds a Task to the TaskList based on data in the class.","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList to be added to.","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException If any date of the task occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOrderException If an Event\u0027s end date occurs before its start date.","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command stored is not recognised.","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"    private void addTask(TaskList taskList)","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"            throws DateOverException, DateOrderException, UnexpectedException {","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        switch (command) {","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"            taskList.add(new ToDo(desc));","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"            taskList.add(new Deadline(desc, by));","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"honglinshang"},"content":"            taskList.add(new Event(desc, from, to));","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Adding Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":14,"honglinshang":112,"yixuann02":35,"PoobalanAatmikaLakshmi":1}},{"path":"src/main/java/seedu/apollo/command/task/DateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":" * Date Command class that shortlists Tasks that occur on the given date.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"DateCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    LocalDate date;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the given date to shortlist for.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     * @param dateString User input of the date, should be in format {@code yyyy-MM-dd}.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDateTime If the input date does not fit the above format.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    public DateCommand (String dateString) throws InvalidDateTime {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"        assert dateString !\u003d null : \"DateCommand: dateString should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"        assert dateString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\") : \"Date string should be in format yyyy-MM-dd\";","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"            this.date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"        DateCommand.setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for DateCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"     * Shortlists and prints Tasks from the TaskList that occur during the given date.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"        ui.printDateList(taskList.getTasksOnDate(date), date);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":7,"honglinshang":37,"yixuann02":37,"T-Wan-Lin":1}},{"path":"src/main/java/seedu/apollo/command/task/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" * Find Command class that shortlists Tasks that contain a given keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"FindCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"yixuann02"},"content":"    protected String keyword;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the given keyword to shortlist for.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * @param keyword User input of the keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     * Shortlists and prints Tasks from the TaskList that contain the given keyword.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     * @param ui       Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"        assert (keyword !\u003d null) : \"FindCommand: Keyword should not be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        ui.printFoundList(taskList.findTasks(keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":6,"honglinshang":29,"yixuann02":4}},{"path":"src/main/java/seedu/apollo/command/task/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"yixuann02"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":" * List Command class that shows user a list of all the Tasks they have input.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ListCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"yixuann02"},"content":"     * Initialise ListCommand class, setUpLogger.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"yixuann02"},"content":"    public ListCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"        ListCommand.setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ListCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"yixuann02"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     * Prints out all Tasks from the TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The existing TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints shortlisted Tasks to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        ui.printList(taskList);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":6,"honglinshang":19,"yixuann02":43}},{"path":"src/main/java/seedu/apollo/command/task/ModifyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"import java.io.File;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"yixuann02"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DELETE_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_MARK_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"import static seedu.apollo.ui.Parser.COMMAND_UNMARK_WORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":" * Mark and Delete Command class that modifies an existing Task from the TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":" * Handles {@code mark}, {@code unmark}, and {@code delete} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"public class ModifyCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"yixuann02"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ModifyCommand\");","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    protected String command;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    protected int idx;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * Initialises the class with the type and description of the task given in the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     * @param command Type of modification command being executed (mark, unmark, delete).","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     * @param param Contains the index of the task to be modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     * @param size Current number of tasks in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * @throws NumberFormatException If idx cannot be parsed, or is outside the current range of tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    public ModifyCommand(String command, String param, int size) throws NumberFormatException {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"        assert (command.equals(COMMAND_MARK_WORD) | command.equals(COMMAND_UNMARK_WORD) |","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"                command.equals(COMMAND_DELETE_WORD)) : \"ModifyCommand: Invalid Modify Command\";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"yixuann02"},"content":"        assert param !\u003d null : \"ModifyCommand: param cannot be null!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        int idx \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"        if (idx \u003c 0 || idx \u003e\u003d size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"            throw new NumberFormatException();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"        this.idx \u003d idx;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"yixuann02"},"content":"        ModifyCommand.setUpLogger();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"yixuann02"},"content":"     * Sets up logger for ModifyCommand class.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"yixuann02"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"yixuann02"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"yixuann02"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"yixuann02"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"yixuann02"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"yixuann02"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"yixuann02"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"yixuann02"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"yixuann02"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"yixuann02"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"yixuann02"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"yixuann02"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"yixuann02"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"yixuann02"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"yixuann02"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"yixuann02"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"     * Executes the modification of a Task in the TaskList based on data in the class.","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"     * @param taskList The TaskList of existing Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints success or error message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"     * @param storage Gets updated after the TaskList has been modified.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If the command stored is not recognised.","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules)","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        switch(command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"            taskList.get(idx).setDone(true);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"            ui.printMarkDone(taskList.get(idx));","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"            taskList.get(idx).setDone(false);","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"            ui.printMarkNotDone(taskList.get(idx));","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DELETE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"            int initialCount \u003d taskList.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"            ui.printDeleted(taskList.get(idx), taskList.size());","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"            taskList.remove(idx);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"            int finalCount \u003d taskList.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"            assert (finalCount \u003d\u003d initialCount - 1) : \"ModifyCommand : Unsuccessful deletion\";","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"            break;","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"            throw new UnexpectedException(\"Modifying Task\");","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"            storage.updateTask(taskList);","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIO();","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":11,"honglinshang":70,"yixuann02":36}},{"path":"src/main/java/seedu/apollo/command/utils/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * Exit Command class that allows user to exit the program.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"     * Prints exit message.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     * Sets the exit status of the Command to be true.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints exit message to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        this.setExit();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":6,"honglinshang":20}},{"path":"src/main/java/seedu/apollo/command/utils/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.command.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * Help Command class that shows user a list of all available Commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"     * Prints list of all available Commands and their abilities.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints list of Commands to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage, ModuleList moduleList, ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        ui.printHelpMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":6,"honglinshang":18}},{"path":"src/main/java/seedu/apollo/exception/module/ClassNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class ClassNotFoundException extends Throwable{","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"public class DuplicateModuleException extends Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"PoobalanAatmikaLakshmi":4}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyAddModException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class EmptyAddModException extends Throwable {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/EmptyDelModException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class EmptyDelModException extends Throwable{","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/InvalidModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class InvalidModule extends Throwable{","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/LessonAddedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public class LessonAddedException extends Throwable{","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":4}},{"path":"src/main/java/seedu/apollo/exception/module/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.module;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"public class ModuleNotFoundException extends Exception {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":1,"honglinshang":3}},{"path":"src/main/java/seedu/apollo/exception/task/DateOrderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the end date is before the start date of an event.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class DateOrderException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/DateOverException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.task.Task.printPattern;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.ui.Parser.COMMAND_DEADLINE_WORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import static seedu.apollo.ui.Parser.COMMAND_EVENT_WORD;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the Task being added occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class DateOverException extends Throwable {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    private final String type;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    private final String description;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * Initialises the exception with details of the Task that was not successfully added.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @param type Type of task (Deadline or Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @param by Due date (if task is Deadline).","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @param from Start date (if task is Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * @param to End date (if task is Event).","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    public DateOverException(String type, String description, LocalDateTime by, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"        assert (type.equals(\"deadline\") | type.equals(\"event\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        switch (type) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"            return type + \": \" + description + \" (by: \" + by.format(printPattern) + \")\";","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"            return type + \": \" + description + \" (from: \" + from.format(printPattern) +","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"                    \" to: \" + to.format(printPattern) + \")\";","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"            return \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"honglinshang":54}},{"path":"src/main/java/seedu/apollo/exception/task/EmptyTaskDescException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the description of a task is left empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class EmptyTaskDescException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the date and time is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidDateTime extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when a deadline is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidDeadline extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/task/InvalidEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when an event is input in the wrong format.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidEvent extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/EmptyKeywordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the keyword of a search is left empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class EmptyKeywordException extends Throwable{","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/IllegalCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when command is not understood by Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class IllegalCommandException extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/exception/utils/InvalidSaveFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.exception.utils;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * Exception class for when the local save file has been corrupted.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class InvalidSaveFile extends Throwable {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":6}},{"path":"src/main/java/seedu/apollo/module/LessonType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"public enum LessonType {","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"    LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"    PACKAGED_LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"    SECTIONAL_TEACHING,","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    DESIGN_LECTURE,","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"    TUTORIAL,","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"    PACKAGED_TUTORIAL,","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"    RECITATION,","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    LABORATORY,","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"    WORKSHOP,","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    SEMINAR_STYLE_MODULE_CLASS,","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    MINI_PROJECT,","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    TUTORIAL_TYPE_2,","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"irving11119":17}},{"path":"src/main/java/seedu/apollo/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"T-Wan-Lin"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.module.AddModuleCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"T-Wan-Lin"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"T-Wan-Lin"},"content":" * Class representing a Module.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"T-Wan-Lin"},"content":" * Contains the Module\u0027s code and name.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"T-Wan-Lin"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"T-Wan-Lin"},"content":"public class Module {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"    private String code;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    private String title;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"    private String moduleCredits;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    private ArrayList\u003cTimetable\u003e timetable;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"     * Initialises the Module with its corresponding code and name.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param moduleCode The code of the module e.g. CS2113","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param moduleName The name of the module e.g. Software Engineering and Object-Oriented Programming","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    public Module(String moduleCode, String moduleName, String moduleCredits) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        this.code \u003d moduleCode;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        this.title \u003d moduleName;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"        this.moduleCredits \u003d moduleCredits;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"     * Retrieves a String with the module\u0027s code.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return String of the module code","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"    public String getCode() {","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"        return code;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"     * Retrieves a String with the module\u0027s name.","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return String of the module name","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"        return title;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"    public String getModuleCredits() {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        return moduleCredits;","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    public void setTimetable(ArrayList\u003cTimetable\u003e timetable) {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"     * Retrieves a ArrayList with the module\u0027s timetable information.","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"     * @return ArrayList of the module timetable information.","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cTimetable\u003e getModuleTimetable() {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"        return timetable;","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out the Module in desired format.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"        return code + \": \" + title;","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Creates a new Timetable","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"    public void createNewTimeTable() {","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"        this.timetable \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param lessonType the type of lesson","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return {@code true} if the lesson type exists in the timetable, {@code false} otherwise.","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"    public Boolean hasLessonType(LessonType lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"        for (Timetable timetable : this.timetable) {","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"irving11119"},"content":"            LessonType checkLessonType \u003d AddModuleCommand.determineLessonType(timetable.getLessonType());","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"irving11119"},"content":"            assert checkLessonType !\u003d null : \"Lesson type should not be null\";","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"irving11119"},"content":"            if (checkLessonType.equals(lessonType)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"irving11119"},"content":"                return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"irving11119"},"content":"        return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":53,"T-Wan-Lin":38,"PoobalanAatmikaLakshmi":8}},{"path":"src/main/java/seedu/apollo/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yixuann02"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.ModuleNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"yixuann02"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"T-Wan-Lin"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"yixuann02"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" * ModuleList class is a modified ArrayList of Modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"yixuann02"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"public class ModuleList extends ArrayList\u003cModule\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"     * Finds the module in the ModuleList which matches the module name.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module to be found.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     * @return module in the ModuleList which matches the module name.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"     * @throws ModuleNotFoundException If the moduleCode is not found in allModules.","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    public Module findModule(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"        Module module \u003d this.stream().filter(mod -\u003e mod.getCode().equalsIgnoreCase(moduleCode))","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"                .findFirst().orElse(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        return module;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"     * Sorts the ModuleList in alphabetical order.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    public void sortModules() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"T-Wan-Lin"},"content":"        this.sort(Comparator.comparing(Module::getCode));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints the total modular credit in ArrayList of all modules.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"    public void totalModuleCredits() {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"        int totalSemesterCredits \u003d 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"T-Wan-Lin"},"content":"        for (Module module : this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"            totalSemesterCredits +\u003d Integer.parseInt(module.getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Total modular credits you have in this semester: \" + totalSemesterCredits);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"yixuann02"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":7,"yixuann02":7,"honglinshang":8,"T-Wan-Lin":20,"PoobalanAatmikaLakshmi":4}},{"path":"src/main/java/seedu/apollo/module/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" * A class representing a timetable for the week.","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"public class Timetable {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"    private String classnumber;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"    private String lessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"    private String day;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"    private String startTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"    private String endTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Gets the class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return The class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"    public String getClassnumber() {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"        return classnumber;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Sets the class number.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @param classnumber The class number to set.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"    public void setClassnumber(String classnumber) {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        this.classnumber \u003d classnumber;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Gets the type of lesson.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * @return The type of lesson.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"    public String getLessonType() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        return lessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    public void setLessonType(String lessonType) {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        this.lessonType \u003d lessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"irving11119"},"content":"    public String getDay() {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"irving11119"},"content":"        return day;","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    public void setDay(String day) {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"irving11119"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"    public String getStartTime() {","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        return startTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"irving11119"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"irving11119"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"irving11119"},"content":"    public String getEndTime() {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        return endTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":49,"PoobalanAatmikaLakshmi":18}},{"path":"src/main/java/seedu/apollo/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.InvalidSaveFile;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Deadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Event;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.ToDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"irving11119"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"irving11119"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":" * Storage class that initialises the task list and updates the save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"public class Storage {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    // Location of save file","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    protected static String filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"    protected static String moduleDataFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    // ints indicating position of terms in each line of the save file","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    private static final int TYPE_POS \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    private static final int STATUS_POS \u003d 4;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    private static final int PARAM_POS \u003d 8;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    // chars representing type of Tasks within the save file","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_TODO_WORD \u003d \u0027T\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_DEADLINE_WORD \u003d \u0027D\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    private static final char TXT_EVENT_WORD \u003d \u0027E\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"irving11119"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Storage\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"     * Initialise Storage class, set filePath.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     * @param filePath Location of the local save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"irving11119"},"content":"    public Storage(String filePath, String moduleDataFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"        Storage.moduleDataFilePath \u003d moduleDataFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"        Storage.setUpLogger();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"irving11119"},"content":"     * Sets up logger for Storage class.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If logger file cannot be created.","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"irving11119"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"        ConsoleHandler logConsole \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"        logConsole.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"irving11119"},"content":"        logger.addHandler(logConsole);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"irving11119"},"content":"            if (!new File(\"apollo.log\").exists()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"irving11119"},"content":"                new File(\"apollo.log\").createNewFile();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"irving11119"},"content":"            FileHandler logFile \u003d new FileHandler(\"apollo.log\", true);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"            logFile.setLevel(Level.FINE);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"            logger.addHandler(logFile);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"irving11119"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"irving11119"},"content":"            logger.log(Level.SEVERE, \"File logger not working.\", e);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"     * Overwrites the existing save file based on the current TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"     * @param taskList Contains all stored tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If something goes wrong during the overwriting process.","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"irving11119"},"content":"    public void updateTask(TaskList taskList) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"        FileWriter overwrite \u003d new FileWriter(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"            String desc \u003d task.getDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"            String type \u003d task.getType();","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"            String stat \u003d task.getStatus();","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"            switch (type) {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"            case \"todo\":","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"T | \" + stat + \" | \" + desc + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"            case \"deadline\":","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"                Deadline tempDeadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"                String by \u003d tempDeadline.getBy(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"D | \" + stat + \" | \" + desc + \" /by \" + by + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"honglinshang"},"content":"            case \"event\":","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"                Event tempEvent \u003d (Event) task;","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"                String from \u003d tempEvent.getFrom(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"honglinshang"},"content":"                String to \u003d tempEvent.getTo(Task.storePattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"                overwrite.write(\"E | \" + stat + \" | \" + desc + \" /from \" + from + \" /to \" + to + \"\\n\");","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"honglinshang"},"content":"            default:","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"honglinshang"},"content":"                throw new IOException();","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"        overwrite.close();","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"     * Loads data from the save file into a new TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"honglinshang"},"content":"     * If save file is not found, creates a new save file and returns an empty TaskList.","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"honglinshang"},"content":"     * @param ui Prints out error messages to user.","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of Tasks (containing data from save file / empty).","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"honglinshang"},"content":"     * @throws IOException If save file is not found, and a new one cannot be created.","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"honglinshang"},"content":"    public TaskList loadTaskList(Ui ui) throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"        File save \u003d new File(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"            newTaskList \u003d readFileContents(save, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"            return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"honglinshang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"            save.createNewFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"irving11119"},"content":"            logger.log(Level.INFO, \"File not found, creating new file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"            return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"irving11119"},"content":"     * Updates the moduleData file stored on the hard disk.","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"irving11119"},"content":"     * @param modules Contains all stored modules.","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If save file is not found.","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"irving11119"},"content":"    public void updateModule(ModuleList modules) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"        FileWriter overwrite \u003d new FileWriter(moduleDataFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"irving11119"},"content":"        for (Module module : modules) {","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"irving11119"},"content":"            String code \u003d module.getCode();","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"irving11119"},"content":"            overwrite.write(code + \"\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"irving11119"},"content":"        overwrite.close();","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"     * Reads all lines in the moduleData file, initialises them as an ModuleList of Modules.","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"     * @param ui         Prints out error messages to user.","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"     * @param allModules Contains all stored modules.","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"     * @return ModuleList of Tasks (containing data from save file / empty).","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"     * @throws IOException If save file is not found.","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"    public ModuleList loadModuleList(Ui ui, ModuleList allModules) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"        ModuleList newModuleList \u003d new ModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"        File save \u003d new File(moduleDataFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"            newModuleList \u003d readModuleFileContents(save, ui, allModules);","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"irving11119"},"content":"            return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"honglinshang"},"content":"            logger.log(Level.INFO, \"File for ModuleList not found, creating new file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"            save.createNewFile();","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"            return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"     * Reads all lines in the save file, initialises them as an TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"irving11119"},"content":"     * Loads data from the data file into a new ArrayList of Modules.","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"irving11119"},"content":"     * @return ArrayList of Modules (containing data from save file / empty).","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"irving11119"},"content":"     * @throws FileNotFoundException If save file is not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"irving11119"},"content":"    public ModuleList loadModuleData() throws FileNotFoundException {","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"irving11119"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"irving11119"},"content":"            ClassLoader classloader \u003d Thread.currentThread().getContextClassLoader();","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"irving11119"},"content":"            Reader reader \u003d new InputStreamReader(classloader.getResourceAsStream(\"data.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            Type moduleDataType \u003d new TypeToken\u003cModuleList\u003e() {","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"            }.getType();","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"irving11119"},"content":"            Gson gson \u003d new Gson();","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"honglinshang"},"content":"            ModuleList moduleDataList \u003d gson.fromJson(reader, moduleDataType);","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"Module Data loaded\");","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"irving11119"},"content":"            return moduleDataList;","lastModifiedDate":"2023-03-10"},{"lineNumber":202,"author":{"gitId":"irving11119"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"irving11119"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":207,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"     * Reads all lines in the save file, initialises them as an ArrayList of Tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"honglinshang"},"content":"     * @param save Save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of initialised Tasks based on uncorrupted data in save file.","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"honglinshang"},"content":"     * @throws FileNotFoundException If the save file cannot be found at filePath.","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"honglinshang"},"content":"    private static TaskList readFileContents(File save, Ui ui) throws FileNotFoundException {","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"honglinshang"},"content":"        Scanner s \u003d new Scanner(save);","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"honglinshang"},"content":"        TaskList newTaskList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"honglinshang"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"honglinshang"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"honglinshang"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"honglinshang"},"content":"                newTaskList.add(newTask(s.nextLine()));","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"                counter++;","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"            } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"                ui.printInvalidSaveFile(counter, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                logger.log(Level.INFO, \"Error in reading data from file\");","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"            } catch (DateOverException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"                ui.printExistingDateOver(e);","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        logger.log(Level.INFO, \"Successfully read \" + counter + \" tasks from save file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"honglinshang"},"content":"        return newTaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"irving11119"},"content":"    private static ModuleList readModuleFileContents(File save, Ui ui, ModuleList allModules)","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"irving11119"},"content":"            throws FileNotFoundException {","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"irving11119"},"content":"        Scanner s \u003d new Scanner(save);","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"irving11119"},"content":"        ModuleList newModuleList \u003d new ModuleList();","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"irving11119"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"irving11119"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"irving11119"},"content":"            try {","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"irving11119"},"content":"                Module newModule \u003d allModules.findModule(s.nextLine());","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"irving11119"},"content":"                if (newModule \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"irving11119"},"content":"                    throw new InvalidSaveFile();","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"irving11119"},"content":"                }","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"irving11119"},"content":"                newModuleList.add(newModule);","lastModifiedDate":"2023-03-11"},{"lineNumber":246,"author":{"gitId":"irving11119"},"content":"                counter++;","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"irving11119"},"content":"            } catch (InvalidSaveFile e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"irving11119"},"content":"                ui.printInvalidSaveFile(counter, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":250,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"irving11119"},"content":"        return newModuleList;","lastModifiedDate":"2023-03-11"},{"lineNumber":252,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":254,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"honglinshang"},"content":"     * Interprets a line from the save file, returns it as a new Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"honglinshang"},"content":"     * @param text Line from the save file.","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"honglinshang"},"content":"     * @return Corresponding Task to data stored in {@code text}.","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidSaveFile If any line in the input data is not of the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"honglinshang"},"content":"    private static Task newTask(String text) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"honglinshang"},"content":"        char type \u003d getType(text);","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"honglinshang"},"content":"        Boolean isDone \u003d isStatusDone(text);","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"honglinshang"},"content":"        String param \u003d getParam(text);","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"honglinshang"},"content":"        switch (type) {","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"honglinshang"},"content":"        case TXT_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"honglinshang"},"content":"            return newToDo(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"honglinshang"},"content":"        case TXT_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"honglinshang"},"content":"            return newDeadline(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":270,"author":{"gitId":"honglinshang"},"content":"        case TXT_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"honglinshang"},"content":"            return newEvent(isDone, param);","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"honglinshang"},"content":"    private static char getType(String text) {","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"honglinshang"},"content":"        return text.charAt(TYPE_POS);","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"honglinshang"},"content":"    private static Boolean isStatusDone(String text) {","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"honglinshang"},"content":"        return text.charAt(STATUS_POS) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"honglinshang"},"content":"    private static String getParam(String text) {","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"honglinshang"},"content":"        return text.substring(PARAM_POS);","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"honglinshang"},"content":"    private static ToDo newToDo(Boolean isDone, String param) {","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"honglinshang"},"content":"        ToDo newToDo \u003d new ToDo(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"honglinshang"},"content":"        newToDo.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"honglinshang"},"content":"        return newToDo;","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":295,"author":{"gitId":"honglinshang"},"content":"    private static Deadline newDeadline(Boolean isDone, String param) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":296,"author":{"gitId":"honglinshang"},"content":"        final String[] paramAndBy;","lastModifiedDate":"2023-03-08"},{"lineNumber":297,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":298,"author":{"gitId":"honglinshang"},"content":"            paramAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":299,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDeadline e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":302,"author":{"gitId":"honglinshang"},"content":"        Deadline newDeadline \u003d new Deadline(paramAndBy[0], paramAndBy[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"honglinshang"},"content":"        newDeadline.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"honglinshang"},"content":"        return newDeadline;","lastModifiedDate":"2023-03-08"},{"lineNumber":305,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":306,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"honglinshang"},"content":"    private static Event newEvent(Boolean isDone, String param) throws InvalidSaveFile, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":308,"author":{"gitId":"honglinshang"},"content":"        final String[] paramAndFromTo;","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"honglinshang"},"content":"            paramAndFromTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidEvent e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"honglinshang"},"content":"            Event newEvent \u003d new Event(paramAndFromTo[0], paramAndFromTo[1], paramAndFromTo[2]);","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"honglinshang"},"content":"            newEvent.setDone(isDone);","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"honglinshang"},"content":"            return newEvent;","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"honglinshang"},"content":"        } catch (DateOrderException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidSaveFile();","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":323,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":130,"honglinshang":189,"PoobalanAatmikaLakshmi":4}},{"path":"src/main/java/seedu/apollo/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":" * Deadlines are a type of Task that have a set due date,","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" * along with the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    public static final String DEADLINE_LABEL \u003d \"D\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task, with added parsing for due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * If parsing is not possible, save due date as String.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param byString String describing the due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @throws DateTimeParseException If due date is not entered in right format.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException If due date occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    public Deadline(String description, String byString)","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"            throws DateTimeParseException, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"        this.by \u003d LocalDateTime.parse(byString);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        if (by.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"            throw new DateOverException(getType(), description, by, null, null);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the due date of the Deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    public String getBy(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        return by.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"        return \"deadline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"        boolean byExists \u003d (by !\u003d null);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"        LocalDate byDate \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"        if (byExists) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"            byDate \u003d by.toLocalDate();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"        return byExists \u0026\u0026 date.isEqual(byDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + DEADLINE_LABEL + \"][\" + getStatus() + \"] \" + description + \" (by: \" + getBy(printPattern) + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"honglinshang":76}},{"path":"src/main/java/seedu/apollo/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.DateOrderException;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":" * Events are a type of Task that have a set start date and end date,","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":" * along with the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"    public static final String EVENT_LABEL \u003d \"E\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task, with added parsing for start and end dates.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     * If parsing is not possible, save date(s) as String(s).","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     * @param fromString String describing the start date.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"     * @param toString String describing the end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * @throws DateTimeParseException If either date is not entered in right format.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOrderException If end date occurs before the start date.","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     * @throws DateOverException If start date occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public Event(String description, String fromString, String toString)","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"            throws DateTimeParseException, DateOrderException, DateOverException {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"        this.from \u003d LocalDateTime.parse(fromString);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"        this.to \u003d LocalDateTime.parse(toString);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"            throw new DateOrderException();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"        if (from.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"            throw new DateOverException(getType(), description, null, from, to);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the start date of the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed start date.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    public String getFrom(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"        return from.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the end date of the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * @param pattern Desired format for String after parsing.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    public String getTo(DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"        return to.format(pattern);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"        return \"event\";","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"        boolean fromExists \u003d (from !\u003d null);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"        boolean toExists \u003d (to !\u003d null);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"        LocalDate fromDate \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        LocalDate toDate \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        if (fromExists) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"            fromDate \u003d from.toLocalDate();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"        if (toExists) {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"            toDate \u003d to.toLocalDate();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"        boolean isOnFrom \u003d fromExists \u0026\u0026 date.isEqual(fromDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"        boolean isOnTo \u003d toExists \u0026\u0026 date.isEqual(toDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        boolean isBetween \u003d fromExists \u0026\u0026 toExists \u0026\u0026 date.isAfter(fromDate) \u0026\u0026 date.isBefore(toDate);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"        return isOnFrom || isOnTo || isBetween;","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + EVENT_LABEL + \"][\" + getStatus() + \"] \" + description +","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"                \" (from: \" + getFrom(printPattern) + \" to: \" + getTo(printPattern) + \")\";","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":1,"honglinshang":103}},{"path":"src/main/java/seedu/apollo/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":" * Parent class of all types of Tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":" * Contains the Task\u0027s description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"public abstract class Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    // Formatters used to parse and print date and time","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter storePattern \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public static DateTimeFormatter printPattern \u003d DateTimeFormatter","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"            .ofPattern(\"MMM dd yyyy, hh:mma\", Locale.ENGLISH);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"    protected String description;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"     * Initialises the Task with its description sets its status as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the type of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     * @return String describing the type of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        return \"task\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"     * @return String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"     * Check if the Task has been done.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if the Task is done, {@code false} otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        return isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * Get a String describing status of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     * @return \"X\" if the Task is done, \" \" otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"     * Set the status of the Task based on the input.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"     * @param done Boolean describing the status of the task","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"honglinshang"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"     * Given a date, determine if it occurs during the duration of the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"     * @param date Date to be checked","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if there is overlap, {@code false} otherwise","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"    public Boolean isOnDate(LocalDate date) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"        return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"     * Prints out the Task in desired format","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"        return description;","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":2,"honglinshang":92}},{"path":"src/main/java/seedu/apollo/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":" * TaskList class is a modified ArrayList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"     * Get a shortlisted list of all Tasks that overlap with the given date.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"     * @param date The given date to check for.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"     * @return ArrayList of all shortlisted tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    public TaskList getTasksOnDate(LocalDate date) {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"        TaskList tasksOnDate \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        for (Task task : this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"            if (task.isOnDate(date)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"                tasksOnDate.add(task);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"        return tasksOnDate;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     * Get a shortlisted list of all Tasks that contain the given keyword in their description.","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"     * @param keyword The given keyword to check for.","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"     * @return TaskList of all shortlisted tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        String lowerKeyword \u003d keyword.toLowerCase();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        Stream\u003cTask\u003e filteredTasks \u003d this.stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(lowerKeyword));","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"irving11119"},"content":"        ArrayList\u003cTask\u003e filteredTasksList \u003d (ArrayList\u003cTask\u003e) filteredTasks.collect(Collectors.toList());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"irving11119"},"content":"        return filteredTasksList;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":10,"honglinshang":35}},{"path":"src/main/java/seedu/apollo/task/ToDo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.task;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":" * ToDos are a type of Task that have only the default description and status.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"    public static final String TODO_LABEL \u003d \"T\";","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"     * Initialises as in Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"     * @param description String describing the Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"honglinshang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        super(description);","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    public String getType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        return \"todo\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        return \"[\" + TODO_LABEL + \"][\" + getStatus() + \"] \" + description;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"honglinshang":35}},{"path":"src/main/java/seedu/apollo/ui/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.module.AddModuleCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.DateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.module.DeleteModuleCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.utils.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.utils.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.module.ListModuleCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.command.task.ModifyCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.EmptyAddModException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.EmptyDelModException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.EmptyKeywordException;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.EmptyTaskDescException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.utils.IllegalCommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.module.InvalidModule;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":" * Parser class that makes sense of user commands or text.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"public class Parser {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    // User command words understood by Apollo","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_EXIT_WORD \u003d \"bye\";","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_HELP_WORD \u003d \"help\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_LIST_WORD \u003d \"list\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DATE_WORD \u003d \"date\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_FIND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_MARK_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_UNMARK_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DELETE_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_TODO_WORD \u003d \"todo\";","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_DEADLINE_WORD \u003d \"deadline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    public static final String COMMAND_EVENT_WORD \u003d \"event\";","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"irving11119"},"content":"    public static final String COMMAND_ADD_MODULE_WORD \u003d \"addmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"T-Wan-Lin"},"content":"    public static final String COMMAND_LIST_MODULE_WORD \u003d \"listmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"T-Wan-Lin"},"content":"    public static final String COMMAND_DELETE_MODULE_WORD \u003d \"delmod\";","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"honglinshang"},"content":"     * Returns the corresponding Command to the user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"     * @param userCommand Command line input from user.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"     * @param ui          Prints out error messages if command cannot be parsed.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"     * @param size        Number of tasks saved in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"     * @return Corresponding Command class to user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException If an unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"irving11119"},"content":"    public static Command getCommand(String userCommand, Ui ui, int size, ModuleList moduleData)","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"irving11119"},"content":"            throws UnexpectedException {","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"honglinshang"},"content":"        final String[] split \u003d userCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"honglinshang"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"irving11119"},"content":"            return parseCommand(split, size, moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"        } catch (IllegalCommandException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"honglinshang"},"content":"        } catch (EmptyTaskDescException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"honglinshang"},"content":"            ui.printEmptyDescription();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"        } catch (EmptyKeywordException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"            ui.printEmptyKeyword();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"irving11119"},"content":"        } catch (EmptyAddModException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"irving11119"},"content":"            ui.printEmptyAddMod();","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"irving11119"},"content":"        } catch (EmptyDelModException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"irving11119"},"content":"            ui.printEmptyDelMod();","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"            ui.printErrorForIdx(size);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDeadline e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidDeadline();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidEvent e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidEvent();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"        } catch (InvalidDateTime e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"honglinshang"},"content":"            ui.printInvalidDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"irving11119"},"content":"        } catch (InvalidModule e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"irving11119"},"content":"            ui.printInvalidModule();","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"honglinshang"},"content":"        return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"honglinshang"},"content":"     * Adds data from user input into the corresponding Command class that is returned.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"honglinshang"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"honglinshang"},"content":"     * @param size  Number of tasks saved in TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"honglinshang"},"content":"     * @return Command class with data from user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDateTime         If the input format for a date and time is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"     * @throws EmptyKeywordException   If keyword is left empty (for Find command).","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"     * @throws NumberFormatException   If the index is left empty (for Mark, Delete commands).","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"     * @throws EmptyTaskDescException  If task description is left empty (for Add command).","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline         If the input format for adding a deadline is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent            If the input format for adding an event is wrong.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"     * @throws IllegalCommandException If an unknown command is input by the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"     * @throws UnexpectedException     If some unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"irving11119"},"content":"    private static Command parseCommand(String[] split, int size, ModuleList moduleData)","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"            throws InvalidDateTime, EmptyKeywordException, EmptyTaskDescException, InvalidDeadline, InvalidEvent,","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"irving11119"},"content":"            IllegalCommandException, NumberFormatException, UnexpectedException, InvalidModule,","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"irving11119"},"content":"            EmptyAddModException, EmptyDelModException {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"honglinshang"},"content":"        String command \u003d split[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"honglinshang"},"content":"        switch (command) {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"        case COMMAND_LIST_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"            return new ListModuleCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EXIT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"honglinshang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_HELP_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"honglinshang"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_LIST_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"            if (!isOneWord(split)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"                throw new IllegalCommandException();","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"honglinshang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DATE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"honglinshang"},"content":"                throw new InvalidDateTime();","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"honglinshang"},"content":"            return new DateCommand(split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_FIND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyKeywordException();","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"honglinshang"},"content":"            return new FindCommand(split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_MARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_UNMARK_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DELETE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"            return new ModifyCommand(command, split[1], size);","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_TODO_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_DEADLINE_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"        case COMMAND_EVENT_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"                throw new EmptyTaskDescException();","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"            return new AddCommand(command, split[1]);","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"irving11119"},"content":"        case COMMAND_ADD_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"irving11119"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"irving11119"},"content":"                throw new EmptyAddModException();","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"irving11119"},"content":"            return new AddModuleCommand(split[1], moduleData);","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"irving11119"},"content":"        case COMMAND_DELETE_MODULE_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"irving11119"},"content":"            if (isEmptyParam(split)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"irving11119"},"content":"                throw new EmptyDelModException();","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"irving11119"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"irving11119"},"content":"            String moduleCode \u003d split[1];","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"irving11119"},"content":"            return new DeleteModuleCommand(moduleCode);","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"honglinshang"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"honglinshang"},"content":"            throw new IllegalCommandException();","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"honglinshang"},"content":"     * Checks if the user\u0027s input parameter is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"honglinshang"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"honglinshang"},"content":"     * @return {@code true} if the input parameter is empty, {@code false} otherwise.","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"honglinshang"},"content":"    private static Boolean isEmptyParam(String[] split) {","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"honglinshang"},"content":"        return (split.length !\u003d 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"     * Checks if the user\u0027s input is only one word.","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param split Parsed user input split into command and parameter.","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"     * @return {@code true} if the input is only one word, {@code false} otherwise.","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"    private static Boolean isOneWord(String[] split) {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"        return (split.length \u003d\u003d 1);","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"honglinshang"},"content":"     * Parses LocalDateTime into a String according to the given pattern.","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"     * @param date       Date and time with LocalDateTime data type.","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"honglinshang"},"content":"     * @param dateString Date and time with String data type.","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"honglinshang"},"content":"     * @param pattern    Desired pattern to format String.","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed date and time in a String.","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"    public static String parseDateTime(LocalDateTime date, String dateString, DateTimeFormatter pattern) {","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"        if (date !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"honglinshang"},"content":"            return date.format(pattern);","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"honglinshang"},"content":"        return dateString;","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"honglinshang"},"content":"     * Separates a Deadline\u0027s input data into its description, and due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"honglinshang"},"content":"     * @param param User input data describing the Deadline.","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed user input split into description and due date.","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidDeadline If the user did not input the due date in the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"    public static String[] parseDeadline(String param) throws InvalidDeadline {","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/by\\\\s\", 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidDeadline();","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"honglinshang"},"content":"     * Separates an Event\u0027s input data into its description, start date, and end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"honglinshang"},"content":"     * @param param User input data describing the Event.","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"honglinshang"},"content":"     * @return Parsed user input split into description, start date, and end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"honglinshang"},"content":"     * @throws InvalidEvent If the user did not input the start or end date in the right format.","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"honglinshang"},"content":"    public static String[] parseEvent(String param) throws InvalidEvent {","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"honglinshang"},"content":"        String[] split \u003d param.trim().split(\"\\\\s/from\\\\s|\\\\s/to\\\\s\", 3);","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String[] checkFromToOrder \u003d Arrays.copyOfRange(param.trim().split(\"/\"), 1, 3);","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        if ((split.length !\u003d 3) || (!checkFromToOrder[0].startsWith(\"from\") || !checkFromToOrder[1].startsWith(\"to\"))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"honglinshang"},"content":"            throw new InvalidEvent();","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"honglinshang"},"content":"        return split;","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":56,"honglinshang":161,"T-Wan-Lin":27,"PoobalanAatmikaLakshmi":3}},{"path":"src/main/java/seedu/apollo/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.module.LessonType;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.exception.task.DateOverException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"T-Wan-Lin"},"content":"import seedu.apollo.module.ModuleList;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"yixuann02"},"content":"import seedu.apollo.module.Module;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"honglinshang"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"honglinshang"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":" * User Interface class that deals with inputs from and outputs to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"public class Ui {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"    // Scanner to read user inputs on CLI","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"     * Get user input from CLI.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"     * @return String containing the CLI input.","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"    public String readCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"     * Prints out a line divider.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"    public void showLine() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Hello from\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"honglinshang"},"content":"                \" ____    ____    _____  __      __       _____\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"                \"|  _  | |  _ \\\\  | ___ | | |     | |     | ___ |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"honglinshang"},"content":"                \"| |_| | | |_| | | | | | | |     | |     | | | |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"honglinshang"},"content":"                \"| | | | |  __/  | |_| | | |___  | |___  | |_| |\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"honglinshang"},"content":"                \"|_| |_| |_|     \\\\_____/ |_____| |_____| \\\\_____/\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"T-Wan-Lin"},"content":"                \"\\n\" +","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"honglinshang"},"content":"                \"Enter \\\"help\\\" to see a list of commands.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"honglinshang"},"content":"     * For {@code help} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"honglinshang"},"content":"     * Prints out a list of all available commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"honglinshang"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"\\n\" + \"Enter \\\"list\\\" to see all tasks\\n\" +","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \" Enter \\\"listmod\\\" to see your module list\\n\" +","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"todo [task]\\\" to add a task\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"deadline [task] /by [date]\\\" to add a deadline\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"event [task] /from [date] /to [date]\\\" to add an event\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \" Enter \\\"addmod [MODULE_CODE]\\\" to add a Module to the Module list\\n\" +","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"                \" Enter \\\"addmod [MODULE_CODE] -[LESSON_TYPE]\\\" to add a lesson\\n\" +","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"mark [idx]\\\" to mark task as done\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"unmark [idx]\\\" to mark task as not done\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"delete [idx]\\\" to remove task from list\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"                \" Enter \\\"delmod [MODULE_CODE]\\\" to remove a Module you previously added\\n\" +","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"find [keyword]\\\" to see all tasks containing [keyword]\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"date [yyyy-MM-dd]\\\" to see all tasks occurring on that date\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"honglinshang"},"content":"                \" Enter \\\"bye\\\" to exit the program\\n\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"honglinshang"},"content":"                \" ***NOTE***\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"honglinshang"},"content":"                \" Please enter all [date]s in the format: \\\"yyyy-MM-ddThh:mm\\\"\\n\" +","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"                \" eg. \\\"2023-10-30T23:59\\\" represents Oct 20 2023, 11:59PM\\n\");","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"        printAddModuleOptions();","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out a list of all available lesson types and their flags.","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printAddModuleOptions() {","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"There are various lessons options per module:\\n\" +","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"                \"-lec\\t\\t\\t\" + \"LECTURE\\n\" + \"-plec\\t\\t\\t\" + \"PACKAGED LECTURE\\n\" + \"-st \\t\\t\\t\"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"SECTIONAL TEACHING\\n\" + \"-dlec\\t\\t\\t\" + \"DESIGN LECTURE\\n\" + \"-tut\\t\\t\\t\" + \"TUTORIAL\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"-ptut\\t\\t\\t\" + \"PACKAGED TUTORIAL\\n\" + \"-rcit\\t\\t\\t\" + \"RECITATION\\n\" + \"-lab\\t\\t\\t\"","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"LABORATORY\\n\" + \"-ws\\t\\t\\t\\t\" + \"WORKSHOP\\n\" + \"-smc\\t\\t\\t\"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"SEMINAR STYLE MODULE CLASS\\n\" + \"-mp\\t\\t\\t\\t\" + \"MINI PROJECT\\n\" + \"-tt2\\t\\t\\t\"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"                + \"TUTORIAL TYPE 2\\n\");","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"honglinshang"},"content":"     * For {@code list} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given.","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"honglinshang"},"content":"     * @param allTasks TaskList of Tasks.","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"honglinshang"},"content":"    public void printList(TaskList allTasks) {","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"honglinshang"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"You have a total of \" + allTasks.size() + \" tasks in your tasklist.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"yixuann02"},"content":"                + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"yixuann02"},"content":"        int unmarkedTaskSize \u003d 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + allTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"yixuann02"},"content":"            if (!allTasks.get(i).isDone()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"yixuann02"},"content":"                unmarkedTaskSize +\u003d 1;","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"honglinshang"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"yixuann02"},"content":"        System.out.println(\"There are \" + unmarkedTaskSize + \" unmarked tasks in your tasklist.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"yixuann02"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"yixuann02"},"content":"     * For {@code list} command.","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"yixuann02"},"content":"     * Prints all Modules within the ArrayList given","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"yixuann02"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"yixuann02"},"content":"     * @param allModules ArrayList of Modules","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"yixuann02"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printModuleList(ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"yixuann02"},"content":"        if (allModules.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"yixuann02"},"content":"            System.out.println(\"There are no modules in your module list!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"yixuann02"},"content":"            return;","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"You are taking \" + allModules.size() + \" module(s) this semester:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"yixuann02"},"content":"        for (int i \u003d 0; i \u003c allModules.size(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"            System.out.printf(\"%d.%s (%s MCs)%n\", i + 1, allModules.get(i).toString(),","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"                    allModules.get(i).getModuleCredits());","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"yixuann02"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"        printTotalModularCredits(allModules);","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * For {@code delmod} command.","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     * Prints message for successful deletion of Module.","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module which was deleted.","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printModuleDeleteMessage(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"Got it, removed \" + moduleCode.toUpperCase() + \" from your Module list.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"honglinshang"},"content":"     * For {@code delmod} command.","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"honglinshang"},"content":"     * Prints message if Module cannot be found for unsuccessful deletion of Module.","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"honglinshang"},"content":"     * @param moduleCode The code of the module which was not found.","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"honglinshang"},"content":"    public void printUnsuccessfulModuleDelete(String moduleCode) {","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Sorry, the module \" + moduleCode + \" does not exist in your Module list!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"honglinshang"},"content":"     * For {@code todo}, {@code deadline}, and {@code event} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful adding of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"honglinshang"},"content":"     * @param newTask Task that has just been added.","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"honglinshang"},"content":"    public void printAddMessage(Task newTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Got it. I\u0027ve added this \" + newTask.getType() + \":\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"honglinshang"},"content":"                \"  \" + newTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"     * For {@code addmod} command.","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out message for successful adding of Module.","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param newModule Module that has just been added.","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"irving11119"},"content":"    public void printAddModuleMessage(Module newModule) {","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Got it. I\u0027ve added this module:\\n\" +","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"irving11119"},"content":"                \"  \" + newModule);","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"     * For {@code addmod, delmod, listmod} commands.","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out total modular credits of all modules in the ModuleList.","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"T-Wan-Lin"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"     * @param allModules ArrayList of Modules","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printTotalModularCredits(ModuleList allModules) {","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"        allModules.totalModuleCredits();","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"     * For {@code addmod} command.","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"     * Prints out a message for user to refer to help menu for lesson option flags.","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"    public void printAddLessonOptions() {","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"        System.out.println(\"To see how to add lessons, enter \u0027help\u0027.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"honglinshang"},"content":"     * For {@code mark} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful marking of Task as done.","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"honglinshang"},"content":"     * @param doneTask Task that has just been marked as done.","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"honglinshang"},"content":"    public void printMarkDone(Task doneTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Nice!, I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"honglinshang"},"content":"                \"  \" + doneTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"honglinshang"},"content":"     * For {@code unmark} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful marking of Task as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"honglinshang"},"content":"     * @param notDoneTask Task that has just been marked as not done.","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"honglinshang"},"content":"    public void printMarkNotDone(Task notDoneTask) {","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"honglinshang"},"content":"                \"  \" + notDoneTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"honglinshang"},"content":"     * For {@code delete} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"honglinshang"},"content":"     * Prints out message for successful deletion of Task.","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"honglinshang"},"content":"     * @param deletedTask Task that will be deleted.","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"honglinshang"},"content":"     * @param size        Number of tasks left in the list after deletion.","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"honglinshang"},"content":"    public void printDeleted(Task deletedTask, int size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"honglinshang"},"content":"                \"  \" + deletedTask + \"\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"honglinshang"},"content":"                \"Now you have \" + (size - 1) + \" tasks in the list\");","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"honglinshang"},"content":"     * For {@code find} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given, all containing a certain keyword.","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"honglinshang"},"content":"     * @param foundTasks TaskList of Tasks containing a keyword.","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"irving11119"},"content":"    public void printFoundList(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"honglinshang"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no matching tasks!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + foundTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"honglinshang"},"content":"     * For {@code date} command.","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"honglinshang"},"content":"     * Prints all Tasks within the TaskList given, all happening on a certain date.","lastModifiedDate":"2023-03-10"},{"lineNumber":256,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"honglinshang"},"content":"     * @param happeningTasks TaskList of Tasks happening on a date.","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"honglinshang"},"content":"     * @param date           Date that was used to shortlist the tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"honglinshang"},"content":"    public void printDateList(TaskList happeningTasks, LocalDate date) {","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"irving11119"},"content":"        String dateString \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\", Locale.ENGLISH));","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"honglinshang"},"content":"        if (happeningTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks on \" + dateString + \"!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"honglinshang"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Here are the tasks happening on \" + dateString + \":\");","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"honglinshang"},"content":"        for (int i \u003d 0; i \u003c happeningTasks.size(); i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"honglinshang"},"content":"            System.out.println(i + 1 + \".\" + happeningTasks.get(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":270,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"honglinshang"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"honglinshang"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"honglinshang"},"content":"    // error messages","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the index entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"honglinshang"},"content":"     * @param size Number of tasks within the current TaskList.","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"honglinshang"},"content":"    public void printErrorForIdx(int size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"honglinshang"},"content":"        boolean isEmptyTaskList \u003d (size \u003d\u003d 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"honglinshang"},"content":"        if (!isEmptyTaskList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"Please enter [idx] in the form of an integer from 1 to \" + size);","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"honglinshang"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"honglinshang"},"content":"            System.out.println(\"There are no tasks in your list!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"honglinshang"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":295,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":296,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if reading or writing to the hard disk throws an IO error.","lastModifiedDate":"2023-03-08"},{"lineNumber":297,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":298,"author":{"gitId":"honglinshang"},"content":"    public void printErrorForIO() {","lastModifiedDate":"2023-03-08"},{"lineNumber":299,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Something went wrong with the hard disk :(\");","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":302,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the deadline entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":305,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidDeadline() {","lastModifiedDate":"2023-03-08"},{"lineNumber":306,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please enter deadline as \\\"deadline [task] /by [date]\\\".\");","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the event entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidEvent() {","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please enter event as \\\"event [task] /from [date] /to [date]\\\".\");","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the date entered does not fit the format.","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidDateTime() {","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please enter date in the format of yyyy-MM-dd.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":323,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":324,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the command entered is not understood by Apollo.","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":326,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2023-03-08"},{"lineNumber":327,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2023-03-08"},{"lineNumber":328,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":329,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":330,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":331,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if there is corrupted data in the save file when initially reading from it.","lastModifiedDate":"2023-03-08"},{"lineNumber":332,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":333,"author":{"gitId":"honglinshang"},"content":"     * @param counter  Index of the line of the save file that is corrupted.","lastModifiedDate":"2023-03-08"},{"lineNumber":334,"author":{"gitId":"honglinshang"},"content":"     * @param filePath The location at which the save file is stored.","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":336,"author":{"gitId":"honglinshang"},"content":"    public void printInvalidSaveFile(int counter, String filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":337,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":338,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"There is an error in save.txt at line \" + (counter + 1) + \"\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":339,"author":{"gitId":"honglinshang"},"content":"                \"Task \" + (counter + 1) + \" has been excluded. You can edit the save file at:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":340,"author":{"gitId":"honglinshang"},"content":"                filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":341,"author":{"gitId":"honglinshang"},"content":"        showLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":342,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":343,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":344,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":345,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the user does not specify the description of a task.","lastModifiedDate":"2023-03-08"},{"lineNumber":346,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":347,"author":{"gitId":"honglinshang"},"content":"    public void printEmptyDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":348,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops! The description of a task cannot be empty.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":349,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":350,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":351,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":352,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the user does not specify the keyword of a search.","lastModifiedDate":"2023-03-08"},{"lineNumber":353,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":354,"author":{"gitId":"honglinshang"},"content":"    public void printEmptyKeyword() {","lastModifiedDate":"2023-03-08"},{"lineNumber":355,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Please specify a keyword to do the search with!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":356,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":357,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":358,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":359,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the start date of an even occurs after the end date.","lastModifiedDate":"2023-03-08"},{"lineNumber":360,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":361,"author":{"gitId":"honglinshang"},"content":"    public void printDateOrderException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":362,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops, the start date for your event occurs after the end date!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":363,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":364,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":365,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":366,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the task being added occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":367,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":368,"author":{"gitId":"honglinshang"},"content":"     * @param exception Contains details about the task that was not added successfully.","lastModifiedDate":"2023-03-16"},{"lineNumber":369,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":370,"author":{"gitId":"honglinshang"},"content":"    public void printDateOverException(DateOverException exception) {","lastModifiedDate":"2023-03-16"},{"lineNumber":371,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oops, your \" + exception + \" occurs before today!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":372,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":373,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":374,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":375,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if the task being loaded from hard disk occurs before the current date.","lastModifiedDate":"2023-03-16"},{"lineNumber":376,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":377,"author":{"gitId":"honglinshang"},"content":"     * @param exception Contains details about the task that was not added successfully.","lastModifiedDate":"2023-03-16"},{"lineNumber":378,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":379,"author":{"gitId":"honglinshang"},"content":"    public void printExistingDateOver(DateOverException exception) {","lastModifiedDate":"2023-03-16"},{"lineNumber":380,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Deleting old \" + exception);","lastModifiedDate":"2023-03-16"},{"lineNumber":381,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":382,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":383,"author":{"gitId":"honglinshang"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":384,"author":{"gitId":"honglinshang"},"content":"     * Prints error message if an unexpected error occurs.","lastModifiedDate":"2023-03-08"},{"lineNumber":385,"author":{"gitId":"honglinshang"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":386,"author":{"gitId":"honglinshang"},"content":"     * @param unexpectedException Contains detail message saying where unexpected exception occurred.","lastModifiedDate":"2023-03-13"},{"lineNumber":387,"author":{"gitId":"honglinshang"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":388,"author":{"gitId":"honglinshang"},"content":"    public void printUnexpectedException(UnexpectedException unexpectedException) {","lastModifiedDate":"2023-03-13"},{"lineNumber":389,"author":{"gitId":"honglinshang"},"content":"        System.out.println(\"Oh no... Something went wrong while doing the following: \" +","lastModifiedDate":"2023-03-13"},{"lineNumber":390,"author":{"gitId":"honglinshang"},"content":"                unexpectedException.getMessage() + \"\\nExiting Apollo...\");","lastModifiedDate":"2023-03-13"},{"lineNumber":391,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":392,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":393,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":394,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user tries to add a module which does not exist.","lastModifiedDate":"2023-03-10"},{"lineNumber":395,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":396,"author":{"gitId":"irving11119"},"content":"    public void printInvalidModule() {","lastModifiedDate":"2023-03-10"},{"lineNumber":397,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This module does not exist!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":398,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":399,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":400,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":401,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user does not specify the module to add.","lastModifiedDate":"2023-03-10"},{"lineNumber":402,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":403,"author":{"gitId":"irving11119"},"content":"    public void printEmptyAddMod() {","lastModifiedDate":"2023-03-10"},{"lineNumber":404,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Please specify a module to add!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":405,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":406,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":407,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":408,"author":{"gitId":"irving11119"},"content":"     * Prints error message if the user does not specify the module to delete.","lastModifiedDate":"2023-03-10"},{"lineNumber":409,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":410,"author":{"gitId":"irving11119"},"content":"    public void printEmptyDelMod() {","lastModifiedDate":"2023-03-10"},{"lineNumber":411,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Please specify a module to delete!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":412,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":413,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":414,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    public void printDuplicateModule() {","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        System.out.println(\"Module already added in Module List!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"irving11119"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":419,"author":{"gitId":"irving11119"},"content":"     * Prints the available lesson types for that module.","lastModifiedDate":"2023-03-18"},{"lineNumber":420,"author":{"gitId":"irving11119"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":421,"author":{"gitId":"irving11119"},"content":"     * @param lessonTypes List of lesson types for that module.","lastModifiedDate":"2023-03-18"},{"lineNumber":422,"author":{"gitId":"irving11119"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":423,"author":{"gitId":"irving11119"},"content":"    public void printLessonTypeMessage(ArrayList\u003cLessonType\u003e lessonTypes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":424,"author":{"gitId":"irving11119"},"content":"        if (lessonTypes.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":425,"author":{"gitId":"irving11119"},"content":"            System.out.println(\"This module has no lessons.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":426,"author":{"gitId":"irving11119"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":427,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":428,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Here are the lesson types for this module:\");","lastModifiedDate":"2023-03-18"},{"lineNumber":429,"author":{"gitId":"irving11119"},"content":"        lessonTypes.sort(","lastModifiedDate":"2023-03-18"},{"lineNumber":430,"author":{"gitId":"irving11119"},"content":"                Comparator.comparing(Enum::toString));","lastModifiedDate":"2023-03-18"},{"lineNumber":431,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":432,"author":{"gitId":"irving11119"},"content":"        for (LessonType lessonType : lessonTypes) {","lastModifiedDate":"2023-03-18"},{"lineNumber":433,"author":{"gitId":"irving11119"},"content":"            System.out.println(lessonType);","lastModifiedDate":"2023-03-18"},{"lineNumber":434,"author":{"gitId":"irving11119"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":435,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":436,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":437,"author":{"gitId":"irving11119"},"content":"    public void printClassAddedMessage(String moduleCode, LessonType lessonType, String classNumber) {","lastModifiedDate":"2023-03-18"},{"lineNumber":438,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Adding lesson type: \" + lessonType + \" for Module: \" + moduleCode);","lastModifiedDate":"2023-03-18"},{"lineNumber":439,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"Class Number: \" + classNumber);","lastModifiedDate":"2023-03-18"},{"lineNumber":440,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":441,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":442,"author":{"gitId":"irving11119"},"content":"    public void printInvalidLessonType() {","lastModifiedDate":"2023-03-18"},{"lineNumber":443,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This lesson type does not exist!\");","lastModifiedDate":"2023-03-18"},{"lineNumber":444,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":445,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":446,"author":{"gitId":"irving11119"},"content":"    public void printLessonExists() {","lastModifiedDate":"2023-03-18"},{"lineNumber":447,"author":{"gitId":"irving11119"},"content":"        System.out.println(\"This lesson type already exists for this lesson!\");","lastModifiedDate":"2023-03-18"},{"lineNumber":448,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":449,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"irving11119":62,"honglinshang":299,"yixuann02":23,"T-Wan-Lin":51,"PoobalanAatmikaLakshmi":14}},{"path":"src/test/java/seedu/apollo/ApolloTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"class ApolloTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"irving11119":2,"-":10}},{"path":"src/test/java/seedu/apollo/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import seedu.apollo.command.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidDeadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.exception.task.InvalidEvent;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"honglinshang"},"content":"class ParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_normalDeadline_expectDescriptionAndBy() throws InvalidDeadline {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"honglinshang"},"content":"        String param \u003d \"test /by tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"honglinshang"},"content":"        String[] descriptionAndBy \u003d Parser.parseDeadline(param);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"test\", descriptionAndBy[0]);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"honglinshang"},"content":"        assertEquals(\"tomorrow\", descriptionAndBy[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_noBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"honglinshang"},"content":"        String param \u003d \"test\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_emptyBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"honglinshang"},"content":"        String param \u003d \"test /by \";","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"honglinshang"},"content":"    void parseDeadline_noDescription_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"honglinshang"},"content":"        String param \u003d \"  /by tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"honglinshang"},"content":"        assertThrows(InvalidDeadline.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"honglinshang"},"content":"                () -\u003e Parser.parseDeadline(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"honglinshang"},"content":"    void getCommand_invalidCommand_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String userCommand \u003d \"draw\";","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"irving11119"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_normalEvent_expectDescriptionAndFromAndTo() throws InvalidEvent {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /from today /to tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"T-Wan-Lin"},"content":"        String[] descriptionAndFromAndTo \u003d Parser.parseEvent(param);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"test\", descriptionAndFromAndTo[0]);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"today\", descriptionAndFromAndTo[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"T-Wan-Lin"},"content":"        assertEquals(\"tomorrow\", descriptionAndFromAndTo[2]);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noDescription_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"  /from today /to tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyFrom_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /from /to tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /from today /to \";","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_emptyFromAndTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /from /to\";","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noFromAndTo_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test\";","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noFrom_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /to tomorrow\";","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"T-Wan-Lin"},"content":"    void parseEvent_noBy_expectException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"T-Wan-Lin"},"content":"        String param \u003d \"test /from today\";","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"T-Wan-Lin"},"content":"        assertThrows(InvalidEvent.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"T-Wan-Lin"},"content":"                () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    void parseEvent_toBeforeFrom_expectException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        String param \u003d \"wedding /to 6pm /from 9am\";","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"        assertThrows(InvalidEvent.class, () -\u003e Parser.parseEvent(param));","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"yixuann02"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"yixuann02"},"content":"    void getCommand_noKeywordFind_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"yixuann02"},"content":"        String userCommand \u003d \"find\";","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"yixuann02"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"yixuann02"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"irving11119"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"yixuann02"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"yixuann02"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"yixuann02"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noModuleAdded_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"addmod\";","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noModuleDeleted_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"delmod\";","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noMarkIndex_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"mark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noUnmarkIndex_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"unmark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_nonIntegerMarkIndex_expectException() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"mark a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"PoobalanAatmikaLakshmi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_nonIntegerUnmarkIndex_expectException() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"unmark a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noTodoDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"todo\";","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":193,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noEventDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"event\";","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"T-Wan-Lin"},"content":"    void getCommand_noDeadlineDescription_expectNull() throws UnexpectedException {","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"T-Wan-Lin"},"content":"        String userCommand \u003d \"deadline\";","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"T-Wan-Lin"},"content":"        int size \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"T-Wan-Lin"},"content":"        Command newCommand \u003d Parser.getCommand(userCommand, ui, size, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"T-Wan-Lin"},"content":"        assertNull(newCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":211,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":6,"honglinshang":39,"yixuann02":8,"T-Wan-Lin":141,"PoobalanAatmikaLakshmi":20}},{"path":"src/test/java/seedu/apollo/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"irving11119"},"content":"package seedu.apollo;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"irving11119"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"irving11119"},"content":"class UiTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    void printList_normalInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"honglinshang"},"content":"        TaskList taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"honglinshang"},"content":"        assertDoesNotThrow(() -\u003e ui.printList(taskList));","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"T-Wan-Lin"},"content":"    void printList_emptyInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"T-Wan-Lin"},"content":"    void printFoundList_normalInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d storage.loadTaskList(ui);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printFoundList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"T-Wan-Lin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"T-Wan-Lin"},"content":"    void printFoundList_emptyInput_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"moduleData.txt\");","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"T-Wan-Lin"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"T-Wan-Lin"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"T-Wan-Lin"},"content":"        assertDoesNotThrow(() -\u003e ui.printFoundList(taskList));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"T-Wan-Lin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"T-Wan-Lin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"irving11119"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"irving11119":22,"honglinshang":2,"T-Wan-Lin":22}},{"path":"src/test/java/seedu/apollo/module/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"honglinshang"},"content":"package seedu.apollo.module;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"honglinshang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"irving11119"},"content":"import seedu.apollo.storage.Storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"irving11119"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"irving11119"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"class ModuleListTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"honglinshang"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"irving11119"},"content":"    void addModule_invalidModuleCode_expectNull() {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"honglinshang"},"content":"        ModuleList allModules \u003d new ModuleList();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"irving11119"},"content":"        String invalidModuleCode \u003d \"cg2113\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(invalidModuleCode));","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"irving11119"},"content":"        assertNull(allModules.findModule(invalidModuleCode));","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"irving11119"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"irving11119"},"content":"    void findModule_invalidModuleCode_expectNull() throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\" );","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"irving11119"},"content":"        ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"irving11119"},"content":"        assertNull(modules.findModule(\"CS2040C\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"honglinshang"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"honglinshang"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"irving11119"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"irving11119"},"content":"    void findModule_validModuleCode_returnsModule() throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"irving11119"},"content":"        Storage storage \u003d new Storage(\"test.txt\", \"testModuleData.txt\" );","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"irving11119"},"content":"        ModuleList allModules \u003d storage.loadModuleData();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"irving11119"},"content":"        ModuleList modules \u003d new ModuleList();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"irving11119"},"content":"        modules.add(allModules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"irving11119"},"content":"        Module validModule \u003d allModules.findModule(\"CS2113\");","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"irving11119"},"content":"        assertEquals(validModule, modules.findModule(\"CS2113\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"irving11119"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"honglinshang"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"irving11119":29,"honglinshang":12}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"honglinshang"},"content":"rm moduleData.txt","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"honglinshang"},"content":"rm save.txt","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"honglinshang":2,"-":24}}]
