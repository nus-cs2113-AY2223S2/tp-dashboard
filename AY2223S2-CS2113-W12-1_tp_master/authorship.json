[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"# Sniff project template","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"cleoncheng2000"},"content":"## Build automation using Gradle.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"cleoncheng2000":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"    mainClass \u003d \"seedu.sniff.Sniff\"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"    archiveBaseName \u003d \"sniff\"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"    enableAssertions \u003d true;","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dendendenden04":1,"NivethaUdayakumar":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |        Name         |            Github Profile             | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"--------|:-------------------:|:-------------------------------------:|:---------:","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Navya Muthukrishnan | [Github](https://github.com/11-Navya) | [Portfolio](docs/team/Navya.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Varatharaju Vignesh | [Github](https://github.com/Vignesh-30) | [Portfolio](https://ay2223s2-cs2113-w12-1.github.io/tp/team/vignesh-30.html)","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Udayakumar Nivetha | [Github](https://github.com/NivethaUdayakumar) | [Portfolio](https://github.com/AY2223S2-CS2113-W12-1/tp/blob/master/docs/team/nivethaudayakumar.md)","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Cleon Cheng | [Github](https://github.com/cleoncheng2000) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Dennis Ong Qinkang | [Github](https://github.com/dendendenden04) | [Portfolio](docs/team/dennisoqk.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cleoncheng2000":1,"dendendenden04":1,"Vignesh-30":2,"NivethaUdayakumar":2,"-":3,"11-Navya":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"### User Interface (UI) - Class Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"![img.png](img.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 1: UML Diagram of User Interface (UI) Class**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"1. The **`UI class`** named `Ui` belongs to the package functionalities.ui. The class contains several static and non-static methods that display messages to the user such as **`showUserMessage()`**, **`showErrorMessage()`**, and **`showWelcomeMessage()`**. The class is also used to read user input, format and print appointment lists, and add or remove appointments from the **`sniff appointment manager`**. The **`Ui`** class has a **`showLine()`** method that displays a divider line to the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"2. The **`UI class`** has a private static final String DOT_THEN_SPACE field that is used as a constant string value to format user messages. It has a **`readUserCommand()`** method that returns a string value that is entered by the user through the Command Line Interface (CLI).","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"3. The class imports the **`SniffException`** class from the exception package and utilizes it in the **`showErrorMessage()`** method to display an error message to the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"### Command - Class Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"![img_16.png](Updated%20Command%20UML.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"**Figure 2: UML Diagram of Command Class** \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"1. The **`Command class`** named `Command` belongs to the package functionalities.commands. The class is an abstract class that provides a basic template for implementing commands in the command-line interface. This class is designed to be extended by subclasses that implement specific commands, such as **`ListCommand`** and **`ConsultationCommand`**.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"2. The **`Command class`** has a boolean isExit field that can be set to true to exit the entire programme, or remain as false to continue running the programme. It has a **`isExit()`** method that sets that field to false initially. It also has a **`executeCommand()`** method that takes an instance of SniffTasks as a parameter and throws a SniffException if an error occurs during execution. Subclasses override this method in order to run other commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"![img_12.png](img_12.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 3: Sequence Diagram showing the logical implementation of executeCommand() for the Consultation Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"![img_14.png](img_14.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 4: Sequence Diagram showing the logical implementation of executeCommand() for the Vaccination Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"11-Navya"},"content":"![img_13.png](img_13.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 5: Sequence Diagram showing the logical implementation of executeCommand() for the Surgery Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario where the user removes an appointment.","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"11-Navya"},"content":"![img_10.png](img_10.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 6: Sequence Diagram showing the logical implementation of executeCommand() for the Remove Command** \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"The remove command is facilitated by `SniffTasks` which stores all the current appointments as `APPOINTMENTS`. It then implements the following operation:","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"* `Snifftasks.removeAppointment()` -- Removes the appointment with the specified UID.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"cleoncheng2000"},"content":"Given below is an example usage scenario and how the remove mechanism behaves.","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"1. The user had already launched and added a few appointments to `Snifftasks`.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"2. The user executes `remove C123` command to remove the appointment with that specific UID. The remove command is then executed and calls `SniffTask#removeAppointment()`, causing the appointment with that UID to be removed. It then calls the `Ui#printAppointmentRemovedMessage()` that then calls `Appointment#toString`  that prints to the output the details of the appointment that had been removed. Lastly, it calls `Ui#showUserMessage()` to tell the user that the remove appointment mechanism is successful.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"11-Navya"},"content":"![img_11.png](img_11.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 7: Sequence Diagram showing the logical implementation of executeCommand() for the List Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"11-Navya"},"content":"**Mark Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"11-Navya"},"content":"1. The Mark command will mark the appointment input by the user as done. It will set isDone as true and will be used in the Storage class.","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"11-Navya"},"content":"**UnMark Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"11-Navya"},"content":"1. The UnMark command will unmark the appointment input by the user as not done or pending. It will se the isDone as false and will be updated accordingly in the Storage class.","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"### Parser - Class Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"NivethaUdayakumar"},"content":"![img_16.png](img_16.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"**Figure 8: UML Diagram of Parser Class**","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"1. The Parser class takes in a user command and generates a corresponding Command object for veterinary management system tasks such as **add consultation, vaccination or surgery, find, remove, list, and exit**. This implementation makes use of the Command design pattern to encapsulate the behavior of different types of commands, and the parser serves as a factory for creating these commands based on the user input.","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"NivethaUdayakumar"},"content":"2. The Parser class contains several static methods that parse different types of commands, such as **`ConsultationCommand`**, **`VaccinationCommand`**, **`SurgeryCommand`**, **`FindCommand`**, **`RemoveCommand`**, **`ListCommand`**, and **`ExitCommand`**.","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"3. The **`parse()`** method takes a user command as a String named **`task`** and determines the type of command based on the first word of the command. If it matches any of the known command types, it delegates parsing to the corresponding parse method.","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"4. If the first word of the command does not match any known type, it throws a **`SniffException`**. Each parse method takes the command String as input and uses substring operations to extract the various parameters of the command. It then creates a new Command object with these parameters and assigns it to the \"command\" static variable.","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"5. Finally, the parse method returns the command object. If an exception occurs during parsing, it throws a **`SniffException`**.","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"Vignesh-30"},"content":"### Storage - Class Implementation ","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"![img_18.png](img_18.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Vignesh-30"},"content":"**Figure 9: UML Diagram of Storage class**","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Vignesh-30"},"content":"1. The Storage class takes in the path of the Sniff storage file.","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Vignesh-30"},"content":"2. **`load()`** method loads the contents of the saved file. It calls **`printFileContents(File)`** which will print out all the stored appointments.","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Vignesh-30"},"content":"3. **`load()`** method also calls **`addFileContents`** method.","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Vignesh-30"},"content":"4. **`addFileContents`** method parses the saved file and identify stored appointments. Depending on the type of appointments, it will then call either **`readConsultationintoAppointmentList()`** / **`readVaccinationintoAppointmentList()`** / **`readSurgeryintoAppointmentList()`** to add these appointment objects into **`ArrayList\u003cAppointment\u003e APPOINTMENTS`**.","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Vignesh-30"},"content":"5. If the file is stored in an incorrect format / has missing details, a **`SniffException`** is thrown.","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Vignesh-30"},"content":"### Find - Find Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"11-Navya"},"content":"![img_17.png](img_17.png) \u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Vignesh-30"},"content":"**Figure 10: Sequence Diagram showing the logical implementation of executeCommand() for the Find Command**","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Vignesh-30"},"content":"- Find command can be used by the user to find up to 3 categories, **`Appointment ID`**, **`Appointments Type`**, **`Animal Type`**.","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Vignesh-30"},"content":"- If user input is not supported by these three find commands, a **`SniffException`** is thrown.","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Vignesh-30"},"content":"#### findAppointment()","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Vignesh-30"},"content":"1. **`findAppointment`** loops through arraylist appointments and checks if matching appointment ID is present.","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Vignesh-30"},"content":"2. If matching appointment ID is found, it calls **`toString`** and **`formatPrintList`** to print out appointments to user.","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Vignesh-30"},"content":"3. If empty appointment ID is provided by user or appointment ID is in an invalid format, **`SniffException`**, is thrown for both cases.","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"Vignesh-30"},"content":"4. If no matching appointments are stored, an ui method, **`showUserMessage`** is called.","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Vignesh-30"},"content":"#### findAnimal()","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Vignesh-30"},"content":"1. **`findAnimal`** loops through arraylist appointments and checks if appointments for specified animal type is present.","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Vignesh-30"},"content":"2. If matching appointments are found, it calls **`toString`** and **`formatPrintList`** to print out appointments to user.","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"Vignesh-30"},"content":"3. If no matching appointments are stored, ui method, **`showUserMessage`** is called.","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"Vignesh-30"},"content":"#### findType()","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"Vignesh-30"},"content":"1. **`findType`** loops through arraylist appointments and checks if specified appointment type (surgery, consultation, vaccination) is present.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"Vignesh-30"},"content":"2. If appointments are found, it calls **`toString`** and **`formatPrintList`** to print out appointments to user.","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"Vignesh-30"},"content":"3. If no matching appointments are stored, ui method, **`showUserMessage`** is called.","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"11-Navya"},"content":"### Appointment - Class Implementation (non UID)","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"![img_19.png](img_19.png)\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"11-Navya"},"content":"**Figure 9: UML Diagram of Appointment Class**","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"11-Navya"},"content":"1. The appointment class takes in the user input of adding an appointment to the list of appointments.","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"11-Navya"},"content":"2. The **`Appointment class`** named `Appointment` takes in input such as uid, name, type of appointment, animal type, and date of appointment. This appointment will then  be added to the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"11-Navya"},"content":"3. If the user inputs omits any entry or adds any extra entry then an error message will be displayed. An error message will also be displayed if the input type is of the wrong the format.","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"dendendenden04"},"content":"##### UID Generation","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"dendendenden04"},"content":"![img_20.png](img_20.png)\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"dendendenden04"},"content":"**Figure 10: UML Diagram of Uid Class**","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"dendendenden04"},"content":"The UID is generated to produce a 10 character string representing the Appointment ID tagged to each appointment.","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"dendendenden04"},"content":"The UID string generated consists of 3 substrings that are concatenated together:","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"dendendenden04"},"content":"- The first substring is a one-character string that represents the appointment type the UID is generated to.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"dendendenden04"},"content":"  For example, an appointment type of `Surgery` will be denoted as `\"S\"`.","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"dendendenden04"},"content":"- The second substring is an eight character long string with each character representing a digit from 0-9.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"dendendenden04"},"content":"  Each digit is chosen at random by using Java\u0027s inbuilt `Random` class. An example of this substring ","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"dendendenden04"},"content":"  will be `\"01234567\"`.","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"dendendenden04"},"content":"- The third substring is a one-character string representing a random letter chosen from A-Z.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"dendendenden04"},"content":"  This letter is also chosen using Java\u0027s inbuilt `Random` class.","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"dendendenden04"},"content":"- The UID string is concatenated together using Java\u0027s inbuilt `StringBuilder` class. The `StringBuilder` class provides","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"dendendenden04"},"content":"  a faster way to concatenate strings as compared to using the `+` operator.   ","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"dendendenden04"},"content":"  An example of a randomly generated UID string for each appointment type is shown below:","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"dendendenden04"},"content":"  - Consultation: `C82739812B`","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"dendendenden04"},"content":"  - Vaccination: `V71829748S`","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"dendendenden04"},"content":"  - Surgery: `S23847989T`","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"dendendenden04"},"content":"###### Alternatives","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"dendendenden04"},"content":"Other alternatives that was considered are:","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"dendendenden04"},"content":"- Using the Java inbuilt UUID class.","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"dendendenden04"},"content":"   - Pros: Do not need to implement the class itself. Easy to use.","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"dendendenden04"},"content":"   - Cons: Overkill as it generates a 128 bit String. Cannot customise to fit our custom uid format.","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"dendendenden04"},"content":"- Asking the user to manually key in a UID string themselves.","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"dendendenden04"},"content":"   - Pros: Do not need to implement the feature itself.","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"dendendenden04"},"content":"   - Cons: We felt that this is counter-intuitive as it increases workload and human error. Automating","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"dendendenden04"},"content":"     this process will reduce potential errors.","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"dendendenden04"},"content":"Veterinarians in Vet Clinics around Singapore who","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"dendendenden04"},"content":"* prefer typing over using a mouse.","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"dendendenden04"},"content":"* need to keep track a large number of appointments.","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"dendendenden04"},"content":"* prefer Command Line Interface(CLI) over other interfaces.","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"dendendenden04"},"content":"Veterinary Clinics have a large number of appointments for the veterinarians and their admin staff to handle.","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"dendendenden04"},"content":"Sniff is a","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"dendendenden04"},"content":"appointment manager that helps clinics keep track of their appointments. This eases the workload of the clinic staff","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"dendendenden04"},"content":"and helps improve efficiency in running a Vet clinic, while reducing human errors occurring in the workplace.","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":149,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"| Version | As a ... | I want to ...                               | So that I can ...                                        |","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"11-Navya"},"content":"|---------|----------|---------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"11-Navya"},"content":"| v1.0    |new user| add new appointments                        |                                                          |","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"11-Navya"},"content":"| v1.0    |user| remove appointments                         | update the list with latest appointments                 |","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"11-Navya"},"content":"| v1.0    |user| find appointments                           | view a specific existing appointment                     |","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"11-Navya"},"content":"| v1.0    |user| list appointments                           | view all existing appointments                           |","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"11-Navya"},"content":"| v1.0    |user| categorize appointments by appointment type | manage efficiently                                       |","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"11-Navya"},"content":"| v2.0    |user| mark appointments                           | differentiate between completed and pending appointments |","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"11-Navya"},"content":"| v2.0    |user| unmark appointments                         | retrieve appointments marked accidently                  |","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"11-Navya"},"content":"| v2.0    |user| track appointment dates                     | prioritize the upcoming appointments                     |","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"11-Navya"},"content":"| v2.0    |user| track locations                             | inform the doctor                                        |","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"11-Navya"},"content":"| v2.0    |user| track contact information of owner          | contact the owner of the pet                             |","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":165,"author":{"gitId":"cleoncheng2000"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"cleoncheng2000"},"content":"2. Should be able to hold up to 1000 appointments without a noticeable change in performance for typical usage.","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"cleoncheng2000"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"cleoncheng2000"},"content":"   be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"cleoncheng2000"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"cleoncheng2000"},"content":"* **Main Command**: The first WORD that a user types in. `e.g. consultation, list` etc","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"cleoncheng2000"},"content":"* **Argument**: A word that is a parameter is prefixed by `/`. `e.g. at/, cd/`","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":177,"author":{"gitId":"cleoncheng2000"},"content":"Given below are the instructions to test Sniff manually","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"cleoncheng2000"},"content":"### Launch","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"cleoncheng2000"},"content":"1. Ensure you have Java 11 or above installed.","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"cleoncheng2000"},"content":"2. Download the latest copy of `Sniff.jar` [here](https://github.com/AY2223S2-CS2113-W12-1/tp/releases)","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"cleoncheng2000"},"content":"3. Move the jar file to a folder where you want to run Sniff","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"cleoncheng2000"},"content":"4. Open the command terminal and change the directory to the address of the folder containing Sniff.jar","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"cleoncheng2000"},"content":"5. Use the following command in the command terminal to run Sniff:","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"cleoncheng2000"},"content":"   `java -jar sniff.jar`","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"cleoncheng2000"},"content":"6. If Sniff runs successfully, you will see the following welcome message:","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"cleoncheng2000"},"content":" Hello! I\u0027m Sniff, your personal appointment manager.","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"cleoncheng2000"},"content":" What can I do for you?","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"cleoncheng2000"},"content":"### Sample test cases","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"cleoncheng2000"},"content":"#### Adding appointments","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"cleoncheng2000"},"content":"1. Definitions:","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"cleoncheng2000"},"content":"   1. 3 types of appointments: `consultation`, `vaccination`, `surgery`.","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"cleoncheng2000"},"content":"   2. Animal type: `at/`.","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"cleoncheng2000"},"content":"   3. Animal name: `an/`.","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"cleoncheng2000"},"content":"   4. Owner name: `on/`.","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"cleoncheng2000"},"content":"   5. Contact number: `cn/`.","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"cleoncheng2000"},"content":"   6. Dates: `cd`, `vd`, `sd`, `ed`, in the format of **YYYY-MM-DD**.","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"cleoncheng2000"},"content":"   7. Times: `ct`, `vt`, `st`, `et`, in the format of **HH:MM**.","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"cleoncheng2000"},"content":"   8. Vaccine: `v/`.","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"cleoncheng2000"},"content":"   9. Priority: `p/`, in the format of **H**, **M**, or **L**.","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"cleoncheng2000"},"content":"   ","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"cleoncheng2000"},"content":"2. Test case: `consultation at/Cat an/Lulu on/Jon cn/91919191 cd/2023-12-12 ct/19:00`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A consultation appointment has been added successfully, details shown in the status message.","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"cleoncheng2000"},"content":" This appointment has been added to your appointment manager: ","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"cleoncheng2000"},"content":" UID: C84120821A","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"cleoncheng2000"},"content":" Consultation added successfully!","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"cleoncheng2000"},"content":"3. Test case: `consultation at/an/Lulu on/Jon cn/91919191 cd/2023-12-12 ct/19:00`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A consultation appointment is not added due to invalid description.","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"cleoncheng2000"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"cleoncheng2000"},"content":" The consultation description is invalid!","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"cleoncheng2000"},"content":"4. Test case: `vaccination at/Dog an/Russ on/Abel cn/92929292 v/Covid vd/2023-12-12 vt/19:00`","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A vaccination appointment has been added successfully, details show in the status message.","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"cleoncheng2000"},"content":" This appointment has been added to your appointment manager: ","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"cleoncheng2000"},"content":" UID: V12400172X | vaccine: Covid","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Russ | Animal Type: Dog","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Abel | Contact Number: 92929292","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"cleoncheng2000"},"content":" Vaccination added successfully!","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"cleoncheng2000"},"content":"5. Test case: `vaccination at/Dog an/Russ on/Abel cn/92929292 v/Covid vd/12-12-2023 vt/19:00`","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A vaccination appointment is not added due to invalid date description.","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"cleoncheng2000"},"content":"   Example: ","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"cleoncheng2000"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"cleoncheng2000"},"content":" The date/time description is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"cleoncheng2000"},"content":"6. Test case: `surgery at/Hamster an/Polly on/Sam cn/93939393 sd/2023-12-12 st/19:00 ed/2023-12-12 et/20:00 p/H`","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A surgery appointment has been added successfully, details shown in the status message.","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"cleoncheng2000"},"content":" This appointment has been added to your appointment manager: ","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"cleoncheng2000"},"content":" UID: S14837641R | Priority: HIGH","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Polly | Animal Type: Hamster","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Sam | Contact Number: 93939393","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"cleoncheng2000"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"cleoncheng2000"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"cleoncheng2000"},"content":" Surgery added successfully!","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"cleoncheng2000"},"content":"7. Test case: `surgery at/Hamster an/Polly on/Sam cn/93939393 sd/2023-12-12 st/19:00 ed/2023-12-12 et/19:00 p/H`","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A surgery appointment is not added due to dates and times being the same .","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"cleoncheng2000"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"cleoncheng2000"},"content":" The start time cannot be the same as the end time!","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"cleoncheng2000"},"content":"#### Listing appointments","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"cleoncheng2000"},"content":"1. Prerequisites: Add an appointment using any of the add commands. At least one appointment in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"cleoncheng2000"},"content":"2. Test case: `list`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A list of all previously added appointments.","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"cleoncheng2000"},"content":"1.  UID: C84120821A","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"cleoncheng2000"},"content":"2.  UID: V12400172X | vaccine: Covid","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Russ | Animal Type: Dog","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Abel | Contact Number: 92929292","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"cleoncheng2000"},"content":"3.  UID: S14837641R | Priority: HIGH","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Polly | Animal Type: Hamster","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Sam | Contact Number: 93939393","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"cleoncheng2000"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"cleoncheng2000"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"cleoncheng2000"},"content":"#### Finding appointments","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"cleoncheng2000"},"content":"1. Prerequisites: Add an appointment using any of the add commands. At least one appointment in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"cleoncheng2000"},"content":"2. Test case: `find a/Dog`","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A list of all previously added appointments with the animal type.","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"cleoncheng2000"},"content":"1.  UID: V12400172X | vaccine: Covid","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Russ | Animal Type: Dog","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Abel | Contact Number: 92929292","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"cleoncheng2000"},"content":"3. Test case: `find t/consultation`","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: A list of all previously added appointments with the appointment type.","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"cleoncheng2000"},"content":"1.  UID: C84422868K","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Lulu | Animal Type: ","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":333,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"cleoncheng2000"},"content":"#### Removing appointments","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"cleoncheng2000"},"content":"1. Prerequisites: The UID of the appointment you want to remove. Use `list` or `find` to help you get the specific UID.","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"cleoncheng2000"},"content":"2. Test case: `remove C84120821A`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"cleoncheng2000"},"content":"   Expected output: The appointment with the specified UID is removed, details shown in the status message.","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"cleoncheng2000"},"content":" This appointment has been removed your appointment manager: ","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"cleoncheng2000"},"content":" UID: C84120821A","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"cleoncheng2000"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"cleoncheng2000"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"cleoncheng2000"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"cleoncheng2000"},"content":" Task removed successfully!","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":350,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":351,"author":{"gitId":"11-Navya"},"content":"#### Mark/UnMark appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":352,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":353,"author":{"gitId":"cleoncheng2000"},"content":"1. Prerequisites: The UID of the appointment you want to remove. Use `list` or `find` to help you get the specific UID.","lastModifiedDate":"2023-03-24"},{"lineNumber":354,"author":{"gitId":"cleoncheng2000"},"content":"2. Test case: `mark V12400172X`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":355,"author":{"gitId":"11-Navya"},"content":"   Expected output: If the appointment UID entered is valid and not already marked the corresponding appointment is marked on the list. ","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"11-Navya"},"content":"   A corresponding successful mark message is displayed. ","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":360,"author":{"gitId":"11-Navya"},"content":"mark uID/C26135173W","lastModifiedDate":"2023-04-08"},{"lineNumber":361,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":362,"author":{"gitId":"11-Navya"},"content":"The appointment has been marked successfully","lastModifiedDate":"2023-04-08"},{"lineNumber":363,"author":{"gitId":"11-Navya"},"content":" Task marked successfully!","lastModifiedDate":"2023-04-08"},{"lineNumber":364,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":365,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"cleoncheng2000"},"content":"3. Test case: `unmark V12400172X`\u003cbr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"11-Navya"},"content":"   Expected output: If the appointment UID entered is valid and not already unmarked the corresponding appointment is Unmarked on the list.","lastModifiedDate":"2023-04-08"},{"lineNumber":368,"author":{"gitId":"11-Navya"},"content":"   A corresponding successful Unmark message is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":369,"author":{"gitId":"cleoncheng2000"},"content":"   Example:","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":372,"author":{"gitId":"11-Navya"},"content":"unmark uID/C26135173W","lastModifiedDate":"2023-04-08"},{"lineNumber":373,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":374,"author":{"gitId":"11-Navya"},"content":"The appointment has been unmarked successfully","lastModifiedDate":"2023-04-08"},{"lineNumber":375,"author":{"gitId":"11-Navya"},"content":" Task marked successfully!","lastModifiedDate":"2023-04-08"},{"lineNumber":376,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":377,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"cleoncheng2000":202,"dendendenden04":40,"NivethaUdayakumar":31,"Vignesh-30":30,"-":27,"11-Navya":47}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"# Sniff: Appointment Manager","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"Sniff is a **`CLI Appointment Manager`** that helps veterinary clinics in Singapore to keep track of their daily tasks, consultations, surgeries, \u0026 appointments in a simple and convenient manner.","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"NivethaUdayakumar":2,"-":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"# User Guide for Sniff","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"Sniff is an appointment manager that helps clinic deal with handling appointments of different types.","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"Features such as appointment tracking via uid, date, and appointment type help improve efficiency in the workplace ","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"and reduce human errors.","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"dendendenden04"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":"2. Download the latest version of Sniff from [here](https://github.com/AY2223S2-CS2113-W12-1/tp/releases).","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":"3. Move the file to a location where you want to run Sniff from.","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":"4. Open a command terminal and navigate to the location where `sniff.jar` is.","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"5. Use the following command to run the program: `java -jar sniff.jar`","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"6. If Sniff runs successfully, you will see the following welcome message","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"dendendenden04"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":" Hello! I\u0027m Sniff, your personal appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":" What can I do for you?","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"### Adding a consultation appointment: `consultation`","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"Adds a new consultation appointment to the appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"cleoncheng2000"},"content":"Format: `consultation at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER cd/DATE ct/TIME`","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"* The `DATE` must be in *YYYY-MM-DD* format.","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"* The `TIME` must be in *HH:MM* format.","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"* `consultation at/Cat an/Lulu on/Jon cn/91919191 cd/2023-12-12 ct/19:00`","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"cleoncheng2000"},"content":"* `consultation at/Dog an/Russ on/Sarah cn/92929292 cd/2023-10-15 ct/09:00`","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"### Adding a vaccination appointment: `vaccination`","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"Adds a new vaccination appointment to the appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"cleoncheng2000"},"content":"Format: `vaccination at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER v/VACCINE_TYPE vd/DATE vt/TIME`","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"cleoncheng2000"},"content":"* The `DATE` must be in *YYYY-MM-DD* format.","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"cleoncheng2000"},"content":"* The `TIME` must be in *HH:MM* format.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"cleoncheng2000"},"content":"Example of usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"* `vaccination at/Cat an/Lulu on/Jon cn/91919191 v/Covid vd/2023-12-12 vt/19:00`","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"cleoncheng2000"},"content":"* `vaccination at/Dog an/Russ on/Sarah cn/92929292 v/Rabies vd/2023-10-15 vt/09:00`","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"cleoncheng2000"},"content":"### Adding a surgery appointment: `surgery`","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"cleoncheng2000"},"content":"Adds a new surgery appointment to the appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"cleoncheng2000"},"content":"Format: `surgery at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER sd/START_DATE st/START_TIME ed/END_DATE et/END_TIME p/PRIORITY_LEVEL`","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"cleoncheng2000"},"content":"* The `START_DATE` and `END_DATE` must be in *YYYY-MM-DD* format.","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"cleoncheng2000"},"content":"* The `START_TIME` and `END_TIME` must be in *HH:MM* format.","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"cleoncheng2000"},"content":"* The `PRIORITY_LEVEL` must be *H*, *M*, *L* format, representing HIGH, MEDIUM and LOW priorities respectively.","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"cleoncheng2000"},"content":"Example of usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"cleoncheng2000"},"content":"* `surgery at/Cat an/Lulu on/Jon cn/91919191 sd/2023-12-12 st/19:00 ed/2023-12-12 et/20:00 p/L`","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"cleoncheng2000"},"content":"* `surgery at/Dog an/Russ on/Sarah cn/92929292 sd/2023-10-15 st/09:00 ed/2023-12-15 et/20:00 p/M`","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"### Listing appointments: `list`","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"Retrieves all unmarked tasks from Sniff Appointments ArrayList and displays it to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"Unmarked tasks are reflected on the list immediately.","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"Format: `list`","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"Example of usage: Displays the unmarked appointments from Sniff Task List.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"list","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"1.  UID: S67775112T [ ] | Priority: HIGH","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"2.  UID: V34624451A [ ] | vaccine: covid","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"NivethaUdayakumar"},"content":"### Listing archived appointments: `archive`","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"NivethaUdayakumar"},"content":"Retrieves all marked tasks from Sniff Appointments ArrayList and displays it to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"NivethaUdayakumar"},"content":"Marked tasks are reflected on the Archive list immediately.","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"NivethaUdayakumar"},"content":"Format: `archive`","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"NivethaUdayakumar"},"content":"Example of usage: Displays the marked appointments from Sniff Task List.","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"NivethaUdayakumar"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"NivethaUdayakumar"},"content":"archive","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"NivethaUdayakumar"},"content":"1.  UID: S67775112T [X] | Priority: HIGH","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"NivethaUdayakumar"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"NivethaUdayakumar"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"NivethaUdayakumar"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"NivethaUdayakumar"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"NivethaUdayakumar"},"content":"2.  UID: V34624451A [X] | vaccine: covid","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"NivethaUdayakumar"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"NivethaUdayakumar"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"NivethaUdayakumar"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"NivethaUdayakumar"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"dendendenden04"},"content":"### Removing an appointment: `remove`","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"dendendenden04"},"content":"Removes an appointment with a specific UID from the appointment manager.","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"dendendenden04"},"content":"Format: `remove uid`","lastModifiedDate":"2023-03-31"},{"lineNumber":119,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"dendendenden04"},"content":"Example of usage: (with reference to the above appointment list)","lastModifiedDate":"2023-03-31"},{"lineNumber":122,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":123,"author":{"gitId":"dendendenden04"},"content":"* `remove S67775112T` to remove the first appointment.","lastModifiedDate":"2023-03-31"},{"lineNumber":124,"author":{"gitId":"dendendenden04"},"content":"* `remove V34624451A` to remove the second appointment.","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"Vignesh-30"},"content":"### Find by appointment UID / appointment type / animal type: \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":127,"author":{"gitId":"Vignesh-30"},"content":"Format: `find a/dog` `find t/surgery` `find aID/123` \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":128,"author":{"gitId":"Vignesh-30"},"content":"Retrieves specific appointments requested by user \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":129,"author":{"gitId":"Vignesh-30"},"content":"Can filter by appointment ID, appointment type, animal type \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":130,"author":{"gitId":"Vignesh-30"},"content":"Example of usage: Displays the requested appointments \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"Vignesh-30"},"content":"find a/cat","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"Vignesh-30"},"content":"1.  UID: C31245737A [ ]","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"Vignesh-30"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"Vignesh-30"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"Vignesh-30"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"Vignesh-30"},"content":"2.  UID: S52117007D [ ] | Priority: HIGH","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"Vignesh-30"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"Vignesh-30"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"Vignesh-30"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"Vignesh-30"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"Vignesh-30"},"content":"find t/consultation","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"Vignesh-30"},"content":"1.  UID: C31245737A [ ]","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"Vignesh-30"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"Vignesh-30"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"Vignesh-30"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"Vignesh-30"},"content":"find aID/V14082745S","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"Vignesh-30"},"content":"1.  UID: V14082745S [ ] | vaccine: covid","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"Vignesh-30"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"Vignesh-30"},"content":" Animal Name: lulu | Animal Type: cat","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"Vignesh-30"},"content":" Owner Name: jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"Vignesh-30"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"Vignesh-30"},"content":" Appointment ID must consist of integers!","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"Vignesh-30"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"Vignesh-30"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"11-Navya"},"content":"### Mark Appointment : `mark ` \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"11-Navya"},"content":"This feature marks the appointment as done and is denoted by an `[X]`.","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"11-Navya"},"content":"The tasks are marked depending on the uID input the by user.","lastModifiedDate":"2023-03-31"},{"lineNumber":173,"author":{"gitId":"11-Navya"},"content":"If the uID entry is not valid it displays a corresponding error message.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"11-Navya"},"content":"Format : `mark uID/ `","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"11-Navya"},"content":"Example : `mark uID/V14082745S`","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"11-Navya"},"content":"Example of Valid Command:","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"11-Navya"},"content":"mark uID/C26135173W","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"11-Navya"},"content":"The appointment has been marked successfully","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"11-Navya"},"content":"Task marked successfully!","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"11-Navya"},"content":"Example of InValid Command :","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"11-Navya"},"content":"mark uID/C26135173W_","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"11-Navya"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-31"},{"lineNumber":192,"author":{"gitId":"11-Navya"},"content":" There are no appointments with this ID.","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":195,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"11-Navya"},"content":"Marked in the list:","lastModifiedDate":"2023-03-31"},{"lineNumber":197,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":198,"author":{"gitId":"11-Navya"},"content":"list","lastModifiedDate":"2023-03-31"},{"lineNumber":199,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":200,"author":{"gitId":"11-Navya"},"content":"1.  UID: S53144505J [ ] | Priority: LOW","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"11-Navya"},"content":"    Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":202,"author":{"gitId":"11-Navya"},"content":"    Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":203,"author":{"gitId":"11-Navya"},"content":"    Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":204,"author":{"gitId":"11-Navya"},"content":"    End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"11-Navya"},"content":"2.  UID: V48152237H [ ] | vaccine: Covid","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"11-Navya"},"content":"    Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":207,"author":{"gitId":"11-Navya"},"content":"    Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":208,"author":{"gitId":"11-Navya"},"content":"    Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":209,"author":{"gitId":"11-Navya"},"content":"3.  UID: C26135173W [X]","lastModifiedDate":"2023-03-31"},{"lineNumber":210,"author":{"gitId":"11-Navya"},"content":"    Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":211,"author":{"gitId":"11-Navya"},"content":"    Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":212,"author":{"gitId":"11-Navya"},"content":"    Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":213,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":214,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"11-Navya"},"content":"### UnMark Appointment : `unmark ` \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":218,"author":{"gitId":"11-Navya"},"content":"This feature Unmarks the appointment as not done and is denoted by an `[ ]`.","lastModifiedDate":"2023-03-31"},{"lineNumber":219,"author":{"gitId":"11-Navya"},"content":"The tasks are Unmarked depending on the uID input the by user. ","lastModifiedDate":"2023-03-31"},{"lineNumber":220,"author":{"gitId":"11-Navya"},"content":"If the uID entry is not valid it displays a corresponding error message.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":221,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":222,"author":{"gitId":"11-Navya"},"content":"Example of Valid Command :","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"11-Navya"},"content":"unmark uID/C26135173W","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":227,"author":{"gitId":"11-Navya"},"content":"The appointment has been unmarked successfully","lastModifiedDate":"2023-03-31"},{"lineNumber":228,"author":{"gitId":"11-Navya"},"content":"Task unmarked successfully!","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":231,"author":{"gitId":"11-Navya"},"content":"Example of InValid Command :","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"11-Navya"},"content":"unmark uID/C26135173E","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":235,"author":{"gitId":"11-Navya"},"content":" Sorry, an error was encountered! Here is the error description:","lastModifiedDate":"2023-03-31"},{"lineNumber":236,"author":{"gitId":"11-Navya"},"content":" There are no appointments with this ID.","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":238,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"11-Navya"},"content":"Corresponding list :","lastModifiedDate":"2023-03-31"},{"lineNumber":240,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":241,"author":{"gitId":"11-Navya"},"content":"list","lastModifiedDate":"2023-03-31"},{"lineNumber":242,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":243,"author":{"gitId":"11-Navya"},"content":"1.  UID: S53144505J [ ] | Priority: LOW","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"11-Navya"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":245,"author":{"gitId":"11-Navya"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":246,"author":{"gitId":"11-Navya"},"content":" Start Date: 2023-12-12 | Start Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"11-Navya"},"content":" End Date: 2023-12-12 | End Time: 20:00","lastModifiedDate":"2023-03-31"},{"lineNumber":248,"author":{"gitId":"11-Navya"},"content":"2.  UID: V48152237H [ ] | vaccine: Covid","lastModifiedDate":"2023-03-31"},{"lineNumber":249,"author":{"gitId":"11-Navya"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":250,"author":{"gitId":"11-Navya"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":251,"author":{"gitId":"11-Navya"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"11-Navya"},"content":"3.  UID: C26135173W [ ]","lastModifiedDate":"2023-03-31"},{"lineNumber":253,"author":{"gitId":"11-Navya"},"content":" Date: 2023-12-12 | Time: 19:00","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"11-Navya"},"content":" Animal Name: Lulu | Animal Type: Cat","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"11-Navya"},"content":" Owner Name: Jon | Contact Number: 91919191","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"11-Navya"},"content":"______________________________________________________________________","lastModifiedDate":"2023-03-31"},{"lineNumber":257,"author":{"gitId":"11-Navya"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"cleoncheng2000"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2023-04-05"},{"lineNumber":260,"author":{"gitId":"cleoncheng2000"},"content":"Exits the appointment manager program.","lastModifiedDate":"2023-04-05"},{"lineNumber":261,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":262,"author":{"gitId":"cleoncheng2000"},"content":"Format: `bye`","lastModifiedDate":"2023-04-05"},{"lineNumber":263,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":264,"author":{"gitId":"cleoncheng2000"},"content":"Example of usage:","lastModifiedDate":"2023-04-05"},{"lineNumber":265,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":266,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":268,"author":{"gitId":"cleoncheng2000"},"content":" Bye, hope to see you again soon!","lastModifiedDate":"2023-04-05"},{"lineNumber":269,"author":{"gitId":"cleoncheng2000"},"content":"______________________________________________________________________","lastModifiedDate":"2023-04-05"},{"lineNumber":270,"author":{"gitId":"cleoncheng2000"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":276,"author":{"gitId":"cleoncheng2000"},"content":"**A**: ","lastModifiedDate":"2023-04-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"11-Navya"},"content":"* Add consultation :","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"11-Navya"},"content":"  `vaccination at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER v/VACCINE_TYPE cd/DATE ct/TIME` ","lastModifiedDate":"2023-03-31"},{"lineNumber":284,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":286,"author":{"gitId":"11-Navya"},"content":"* Add surgery :","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"11-Navya"},"content":"  `surgery at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER sd/START_DATE st/START_TIME ed/END_DATE et/END_TIME p/PRIORITY_LEVEL` ","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"11-Navya"},"content":"* Add vaccination :","lastModifiedDate":"2023-03-31"},{"lineNumber":291,"author":{"gitId":"11-Navya"},"content":"  `vaccination at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER v/VACCINE_TYPE cd/DATE ct/TIME` ","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"11-Navya"},"content":"* List :","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"11-Navya"},"content":"  `list`","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":297,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"11-Navya"},"content":"* Remove appointment :","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"11-Navya"},"content":"  `remove uid`","lastModifiedDate":"2023-03-31"},{"lineNumber":300,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"11-Navya"},"content":"* find appointment by animal_type :","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"11-Navya"},"content":"`find a/dog` ","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"11-Navya"},"content":"* find appointment by appointment_type :","lastModifiedDate":"2023-03-31"},{"lineNumber":307,"author":{"gitId":"11-Navya"},"content":"`find t/surgery` ","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":309,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"11-Navya"},"content":"* find appointment by appointment_uID :","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"11-Navya"},"content":"`find aID/123`","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"11-Navya"},"content":"* Mark appointment :","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"11-Navya"},"content":"  `mark uID/ `","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"11-Navya"},"content":"* UnMark appointment :","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"11-Navya"},"content":"  `unmark uID/ `","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"11-Navya"},"content":" ","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"11-Navya"},"content":" ","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"cleoncheng2000":48,"dendendenden04":27,"NivethaUdayakumar":48,"Vignesh-30":44,"-":25,"11-Navya":131}},{"path":"docs/team/cleoncheng2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"# Cleon Cheng - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"## Project: Sniff Appointment Manager","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"Sniff is a `Command Line Interface (CLI) Appointment Tracker` designed specifically for veterinary clinics in Singapore.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"Its main functions are to track various appointments of types: Surgery, Vaccination, \u0026 Consultation via uid, date, and appointment type to help clinics better manage their working staff.","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"#### 1) Code Contributed: [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dcleoncheng2000\u0026breakdown\u003dtrue) \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"#### 2) Enhancements Implemented: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] Implemented **Help** feature: [#142](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/142)","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"2. [x] Implemented Appointments and Commands Class: [#39](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/39)","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"3. [x] Implemented JUnit Testing for Commands Class: [#46](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/46)","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"4. [x] Implemented Date Time feature for Appointments Class: [#51](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/51)","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"#### 3) Contributions to User Guide (UG): \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] User Guide for Adding Appointments Feature: [#67](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/67)","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"#### 4) Contributions to Developer Guide (DG): \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] Worked on Manual Testing, Glossary and Non-Functional Requirements in the Developer Guide: [#57](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/57)","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"#### 5) Contributions to Team-Based Tasks: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] Implementing Bug Fixes for **`adding appointments feature`** from PE-D. Github Issues: [#138](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/138)","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"cleoncheng2000"},"content":"**COMMUNITY** \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"#### 1) Review/Mentoring Contributions: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] Team Pull Requests Reviewed: [#44](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/44) [#42](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/42)","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"2. [x] Suggestions for Improvements via Team Communication Channels (Telegram \u0026 Google Meet)","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"cleoncheng2000"},"content":"#### 2) Contributions beyond the Project Team: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"1. [x] Reported Bugs for BrokeMan: [#1](https://github.com/cleoncheng2000/ped/issues/1) [#2](https://github.com/cleoncheng2000/ped/issues/2) [#3](https://github.com/cleoncheng2000/ped/issues/3)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"cleoncheng2000":36}},{"path":"docs/team/dendendenden04.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"# Dennis - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"## Project Overview : Sniff","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"Sniff is an CLI application that is able handle veterinary clinic appointments. Users are able to interact","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"with it to add appointments, remove appointments, find appointments and many more.","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"* **Feature**: `list`","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"dendendenden04"},"content":"    * What it does: Lists out all the appointments available in the appointment handler by date and time.","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"dendendenden04"},"content":"    * Justification: This feature provides an overview of all the upcoming appointments by date and time.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":"    * Highlights: This enhan","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":"* **Sub-Feature**: UID generator for the appointments","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"    * What it does: Generates a 10-character random string with the first character representing appointment type.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"    * Justification: This feature helps to automatically generate UIDs for the appointments, which is vital in using","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"dendendenden04"},"content":"    the application. Various features such as `remove` and `mark` depends on it.","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"    [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003ddendendenden04\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"* **Project management**:","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"dendendenden04"},"content":"    * User Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"        * Added documentation for the introduction, quick start and remove.","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"dendendenden04"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"dendendenden04"},"content":"        * Added implementation details of the UID feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"    ","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"dendendenden04":33}},{"path":"docs/team/navyamuthukrishnan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"# Navya - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"## Project Overview : Sniff","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"Sniff is an CLI application that is able handle veterinary clinic appointments. Users are able to interact","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":"with it to add appointments, remove appointments, find appointments and many more.","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"* **Mark Command**: `","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"    * Marks the appointment that have been completed based on uid ","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"* **UnMark Command**: `","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c .merge_file_zZYzpi","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"    * UnMarks the appointment that have been completed based on uid","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"    * UnMarks the appointment that have been completed based on uid ","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"    ","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"    * User Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"11-Navya"},"content":"        * Added documentation for the user guide, mark and unmark command and add appointment (old version)","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"11-Navya"},"content":"        * Added documentation for the user guide, mark and unmark command and add apointment (old version)","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"11-Navya"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"11-Navya"},"content":"        * Added implementation details for the mark and unmark features and old appointment add list","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"11-Navya":29}},{"path":"docs/team/nivethaudayakumar.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"# Udayakumar Nivetha - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"## Project: Sniff Appointment Manager","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"Sniff is a `Command Line Interface (CLI) Appointment Tracker` designed specifically for veterinary clinics in Singapore. ","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"Its main functions are to track various appointments of types: Surgery, Vaccination, \u0026 Consultation via uid, date, and appointment type to help clinics better manage their working staff. ","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 1) Code Contributed: [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dnivethaudayakumar\u0026breakdown\u003dtrue) \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 2) Enhancements Implemented: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] Implemented v.1.0 code for Main, Command, Parser \u0026 UI classes \u0026 Sniff Exception for `Sniff v.1.0`: [#11](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/11)","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"2. [x] Implemented JUnit Testing for Parser Class: [#45](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/45) [#49](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/49)","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"3. [x] Bug Fixes for Parser: [#27](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/27) [#44](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/44)","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"4. [x] **New Feature: `Archive`** for Sniff v.2.1 [#148](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/148) \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"   * **`What it does:`** Save all Appointments that are marked as done into an Archive Save File (different from Appointments Save File). ","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"   Load Archive Save File when Sniff starts and read in Archived Appointments. When user types **`archive`** on the CLI interface, it shows the list of archived appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"   * **`Justification:`** This feature improves the product significantly by providing users with a convenient way to view all completed appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"   * **`Highlights:`** This enhancement also allows users to also export their data to a different computer.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 3) Contributions to User Guide (UG): \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] User Guide for List Feature: [#68](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/68)","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"2. [x] User Guide for Archive Feature: [#161](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/161)","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 4) Contributions to Developer Guide (DG): \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] Worked on Design and Implementation portion for User Interface (UI): [#54](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/54) ","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"2. [x] UML Diagram \u0026 Sequence diagrams for UI, Command and Parser classes in Sniff Functionalities: [#59](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/59)","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 5) Contributions to Team-Based Tasks: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] **Project Management:** Sniff JAR Release for v1.0","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"2. [x] Implementing Bug Fixes for **`remove feature`** from PE-D. Github Issues: [#85](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/85) [#90](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/90) [#106](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/106) [#113](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/113) [#120](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/120) [#129](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/129)","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"**COMMUNITY** \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 1) Review/Mentoring Contributions: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] Team Pull Requests Reviewed: [#41](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/41) [#42](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/42) [#144](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/144)","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"2. [x] Suggestions for Improvements via Team Communication Channels (Telegram \u0026 Google Meet)","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"#### 2) Contributions beyond the Project Team: \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"1. [x] Reported Bugs for BagPacker: [#1](https://github.com/NivethaUdayakumar/ped/issues/1) [#2](https://github.com/NivethaUdayakumar/ped/issues/2) [#3](https://github.com/NivethaUdayakumar/ped/issues/3) [#4](https://github.com/NivethaUdayakumar/ped/issues/4) [#5](https://github.com/NivethaUdayakumar/ped/issues/5) [#6](https://github.com/NivethaUdayakumar/ped/issues/6) [#7](https://github.com/NivethaUdayakumar/ped/issues/7) [#8](https://github.com/NivethaUdayakumar/ped/issues/8) [#9](https://github.com/NivethaUdayakumar/ped/issues/9) [#10](https://github.com/NivethaUdayakumar/ped/issues/10)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"NivethaUdayakumar":43}},{"path":"docs/team/vignesh-30.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Vignesh-30"},"content":"# Vignesh - Project Portfolio Page","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"## Project Overview : Sniff","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"Sniff is a `Command Line Interface (CLI) Appointment Tracker` designed specifically for veterinary clinics in Singapore.","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"Its main functions are to track various appointments of types: Surgery, Vaccination, \u0026 Consultation via uid, date, and appointment type to help clinics better manage their working staff.","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"Vignesh-30"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"Vignesh-30"},"content":"#### 1) Code contributed: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dvignesh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026since\u003d2023-02-17\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dVignesh-30\u0026tabRepo\u003dAY2223S2-CS2113-W12-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Vignesh-30"},"content":"#### 2) Enhancements Implemented: \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":"1. [x] Implemented **find** feature for `Sniff v.2.0`: [#41](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/41)","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"Vignesh-30"},"content":"2. [x] Enhanced **find** feature to also find by date for `Sniff v.2.1`: [#150](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/150)","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"3. [x] **Feature: `Storage`** for Sniff v.2.0 \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"Vignesh-30"},"content":"    * **`What it does:`** Save all Appointments that are marked as undone into a `SniffAppointments` Save File.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"Vignesh-30"},"content":"      Load Archive Save File when Sniff starts and read in saved appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"    * **`Justification:`** This feature improves the product significantly by providing users with a convenient way to store and access appointments.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"Vignesh-30"},"content":"    * **`Highlights:`** This enhancement also allows users to also export appointments to a different computer.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"#### 3) Contributions to User Guide (UG): \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"1. [x] User guide for find command and storage","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"#### 4) Contributions to Developer Guide (DG): \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"1. [x] Added UML diagram for Storage class.","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"2. [x] Added sequence diagrams for `find` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"#### 5) Contributions to Team-Based Tasks: \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"1. [x] **Project Management:** Sniff JAR Release for v2.0","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"Vignesh-30"},"content":"2. [x] Implementing Bug Fixes for **`find feature`** and **`storage`** from PE-D. Github Issues: [#131](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/131) [#130](https://github.com/AY2223S2-CS2113-W12-1/tp/issues/130) ","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Vignesh-30"},"content":"**COMMUNITY** \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"#### 1) Review/Mentoring Contributions: \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"1. [x] Team Pull Requests Reviewed: [#39](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/39) [#23](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/23)[#20](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/20)[#16](https://github.com/AY2223S2-CS2113-W12-1/tp/pull/16)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"Vignesh-30":37}},{"path":"src/main/java/archive/Archive.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package archive;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.File;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.parser.ArchiveParser;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":" * This class deals with Archive (Loading and Saving Archived Tasks in the File)","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":" **/","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Archive {","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Saves the Archived task contents into the SniffArchive File","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param filePath The path of the SniffArchive file","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException if Archive file is not found","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void saveArchivedAppointments(String filePath) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"            File archiveFile \u003d new File(filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"            FileWriter archiveSavedFile \u003d new FileWriter(archiveFile, false);","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"            SniffTasks.archivedTasks(archiveSavedFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"            archiveSavedFile.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"            archiveSavedFile.close();","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Archive file not found!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Reads and adds the Archived task contents into the Appointments task list","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param filePath The path of the SniffArchive file","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException if Archive file is not found","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void openArchiveFile(String filePath) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"            File archiveFile \u003d new File(filePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (archiveFile.createNewFile()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"                Ui.printArchiveFileCreated(true);","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"NivethaUdayakumar"},"content":"                extractArchiveData(archiveFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NivethaUdayakumar"},"content":"            Ui.printArchiveFileCreated(false);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Archive file content saved in incorrect format!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Calls ArchiveParser to parse Archived task contents","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param archiveFile The SniffArchive file","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException if errors are encountered while parsing","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws FileNotFoundException if Archive file is not found","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void extractArchiveData(File archiveFile) throws SniffException, FileNotFoundException {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"            Scanner s \u003d new Scanner(archiveFile);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"            int lineNo \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"                String content \u003d s.nextLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"                lineNo++;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"                char type \u003d content.charAt(0);","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"                if (type \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"                    ArchiveParser.addConsult(content);","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"                } else if (type \u003d\u003d \u0027V\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"                    ArchiveParser.addVaccine(content);","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"                } else if (type \u003d\u003d \u0027S\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"                    ArchiveParser.addSurgery(content);","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":"                } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":"                    throw new SniffException(\" Incorrect appointment format found in line \" + lineNo +","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"                            \" of the archive file!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Archive file not found!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"NivethaUdayakumar":89}},{"path":"src/main/java/exception/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"package exception;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"public class DuplicateAppointmentException extends Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"    public DuplicateAppointmentException(String e, Appointment appointment) {","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"        System.out.println(e);","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"        System.out.println(appointment);","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"dendendenden04":10}},{"path":"src/main/java/exception/SniffException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package exception;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"public class SniffException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected static String errorMessage;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"    public SniffException(String e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"        errorMessage \u003d e;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"    public static String getErrorMessage() {","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"        return errorMessage;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void showError() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"dendendenden04":4,"NivethaUdayakumar":11}},{"path":"src/main/java/functionalities/Animal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"public class Animal {","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"    protected String type;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"    protected String name;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    public Animal(String type, String name) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"        this.type \u003d setType(type);","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"        this.name \u003d setName(name);","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"        return name + \" | Animal Type: \" + type;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"        Animal other \u003d (Animal) o;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"        return this.name.equals(other.name) \u0026\u0026 this.type.equals(other.type);","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"    public String getAnimalName() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"        return name;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"    public String getAnimalType() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"        return type;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"    public String setName(String name) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Animal Name cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"        if (!isAlphaSpace(name)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Animal Name must only contain alphabets!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"cleoncheng2000"},"content":"        return name;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"cleoncheng2000"},"content":"    public String setType(String type) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"cleoncheng2000"},"content":"        if (type.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Animal Type cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"cleoncheng2000"},"content":"        if (!isAlphaSpace(type)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Animal Type must only contain alphabets!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"cleoncheng2000"},"content":"        return type;","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"cleoncheng2000"},"content":"    public static boolean isAlphaSpace(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"cleoncheng2000"},"content":"        return str !\u003d null \u0026\u0026 str.matches(\"^[a-zA-Z ]+$\");","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cleoncheng2000":36,"dendendenden04":5,"Vignesh-30":9,"NivethaUdayakumar":5}},{"path":"src/main/java/functionalities/DateTimeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"package functionalities;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"dendendenden04"},"content":"import functionalities.appointments.Consultation;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"import functionalities.appointments.Surgery;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"import functionalities.appointments.Vaccination;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"dendendenden04"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":" * This class implements the compare method of the Comparator class, using","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":" * date and time of the appointments we are comparing.","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":" */","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"public class DateTimeComparator implements Comparator\u003cAppointment\u003e {","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"dendendenden04"},"content":"     * Compares between two appointments, and returns a set of values depending on","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"     * which appointment precedes the other.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"     * @param appt1 the first appointment to be compared.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"     * @param appt2 the second appointment to be compared.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"     * @return -1 if the first appointment precedes the second appointment.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"     *         0 if the two appointments have the same date and time.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"dendendenden04"},"content":"     *         1 if the second appointment precedes the first appointment.","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"dendendenden04"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"dendendenden04"},"content":"    public int compare(Appointment appt1, Appointment appt2) {","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"        LocalDate date1 \u003d LocalDate.now();","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"dendendenden04"},"content":"        LocalDate date2 \u003d LocalDate.now();","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"dendendenden04"},"content":"        LocalTime time1 \u003d LocalTime.now();","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"dendendenden04"},"content":"        LocalTime time2 \u003d LocalTime.now();","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"        char appt1Type \u003d appt1.uid.charAt(0); //Appointment UIDs start with the denoted appointment type","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"dendendenden04"},"content":"        char appt2Type \u003d appt2.uid.charAt(0);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"dendendenden04"},"content":"        if (appt1Type \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"dendendenden04"},"content":"            Consultation tempC \u003d (Consultation) appt1;","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"dendendenden04"},"content":"            date1 \u003d tempC.getDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"dendendenden04"},"content":"            time1 \u003d tempC.getTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"dendendenden04"},"content":"        } else if (appt1Type \u003d\u003d \u0027V\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"dendendenden04"},"content":"            Vaccination tempV \u003d (Vaccination) appt1;","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"dendendenden04"},"content":"            date1 \u003d tempV.getDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"dendendenden04"},"content":"            time1 \u003d tempV.getTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"dendendenden04"},"content":"        } else if (appt1Type \u003d\u003d \u0027S\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"dendendenden04"},"content":"            Surgery tempS \u003d (Surgery) appt1;","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"dendendenden04"},"content":"            date1 \u003d tempS.getStartDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"dendendenden04"},"content":"            time1 \u003d tempS.getStartTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"dendendenden04"},"content":"        if (appt2Type \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"dendendenden04"},"content":"            Consultation tempC \u003d (Consultation) appt2;","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"dendendenden04"},"content":"            date2 \u003d tempC.getDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"dendendenden04"},"content":"            time2 \u003d tempC.getTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"dendendenden04"},"content":"        } else if (appt2Type \u003d\u003d \u0027V\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"dendendenden04"},"content":"            Vaccination tempV \u003d (Vaccination) appt2;","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"dendendenden04"},"content":"            date2 \u003d tempV.getDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"dendendenden04"},"content":"            time2 \u003d tempV.getTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"dendendenden04"},"content":"        } else if (appt2Type \u003d\u003d \u0027S\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"dendendenden04"},"content":"            Surgery tempS \u003d (Surgery) appt2;","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"dendendenden04"},"content":"            date2 \u003d tempS.getStartDate();","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"dendendenden04"},"content":"            time2 \u003d tempS.getStartTime();","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"dendendenden04"},"content":"        if (date1.isEqual(date2) \u0026\u0026 time1.equals(time2)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"dendendenden04"},"content":"            return 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"dendendenden04"},"content":"        if (date1.isEqual(date2)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"dendendenden04"},"content":"            if (time1.isBefore(time2)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"dendendenden04"},"content":"                return -1;","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"dendendenden04"},"content":"            return 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"dendendenden04"},"content":"        } else if (date1.isBefore(date2)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"dendendenden04"},"content":"            return -1;","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"dendendenden04"},"content":"        return 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"dendendenden04"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"dendendenden04":74}},{"path":"src/main/java/functionalities/Owner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"public class Owner {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"    protected String name;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"    protected String contactNumber;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"    public Owner(String name, String contactNumber) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"        this.name \u003d setOwnerName(name);","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"        this.contactNumber \u003d setContactNumber(contactNumber);","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"        return name + \" | Contact Number: \" + contactNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"    public boolean equals(Object o){","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"        Owner other \u003d (Owner) o;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"        return this.name.equals(other.name) \u0026\u0026 this.contactNumber.equals(other.contactNumber);","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"    public String getName() {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"        return name;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"    public String getContactNumber() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"        return contactNumber;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"    public String setContactNumber(String contactNumber) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"        if (contactNumber.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Contact Number cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"        else if (!isNumeric(contactNumber)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Contact Number must only contain numbers!\");","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"        else if (contactNumber.length() !\u003d 8) {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Contact Number has to be 8 digits!\");","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"cleoncheng2000"},"content":"        return contactNumber;","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"cleoncheng2000"},"content":"    public String setOwnerName(String name) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"cleoncheng2000"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Owner Name cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"        else if (!isAlphaSpace(name)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Owner Name must only contain alphabets!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"cleoncheng2000"},"content":"        return name;","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"cleoncheng2000"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"cleoncheng2000"},"content":"        return str !\u003d null \u0026\u0026 str.matches(\"[0-9]+\");","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"cleoncheng2000"},"content":"    public static boolean isAlphaSpace(String str) {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"cleoncheng2000"},"content":"        return str !\u003d null \u0026\u0026 str.matches(\"^[a-zA-Z ]+$\");","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cleoncheng2000":44,"dendendenden04":5,"Vignesh-30":9,"NivethaUdayakumar":5}},{"path":"src/main/java/functionalities/SniffTasks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"import exception.DuplicateAppointmentException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Consultation;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Surgery;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Vaccination;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"public class SniffTasks {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static final ArrayList\u003cAppointment\u003e APPOINTMENTS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"    private static final HashSet\u003cString\u003e UIDS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"    public static void addAppointmentUID(String uid) {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"dendendenden04"},"content":"        UIDS.add(uid);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"    public static void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"        APPOINTMENTS.add(appointment);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"    public static void retrieveTask(FileWriter savedFile) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"        for (Appointment appointment : SniffTasks.APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (appointment.getStatus().equals(\" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"                savedFile.write(appointment.retrieveStorageInfo());","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"                savedFile.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Stores the data of archived tasks into SniffArchive file","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param archiveSavedFile The SniffArchive file","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException if there are errors when storing appointment data","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void archivedTasks(FileWriter archiveSavedFile) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"        int appointmentNo \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"NivethaUdayakumar"},"content":"            for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"                if (appointment.isDone) {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"                    archiveSavedFile.write(appointment.retrieveStorageInfo());","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NivethaUdayakumar"},"content":"                    archiveSavedFile.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"                appointmentNo++;","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Error encountered storing appointment no\" + appointmentNo + \" from task list!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Sorts the ArrayList by date and time before listing out marked appointments in the appointment list.","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void listArchivedAppointments() {","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"        APPOINTMENTS.sort(new DateTimeComparator());","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"        int markedAppointmentsIndex \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (APPOINTMENTS.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"            Ui.showUserMessage(\" No entries found!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert appointment !\u003d null : \"Appointment is not empty\";","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (appointment.isDone) {","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"                Ui.formatPrintList(markedAppointmentsIndex, appointment.toString());","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"                markedAppointmentsIndex++;","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Sorts the ArrayList by date and time before listing out unmarked appointments in the appointment list.","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void listAppointments() {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"        APPOINTMENTS.sort(new DateTimeComparator());","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"        int notMarkedAppointmentsIndex \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (APPOINTMENTS.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":"            Ui.showUserMessage(\" No entries found!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert appointment !\u003d null : \"Appointment is not empty\";","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (appointment.getStatus().equals(\" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"NivethaUdayakumar"},"content":"                Ui.formatPrintList(notMarkedAppointmentsIndex, appointment.toString());","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"NivethaUdayakumar"},"content":"                notMarkedAppointmentsIndex++;","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"dendendenden04"},"content":"    public void addConsultation(Animal animal, Owner owner,","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"11-Navya"},"content":"                                LocalDate date, LocalTime time) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"dendendenden04"},"content":"            checkConsultationDuplicate(animal, owner, date, time);","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"dendendenden04"},"content":"            while (UIDS.contains(uid)) { // this loop checks for duplicate appointment ids","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"dendendenden04"},"content":"                uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"dendendenden04"},"content":"            UIDS.add(uid);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"11-Navya"},"content":"            Appointment newAppointment \u003d new Consultation(uid, animal, owner, date, time);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.uid, uid) : \"consultation uid should be \" + uid;","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert !newAppointment.isDone : \"consultation isDone should be false when initialized.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"consultation animal type should be \" + animal.type;","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"consultation animal name should be \" + animal.name;","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"dendendenden04"},"content":"            APPOINTMENTS.add(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"dendendenden04"},"content":"            Ui.printAppointmentAddedMessage(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"dendendenden04"},"content":"            Ui.showUserMessage(\" Consultation added successfully!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"11-Navya"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Invalid consultation description!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"dendendenden04"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"dendendenden04"},"content":"            System.out.println(\" Appointment failed to be added.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"dendendenden04"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"dendendenden04"},"content":"     * Checks if there is a duplicate consultation appointment in the ArrayList, throws an error if present.","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"dendendenden04"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"dendendenden04"},"content":"     * @param animal Animal object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"dendendenden04"},"content":"     * @param owner  Owner object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"dendendenden04"},"content":"     * @param date   LocalDate object generated from the date input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"dendendenden04"},"content":"     * @param time   LocalTime object generated from the time input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"dendendenden04"},"content":"     * @throws DuplicateAppointmentException thrown when the appointment details of another Consultation appointment","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"dendendenden04"},"content":"     *                                       currently in the ArrayList is same as the user input.","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"dendendenden04"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"dendendenden04"},"content":"    private void checkConsultationDuplicate(Animal animal, Owner owner,","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"dendendenden04"},"content":"                                            LocalDate date, LocalTime time) throws DuplicateAppointmentException {","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"dendendenden04"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"dendendenden04"},"content":"            if (appointment.uid.charAt(0) \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027S\u0027 : \"Surgery appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027V\u0027 : \"Vaccination appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"dendendenden04"},"content":"                Consultation temp \u003d (Consultation) appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"dendendenden04"},"content":"                if (animal.equals(temp.animal) \u0026\u0026 owner.equals(temp.getOwner()) \u0026\u0026 date.equals(temp.getDate())","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"dendendenden04"},"content":"                        \u0026\u0026 time.equals(temp.getTime())) { //duplicate check","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"dendendenden04"},"content":"                    throw new DuplicateAppointmentException(\" A similar appointment already exists.\", temp);","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"dendendenden04"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"dendendenden04"},"content":"    public void addVaccination(Animal animal, Owner owner,","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"cleoncheng2000"},"content":"                               LocalDate date, LocalTime time, String vaccine) throws SniffException {","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"cleoncheng2000"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"dendendenden04"},"content":"            checkVaccinationDuplicate(animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"V\");","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"dendendenden04"},"content":"            while (UIDS.contains(uid)) { // this loop checks for duplicate appointment ids","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"dendendenden04"},"content":"                uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"dendendenden04"},"content":"            UIDS.add(uid);","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"11-Navya"},"content":"            Appointment newAppointment \u003d new Vaccination(uid, animal, owner, date, time, vaccine);","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.uid, uid) : \"vaccination uid should be \" + uid;","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert !newAppointment.isDone : \"vaccination isDone should be false when initialized.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":161,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-07"},{"lineNumber":162,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"vaccination animal type should be \" + animal.type;","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-07"},{"lineNumber":164,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"vaccination animal name should be \" + animal.name;","lastModifiedDate":"2023-04-07"},{"lineNumber":165,"author":{"gitId":"dendendenden04"},"content":"            APPOINTMENTS.add(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"dendendenden04"},"content":"            Ui.printAppointmentAddedMessage(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"dendendenden04"},"content":"            Ui.showUserMessage(\" Vaccination added successfully!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Invalid vaccination description!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"dendendenden04"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"dendendenden04"},"content":"            System.out.println(\" Appointment failed to be added.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"dendendenden04"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"dendendenden04"},"content":"     * Checks if there is a duplicate vaccination appointment in the ArrayList, throws an error if present.","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"dendendenden04"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"dendendenden04"},"content":"     * @param animal  Animal object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"dendendenden04"},"content":"     * @param owner   Owner object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"dendendenden04"},"content":"     * @param date    LocalDate object generated from the date input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"dendendenden04"},"content":"     * @param time    LocalTime object generated from the time input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"dendendenden04"},"content":"     * @param vaccine String representing the vaccine description from the user.","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"dendendenden04"},"content":"     * @throws DuplicateAppointmentException thrown when the appointment details of another Vaccination appointment","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"dendendenden04"},"content":"     *                                       currently in the ArrayList is same as the user input.","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"dendendenden04"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"dendendenden04"},"content":"    private void checkVaccinationDuplicate(Animal animal, Owner owner, LocalDate date, LocalTime time,","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"dendendenden04"},"content":"                                           String vaccine) throws DuplicateAppointmentException {","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"dendendenden04"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"dendendenden04"},"content":"            if (appointment.uid.charAt(0) \u003d\u003d \u0027V\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027S\u0027 : \"Surgery appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027C\u0027 : \"Consultation appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"dendendenden04"},"content":"                Vaccination temp \u003d (Vaccination) appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":193,"author":{"gitId":"dendendenden04"},"content":"                if (animal.equals(temp.animal) \u0026\u0026 owner.equals(temp.getOwner()) \u0026\u0026 date.equals(temp.getDate())","lastModifiedDate":"2023-04-07"},{"lineNumber":194,"author":{"gitId":"dendendenden04"},"content":"                        \u0026\u0026 time.equals(temp.getTime()) \u0026\u0026 vaccine.equals(temp.getVaccine())) { //duplicate check","lastModifiedDate":"2023-04-07"},{"lineNumber":195,"author":{"gitId":"dendendenden04"},"content":"                    throw new DuplicateAppointmentException(\" A similar appointment already exists.\", temp);","lastModifiedDate":"2023-04-07"},{"lineNumber":196,"author":{"gitId":"dendendenden04"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":198,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":199,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":200,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":201,"author":{"gitId":"dendendenden04"},"content":"    public void addSurgery(Animal animal, Owner owner,","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"cleoncheng2000"},"content":"                           String priority, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"cleoncheng2000"},"content":"                           LocalDate endDate, LocalTime endTime) throws SniffException {","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"cleoncheng2000"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"dendendenden04"},"content":"            checkSurgeryDuplicate(animal, owner, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"S\");","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"dendendenden04"},"content":"            while (UIDS.contains(uid)) { // this loop checks for duplicate appointment ids","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"dendendenden04"},"content":"                uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":210,"author":{"gitId":"dendendenden04"},"content":"            UIDS.add(uid);","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"Vignesh-30"},"content":"            Appointment newAppointment \u003d new Surgery(uid, animal, owner, priority, startDate, startTime, endDate,","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"Vignesh-30"},"content":"                    endTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.uid, uid) : \"surgery uid should be \" + uid;","lastModifiedDate":"2023-04-07"},{"lineNumber":214,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert !newAppointment.isDone : \"surgery isDone should be false when initialized.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-07"},{"lineNumber":216,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"surgery animal type should be \" + animal.type;","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert Objects.equals(newAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-07"},{"lineNumber":218,"author":{"gitId":"NivethaUdayakumar"},"content":"                    \"surgery animal name should be \" + animal.name;","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"dendendenden04"},"content":"            APPOINTMENTS.add(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"dendendenden04"},"content":"            Ui.printAppointmentAddedMessage(newAppointment);","lastModifiedDate":"2023-03-21"},{"lineNumber":221,"author":{"gitId":"dendendenden04"},"content":"            Ui.showUserMessage(\" Surgery added successfully!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Invalid surgery description!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"dendendenden04"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"dendendenden04"},"content":"            System.out.println(\" Appointment failed to be added.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"dendendenden04"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"dendendenden04"},"content":"     * Checks if there is a duplicate surgical appointment in the ArrayList, throws an error if present.","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"dendendenden04"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"dendendenden04"},"content":"     * @param animal    Animal object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"dendendenden04"},"content":"     * @param owner     Owner object generated from input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"dendendenden04"},"content":"     * @param startDate LocalDate object generated from the start date input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"dendendenden04"},"content":"     * @param startTime LocalTime object generated from the start time input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":236,"author":{"gitId":"dendendenden04"},"content":"     * @param endDate   LocalDate object generated from the end date input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":237,"author":{"gitId":"dendendenden04"},"content":"     * @param endTime   LocalTime object generated from the end time input from user.","lastModifiedDate":"2023-04-07"},{"lineNumber":238,"author":{"gitId":"dendendenden04"},"content":"     * @throws DuplicateAppointmentException thrown when the appointment details of another Surgery appointment","lastModifiedDate":"2023-04-07"},{"lineNumber":239,"author":{"gitId":"dendendenden04"},"content":"     *                                       currently in the ArrayList is same as the user input.","lastModifiedDate":"2023-04-07"},{"lineNumber":240,"author":{"gitId":"dendendenden04"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"dendendenden04"},"content":"    private void checkSurgeryDuplicate(Animal animal, Owner owner, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-04-07"},{"lineNumber":242,"author":{"gitId":"dendendenden04"},"content":"                                       LocalDate endDate, LocalTime endTime) throws DuplicateAppointmentException {","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"dendendenden04"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"dendendenden04"},"content":"            if (appointment.uid.charAt(0) \u003d\u003d \u0027S\u0027) {","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027C\u0027 : \"Consultation appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"dendendenden04"},"content":"                assert appointment.uid.charAt(0) !\u003d \u0027V\u0027 : \"Vaccination appointments should not reach here\";","lastModifiedDate":"2023-04-07"},{"lineNumber":247,"author":{"gitId":"dendendenden04"},"content":"                Surgery temp \u003d (Surgery) appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":248,"author":{"gitId":"dendendenden04"},"content":"                if (animal.equals(temp.animal) \u0026\u0026 owner.equals(temp.getOwner())","lastModifiedDate":"2023-04-07"},{"lineNumber":249,"author":{"gitId":"dendendenden04"},"content":"                        \u0026\u0026 startDate.equals(temp.getStartDate()) \u0026\u0026 startTime.equals(temp.getStartTime())","lastModifiedDate":"2023-04-07"},{"lineNumber":250,"author":{"gitId":"dendendenden04"},"content":"                        \u0026\u0026 endDate.equals(temp.getEndDate()) \u0026\u0026 endTime.equals(temp.getEndTime())) { //duplicate check","lastModifiedDate":"2023-04-07"},{"lineNumber":251,"author":{"gitId":"dendendenden04"},"content":"                    throw new DuplicateAppointmentException(\" A similar appointment already exists.\", temp);","lastModifiedDate":"2023-04-07"},{"lineNumber":252,"author":{"gitId":"dendendenden04"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":253,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":254,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":256,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":257,"author":{"gitId":"dendendenden04"},"content":"    public void removeAppointment(String uid) throws SniffException {","lastModifiedDate":"2023-03-21"},{"lineNumber":258,"author":{"gitId":"cleoncheng2000"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"dendendenden04"},"content":"            if (!UIDS.contains(uid)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"dendendenden04"},"content":"                throw new SniffException(\" There are no appointments with this ID.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":261,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":262,"author":{"gitId":"dendendenden04"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"dendendenden04"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-04"},{"lineNumber":264,"author":{"gitId":"dendendenden04"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"dendendenden04"},"content":"                    index \u003d i;","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"dendendenden04"},"content":"                    break;","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"dendendenden04"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"dendendenden04"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"dendendenden04"},"content":"            Appointment temp \u003d APPOINTMENTS.get(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":270,"author":{"gitId":"dendendenden04"},"content":"            APPOINTMENTS.remove(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":271,"author":{"gitId":"dendendenden04"},"content":"            UIDS.remove(uid);","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"dendendenden04"},"content":"            Ui.printAppointmentRemovedMessage(temp);","lastModifiedDate":"2023-03-21"},{"lineNumber":273,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The remove command entry is invalid!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":277,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":278,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"Vignesh-30"},"content":"     * Searches through APPOINTMENTS arraylist and checks if appointment with matching uID is stored","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"Vignesh-30"},"content":"     * Prints out appointment details if found","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"Vignesh-30"},"content":"     * @param uId the appointment ID to find in stored appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":283,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if no appointment ID is given by user","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":285,"author":{"gitId":"Vignesh-30"},"content":"    public void findAppointment(String uId) throws SniffException {","lastModifiedDate":"2023-03-21"},{"lineNumber":286,"author":{"gitId":"NivethaUdayakumar"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"Vignesh-30"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"Vignesh-30"},"content":"            assert appointment.uid !\u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (uId.equalsIgnoreCase(appointment.uid)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"Vignesh-30"},"content":"                Ui.formatPrintList(counter, appointment.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"NivethaUdayakumar"},"content":"                counter++;","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"Vignesh-30"},"content":"        if (uId.equals(\"\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":295,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" No appointment ID provided!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":296,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":297,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"NivethaUdayakumar"},"content":"            Ui.showUserMessage(\" There are no appointments with this ID!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":299,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":300,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":301,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":303,"author":{"gitId":"Vignesh-30"},"content":"     * Searches through APPOINTMENTS arraylist and checks if appointment with matching uID is stored","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"Vignesh-30"},"content":"     * Prints out all appointment details for matching animal if found","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":306,"author":{"gitId":"Vignesh-30"},"content":"     * @param animal the animal type to find in stored appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":307,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":308,"author":{"gitId":"Vignesh-30"},"content":"    public void findAnimal(String animal) {","lastModifiedDate":"2023-03-21"},{"lineNumber":309,"author":{"gitId":"Vignesh-30"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":310,"author":{"gitId":"Vignesh-30"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-03-21"},{"lineNumber":311,"author":{"gitId":"Vignesh-30"},"content":"            assert appointment.animal.type !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":312,"author":{"gitId":"Vignesh-30"},"content":"            if (animal.equalsIgnoreCase(appointment.animal.type)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":313,"author":{"gitId":"Vignesh-30"},"content":"                Ui.formatPrintList(counter, appointment.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"Vignesh-30"},"content":"                counter++;","lastModifiedDate":"2023-03-21"},{"lineNumber":315,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":316,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":317,"author":{"gitId":"Vignesh-30"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":318,"author":{"gitId":"Vignesh-30"},"content":"            Ui.showUserMessage(\" There are no appointments for this animal type!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":319,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":320,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":321,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":322,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"Vignesh-30"},"content":"     * Searches through APPOINTMENTS arraylist and checks for given appointment type (surgery, consultation etc.)","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"Vignesh-30"},"content":"     * Prints out all appointment details for matching appointment types if found","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"Vignesh-30"},"content":"     * @param type the appointment type to find","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"Vignesh-30"},"content":"    public void findType(String type) {","lastModifiedDate":"2023-03-21"},{"lineNumber":329,"author":{"gitId":"Vignesh-30"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":330,"author":{"gitId":"Vignesh-30"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-03-21"},{"lineNumber":331,"author":{"gitId":"Vignesh-30"},"content":"            assert appointment !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":332,"author":{"gitId":"Vignesh-30"},"content":"            if (type.equalsIgnoreCase(appointment.getDescription())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":333,"author":{"gitId":"Vignesh-30"},"content":"                Ui.formatPrintList(counter, appointment.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"Vignesh-30"},"content":"                counter++;","lastModifiedDate":"2023-03-21"},{"lineNumber":335,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":336,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"Vignesh-30"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":338,"author":{"gitId":"Vignesh-30"},"content":"            Ui.showUserMessage(\" There are no appointments of this type!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":339,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":340,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":341,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"Vignesh-30"},"content":"     * Searches through APPOINTMENTS arraylist and checks for appointments on given date","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"Vignesh-30"},"content":"     * Prints out all appointment details for given date if found","lastModifiedDate":"2023-04-08"},{"lineNumber":345,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"Vignesh-30"},"content":"     * @param date the date to check for existing appointments","lastModifiedDate":"2023-04-08"},{"lineNumber":347,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if invalid format is given for date","lastModifiedDate":"2023-04-08"},{"lineNumber":348,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":349,"author":{"gitId":"Vignesh-30"},"content":"    public void findDate(String date) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":350,"author":{"gitId":"Vignesh-30"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":351,"author":{"gitId":"Vignesh-30"},"content":"        for (Appointment appointment : APPOINTMENTS) {","lastModifiedDate":"2023-04-07"},{"lineNumber":352,"author":{"gitId":"Vignesh-30"},"content":"            if (appointment.isDate(date)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":353,"author":{"gitId":"Vignesh-30"},"content":"                Ui.formatPrintList(counter, appointment.toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":354,"author":{"gitId":"Vignesh-30"},"content":"                counter++;","lastModifiedDate":"2023-04-07"},{"lineNumber":355,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":356,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":357,"author":{"gitId":"Vignesh-30"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":358,"author":{"gitId":"Vignesh-30"},"content":"            Ui.showUserMessage(\" There are no appointments on this date!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":359,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":360,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":361,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":362,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":363,"author":{"gitId":"11-Navya"},"content":"     * Gets the ID input by the user and marks the corresponding appointment and generates a success message.","lastModifiedDate":"2023-04-08"},{"lineNumber":364,"author":{"gitId":"11-Navya"},"content":"     * If the specific appointment is already marked then generates another message informing the user","lastModifiedDate":"2023-04-08"},{"lineNumber":365,"author":{"gitId":"11-Navya"},"content":"     * @param uid UID object generated by program that is input by the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":366,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the command input the user is missing an object or is of wrong format.","lastModifiedDate":"2023-04-08"},{"lineNumber":367,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":368,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":369,"author":{"gitId":"11-Navya"},"content":"    //@@author 11-Navya","lastModifiedDate":"2023-04-04"},{"lineNumber":370,"author":{"gitId":"11-Navya"},"content":"    public void markAppointment(String uid) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"11-Navya"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":372,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"11-Navya"},"content":"            if (!UIDS.contains(uid)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\" Here are possible places where you could have gone wrong: \" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":375,"author":{"gitId":"11-Navya"},"content":"                        + \"1. Check if the entered UID is valid.\" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":376,"author":{"gitId":"11-Navya"},"content":"                        + \"2. Check if you have left the UID field empty.\" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":377,"author":{"gitId":"11-Navya"},"content":"                        + \"3. Lastly check if the format is correct mark uid/UID\");","lastModifiedDate":"2023-04-08"},{"lineNumber":378,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":379,"author":{"gitId":"11-Navya"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"11-Navya"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"11-Navya"},"content":"                assert APPOINTMENTS.get(i).uid !\u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"11-Navya"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":383,"author":{"gitId":"11-Navya"},"content":"                    index \u003d i;","lastModifiedDate":"2023-03-28"},{"lineNumber":384,"author":{"gitId":"11-Navya"},"content":"                    break;","lastModifiedDate":"2023-03-28"},{"lineNumber":385,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":386,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"11-Navya"},"content":"            if (APPOINTMENTS.get(index).getStatus().equals(\"X\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":388,"author":{"gitId":"11-Navya"},"content":"                Ui.printAppointmentAlreadyMarkedMessage(uid);","lastModifiedDate":"2023-04-08"},{"lineNumber":389,"author":{"gitId":"11-Navya"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":390,"author":{"gitId":"11-Navya"},"content":"                APPOINTMENTS.get(index).setIsDone(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":391,"author":{"gitId":"11-Navya"},"content":"                Ui.formatPrintList(counter, APPOINTMENTS.get(index).toString());","lastModifiedDate":"2023-04-08"},{"lineNumber":392,"author":{"gitId":"11-Navya"},"content":"                System.out.println(\"\\n\");","lastModifiedDate":"2023-04-08"},{"lineNumber":393,"author":{"gitId":"11-Navya"},"content":"                Ui.printAppointmentMarkMessage();","lastModifiedDate":"2023-03-28"},{"lineNumber":394,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"11-Navya"},"content":"        } catch(IndexOutOfBoundsException e){","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"11-Navya"},"content":"            throw new SniffException(\" The mark command entry is invalid!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":398,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":400,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":401,"author":{"gitId":"11-Navya"},"content":"     * Gets the ID input by the user and UnMarks the corresponding appointment and generates a success message.","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"11-Navya"},"content":"     * If the specific appointment has already been UnMarked then generates another message informing the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"11-Navya"},"content":"     * @param uid UID object generated by program that is input by the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException  thrown when the command input the user is missing an object or is of wrong format.","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":407,"author":{"gitId":"11-Navya"},"content":"    public void unMarkAppointment(String uid) throws SniffException {","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"11-Navya"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":410,"author":{"gitId":"11-Navya"},"content":"            if (!UIDS.contains(uid)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":411,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\" Here are possible places where you could have gone wrong: \" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"11-Navya"},"content":"                        + \"1. Check if the entered UID is valid.\" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":413,"author":{"gitId":"11-Navya"},"content":"                 + \"2. Check if you have left the UID field empty.\" + \"\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":414,"author":{"gitId":"11-Navya"},"content":"                + \"3. Lastly check if the format is correct unmark uid/UID\");","lastModifiedDate":"2023-04-08"},{"lineNumber":415,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"11-Navya"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":417,"author":{"gitId":"11-Navya"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-04"},{"lineNumber":418,"author":{"gitId":"11-Navya"},"content":"                assert APPOINTMENTS.get(i).uid !\u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":419,"author":{"gitId":"11-Navya"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":420,"author":{"gitId":"11-Navya"},"content":"                    index \u003d i;","lastModifiedDate":"2023-03-28"},{"lineNumber":421,"author":{"gitId":"11-Navya"},"content":"                    break;","lastModifiedDate":"2023-03-28"},{"lineNumber":422,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":423,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":424,"author":{"gitId":"11-Navya"},"content":"            if (APPOINTMENTS.get(index).getStatus().equals(\" \")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":425,"author":{"gitId":"11-Navya"},"content":"                Ui.printAppointmentAlreadyUnMarkedMessage(uid);","lastModifiedDate":"2023-04-08"},{"lineNumber":426,"author":{"gitId":"11-Navya"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":427,"author":{"gitId":"11-Navya"},"content":"                APPOINTMENTS.get(index).setIsDone(false);","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"11-Navya"},"content":"                Ui.formatPrintList(counter, APPOINTMENTS.get(index).toString());","lastModifiedDate":"2023-04-08"},{"lineNumber":429,"author":{"gitId":"11-Navya"},"content":"                System.out.println(\"\\n\");","lastModifiedDate":"2023-04-08"},{"lineNumber":430,"author":{"gitId":"11-Navya"},"content":"                Ui.printAppointmentUnMarkMessage();","lastModifiedDate":"2023-03-28"},{"lineNumber":431,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":432,"author":{"gitId":"11-Navya"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":433,"author":{"gitId":"11-Navya"},"content":"            throw new SniffException(\" The unMark command entry is invalid!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":434,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":436,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":437,"author":{"gitId":"11-Navya"},"content":"    public void editConsultation(String uid,Animal animal, Owner owner,","lastModifiedDate":"2023-04-09"},{"lineNumber":438,"author":{"gitId":"11-Navya"},"content":"                                LocalDate date, LocalTime time) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":439,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":440,"author":{"gitId":"11-Navya"},"content":"            if (!UIDS.contains(uid)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":441,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The appointment ID does not exist\");","lastModifiedDate":"2023-04-09"},{"lineNumber":442,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":443,"author":{"gitId":"11-Navya"},"content":"            //checkConsultationDuplicate(animal, owner, date, time);","lastModifiedDate":"2023-04-09"},{"lineNumber":444,"author":{"gitId":"11-Navya"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":445,"author":{"gitId":"11-Navya"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-09"},{"lineNumber":446,"author":{"gitId":"11-Navya"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":447,"author":{"gitId":"11-Navya"},"content":"                    index \u003d i;","lastModifiedDate":"2023-04-09"},{"lineNumber":448,"author":{"gitId":"11-Navya"},"content":"                    break;","lastModifiedDate":"2023-04-09"},{"lineNumber":449,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-04-09"},{"lineNumber":450,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":451,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.remove(index);","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"11-Navya"},"content":"            checkConsultationDuplicate(animal, owner, date, time);","lastModifiedDate":"2023-04-09"},{"lineNumber":453,"author":{"gitId":"11-Navya"},"content":"            Appointment changeAppointment \u003d new Consultation(uid, animal, owner, date, time);","lastModifiedDate":"2023-04-09"},{"lineNumber":454,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.uid, uid) : \"consultation uid should be \" + uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":455,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-09"},{"lineNumber":456,"author":{"gitId":"11-Navya"},"content":"                    \"consultation animal type should be \" + animal.type;","lastModifiedDate":"2023-04-09"},{"lineNumber":457,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-09"},{"lineNumber":458,"author":{"gitId":"11-Navya"},"content":"                    \"consultation animal name should be \" + animal.name;","lastModifiedDate":"2023-04-09"},{"lineNumber":459,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.add(changeAppointment);","lastModifiedDate":"2023-04-09"},{"lineNumber":460,"author":{"gitId":"11-Navya"},"content":"            Ui.showUserMessage(\" Consultation changed successfully!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":461,"author":{"gitId":"11-Navya"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":462,"author":{"gitId":"11-Navya"},"content":"            throw new SniffException(\" Invalid consultation description!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":463,"author":{"gitId":"11-Navya"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":464,"author":{"gitId":"11-Navya"},"content":"            System.out.println(\" Appointment failed to be changed.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":465,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":466,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":467,"author":{"gitId":"11-Navya"},"content":"    ","lastModifiedDate":"2023-04-09"},{"lineNumber":468,"author":{"gitId":"11-Navya"},"content":"    public void editSurgery(String uid, Animal animal, Owner owner,","lastModifiedDate":"2023-04-09"},{"lineNumber":469,"author":{"gitId":"11-Navya"},"content":"                            String priority, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-04-09"},{"lineNumber":470,"author":{"gitId":"11-Navya"},"content":"                            LocalDate endDate, LocalTime endTime) throws SniffException{","lastModifiedDate":"2023-04-09"},{"lineNumber":471,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":472,"author":{"gitId":"11-Navya"},"content":"            if (!UIDS.contains(uid) || uid.equals(\" \")) {","lastModifiedDate":"2023-04-09"},{"lineNumber":473,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The appointment ID does not exist\");","lastModifiedDate":"2023-04-09"},{"lineNumber":474,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":475,"author":{"gitId":"11-Navya"},"content":"            //checkSurgeryDuplicate(animal, owner, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":476,"author":{"gitId":"11-Navya"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":477,"author":{"gitId":"11-Navya"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-09"},{"lineNumber":478,"author":{"gitId":"11-Navya"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":479,"author":{"gitId":"11-Navya"},"content":"                    index \u003d i;","lastModifiedDate":"2023-04-09"},{"lineNumber":480,"author":{"gitId":"11-Navya"},"content":"                    break;","lastModifiedDate":"2023-04-09"},{"lineNumber":481,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-04-09"},{"lineNumber":482,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":483,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.remove(index);","lastModifiedDate":"2023-04-09"},{"lineNumber":484,"author":{"gitId":"11-Navya"},"content":"            checkSurgeryDuplicate(animal, owner, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":485,"author":{"gitId":"11-Navya"},"content":"            Appointment changeAppointment \u003d new Surgery(uid, animal, owner, priority, startDate, startTime, endDate,","lastModifiedDate":"2023-04-09"},{"lineNumber":486,"author":{"gitId":"11-Navya"},"content":"                    endTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":487,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.uid, uid) : \"surgery uid should be \" + uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":488,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-09"},{"lineNumber":489,"author":{"gitId":"11-Navya"},"content":"                    \"surgery animal type should be \" + animal.type;","lastModifiedDate":"2023-04-09"},{"lineNumber":490,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-09"},{"lineNumber":491,"author":{"gitId":"11-Navya"},"content":"                    \"surgery animal name should be \" + animal.name;","lastModifiedDate":"2023-04-09"},{"lineNumber":492,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.add(changeAppointment);","lastModifiedDate":"2023-04-09"},{"lineNumber":493,"author":{"gitId":"11-Navya"},"content":"            Ui.showUserMessage(\" Surgery changed successfully!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":494,"author":{"gitId":"11-Navya"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":495,"author":{"gitId":"11-Navya"},"content":"            throw new SniffException(\" Invalid surgery description!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":496,"author":{"gitId":"11-Navya"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":497,"author":{"gitId":"11-Navya"},"content":"            System.out.println(\" Appointment failed to be changed.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":498,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":499,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":500,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":501,"author":{"gitId":"11-Navya"},"content":"    public void editVaccination(String uid,Animal animal, Owner owner,","lastModifiedDate":"2023-04-09"},{"lineNumber":502,"author":{"gitId":"11-Navya"},"content":"                               LocalDate date, LocalTime time, String vaccine) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":503,"author":{"gitId":"11-Navya"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":504,"author":{"gitId":"11-Navya"},"content":"            if (!UIDS.contains(uid)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":505,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The appointment ID does not exist\");","lastModifiedDate":"2023-04-09"},{"lineNumber":506,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":507,"author":{"gitId":"11-Navya"},"content":"            //checkVaccinationDuplicate(animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-09"},{"lineNumber":508,"author":{"gitId":"11-Navya"},"content":"            int index \u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":509,"author":{"gitId":"11-Navya"},"content":"            for (int i \u003d 0; i \u003c APPOINTMENTS.size(); i++) {","lastModifiedDate":"2023-04-09"},{"lineNumber":510,"author":{"gitId":"11-Navya"},"content":"                if (uid.equals(APPOINTMENTS.get(i).uid)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":511,"author":{"gitId":"11-Navya"},"content":"                    index \u003d i;","lastModifiedDate":"2023-04-09"},{"lineNumber":512,"author":{"gitId":"11-Navya"},"content":"                    break;","lastModifiedDate":"2023-04-09"},{"lineNumber":513,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-04-09"},{"lineNumber":514,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":515,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.remove(index);","lastModifiedDate":"2023-04-09"},{"lineNumber":516,"author":{"gitId":"11-Navya"},"content":"            checkVaccinationDuplicate(animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-09"},{"lineNumber":517,"author":{"gitId":"11-Navya"},"content":"            Appointment changeAppointment \u003d new Vaccination(uid, animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-09"},{"lineNumber":518,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.uid, uid) : \"vaccination uid should be \" + uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":519,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.type, animal.type) :","lastModifiedDate":"2023-04-09"},{"lineNumber":520,"author":{"gitId":"11-Navya"},"content":"                    \"vaccination animal type should be \" + animal.type;","lastModifiedDate":"2023-04-09"},{"lineNumber":521,"author":{"gitId":"11-Navya"},"content":"            assert Objects.equals(changeAppointment.animal.name, animal.name) :","lastModifiedDate":"2023-04-09"},{"lineNumber":522,"author":{"gitId":"11-Navya"},"content":"                    \"vaccination animal name should be \" + animal.name;","lastModifiedDate":"2023-04-09"},{"lineNumber":523,"author":{"gitId":"11-Navya"},"content":"            APPOINTMENTS.add(changeAppointment);","lastModifiedDate":"2023-04-09"},{"lineNumber":524,"author":{"gitId":"11-Navya"},"content":"            Ui.showUserMessage(\" Vaccination changed successfully!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":525,"author":{"gitId":"11-Navya"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":526,"author":{"gitId":"11-Navya"},"content":"            throw new SniffException(\" Invalid vaccination description!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":527,"author":{"gitId":"11-Navya"},"content":"        } catch (DuplicateAppointmentException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":528,"author":{"gitId":"11-Navya"},"content":"            System.out.println(\" Appointment failed to be added.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":529,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":530,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":531,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"cleoncheng2000":18,"dendendenden04":135,"NivethaUdayakumar":105,"Vignesh-30":96,"11-Navya":177}},{"path":"src/main/java/functionalities/Uid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"package functionalities;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"public class Uid {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"    private static final int DIGIT_LENGTH \u003d 8;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"    private static final int ZERO_CHAR_IN_INT \u003d 48;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"    private static final int NINE_CHAR_IN_INT \u003d 57;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"dendendenden04"},"content":"    private static final int A_CHAR_IN_INT \u003d 65;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"dendendenden04"},"content":"    private static final int Z_CHAR_IN_INT \u003d 90;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"     * Generates a 10-character long unique appointment ID with the leading character denoting the","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"     * appointment type. Appointment ID generated is of the format [A]XXXXXXXX[L], where","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"dendendenden04"},"content":"     * [A] represents the corresponding appointment type,","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"     * [L] denotes a random letter from A-Z,","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"     * and XXXXXXXX denotes a random 8-digit number generated.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"     * @param appointmentType The type of appointment","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"     * @return a string representing a unique appointment ID","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"dendendenden04"},"content":"    public static String uidGenerator(String appointmentType) throws SniffException {","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"dendendenden04"},"content":"        if (!appointmentType.equals(\"C\") \u0026\u0026 !appointmentType.equals(\"V\") \u0026\u0026 !appointmentType.equals(\"S\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"            throw new SniffException(\"Invalid appointment type for uid generation.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"        StringBuilder uidBuilder \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"dendendenden04"},"content":"        StringBuilder eightDigitNumber \u003d new StringBuilder(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dendendenden04"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"dendendenden04"},"content":"        uidBuilder.append(appointmentType);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"        for (int i \u003d 0; i \u003c DIGIT_LENGTH; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"dendendenden04"},"content":"            char digit \u003d (char) (random.nextInt(NINE_CHAR_IN_INT - ZERO_CHAR_IN_INT) + ZERO_CHAR_IN_INT);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"dendendenden04"},"content":"            eightDigitNumber.append(digit);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"dendendenden04"},"content":"        uidBuilder.append(eightDigitNumber.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dendendenden04"},"content":"        char letter \u003d (char) (random.nextInt(Z_CHAR_IN_INT - A_CHAR_IN_INT) + A_CHAR_IN_INT);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"dendendenden04"},"content":"        uidBuilder.append(letter);","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"dendendenden04"},"content":"        String uidString \u003d uidBuilder.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"dendendenden04"},"content":"        return uidString;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"dendendenden04"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"dendendenden04":43}},{"path":"src/main/java/functionalities/appointments/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.appointments;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":" * The Appointment class represents an appointment for an animal with its owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":" * This class is abstract and provides methods for retrieving and setting appointment information.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"public abstract class Appointment {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String uid;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Animal animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"    public boolean isDone;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    protected Owner owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"     * Constructs an appointment with the specified unique identifier, animal, and owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"     * @param uid    The unique identifier for the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"     * @param animal The animal associated with the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"     * @param owner  The owner of the animal associated with the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"    public Appointment(String uid, Animal animal, Owner owner) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"        this.animal \u003d animal;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dendendenden04"},"content":"    public Owner getOwner() {","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"dendendenden04"},"content":"        return owner;","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"cleoncheng2000"},"content":"    public abstract String toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"    public abstract boolean isDate(String date) throws SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"    public abstract String getDescription();","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"11-Navya"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"11-Navya"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Vignesh-30"},"content":"    public abstract String retrieveStorageInfo();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"cleoncheng2000"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"11-Navya"},"content":"     * Depending on the status input by the user the task gets marked or unmarked","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"11-Navya"},"content":"     * @param status is a boolean value true or false that sets the mark and unmark status of the task","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"11-Navya"},"content":"    public void setIsDone(boolean status) {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"11-Navya"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dendendenden04"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cleoncheng2000":18,"dendendenden04":11,"NivethaUdayakumar":6,"Vignesh-30":8,"11-Navya":11}},{"path":"src/main/java/functionalities/appointments/Consultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.appointments;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":" * The Consultation class represents a consultation type appointment for an animal with its owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":" * It also includes the date and time of the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":" * This class extends the abstract Appointment class.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Consultation extends Appointment {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Vignesh-30"},"content":"    protected String description \u003d \"consultation\";","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"    public Consultation(String uid, Animal animal, Owner owner, LocalDate date, LocalTime time) {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"        super(uid, animal, owner);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.animal \u003d animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"dendendenden04"},"content":"        return date;","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"dendendenden04"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"dendendenden04"},"content":"        return time;","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"11-Navya"},"content":"        return \" UID: \" + uid + \" [\" + getStatus() + \"]\" + \u0027\\n\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Date: \" + date + \" | Time: \" + time + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Animal Name: \" + animal.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Owner Name: \" + owner.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"Vignesh-30"},"content":"    public boolean isDate(String dateDetails) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Vignesh-30"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"Vignesh-30"},"content":"            LocalDate userDate \u003d LocalDate.parse(dateDetails, dateFormatter);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"Vignesh-30"},"content":"            return userDate.equals(date);","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Invalid Date format for find command!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"Vignesh-30"},"content":"    public String retrieveStorageInfo() {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Vignesh-30"},"content":"        return uid + \" | \" + date + \" | \" + time + \" | \" + animal.getAnimalName() + \" | \" + animal.getAnimalType()","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Vignesh-30"},"content":"                + \" | \" + owner.getName() + \" | \" + owner.getContactNumber();","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Vignesh-30"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Vignesh-30"},"content":"        return description;","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":10,"dendendenden04":8,"NivethaUdayakumar":22,"Vignesh-30":26,"11-Navya":3}},{"path":"src/main/java/functionalities/appointments/Surgery.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.appointments;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":" * The Surgery class represents a surgery type appointment for an animal with its owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":" * It also includes the start and end dates and start and end time of the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":" * It also includes the priority level of the surgery.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":" * This class extends the abstract Appointment class.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"public class Surgery extends Appointment {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"    public enum PriorityLevel {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"        HIGH, MEDIUM, LOW","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"    protected PriorityLevel priority;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalTime startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalTime endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"    protected char priorityType;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"    protected String description \u003d \"surgery\";","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"    public Surgery(String uid, Animal animal, Owner owner,","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"                   String priority, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"                   LocalDate endDate, LocalTime endTime) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"11-Navya"},"content":"        super(uid, animal, owner);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.animal \u003d animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"        this.priorityType \u003d priority.charAt(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"        this.priority \u003d setPriority(priority);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"cleoncheng2000"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"cleoncheng2000"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cleoncheng2000"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"dendendenden04"},"content":"    public PriorityLevel setPriority(String priority) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"cleoncheng2000"},"content":"        if (priority.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Priority cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"cleoncheng2000"},"content":"        switch (priority) {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"cleoncheng2000"},"content":"        case \"H\":","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"dendendenden04"},"content":"            return PriorityLevel.HIGH;","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"cleoncheng2000"},"content":"        case \"M\":","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"dendendenden04"},"content":"            return PriorityLevel.MEDIUM;","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"cleoncheng2000"},"content":"        case \"L\":","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"dendendenden04"},"content":"            return PriorityLevel.LOW;","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"cleoncheng2000"},"content":"        default:","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Priority has to be H, M, L.\");","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"dendendenden04"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"dendendenden04"},"content":"        return startDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"dendendenden04"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"dendendenden04"},"content":"        return startTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"dendendenden04"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"dendendenden04"},"content":"        return endDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"dendendenden04"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"dendendenden04"},"content":"        return endTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"cleoncheng2000"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"11-Navya"},"content":"        return \" UID: \" + uid + \" [\" + getStatus() + \"]\" + \" | Priority: \" + priority + \u0027\\n\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Animal Name: \" + animal.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Owner Name: \" + owner.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Start Date: \" + startDate + \" | Start Time: \" + startTime + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" End Date: \" + endDate + \" | End Time: \" + endTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"Vignesh-30"},"content":"    public boolean isDate(String dateDetails) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"Vignesh-30"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"Vignesh-30"},"content":"            LocalDate userDate \u003d LocalDate.parse(dateDetails, dateFormatter);","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"Vignesh-30"},"content":"            return (userDate.equals(startDate) || userDate.equals(endDate) ||","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"Vignesh-30"},"content":"                    (userDate.isAfter(startDate) \u0026\u0026 userDate.isBefore(endDate)));","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Invalid Date format for find command!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Vignesh-30"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Vignesh-30"},"content":"        return description;","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Vignesh-30"},"content":"    public String retrieveStorageInfo() {","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Vignesh-30"},"content":"        return uid + \" | \" + priorityType + \" | \" + animal.getAnimalName() + \" | \" + animal.getAnimalType() + \" | \"","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Vignesh-30"},"content":"                + owner.getName() + \" | \" + owner.getContactNumber() + \" | \" + startDate + \" | \" + startTime + \" | \"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Vignesh-30"},"content":"                + endDate + \" | \" + endTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cleoncheng2000":44,"dendendenden04":22,"NivethaUdayakumar":13,"Vignesh-30":30,"11-Navya":2}},{"path":"src/main/java/functionalities/appointments/Vaccination.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.appointments;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":" * The Vaccination class represents a vaccination type appointment for an animal with its owner","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":" * and its specific vaccine type. It also includes the date and time of the appointment.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":" * This class extends the abstract Appointment class.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Vaccination extends Appointment {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"    protected LocalTime time;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected String vaccine;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"    protected String description \u003d \"vaccination\";","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"    public Vaccination(String uid, Animal animal, Owner owner, LocalDate date, LocalTime time,","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"                       String vaccine) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"        super(uid, animal, owner);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.animal \u003d animal;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"        this.vaccine \u003d setVaccine(vaccine);","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"11-Navya"},"content":"        return \" UID: \" + uid + \" [\" + getStatus() + \"]\" + \" | vaccine: \" + vaccine + \u0027\\n\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Date: \" + date + \" | Time: \" + time + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Animal Name: \" + animal.toString() + \u0027\\n\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"                + \" Owner Name: \" + owner.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"Vignesh-30"},"content":"    public boolean isDate(String dateDetails) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"Vignesh-30"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"Vignesh-30"},"content":"            LocalDate userDate \u003d LocalDate.parse(dateDetails, dateFormatter);","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"Vignesh-30"},"content":"            return userDate.equals(date);","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Invalid Date format for find command!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"dendendenden04"},"content":"    public String getVaccine() {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"dendendenden04"},"content":"        return vaccine;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"Vignesh-30"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Vignesh-30"},"content":"        return description;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"dendendenden04"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"dendendenden04"},"content":"        return date;","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"dendendenden04"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"dendendenden04"},"content":"        return time;","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Vignesh-30"},"content":"    public String retrieveStorageInfo() {","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Vignesh-30"},"content":"        return uid + \" | \" + vaccine + \" | \" + date + \" | \" + time + \" | \" + animal.getAnimalName() + \" | \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Vignesh-30"},"content":"                animal.getAnimalType() + \" | \" + owner.getName() + \" | \" + owner.getContactNumber();","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"cleoncheng2000"},"content":"    public String setVaccine(String vaccine) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"cleoncheng2000"},"content":"        if (vaccine.isBlank()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" Vaccine cannot be empty!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"cleoncheng2000"},"content":"        return vaccine;","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":21,"dendendenden04":12,"NivethaUdayakumar":22,"Vignesh-30":25,"11-Navya":2}},{"path":"src/main/java/functionalities/commands/ArchiveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":" * Command to execute Archive functionality","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":" * */","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"public class ArchiveCommand extends Command{","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"    public ArchiveCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Executes Archive Command method located in SniffTasks class","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void executeCommand(SniffTasks tasks) {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.listArchivedAppointments();","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"NivethaUdayakumar":22}},{"path":"src/main/java/functionalities/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"    public boolean isExit;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    protected Command() {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"        return isExit;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Vignesh-30"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cleoncheng2000":7,"Vignesh-30":5,"NivethaUdayakumar":7}},{"path":"src/main/java/functionalities/commands/ConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"public class ConsultationCommand extends Command {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    private final Animal animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    private final Owner owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"    public ConsultationCommand(String animalType, String animalName,","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"                              String ownerName, String contactNumber, LocalDate date,","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"                              LocalTime time) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"        tasks.addConsultation(animal, owner, date, time);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":29,"dendendenden04":1,"NivethaUdayakumar":1}},{"path":"src/main/java/functionalities/commands/EditConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":" * Command to execute EditConsultation functionality","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"public class EditConsultationCommand extends Command {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"    public String uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"    private final Animal animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"    private final Owner owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"    public EditConsultationCommand(String uid,String animalType, String animalName,","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"                                   String ownerName, String contactNumber, LocalDate date,","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"                                   LocalTime time) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"11-Navya"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"11-Navya"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"11-Navya"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"11-Navya"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"11-Navya"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"11-Navya"},"content":"     * Executes EditConsultation Command method located in SniffTasks class","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"11-Navya"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the input does not follow the format","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"11-Navya"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"11-Navya"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"11-Navya"},"content":"        //tasks.removeAppointment(uid);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"11-Navya"},"content":"        tasks.editConsultation(uid,animal, owner, date, time);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"11-Navya":43}},{"path":"src/main/java/functionalities/commands/EditSurgeryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":" * Command to execute EditSurgery functionality","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"public class EditSurgeryCommand extends Command{","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"    public String uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"    private final Animal animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"    private final Owner owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"    private final String priority;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"    public EditSurgeryCommand(String uid,String animalType, String animalName, String ownerName,","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"                          String contactNumber, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"11-Navya"},"content":"                          LocalDate endDate, LocalTime endTime, String priority) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"11-Navya"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"11-Navya"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"11-Navya"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"11-Navya"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"11-Navya"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"11-Navya"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"11-Navya"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"11-Navya"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"11-Navya"},"content":"     * Executes EditSurgery Command method located in SniffTasks class","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"11-Navya"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the input does not follow the format","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"11-Navya"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"11-Navya"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"11-Navya"},"content":"        tasks.editSurgery(uid,animal, owner, priority, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"11-Navya":45}},{"path":"src/main/java/functionalities/commands/EditVaccinationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":" * Command to execute EditVaccination functionality","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"public class EditVaccinationCommand extends Command{","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"    public String uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"    private final Animal animal;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"    private final Owner owner;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"    private final String vaccine;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"    public EditVaccinationCommand(String uid,String animalType, String animalName, String ownerName,","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"                              String contactNumber, String vaccine, LocalDate date,","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"                              LocalTime time) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"11-Navya"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"11-Navya"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"11-Navya"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"11-Navya"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"11-Navya"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"11-Navya"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"11-Navya"},"content":"     * Executes EditVaccination Command method located in SniffTasks class","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"11-Navya"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the input does not follow the format","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"11-Navya"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"11-Navya"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"11-Navya"},"content":"        tasks.editVaccination(uid, animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"11-Navya":42}},{"path":"src/main/java/functionalities/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"        Ui.showUserMessage(\" Bye, hope to see you again soon!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":15,"NivethaUdayakumar":2}},{"path":"src/main/java/functionalities/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vignesh-30"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"Vignesh-30"},"content":" * Command to execute find feature","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":" * Supports 4 types of find operations","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":" * Find by appointment uID, animal type, type of appointment and date of appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Vignesh-30"},"content":"    protected String category;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Vignesh-30"},"content":"    protected String details;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":"    public FindCommand(String category, String details) {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"Vignesh-30"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"Vignesh-30"},"content":"     * Checks type of find command entered and executes the respective find command located in SniffTasks class","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"     * @param tasks The SniffTasks class","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException Throws exception if invalid find command type is entered","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"        if (category.equals(\"appointment\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"            tasks.findAppointment(details);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"        } else if (category.equals(\"animal\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"            tasks.findAnimal(details);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"Vignesh-30"},"content":"        } else if (category.equals(\"type\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"Vignesh-30"},"content":"            tasks.findType(details);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"Vignesh-30"},"content":"        } else if (category.equals(\"date\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"            tasks.findDate(details);","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\"Unsupported find command!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Vignesh-30"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Vignesh-30":42}},{"path":"src/main/java/functionalities/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"        Ui.showHelpMessage();","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"cleoncheng2000":15}},{"path":"src/main/java/functionalities/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"    public ListCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"        tasks.listAppointments();","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":13,"Vignesh-30":1}},{"path":"src/main/java/functionalities/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":" * Command to execute Mark functionality","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"    public String uid;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"    public MarkCommand (String uid){","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"     * Executes Mark Command method located in SniffTasks class","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the input does not follow the format","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"        tasks.markAppointment(uid);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"11-Navya":24}},{"path":"src/main/java/functionalities/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    public String uid;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"    public RemoveCommand(String uid) {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"        tasks.removeAppointment(uid);","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"        Ui.showUserMessage(\" Task removed successfully!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":16,"dendendenden04":1,"NivethaUdayakumar":3}},{"path":"src/main/java/functionalities/commands/SurgeryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"public class SurgeryCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    private final Animal animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    private final Owner owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"    private final String priority;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalDate startDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    public SurgeryCommand(String animalType, String animalName, String ownerName,","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"                          String contactNumber, LocalDate startDate, LocalTime startTime,","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"                          LocalDate endDate, LocalTime endTime, String priority) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"cleoncheng2000"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"cleoncheng2000"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"dendendenden04"},"content":"        tasks.addSurgery(animal, owner, priority, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":34,"dendendenden04":1,"NivethaUdayakumar":2}},{"path":"src/main/java/functionalities/commands/UnMarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"11-Navya"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"11-Navya"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"11-Navya"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"11-Navya"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"11-Navya"},"content":" * Command to execute UnMark functionality","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"11-Navya"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"11-Navya"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"11-Navya"},"content":"    public String uid;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"11-Navya"},"content":"    public UnMarkCommand (String uid){","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"11-Navya"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"     * Executes UnMark Command method located in SniffTasks class","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"     * @param tasks The SniffTasks Class","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"11-Navya"},"content":"     * @throws SniffException thrown when the input does not follow the format","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"11-Navya"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"11-Navya"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"11-Navya"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"11-Navya"},"content":"        tasks.unMarkAppointment(uid);","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"11-Navya"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"11-Navya":26}},{"path":"src/main/java/functionalities/commands/VaccinationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"public class VaccinationCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"    private final Animal animal;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    private final Owner owner;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    private final String vaccine;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    private final LocalTime time;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"    public VaccinationCommand(String animalType, String animalName, String ownerName,","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"                              String contactNumber, String vaccine, LocalDate date,","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"                              LocalTime time) throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        this.animal \u003d new Animal(animalType, animalName);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"        this.owner \u003d new Owner(ownerName, contactNumber);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"        this.vaccine \u003d vaccine;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"cleoncheng2000"},"content":"    public void executeCommand(SniffTasks tasks) throws SniffException {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks.addVaccination(animal, owner, date, time, vaccine);","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cleoncheng2000":30,"NivethaUdayakumar":2}},{"path":"src/main/java/functionalities/parser/ArchiveParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.parser;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Consultation;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Surgery;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Vaccination;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"/**","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":" * Parser Class for Archive Functionality","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":" * */","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"public class ArchiveParser {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    static String uID;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"    static String vaccine;","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"NivethaUdayakumar"},"content":"    static String priority;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"    static Animal animal;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"    static Owner owner;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalDate date;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalTime time;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalDate startDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalDate endDate;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalTime startTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"    static LocalTime endTime;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Parser to add Consultation","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param content the consultation type task to add to the Appointment task list","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException when incorrect date and time format is stored","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void addConsult(String content) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"            String[] Consult \u003d content.split(\" \\\\| \");","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"            uID \u003d Consult[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"            date \u003d LocalDate.parse(Consult[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"            time \u003d LocalTime.parse(Consult[2]);","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"            animal \u003d new Animal(Consult[4], Consult[3]);","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"            owner \u003d new Owner(Consult[5], Consult[6]);","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Incorrect Date and Time Format!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointmentUID(uID);","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"        Appointment consultation \u003d new Consultation(uID, animal, owner, date, time);","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"        consultation.setIsDone(true);","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointment(consultation);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Parser to add Vaccination","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param content the vaccination type task to add to the Appointment task list","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException when incorrect date and time format is stored","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void addVaccine(String content) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"            String[] Vaccine \u003d content.split(\" \\\\| \");","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"            uID \u003d Vaccine[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"            date \u003d LocalDate.parse(Vaccine[2]);","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"            time \u003d LocalTime.parse(Vaccine[3]);","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"            animal \u003d new Animal(Vaccine[5], Vaccine[4]);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"            owner \u003d new Owner(Vaccine[6], Vaccine[7]);","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"            vaccine \u003d Vaccine[1];","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Incorrect Date and Time Format!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointmentUID(uID);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"        Appointment vaccination \u003d new Vaccination(uID, animal, owner, date, time, vaccine);","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"        vaccination.setIsDone(true);","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointment(vaccination);","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Parser to add Surgery","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @param content the surgery type task to add to the Appointment task list","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"     * @throws SniffException when incorrect date and time format is stored","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"     * */","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void addSurgery(String content) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"            String[] Surgery \u003d content.split(\" \\\\| \");","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"            uID \u003d Surgery[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"NivethaUdayakumar"},"content":"            startDate \u003d LocalDate.parse(Surgery[6]);","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"NivethaUdayakumar"},"content":"            endDate \u003d LocalDate.parse(Surgery[8]);","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"NivethaUdayakumar"},"content":"            startTime \u003d LocalTime.parse(Surgery[7]);","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"NivethaUdayakumar"},"content":"            endTime \u003d LocalTime.parse(Surgery[9]);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"            animal \u003d new Animal(Surgery[3], Surgery[2]);","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"NivethaUdayakumar"},"content":"            owner \u003d new Owner(Surgery[4], Surgery[5]);","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"NivethaUdayakumar"},"content":"            priority \u003d Surgery[1];","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" Incorrect Date and Time Format!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointmentUID(uID);","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"NivethaUdayakumar"},"content":"        Appointment surgery \u003d new Surgery(uID, animal, owner, priority, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"NivethaUdayakumar"},"content":"        surgery.setIsDone(true);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffTasks.addAppointment(surgery);","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"NivethaUdayakumar":105}},{"path":"src/main/java/functionalities/parser/FileParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Vignesh-30"},"content":"package functionalities.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.Animal;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.Owner;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.appointments.Consultation;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.appointments.Surgery;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.appointments.Vaccination;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Vignesh-30"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Vignesh-30"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"Vignesh-30"},"content":" * FileParser class to parse appointments from saved file","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"Vignesh-30"},"content":"public class FileParser {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"    static String uid;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Vignesh-30"},"content":"    static Animal animal;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"    static Owner owner;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"    static LocalDate date;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"    static LocalTime time;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"    static LocalDate startDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"    static LocalDate endDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"    static LocalTime endTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"    static LocalTime startTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"    static String priority;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"    static String vaccine;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"Vignesh-30"},"content":"     * Parser to add Consultation","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"     * @param currentLine the current line containing details of a Consultation appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if date and time is stored in incorrect format","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"    public static void addConsultation(String currentLine) throws SniffException {","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Vignesh-30"},"content":"            String[] split \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Vignesh-30"},"content":"            uid \u003d split[0];","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Vignesh-30"},"content":"            animal \u003d new Animal(split[4], split[3]);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Vignesh-30"},"content":"            owner \u003d new Owner(split[5], split[6]);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Vignesh-30"},"content":"            date \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Vignesh-30"},"content":"            time \u003d LocalTime.parse(split[2]);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Date / Time saved in incorrect format!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointmentUID(uid);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Vignesh-30"},"content":"        Appointment newAppointment \u003d new Consultation(uid, animal, owner, date, time);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"        newAppointment.setIsDone(false);","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointment(newAppointment);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"Vignesh-30"},"content":"     * Parser to add Surgery","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"Vignesh-30"},"content":"     * @param currentLine the current line containing details of a Surgery appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if date and time is stored in incorrect format","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"Vignesh-30"},"content":"    public static void addSurgery(String currentLine) throws SniffException {","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Vignesh-30"},"content":"            String[] split \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Vignesh-30"},"content":"            uid \u003d split[0];","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Vignesh-30"},"content":"            priority \u003d split[1];","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Vignesh-30"},"content":"            animal \u003d new Animal(split[3], split[2]);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Vignesh-30"},"content":"            owner \u003d new Owner(split[4], split[5]);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Vignesh-30"},"content":"            startDate \u003d LocalDate.parse(split[6]);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Vignesh-30"},"content":"            endDate \u003d LocalDate.parse(split[8]);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Vignesh-30"},"content":"            startTime \u003d LocalTime.parse(split[7]);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Vignesh-30"},"content":"            endTime \u003d LocalTime.parse(split[9]);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Date / Time saved in incorrect format!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointmentUID(uid);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Vignesh-30"},"content":"        Appointment newAppointment \u003d new Surgery(uid, animal, owner, priority, startDate, startTime, endDate, endTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"        newAppointment.setIsDone(false);","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointment(newAppointment);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"Vignesh-30"},"content":"     * Parser to add Vaccination","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"Vignesh-30"},"content":"     * @param currentLine the current line containing details of a Vaccination appointment","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if date and time is stored in incorrect format","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"Vignesh-30"},"content":"    public static void addVaccination(String currentLine) throws SniffException {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"Vignesh-30"},"content":"            String[] split \u003d currentLine.split(\" \\\\| \");","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Vignesh-30"},"content":"            uid \u003d split[0];","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"Vignesh-30"},"content":"            animal \u003d new Animal(split[5], split[4]);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Vignesh-30"},"content":"            owner \u003d new Owner(split[6], split[7]);","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"Vignesh-30"},"content":"            date \u003d LocalDate.parse(split[2]);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Vignesh-30"},"content":"            time \u003d LocalTime.parse(split[3]);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Vignesh-30"},"content":"            vaccine \u003d split[1];","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Vignesh-30"},"content":"        } catch (DateTimeParseException d) {","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Date / Time saved in incorrect format!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointmentUID(uid);","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Vignesh-30"},"content":"        Appointment newAppointment \u003d new Vaccination(uid, animal, owner, date, time, vaccine);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"NivethaUdayakumar"},"content":"        newAppointment.setIsDone(false);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"Vignesh-30"},"content":"        SniffTasks.addAppointment(newAppointment);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Vignesh-30"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Vignesh-30":102,"NivethaUdayakumar":3}},{"path":"src/main/java/functionalities/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ArchiveCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.Command;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ConsultationCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ExitCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.FindCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.HelpCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ListCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.MarkCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.RemoveCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.SurgeryCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.UnMarkCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.VaccinationCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"11-Navya"},"content":"import functionalities.commands.EditConsultationCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"11-Navya"},"content":"import functionalities.commands.EditSurgeryCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"11-Navya"},"content":"import functionalities.commands.EditVaccinationCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Parser {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"    protected static Command command;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"    static Logger logger \u003d Logger.getLogger(\"parser\");","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static Command parse(String userCommand) throws SniffException {","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"cleoncheng2000"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"cleoncheng2000"},"content":"            String[] task \u003d userCommand.trim().split(\" \", 2);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"cleoncheng2000"},"content":"            if (task[0].equals(\"consultation\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"cleoncheng2000"},"content":"                parseConsultationCommand(task[1]);","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"vaccination\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"cleoncheng2000"},"content":"                parseVaccinationCommand(task[1]);","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"surgery\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"cleoncheng2000"},"content":"                parseSurgeryCommand(task[1]);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"find\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"cleoncheng2000"},"content":"                parseFindCommand(userCommand.trim());","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"remove\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"cleoncheng2000"},"content":"                parseRemoveCommand(userCommand.trim());","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"mark\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"cleoncheng2000"},"content":"                parseMarkCommand(userCommand.trim());","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (task[0].equals(\"unmark\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"cleoncheng2000"},"content":"                parseUnmarkCommand(userCommand.trim());","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"11-Navya"},"content":"            } else if (task[0].equals(\"edit\")) {","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"11-Navya"},"content":"                parseEditCommand(task[1]);","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"dendendenden04"},"content":"                parseListCommand(userCommand.trim());","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (userCommand.equals(\"help\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"cleoncheng2000"},"content":"                parseHelpCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (userCommand.equals(\"archive\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"                parseArchiveCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"                parseByeCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"                throw new SniffException(\" Not a recognized Sniff command!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" The Sniff command is incomplete!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"        return command;","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseConsultationCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"cleoncheng2000"},"content":"            String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"cleoncheng2000"},"content":"            String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"cleoncheng2000"},"content":"            String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"cleoncheng2000"},"content":"            String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"cleoncheng2000"},"content":"            String date \u003d splitInputBy(task, \"cd/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"cleoncheng2000"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"cleoncheng2000"},"content":"            String time \u003d splitInputBy(task, \"ct/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"cleoncheng2000"},"content":"            LocalTime parsedTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"cleoncheng2000"},"content":"            command \u003d new ConsultationCommand(animalType, animalName, ownerName, contactNumber, parsedDate, parsedTime);","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The consultation description is invalid!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"cleoncheng2000"},"content":"    private static String splitInputBy(String input, String splitter) throws SniffException {","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"cleoncheng2000"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"cleoncheng2000"},"content":"            String[] firstSplit \u003d input.split(splitter);","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"cleoncheng2000"},"content":"            String[] secondSplit \u003d firstSplit[1].split(\"(at/|an/|on/|cn/|cd/|ct/|vd/|vt/\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"cleoncheng2000"},"content":"                    \"|v/|sd/|st/|ed/|et/|p/)\", -1);","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"cleoncheng2000"},"content":"            return secondSplit[0].trim();","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\" The \" + splitter + \" description is invalid!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"cleoncheng2000"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseVaccinationCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"cleoncheng2000"},"content":"            String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"cleoncheng2000"},"content":"            String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"cleoncheng2000"},"content":"            String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"cleoncheng2000"},"content":"            String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"cleoncheng2000"},"content":"            String vaccine \u003d splitInputBy(task, \"v/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"cleoncheng2000"},"content":"            String date \u003d splitInputBy(task, \"vd/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"cleoncheng2000"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"cleoncheng2000"},"content":"            String time \u003d splitInputBy(task, \"vt/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"cleoncheng2000"},"content":"            LocalTime parsedTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new VaccinationCommand(animalType, animalName, ownerName, contactNumber,","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"cleoncheng2000"},"content":"                    vaccine, parsedDate, parsedTime);","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The vaccination description is invalid!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseSurgeryCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"cleoncheng2000"},"content":"            String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"cleoncheng2000"},"content":"            String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"cleoncheng2000"},"content":"            String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"cleoncheng2000"},"content":"            String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"cleoncheng2000"},"content":"            String priority \u003d splitInputBy(task, \"p/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"cleoncheng2000"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"cleoncheng2000"},"content":"            String startDate \u003d splitInputBy(task, \"sd/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"cleoncheng2000"},"content":"            LocalDate parsedStartDate \u003d LocalDate.parse(startDate, dateFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"cleoncheng2000"},"content":"            String startTime \u003d splitInputBy(task, \"st/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"cleoncheng2000"},"content":"            LocalTime parsedStartTime \u003d LocalTime.parse(startTime, timeFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"cleoncheng2000"},"content":"            String endDate \u003d splitInputBy(task, \"ed/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"cleoncheng2000"},"content":"            LocalDate parsedEndDate \u003d LocalDate.parse(endDate, dateFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"cleoncheng2000"},"content":"            String endTime \u003d splitInputBy(task, \"et/\");","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"cleoncheng2000"},"content":"            LocalTime parsedEndTime \u003d LocalTime.parse(endTime, timeFormatter);","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"cleoncheng2000"},"content":"            if (parsedStartDate.isAfter(parsedEndDate)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"cleoncheng2000"},"content":"                throw new SniffException(\" The start date must be before the end date!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (parsedStartDate.equals(parsedEndDate) \u0026\u0026 parsedStartTime.isAfter(parsedEndTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"cleoncheng2000"},"content":"                throw new SniffException(\" The start time must be before the end time!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"cleoncheng2000"},"content":"            } else if (parsedStartDate.equals(parsedEndDate) \u0026\u0026 parsedStartTime.equals(parsedEndTime)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"cleoncheng2000"},"content":"                throw new SniffException(\" The start time cannot be the same as the end time!\");","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"cleoncheng2000"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new SurgeryCommand(animalType, animalName, ownerName, contactNumber,","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"cleoncheng2000"},"content":"                    parsedStartDate, parsedStartTime, parsedEndDate, parsedEndTime, priority);","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"cleoncheng2000"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"cleoncheng2000"},"content":"            throw new SniffException(\"The vaccination description is invalid!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseFindCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"NivethaUdayakumar"},"content":"            // find a/dog or find t/surgery or find aID/123","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"NivethaUdayakumar"},"content":"            int animalIndex \u003d task.indexOf(\"a/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"NivethaUdayakumar"},"content":"            int typeIndex \u003d task.indexOf(\"t/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"NivethaUdayakumar"},"content":"            int aIDIndex \u003d task.indexOf(\"aID/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"Vignesh-30"},"content":"            int dateIndex \u003d task.indexOf(\"d/\");","lastModifiedDate":"2023-04-07"},{"lineNumber":160,"author":{"gitId":"NivethaUdayakumar"},"content":"            if (animalIndex !\u003d -1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"NivethaUdayakumar"},"content":"                String details \u003d task.substring(animalIndex + 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"NivethaUdayakumar"},"content":"                command \u003d new FindCommand(\"animal\", details);","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (typeIndex !\u003d -1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"NivethaUdayakumar"},"content":"                String details \u003d task.substring(typeIndex + 2);","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"NivethaUdayakumar"},"content":"                command \u003d new FindCommand(\"type\", details);","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else if (aIDIndex !\u003d -1) {","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"NivethaUdayakumar"},"content":"                String details \u003d task.substring(aIDIndex + 4);","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"NivethaUdayakumar"},"content":"                command \u003d new FindCommand(\"appointment\", details);","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"Vignesh-30"},"content":"            } else if (dateIndex !\u003d -1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"Vignesh-30"},"content":"                String details \u003d task.substring(dateIndex + 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"Vignesh-30"},"content":"                command \u003d new FindCommand(\"date\", details);","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"NivethaUdayakumar"},"content":"            } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"NivethaUdayakumar"},"content":"                logger.warning(\" NULL command returned to Sniff.run\");","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"NivethaUdayakumar"},"content":"                throw new SniffException(\" Invalid details provided for find command. Unable to execute find command.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (ArrayIndexOutOfBoundsException emptyFind) {","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"NivethaUdayakumar"},"content":"            logger.warning(\" Invalid details provided for find command. Unable to execute find command.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The find command description cannot be empty!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"NivethaUdayakumar"},"content":"            logger.warning(\" Invalid appointment ID format provided. Integer numbers are expected.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The user Id to view appointment details must be a number!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"dendendenden04"},"content":"    private static void parseListCommand(String task) throws SniffException {","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"dendendenden04"},"content":"        if (task.equals(\"list\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"dendendenden04"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"dendendenden04"},"content":"            throw new SniffException(\" Not a recognized Sniff command!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseRemoveCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"NivethaUdayakumar"},"content":"            String uid \u003d task.split(\" \", 2)[1];","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"NivethaUdayakumar"},"content":"            assert uid !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new RemoveCommand(uid);","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"NivethaUdayakumar"},"content":"            logger.warning(\"No appointment ID provided for remove command. Unable to execute view command.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The remove command description cannot be empty!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"NivethaUdayakumar"},"content":"            logger.warning(\"Invalid appointment ID format. Integer numbers are expected.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The remove command description must be a number!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"NivethaUdayakumar"},"content":"            logger.warning(\"Out of Range appointment ID provided for remove command.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The remove command index is invalid!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseMarkCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"NivethaUdayakumar"},"content":"            int markIndex \u003d task.indexOf(\"uID/\");","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"NivethaUdayakumar"},"content":"            String markTask \u003d task.substring(markIndex + 4);","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new MarkCommand(markTask);","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The mark description is invalid!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseUnmarkCommand(String task) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"NivethaUdayakumar"},"content":"            int unmarkIndex \u003d task.indexOf(\"uID/\");","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"NivethaUdayakumar"},"content":"            String unmarkTask \u003d task.substring(unmarkIndex + 4);","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"NivethaUdayakumar"},"content":"            command \u003d new UnMarkCommand(unmarkTask);","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"NivethaUdayakumar"},"content":"            throw new SniffException(\" The unmark description is invalid!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"11-Navya"},"content":"    private static void parseEditCommand(String task) throws SniffException{","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"11-Navya"},"content":"        int uidIndex \u003d task.indexOf(\"uID/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"11-Navya"},"content":"        String type \u003d task.substring(uidIndex + 4, uidIndex + 5);","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"11-Navya"},"content":"        String uid \u003d task.substring(uidIndex + 4, uidIndex + 14);","lastModifiedDate":"2023-04-09"},{"lineNumber":234,"author":{"gitId":"11-Navya"},"content":"        if (type.equals(\"C\")){","lastModifiedDate":"2023-04-09"},{"lineNumber":235,"author":{"gitId":"11-Navya"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":236,"author":{"gitId":"11-Navya"},"content":"                String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"11-Navya"},"content":"                String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":238,"author":{"gitId":"11-Navya"},"content":"                String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":239,"author":{"gitId":"11-Navya"},"content":"                String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":240,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-09"},{"lineNumber":241,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-09"},{"lineNumber":242,"author":{"gitId":"11-Navya"},"content":"                String date \u003d splitInputBy(task, \"cd/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":243,"author":{"gitId":"11-Navya"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":244,"author":{"gitId":"11-Navya"},"content":"                String time \u003d splitInputBy(task, \"ct/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":245,"author":{"gitId":"11-Navya"},"content":"                LocalTime parsedTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":246,"author":{"gitId":"11-Navya"},"content":"                command \u003d new EditConsultationCommand(uid, animalType, animalName, ownerName, contactNumber, parsedDate,","lastModifiedDate":"2023-04-09"},{"lineNumber":247,"author":{"gitId":"11-Navya"},"content":"                       parsedTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":248,"author":{"gitId":"11-Navya"},"content":"            }  catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":249,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":250,"author":{"gitId":"11-Navya"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":251,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The consultation description is invalid!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":252,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":253,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":254,"author":{"gitId":"11-Navya"},"content":"        else if (type.equals(\"S\")){","lastModifiedDate":"2023-04-09"},{"lineNumber":255,"author":{"gitId":"11-Navya"},"content":"            try{","lastModifiedDate":"2023-04-09"},{"lineNumber":256,"author":{"gitId":"11-Navya"},"content":"                String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":257,"author":{"gitId":"11-Navya"},"content":"                String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":258,"author":{"gitId":"11-Navya"},"content":"                String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":259,"author":{"gitId":"11-Navya"},"content":"                String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":260,"author":{"gitId":"11-Navya"},"content":"                String priority \u003d splitInputBy(task, \"p/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":261,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-09"},{"lineNumber":262,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-09"},{"lineNumber":263,"author":{"gitId":"11-Navya"},"content":"                String startDate \u003d splitInputBy(task, \"sd/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":264,"author":{"gitId":"11-Navya"},"content":"                LocalDate parsedStartDate \u003d LocalDate.parse(startDate, dateFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":265,"author":{"gitId":"11-Navya"},"content":"                String startTime \u003d splitInputBy(task, \"st/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"11-Navya"},"content":"                LocalTime parsedStartTime \u003d LocalTime.parse(startTime, timeFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":267,"author":{"gitId":"11-Navya"},"content":"                String endDate \u003d splitInputBy(task, \"ed/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"11-Navya"},"content":"                LocalDate parsedEndDate \u003d LocalDate.parse(endDate, dateFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"11-Navya"},"content":"                String endTime \u003d splitInputBy(task, \"et/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":270,"author":{"gitId":"11-Navya"},"content":"                LocalTime parsedEndTime \u003d LocalTime.parse(endTime, timeFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"11-Navya"},"content":"                if (parsedStartDate.isAfter(parsedEndDate)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":272,"author":{"gitId":"11-Navya"},"content":"                    throw new SniffException(\" The start date must be before the end date!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":273,"author":{"gitId":"11-Navya"},"content":"                } else if (parsedStartDate.equals(parsedEndDate) \u0026\u0026 parsedStartTime.isAfter(parsedEndTime)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":274,"author":{"gitId":"11-Navya"},"content":"                    throw new SniffException(\" The start time must be before the end time!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":275,"author":{"gitId":"11-Navya"},"content":"                } else if (parsedStartDate.equals(parsedEndDate) \u0026\u0026 parsedStartTime.equals(parsedEndTime)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":276,"author":{"gitId":"11-Navya"},"content":"                    throw new SniffException(\" The start time cannot be the same as the end time!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":277,"author":{"gitId":"11-Navya"},"content":"                }","lastModifiedDate":"2023-04-09"},{"lineNumber":278,"author":{"gitId":"11-Navya"},"content":"                command \u003d new EditSurgeryCommand(uid,animalType, animalName, ownerName, contactNumber,","lastModifiedDate":"2023-04-09"},{"lineNumber":279,"author":{"gitId":"11-Navya"},"content":"                        parsedStartDate, parsedStartTime, parsedEndDate, parsedEndTime, priority);","lastModifiedDate":"2023-04-09"},{"lineNumber":280,"author":{"gitId":"11-Navya"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":281,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":282,"author":{"gitId":"11-Navya"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":283,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The vaccination description is invalid!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":284,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":285,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":286,"author":{"gitId":"11-Navya"},"content":"        else if (type.equals(\"V\")){","lastModifiedDate":"2023-04-09"},{"lineNumber":287,"author":{"gitId":"11-Navya"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":288,"author":{"gitId":"11-Navya"},"content":"                String animalType \u003d splitInputBy(task, \"at/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":289,"author":{"gitId":"11-Navya"},"content":"                String animalName \u003d splitInputBy(task, \"an/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":290,"author":{"gitId":"11-Navya"},"content":"                String ownerName \u003d splitInputBy(task, \"on/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":291,"author":{"gitId":"11-Navya"},"content":"                String contactNumber \u003d splitInputBy(task, \"cn/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":292,"author":{"gitId":"11-Navya"},"content":"                String vaccine \u003d splitInputBy(task, \"v/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":293,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2023-04-09"},{"lineNumber":294,"author":{"gitId":"11-Navya"},"content":"                DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-04-09"},{"lineNumber":295,"author":{"gitId":"11-Navya"},"content":"                String date \u003d splitInputBy(task, \"vd/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":296,"author":{"gitId":"11-Navya"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":297,"author":{"gitId":"11-Navya"},"content":"                String time \u003d splitInputBy(task, \"vt/\");","lastModifiedDate":"2023-04-09"},{"lineNumber":298,"author":{"gitId":"11-Navya"},"content":"                LocalTime parsedTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2023-04-09"},{"lineNumber":299,"author":{"gitId":"11-Navya"},"content":"                command \u003d new EditVaccinationCommand(uid,animalType, animalName, ownerName, contactNumber,","lastModifiedDate":"2023-04-09"},{"lineNumber":300,"author":{"gitId":"11-Navya"},"content":"                        vaccine, parsedDate, parsedTime);","lastModifiedDate":"2023-04-09"},{"lineNumber":301,"author":{"gitId":"11-Navya"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":302,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The date/time description is invalid.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":303,"author":{"gitId":"11-Navya"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":304,"author":{"gitId":"11-Navya"},"content":"                throw new SniffException(\"The vaccination description is invalid!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":305,"author":{"gitId":"11-Navya"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":306,"author":{"gitId":"11-Navya"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":307,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":308,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":309,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseArchiveCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":310,"author":{"gitId":"NivethaUdayakumar"},"content":"        command \u003d new ArchiveCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static void parseByeCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"NivethaUdayakumar"},"content":"        command \u003d new ExitCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":315,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":316,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"cleoncheng2000"},"content":"    private static void parseHelpCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":318,"author":{"gitId":"cleoncheng2000"},"content":"        command \u003d new HelpCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":319,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":320,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":100,"dendendenden04":6,"NivethaUdayakumar":126,"Vignesh-30":4,"11-Navya":84}},{"path":"src/main/java/functionalities/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.storage;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import java.io.File;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Vignesh-30"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Vignesh-30"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.parser.FileParser;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Vignesh-30"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"Vignesh-30"},"content":" * This class deals with Storage (Loading and Saving unmarked appointments in the file)","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Storage {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"Vignesh-30"},"content":"     * Saves the unmarked appointments into the SniffAppointments File","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"Vignesh-30"},"content":"     * @param path The path of the SniffAppointments file","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if SniffAppointments file is not found","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void saveAppointments(String path) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"            File fileName \u003d new File(path);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"            FileWriter savedFile \u003d new FileWriter(fileName, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Vignesh-30"},"content":"            SniffTasks.retrieveTask(savedFile);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Vignesh-30"},"content":"            savedFile.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Vignesh-30"},"content":"            savedFile.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"        } catch (IOException a) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Save File \\\"SniffAppointments.txt\\\" not found!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"Vignesh-30"},"content":"     * Checks if SniffAppointments file already exists, and creates a new file if file does not exist originally","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"Vignesh-30"},"content":"     * Reads and adds the unmarked appointments into the Appointments task list using extractData(fileName) method","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"Vignesh-30"},"content":"     * @param absolutePath The path of the SniffAppointments file","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException if SniffAppointments file is not found","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"Vignesh-30"},"content":"    public static void openFile(String absolutePath) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Vignesh-30"},"content":"            File fileName \u003d new File(absolutePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Vignesh-30"},"content":"            if (fileName.createNewFile()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Vignesh-30"},"content":"                Ui.printFileCreated(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Vignesh-30"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Vignesh-30"},"content":"                extractData(fileName);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Vignesh-30"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Vignesh-30"},"content":"            Ui.printFileCreated(false);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Vignesh-30"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" File \\\"SniffAppointments.txt\\\" saved in incorrect format!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Vignesh-30"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"Vignesh-30"},"content":"     * Calls FileParser to parse SniffAppointments contents","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"Vignesh-30"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"Vignesh-30"},"content":"     * @param fileName the SniffAppointments file","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"Vignesh-30"},"content":"     * @throws SniffException        if errors are encountered while parsing","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"Vignesh-30"},"content":"     * @throws FileNotFoundException if SniffAppointments file is not found","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"Vignesh-30"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"Vignesh-30"},"content":"    public static void extractData(File fileName) throws SniffException, FileNotFoundException {","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Vignesh-30"},"content":"            Scanner s \u003d new Scanner(fileName);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Vignesh-30"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Vignesh-30"},"content":"                String currentLine \u003d s.nextLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Vignesh-30"},"content":"                char appointmentType \u003d currentLine.charAt(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Vignesh-30"},"content":"                if (appointmentType \u003d\u003d \u0027C\u0027) {","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Vignesh-30"},"content":"                    FileParser.addConsultation(currentLine);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Vignesh-30"},"content":"                } else if (appointmentType \u003d\u003d \u0027S\u0027) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Vignesh-30"},"content":"                    FileParser.addSurgery(currentLine);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Vignesh-30"},"content":"                } else if (appointmentType \u003d\u003d \u0027V\u0027) {","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Vignesh-30"},"content":"                    FileParser.addVaccination(currentLine);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Vignesh-30"},"content":"                } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Vignesh-30"},"content":"                    throw new SniffException(\" File \\\"SniffAppointments.txt\\\" saved in incorrect format!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Vignesh-30"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Vignesh-30"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"Vignesh-30"},"content":"        } catch (FileNotFoundException f) {","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Vignesh-30"},"content":"            throw new SniffException(\" Save File \\\"SniffAppointments.txt\\\" not found!\");","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"NivethaUdayakumar":4,"Vignesh-30":82}},{"path":"src/main/java/functionalities/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package functionalities.ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.appointments.Appointment;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Ui {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"    private static final String DOT_THEN_SPACE \u003d \". \";","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"    private static final String LINE \u003d \"______________________________________________________________________\";","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void showUserMessage(String s) {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(s);","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Vignesh-30"},"content":"    public static void printFileCreated(boolean b) {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Vignesh-30"},"content":"        showLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (b) {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Vignesh-30"},"content":"            System.out.println(\"\\tFile \\\"SniffAppointments.txt\\\" created!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\"\\tFile \\\"SniffAppointments.txt\\\" is not created!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void printArchiveFileCreated(boolean b) {","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Vignesh-30"},"content":"        showLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"        if (b) {","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\" Archive File created!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"            System.out.println(\" Archive File not created!\");","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"    public String readUserCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"NivethaUdayakumar"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void showErrorMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Sorry, an error was encountered! Here is the error description:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"        SniffException.showError();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"        showLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" Hello! I\u0027m Sniff, your personal appointment manager.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"NivethaUdayakumar"},"content":"        showLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Vignesh-30"},"content":"    public static void showLine() {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Vignesh-30"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Vignesh-30"},"content":"    public static void formatPrintList(int count, String description) {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(\" \" + count + DOT_THEN_SPACE + description);","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"dendendenden04"},"content":"    public static void printAppointmentAddedMessage(Appointment appointment) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"dendendenden04"},"content":"        System.out.println(\" This appointment has been added to your appointment manager: \");","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(appointment.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"dendendenden04"},"content":"    public static void printAppointmentRemovedMessage(Appointment appointment) {","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"dendendenden04"},"content":"        System.out.println(\" This appointment has been removed your appointment manager: \");","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"        System.out.println(appointment.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"11-Navya"},"content":"    public static void printAppointmentMarkMessage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"11-Navya"},"content":"        System.out.println(\"The appointment has been marked successfully\");","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"11-Navya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"11-Navya"},"content":"    public static void printAppointmentAlreadyMarkedMessage(String uid) {","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"11-Navya"},"content":"        System.out.println(\"The appointment with this Uid: \"+ uid + \" has already been marked successfully\");","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"11-Navya"},"content":"    public static void printAppointmentUnMarkMessage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"11-Navya"},"content":"        System.out.println(\"The appointment has been unMarked successfully\");","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"11-Navya"},"content":"    public static void printAppointmentAlreadyUnMarkedMessage(String uid) {","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"11-Navya"},"content":"        System.out.println(\"The appointment with this Uid: \"+ uid + \" has already been unMarked successfully\");","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"11-Navya"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"cleoncheng2000"},"content":"    public static void showHelpMessage() {","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"cleoncheng2000"},"content":"        System.out.println(\"These are the following Sniff commands available:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Add consultation appointment:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"cleoncheng2000"},"content":"                + \" consultation at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER cd/DATE ct/TIME\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Add vaccination appointment:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"cleoncheng2000"},"content":"                + \" vaccination at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER v/VACCINE_TYPE vd/DATE \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"cleoncheng2000"},"content":"                \"vt/TIME\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Add surgery appointment:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"cleoncheng2000"},"content":"                + \" surgery at/ANIMAL_TYPE an/ANIMAL_NAME on/OWNER_NAME cn/CONTACT_NUMBER sd/START_DATE \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"cleoncheng2000"},"content":"                \"st/START_TIME ed/END_DATE et/END_TIME p/PRIORITY_LEVEL\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Listing all appointments:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"cleoncheng2000"},"content":"                + \" list\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Removing an appointment:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"cleoncheng2000"},"content":"                + \" remove uid/UID\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Finding an appointment by animal type, appointment type or uid:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"cleoncheng2000"},"content":"                + \" find a/ANIMAL_TYPE\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"cleoncheng2000"},"content":"                + \" find t/APPOINTMENT_TYPE \\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"cleoncheng2000"},"content":"                + \" find uid/UID\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"11-Navya"},"content":"                + \"Mark or UnMark an appointment:\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"cleoncheng2000"},"content":"                + \" mark uid/UID\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"11-Navya"},"content":"                + \" unMark uid/UID\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Exiting the program:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"cleoncheng2000"},"content":"                + \" bye\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"cleoncheng2000"},"content":"                + \"Additional notes:\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"cleoncheng2000"},"content":"                + \" 1. DATES and TIMES format are in (YYYY-MM-DD) and (HH:MM) respectively\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"cleoncheng2000"},"content":"                + \" 2. PRIORITY_LEVEL format is in (L, M, H)\");","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cleoncheng2000":26,"dendendenden04":11,"NivethaUdayakumar":42,"Vignesh-30":16,"11-Navya":16}},{"path":"src/main/java/seedu/sniff/Sniff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package seedu.sniff;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import archive.Archive;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.commands.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"import functionalities.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.ui.Ui;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.parser.Parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"public class Sniff {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static SniffTasks tasks;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":"    private static Ui ui;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"    public Sniff() {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"        tasks \u003d new SniffTasks();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void run() throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Vignesh-30"},"content":"        String absolutePath \u003d getPath();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"        String archivePath \u003d getArchivePath();","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Vignesh-30"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Vignesh-30"},"content":"            Storage.openFile(absolutePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"            Archive.openArchiveFile(archivePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Vignesh-30"},"content":"        } catch (SniffException file) {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"            ui.showErrorMessage();","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Vignesh-30"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"NivethaUdayakumar"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"            try {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"                String fullCommand \u003d ui.readUserCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"                Ui.showLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"                c.executeCommand(tasks);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"            } catch (SniffException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"dendendenden04"},"content":"                ui.showErrorMessage();","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"            } finally {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"                Storage.saveAppointments(absolutePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"                Archive.saveArchivedAppointments(archivePath);","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"                Ui.showLine();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Vignesh-30"},"content":"    private static String getPath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Vignesh-30"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"11-Navya"},"content":"        java.nio.file.Path path \u003d java.nio.file.Paths.get(home, \"SniffAppointment.txt\");","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"        return path.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"    private static String getArchivePath() {","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"        String home \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"11-Navya"},"content":"        java.nio.file.Path filepath \u003d java.nio.file.Paths.get(home, \"SniffTest.txt\");","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"        return filepath.toString();","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"     * Main entry-point for the java.sniff.Sniff application.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"    public static void main(String[] args) throws SniffException {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"        new Sniff().run();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cleoncheng2000":2,"dendendenden04":6,"NivethaUdayakumar":46,"Vignesh-30":10,"11-Navya":2}},{"path":"src/test/java/functionalities/commands/ConsultationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"class ConsultationCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    void consultationCommandNotNull() throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"        String animalName \u003d \"lulu\";","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"        String animalType \u003d \"cat\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"        String ownerName \u003d \"jon\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"        String contactNumber \u003d \"91919191\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"        LocalTime time \u003d LocalTime.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        ConsultationCommand c \u003d new ConsultationCommand(animalType, animalName, ownerName,","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"                contactNumber, date, time);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"cleoncheng2000":26,"NivethaUdayakumar":1}},{"path":"src/test/java/functionalities/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.SniffTasks;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"class ExitCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    void exitCommandNotNullTest() {","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"        Command c \u003d new ExitCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"    void exitCommandTest() throws SniffException {","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"        SniffTasks tasks \u003d new SniffTasks();","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"        Command c \u003d new ExitCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        c.executeCommand(tasks);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"        assertTrue(c.isExit);","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":24}},{"path":"src/test/java/functionalities/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Vignesh-30"},"content":"package functionalities.commands;","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"Vignesh-30"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"Vignesh-30"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"Vignesh-30"},"content":"class FindCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"Vignesh-30"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"Vignesh-30"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"Vignesh-30"},"content":"    void findCommandNotNull() {","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"Vignesh-30"},"content":"        String category \u003d \"animal\";","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"Vignesh-30"},"content":"        String details \u003d \"cat\";","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"Vignesh-30"},"content":"        FindCommand f \u003d new FindCommand(category, details);","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"Vignesh-30"},"content":"        assertNotNull(f);","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"Vignesh-30"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"Vignesh-30"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"Vignesh-30":16}},{"path":"src/test/java/functionalities/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"class ListCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"    void listCommandNotNullTest() {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"        ListCommand c \u003d new ListCommand();","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":15}},{"path":"src/test/java/functionalities/commands/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"class RemoveCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"    void removeCommandNotNullTest() {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"        String uid \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"        RemoveCommand c \u003d new RemoveCommand(uid);","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":15}},{"path":"src/test/java/functionalities/commands/SurgeryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"class SurgeryCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    void surgeryCommandNotNull() throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"        String animalName \u003d \"lulu\";","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"        String animalType \u003d \"cat\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"        String ownerName \u003d \"jon\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"        String contactNumber \u003d \"91919191\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"        LocalDate startDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"        LocalTime startTime \u003d LocalTime.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        LocalDate endDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"        LocalTime endTime \u003d LocalTime.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"        String priority \u003d \"L\";","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"        SurgeryCommand c \u003d new SurgeryCommand(animalType, animalName, ownerName,","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"                contactNumber, startDate, startTime, endDate, endTime, priority);","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":28}},{"path":"src/test/java/functionalities/commands/VaccinationCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cleoncheng2000"},"content":"package functionalities.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"cleoncheng2000"},"content":"import exception.SniffException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"cleoncheng2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"cleoncheng2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"cleoncheng2000"},"content":"class VaccinationCommandTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"cleoncheng2000"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"cleoncheng2000"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"cleoncheng2000"},"content":"    void vaccinationCommandNotNull() throws SniffException {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"cleoncheng2000"},"content":"        String animalName \u003d \"lulu\";","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"cleoncheng2000"},"content":"        String animalType \u003d \"cat\";","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"cleoncheng2000"},"content":"        String ownerName \u003d \"jon\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"cleoncheng2000"},"content":"        String contactNumber \u003d \"91919191\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"cleoncheng2000"},"content":"        String vaccine \u003d \"covid\";","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"cleoncheng2000"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"cleoncheng2000"},"content":"        LocalTime time \u003d LocalTime.now();","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"cleoncheng2000"},"content":"        VaccinationCommand c \u003d new VaccinationCommand(animalType, animalName, ownerName,","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"                contactNumber, vaccine, date, time);","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"cleoncheng2000"},"content":"        assertNotNull(c);","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"cleoncheng2000"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"cleoncheng2000"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":26}},{"path":"src/test/java/seedu/sniff/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package seedu.sniff;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"NivethaUdayakumar"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"NivethaUdayakumar"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"cleoncheng2000"},"content":"import functionalities.commands.ConsultationCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ExitCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.FindCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.ListCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.RemoveCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.SurgeryCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.commands.VaccinationCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"NivethaUdayakumar"},"content":"import functionalities.parser.Parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"NivethaUdayakumar"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"NivethaUdayakumar"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"NivethaUdayakumar"},"content":"public class ParserTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void consultationTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"cleoncheng2000"},"content":"        String consultationCommand \u003d \"consultation at/cat an/lulu on/jon cn/91919191 cd/2023-12-12 ct/19:00\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command consultationParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"NivethaUdayakumar"},"content":"            consultationParsedCommand \u003d Parser.parse(consultationCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"cleoncheng2000"},"content":"        assertTrue(consultationParsedCommand instanceof ConsultationCommand,","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"consultationParsedCommand is not an instance of ConsultationCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void vaccinationTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"cleoncheng2000"},"content":"        String vaccinationCommand \u003d \"vaccination at/cat an/lulu on/jon cn/91919191 v/covid vd/2023-12-12 vt/19:00\";","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command vaccinationParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"NivethaUdayakumar"},"content":"            vaccinationParsedCommand \u003d Parser.parse(vaccinationCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(vaccinationParsedCommand instanceof VaccinationCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"vaccinationParsedCommand is not an instance of VaccinationCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void surgeryTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"cleoncheng2000"},"content":"        String surgeryCommand \u003d \"surgery at/cat an/lulu on/jon cn/91919191 \" +","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"cleoncheng2000"},"content":"                \"sd/2023-12-12 st/19:00 ed/2023-12-12 et/20:00 p/H\";","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command surgeryParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"NivethaUdayakumar"},"content":"            surgeryParsedCommand \u003d Parser.parse(surgeryCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(surgeryParsedCommand instanceof SurgeryCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"surgeryParsedCommand is not an instance of SurgeryCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void findTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"NivethaUdayakumar"},"content":"        String findCommand \u003d \"find a/dog\";","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"NivethaUdayakumar"},"content":"        String findCommand1 \u003d \"find t/surgery\";","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"NivethaUdayakumar"},"content":"        String findCommand2 \u003d \"find aID/123\";","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command findParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"NivethaUdayakumar"},"content":"            findParsedCommand \u003d Parser.parse(findCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"NivethaUdayakumar"},"content":"            findParsedCommand \u003d Parser.parse(findCommand1);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"NivethaUdayakumar"},"content":"            findParsedCommand \u003d Parser.parse(findCommand2);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(findParsedCommand instanceof FindCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"findParsedCommand is not an instance of FindCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void listTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"NivethaUdayakumar"},"content":"        String listCommand \u003d \"list\";","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command listParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"NivethaUdayakumar"},"content":"            listParsedCommand \u003d Parser.parse(listCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(listParsedCommand instanceof ListCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"listParsedCommand is not an instance of ListCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void removeTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"NivethaUdayakumar"},"content":"        String removeCommand \u003d \"remove a/1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command removeParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"NivethaUdayakumar"},"content":"            removeParsedCommand \u003d Parser.parse(removeCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(removeParsedCommand instanceof RemoveCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"removeParsedCommand is not an instance of RemoveCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"NivethaUdayakumar"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"NivethaUdayakumar"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"NivethaUdayakumar"},"content":"    public void byeTest() {","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"NivethaUdayakumar"},"content":"        String byeCommand \u003d \"bye\";","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"NivethaUdayakumar"},"content":"        Command byeParsedCommand \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"NivethaUdayakumar"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"NivethaUdayakumar"},"content":"            byeParsedCommand \u003d Parser.parse(byeCommand);","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"NivethaUdayakumar"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"NivethaUdayakumar"},"content":"            Assertions.fail(\"SniffException thrown when not expected\");","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"NivethaUdayakumar"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"NivethaUdayakumar"},"content":"        assertTrue(byeParsedCommand instanceof ExitCommand,","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"NivethaUdayakumar"},"content":"                \"byeParsedCommand is not an instance of ByeCommand\");","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"NivethaUdayakumar"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"NivethaUdayakumar"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"cleoncheng2000":6,"NivethaUdayakumar":110}},{"path":"src/test/java/seedu/sniff/SniffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NivethaUdayakumar"},"content":"package seedu.sniff;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"NivethaUdayakumar"},"content":"class SniffTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"NivethaUdayakumar":2,"-":10}},{"path":"src/test/java/seedu/sniff/UidGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dendendenden04"},"content":"package seedu.sniff;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"dendendenden04"},"content":"import exception.SniffException;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dendendenden04"},"content":"import functionalities.Uid;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"dendendenden04"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"dendendenden04"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"dendendenden04"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"dendendenden04"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"dendendenden04"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"dendendenden04"},"content":"public class UidGeneratorTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"dendendenden04"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"dendendenden04"},"content":"    public void uidNotNullTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"dendendenden04"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dendendenden04"},"content":"            assertNotNull(uid, \"Uid generated is null\");","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"dendendenden04"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"dendendenden04"},"content":"            Assertions.fail();","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"dendendenden04"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"dendendenden04"},"content":"    public void uidLengthTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"dendendenden04"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dendendenden04"},"content":"            assertEquals(10, uid.length());","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"dendendenden04"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dendendenden04"},"content":"            Assertions.fail(\"Length of uid generated is incorrect.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"dendendenden04"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"dendendenden04"},"content":"    public void uidValidInputTest() {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dendendenden04"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"S\");","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"dendendenden04"},"content":"            uid \u003d Uid.uidGenerator(\"V\");","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"dendendenden04"},"content":"            uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"dendendenden04"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"dendendenden04"},"content":"            Assertions.fail(\"This test should not fail as they are valid inputs.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"dendendenden04"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"dendendenden04"},"content":"    public void uidLastCharTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"dendendenden04"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"C\");","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"dendendenden04"},"content":"            assertTrue((\u0027A\u0027 \u003c\u003d uid.charAt(9)) \u0026\u0026 (uid.charAt(9) \u003c\u003d \u0027Z\u0027),","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"dendendenden04"},"content":"                    \"Letter should be between A to Z\");","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"dendendenden04"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"dendendenden04"},"content":"            Assertions.fail(\"This test should not fail as it is a valid input\");","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"dendendenden04"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"dendendenden04"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"dendendenden04"},"content":"    public void uidWrongInputTest() {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"dendendenden04"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"dendendenden04"},"content":"            String uid \u003d Uid.uidGenerator(\"A\");","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"dendendenden04"},"content":"            Assertions.fail(\"This test should fail with invalid inputs\");","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"dendendenden04"},"content":"        } catch (SniffException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"dendendenden04"},"content":"            assertEquals(\"Invalid appointment type for uid generation.\", e.getErrorMessage());","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"dendendenden04"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"dendendenden04"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"dendendenden04"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"dendendenden04":67}}]
