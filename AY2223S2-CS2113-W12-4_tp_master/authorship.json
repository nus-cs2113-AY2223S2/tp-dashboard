[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"# CS2113-W12-4 Team Project tP","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"To remove everything below:","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"Please download dataset (as it is a large file) from \u003ca href\u003d\"https://datasets.imdbws.com/\"\u003ethis link\u003c/a\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"Look for **title.basics.tsv.gz**. This contains basic data on titles.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"Follow up by running (TODO) processData (Which will process the TSV file into something parseable for our usage.)","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"Store it in \"/data/movies.tsv\" (so the overall path looks like this: \"tP/data/movies.tsv\")","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"choongzhanhong":11,"-":63}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"chao2048":2,"-":45}},{"path":"data/readme.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"This is a shortened version of the movie database that is much easier to handle without using databases, and smaller file size for easier usage for our purposes.","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"In essence, we are limiting to only movies in 2010-2020 (avoiding newly created movies in 2023 and just to be safe, 2022-2021, which may cause differences in the files)","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"Removing adult movies and unnecessary columns as well.","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"adapted from https://thatdatascienceguy.medium.com/working-with-the-imdb-dataset-589d46d230c6","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"python file added for reference too. ","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"I also made another further_filter which drops useless tables like movie type, and secondary title which we won\u0027t be using.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"Also removed those movies without runtime data and with special characters in the title.","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chao2048":1,"choongzhanhong":12}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/88608796?s\u003d400\u0026v\u003d4) | Jared Ee | [Github](https://github.com/jared-ee) | [Portfolio](docs/team/jared-ee.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chao Yi-Ju | [Github](https://github.com/chao2048) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/65936691?v\u003d4) | Zhan Hong | [Github](https://github.com/choongzhanhong) | [Portfolio](docs/team/zhanhong.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/89850821) | ZhangZhanshan | [Github](https://github.com/zzs-RedCocoon) | [Portfolio](docs/team/ZhangZhanshan.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zzs-redcocoon":6,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Design \u0026 implementation","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{Describe the target user profile}","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{Describe the value proposition: what problem does it solve?}","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"{Give non-functional requirements}","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Instructions for manual testing","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"\u003c!-- Zhan hong working on this section--\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"# Review Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"**API:** [Review.java](https://github.com/AY2223S2-CS2113-W12-4/tp/blob/master/src/main/java/Review.java)","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"Here\u0027s a partial class diagram of the `Review` component:","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"![](/PUMLFiles/Review/review1.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"The `Review` component contains both a descriptive review `reviewText`,","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"and a numerical review `reviewStars` (0 to 5 inclusive). Both are modified through the","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"`setReview()` method.","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"`Review` implements [`Comparable`](https://docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html), and is compared","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"through simply comparing `reviewStars`.","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"How the `Review` component works:","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"**Step 1.** `setReview()` is called, which creates a [`Scanner`](https://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html)","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"to read user input.","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"![](/PUMLFiles/Review/review2.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"**Step 2.** User input is read (multiple lines) until a blank line is found.","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"Then, `reviewText` is updated with the text input.","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"**Step 3.** Next, user is prompted for a numerical input (with input validation).","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"This value is updated into `reviewStars`.","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"**Step 4.** Finally, `Scanner` is closed and `Review` is done setting.","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"# Movie List Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"**API:** [Movie.java](https://github.com/AY2223S2-CS2113-W12-4/tp/blob/master/src/main/java/MovieList.java)","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"Here\u0027s a partial class diagram of the `MovieList` component:","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"![](/PUMLFiles/MovieList/movielist1.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"The `MovieList` component has two inherited classes `ToWatchList` and `WatchedList`. It contains a public method `movieList` for creating an empty movie list,","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"which also has a overloaded constructor for creating a movie list with an existing list.","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"In addition, `MovieList` contains a public method `add`, which will search for relevant movies in the database","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"chao2048"},"content":"and help user to add a new movie to the movie list. It also contains a public method `filter`, ","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"which will filter the movies with certain genre and display it to the user. The public method `remove`, will remove a movie from the list, ","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"and this will be implemented soon. Other methods such as `getMovie()` and `toString()` are also included in `MovieList`. ","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"chao2048"},"content":"How the `MovieList.add(String inputTitle)` component works:","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"![](/PUMLFiles/MovieList/movielist2.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"**Step 1.** `add(String inputTitle)` is called, which continues to call `find()` in `MovieDatabase` to search for the relevant movies.","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"It will then display at most five movies that matches the `inputTitle`.","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"chao2048"},"content":"**Step 2.** Next, user is prompted for a numerical input (with input validation).","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"chao2048"},"content":"This value indicates the movie index chosen by the user from the list.","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"chao2048"},"content":"**Step 3.** Next, `createMovie` is called to create a new `Movie` object according to the index and add the movie to the movie list.","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"chao2048"},"content":"**Step 4.** The `add(String inputTitle)` will show feedback message to the user.","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"chao2048"},"content":"**Step 5.** The `add(String inputTitle)` has finished everything and returned.","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chao2048":32,"choongzhanhong":32,"-":35}},{"path":"docs/PUMLFiles/MovieList/movielist_class.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"\u0027movieList, class diagram\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"MovieList \u003c|-- ToWatchList","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"MovieList \u003c|-- WatchedList","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"MovieList : + movieList()","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"MovieList : + add()","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"MovieList : + remove()","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"MovieList : + filter()","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"WatchedList : + watchList()","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"ToWatchList : + toWatchList()","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"newpage","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chao2048":18}},{"path":"docs/PUMLFiles/MovieList/movielist_sequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"\u0027movielist2, sequence diagram\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"actor User","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"User -\u003e watched","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"watched -\u003e MovieList : add(String inputTitle)","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"MovieList -\u003e MovieDatabase : find(inputTitle)","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"MovieDataBast --\u003e MovieList : return releventMovies","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"MovieList -\u003e Scanner : get numerical input","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"Scanner -\u003e User","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"User --\u003e Scanner : input index","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"Scanner --\u003e MovieList : return index","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"MovieList -\u003e MovieList : createMovie()","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"MovieList -\u003e MovieList : add()","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"MovieList --\u003e User : feedback","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"chao2048":21}},{"path":"docs/PUMLFiles/Review/review_class.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"\u0027review1, class diagram\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"interface Comparable","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"Comparable \u003c|.. Review","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"Review : String reviewText","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"Review : int reviewStars","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"Review : + setReview()","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"Review .\u003e Scanner : \u003e Takes input from","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"newpage","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"choongzhanhong":15}},{"path":"docs/PUMLFiles/Review/review_sequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"\u0027review1, class diagram\u0027","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"actor User","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"User -\u003e Review","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"Review -\u003e Scanner : setReview()","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"Scanner --\u003e Scanner : new Scanner(input)","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"loop input not empty","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    Scanner -\u003e User","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    User --\u003e Scanner : Input","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"end","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"Scanner --\u003e Review : return input","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"Review -\u003e Review : set reviewText","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"Review -\u003e Scanner : get numerical input","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"loop input not between 0 to 5","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    Scanner -\u003e User","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    User --\u003e Scanner : input","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"end","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"Scanner --\u003e Review : return input","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"Review -\u003e Review : set reviewStars","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"Review --\u003e User : feedback","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"choongzhanhong":30}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"# MovieMate User Guide","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"MovieMate is a command-line app for managing your own list of movies that you’ve watched or planning to watch. It allows you to store your ratings and reviews for different movies and give you a quick glance of your movie list. You can also keep track of all the movies you plan to watch separately. Moreover, it allows you to filter specific types of movies to help you search for the movie you want effectively.","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"### help","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"Will print all the commands that the user can use.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"Format: help\\","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e help\\","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"First time using MovieMate? Below is the quick guide for you to get to know about how to use the app ...\\","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"jared-ee"},"content":"Add A Movie to the watched List: watched\\","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"jared-ee"},"content":"Adds a movie to the list of watched movies.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"jared-ee"},"content":"If the item currently exists in the watchlist, it will be moved to the watched list.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"jared-ee"},"content":"### watched","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"Adds a movie to your watched list.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"Format: watched \\\u003cMovie Name\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list\\","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"Titanic\\","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watched Avengers: Endgame\\","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watched La La Land\\","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":" \\","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list\\","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"Titanic\\","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"Avengers: Endgame\\","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"### towatch","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"Adds an unwatched movie to your to-watch list.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"Format: towatch \\\u003cMovie Name\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watchlist\\","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"Titanic\\","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e towatch Avengers: Endgame\\","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e towatch La La Land\\","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":" \\","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watchlist\\","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"jared-ee"},"content":"Titanic\\","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"jared-ee"},"content":"Avengers Endgame\\","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"#### list","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"Lists all the movies you have watched.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"jared-ee"},"content":"Format: list\\","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"jared-ee"},"content":"Example:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"jared-ee"},"content":"1. \\\u003cMovie Name 1\\\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"jared-ee"},"content":"2. \\\u003cMovie Name 2\\\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"### watchlist","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"Lists the movies you are planning to watch.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"Format: watchlist\\","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"Example:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watchlist","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"1. \\\u003cMovie Name 1\\\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"2. \\\u003cMovie Name 2\\\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"### remove watched","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"Removes a movie from the list of watched movies.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"Format: remove watched \\\u003cMovie Index\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"1. Avengers: Endgame","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"jared-ee"},"content":"2. La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"jared-ee"},"content":"\\","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"\u0027\u0027\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"jared-ee"},"content":"\u0027\u0027\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"jared-ee"},"content":"\\","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e remove watched 1\\","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"jared-ee"},"content":"1. La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"jared-ee"},"content":"### remove towatch","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"jared-ee"},"content":"Removes a movie from the to-watch list.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"jared-ee"},"content":"Format: remove towatch \\\u003cMovie Index\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e watchlist","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"jared-ee"},"content":"1. Avengers: Endgame","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"jared-ee"},"content":"2. La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"jared-ee"},"content":"\\","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"jared-ee"},"content":"\u0027\u0027\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"jared-ee"},"content":"\u0027\u0027\u0027","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"jared-ee"},"content":"\\","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e remove towatch 1\\","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e list","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"jared-ee"},"content":"1. La La Land","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"### seedetail","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"See the details of the movie as provided by the database. This does not include user-specific properties.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"Format: seedetail \\\u003cMovie Name\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e seedetail Avengers: Endgame\\","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"\\\u003clength\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"\\\u003crelease date\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"jared-ee"},"content":"\\\u003cgenre\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"jared-ee"},"content":"\\\u003cdescription of movie\\\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"jared-ee"},"content":"### filter","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"jared-ee"},"content":"Filters out and displays all movies in the watched and unwatched lists that fall under the specified genre.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"jared-ee"},"content":"Format: filter \\\u003cGenre\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e filter comedy\\","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"jared-ee"},"content":"\u003cComedy Movie 1\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"jared-ee"},"content":"\u003cComedy Movie 2\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"jared-ee"},"content":"### addreview","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"jared-ee"},"content":"Adds a review for a watched movie. The review will be done when the user types in /done.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"jared-ee"},"content":"Format:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e addreview \\\u003cMovie Index\\\u003e [enter]\\","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e \\\u003cyour review\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e \\\u003cyour review\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e /done\\","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e addreview 1\\","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e Such a thrilling movie to watch!\\","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e ...\\","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e ...\\","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e and that is the end of my review.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e /done\\","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"jared-ee"},"content":"Review added!","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"jared-ee"},"content":"### deletereview","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"jared-ee"},"content":"Delete a review for a watched movie.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"jared-ee"},"content":"Format: deletereview \\\u003cMovie Index\\\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e deletereview 1\\","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"jared-ee"},"content":"deleted Avengers: EndGame","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"jared-ee"},"content":"### viewreview","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"jared-ee"},"content":"Allows you to see your review of the watched movie.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"jared-ee"},"content":"Format: viewreview \u003cMovie Index\u003e\\","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e viewreview 1\\","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"jared-ee"},"content":"Such a thrilling movie to watch!","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"jared-ee"},"content":"### bye","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"jared-ee"},"content":"Closes MovieMate.\\","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"jared-ee"},"content":"Format: bye\\","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"jared-ee"},"content":"Examples:\\","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"jared-ee"},"content":"\\\u003e\u003e bye\\","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"jared-ee"},"content":"Hope you enjoy your experience with MovieMate and we will see you next time!","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jared-ee":141,"-":3}},{"path":"docs/team/zhanhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"# Zhan Hong - Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"I am zhan hong.","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"choongzhanhong":6}},{"path":"src/main/java/Load.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"public class Load {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public Load(String filepath, ArrayList\u003cMovie\u003e list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"            readFileContents(list, filepath);","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    //Reads in each line in text file separately. For each line, reinitializes the Movie class for that","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"    //particular movie, then adds its to the movieList/ToWatchList","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    public static void readFileContents(ArrayList\u003cMovie\u003e list, String filepath) throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"            int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"            int slash2 \u003d line.indexOf(\"/\", slash1 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            int slash3 \u003d line.indexOf(\"/\", slash2 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            int slash4 \u003d line.indexOf(\"/\", slash3 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"            int slash5 \u003d line.indexOf(\"/\", slash4 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            int slash6 \u003d line.indexOf(\"/\", slash5 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            String titleID \u003d line.substring(0, slash1);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            String title \u003d line.substring(slash1 + 1, slash2);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"            int year \u003d Integer.parseInt(line.substring(slash2 + 1, slash3));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"            int runTimeMinutes \u003d Integer.parseInt(line.substring(slash3 + 1, slash4));","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"            String[] genres \u003d new String[3];","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"            genres[0] \u003d line.substring(slash4 + 1, slash5);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"            genres[1] \u003d line.substring(slash5 + 1, slash6);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"            genres[2] \u003d line.substring(slash6 + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"            Movie movie \u003d new Movie(titleID, title, year, runTimeMinutes, genres);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"            list.add(movie);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chao2048":15,"jared-ee":28}},{"path":"src/main/java/Movie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":" * Movie class containing the basic essentials of a movie.","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * A movie is categorised by its title (name), titleID (Alphanumeric way to categorise)","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" * Year of release, runtime/length (in minutes), and an array of up to 3 Genres.","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":" * Data is provided by IMDB.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"public class Movie implements Comparable\u003cMovie\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    private final String titleID;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    private final String title;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    private final int year;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    private final int runTimeMinutes;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    private final String[] genres;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"     * Default constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"     * @param titleID The Unique ID assigned to a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"     * @param title The full title of the movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"     * @param year The year the movie was made.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"     * @param runTimeMinutes The runtime (in minutes).","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * @param genres String[] of Genres, up to 3.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(String titleID, String title, int year, int runTimeMinutes, String... genres) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        this.titleID \u003d titleID;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        this.year \u003d year;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"        this.runTimeMinutes \u003d runTimeMinutes;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"        this.genres \u003d genres;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(String[] movieString) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        this.titleID \u003d movieString[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this.title \u003d movieString[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"        this.year \u003d Integer.parseInt(movieString[2]);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"        this.runTimeMinutes \u003d (int)Double.parseDouble(movieString[3]);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"        this.genres \u003d movieString[4].split(\",\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie A movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        this(movie.getTitleID(), movie.getTitle(), movie.getYear(), movie.getRunTimeMinutes(), movie.getGenres());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"     * Default comparator.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"     * Sorting rules: Alphabetical title, then year.","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"     * TODO: need to compareTo titleID in case there is a same movie same year?","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"    public int compareTo(Movie o) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"        return (this.getTitle().equals(o.getTitle())) ?","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"                (this.getYear() - o.getYear())","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"                : (this.getTitle().compareTo(o.getTitle()));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"    public String getWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"        String splitGenres \u003d this.splitGenres();","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"        // TODO: See if i can extract the delimiter somehow...","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"        // ID|Title|Year|RunTime|Genres","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"        return String.format(\"%s|%s|%d|%d|%s\",","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"                this.titleID,","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"                this.title,","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"                this.year,","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"                this.runTimeMinutes,","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"                splitGenres);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"    public String splitGenres() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"        for (String genre : this.genres) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"            output +\u003d genre + \",\";","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"        // Remove last comma","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"        return output.substring(0, output.length() - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"    /* Getters all here below */","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"    public String getTitleID() {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"        return titleID;","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"        return title;","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"    public int getYear() {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"        return year;","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"    public int getRunTimeMinutes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"        return runTimeMinutes;","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"    public String[] getGenres() {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"        return genres;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"zzs-redcocoon"},"content":"    public String getGenresString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"zzs-redcocoon"},"content":"        String genres \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"zzs-redcocoon"},"content":"        for(String genre : getGenres()){","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"zzs-redcocoon"},"content":"            genres +\u003d genre + \",\";","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"zzs-redcocoon"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"zzs-redcocoon"},"content":"        return \" [\" + genres.substring(0, genres.length() - 1) + \"]\";","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"zzs-redcocoon"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"zzs-redcocoon"},"content":"        return String.format(\"(%s (%d) %s\", this.title, this.year, this.getGenresString());","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"chao2048"},"content":"        return \"Title: \" + title + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"chao2048"},"content":"                \"Year: \" + year + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"chao2048"},"content":"                \"Run time: \" + runTimeMinutes + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"chao2048"},"content":"                \"Genres: \" + genres;","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"         */","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chao2048":6,"zzs-redcocoon":8,"choongzhanhong":108}},{"path":"src/main/java/MovieDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"public class MovieDatabase {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    // Movie will be sorted, found by its String name.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    private static TreeMap\u003cString, Movie\u003e movieDatabase;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    private static final int MAX_RELEVANT_MOVIES \u003d 5;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public MovieDatabase(ArrayList\u003cString[]\u003e movieStrings) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        System.out.print(\"Loading movie database...\");","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        TreeMap\u003cString, Movie\u003e movies \u003d new TreeMap\u003cString, Movie\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"        // Get the headers first.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        // Not sure if this is required, but good to have I guess?","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        // tconst, primaryTitle, startYear, runtimeMinutes, genres","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"        String[] headers \u003d movieStrings.get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        if (headers.length \u003c 5) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"There\u0027s something wrong with the CSV file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"            throw (new IOException());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        // Start from 1 to ignore headers.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        for (int i \u003d 1; i \u003c movieStrings.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"            String[] movieString \u003d movieStrings.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"            Movie movie \u003d new Movie(movieString);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"            movies.put(movie.toString(), movie);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        this.movieDatabase \u003d movies;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\" Okay, movie database loaded.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"     * Find the movies that contain the movie name entered by the user and return them","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"     * @param userInputMovieName The movie name entered by the user","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"     * @return return an array list of movies with at most five movies, whose names containing the user input movie name","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"    public static ArrayList\u003cMovie\u003e find(String userInputMovieName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"        ArrayList\u003cMovie\u003e relevantMovies \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"        Integer movieCount \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        for (Map.Entry\u003cString, Movie\u003e entry : movieDatabase.entrySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            if (entry.getKey().toLowerCase().contains(userInputMovieName.toLowerCase())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"                relevantMovies.add(entry.getValue());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"                movieCount +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"            if (movieCount.equals(MAX_RELEVANT_MOVIES)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        return relevantMovies;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chao2048":24,"choongzhanhong":32}},{"path":"src/main/java/MovieEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * User-interacted Movie to be listed in {@link MovieList} MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"public class MovieEntry extends Movie {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"    private Date dateWatched;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    private Review review;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    public MovieEntry(String titleID, String title, int year, int runTimeMinutes, String[] genres) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"        super(titleID, title, year, runTimeMinutes, genres);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d new Review();","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor...","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    public MovieEntry(Movie movie, Review review) {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        super(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d review;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    public MovieEntry(Movie movie) {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        super(movie);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d new Review();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"     * Add (or overwrite) a review for the particular movie listing.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    public void setReview() {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this.review.setReview();","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"    public void deleteReview() {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"        this.review.deleteReviewText();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    public String getReview() {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"        return this.review.toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"    public String getWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"        return super.getWriteFormat()","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"                + String.format(\"|%s\", this.review);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"choongzhanhong":49,"jared-ee":1}},{"path":"src/main/java/MovieList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"zzs-redcocoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":" * MovieList class containing the list of movies.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":" * A movie list can be either a watched list or a to-watch list.","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"public class MovieList {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"    protected ArrayList\u003cMovie\u003e movieList;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"     * Default constructed for empty MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    public MovieList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor with filled MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     * @param movieList List of movies.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    public MovieList(Collection\u003cMovie\u003e movieList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e(movieList);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"    public MovieList(ArrayList\u003cString[]\u003e movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"        for (String[] movieString : movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"            this.movieList.add(createMovie(movieString));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"     * Add a movie to the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"    public void add(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.add(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"     * Adds a movie from the list of movies.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"     * @param inputTitle title of movie as input by user.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"    public void add(String inputTitle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        ArrayList\u003cMovie\u003e relevantMovies \u003d MovieDatabase.find(inputTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"        if (relevantMovies.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"            System.out.println( \"No relevant movie found, please try enter the movie name again!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"            return;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        Integer id \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        for (Movie relevantMovie: relevantMovies) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"            System.out.println(id + \". \" + relevantMovie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"            id +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Please enter the id of the movie you\u0027re looking for\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"                \"The program will then proceed with adding the movie you chose, thanks!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"        Scanner scan \u003d new Scanner(System.in);;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"zzs-redcocoon"},"content":"        String s \u003d scan.nextLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"zzs-redcocoon"},"content":"        Movie movie;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"zzs-redcocoon"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"zzs-redcocoon"},"content":"            movie \u003d relevantMovies.get(Integer.parseInt(s) - 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zzs-redcocoon"},"content":"        } catch (NumberFormatException e) { // cannot parse string to int","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zzs-redcocoon"},"content":"            System.out.println(\"Movie id should be number.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"zzs-redcocoon"},"content":"            return;","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"zzs-redcocoon"},"content":"        } catch(IndexOutOfBoundsException e){ //id out of range","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"zzs-redcocoon"},"content":"            System.out.println(\"Movie id is out of range.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"zzs-redcocoon"},"content":"            return;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"zzs-redcocoon"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"zzs-redcocoon"},"content":"        if(!movieList.contains(movie)){","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"            this.movieList.add(movie);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"zzs-redcocoon"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"        Ui.showAddMovieMessage(movie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"     * Prints all the movies inside.","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"    public void list() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"        for (Movie movie : movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"            System.out.printf(\"%d. %s\\n\", i, movie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"            i++;","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"zzs-redcocoon"},"content":"    public void filter(String genre) {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"zzs-redcocoon"},"content":"        System.out.println(\"In \" + getClass().getName() + \":\");","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"zzs-redcocoon"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"zzs-redcocoon"},"content":"        for(Movie movie : movieList){","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"zzs-redcocoon"},"content":"            if(Arrays.asList(movie.getGenres()).contains(genre)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"zzs-redcocoon"},"content":"                System.out.printf(\"%d. %s\\n\", i, movie.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"zzs-redcocoon"},"content":"                i++;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"zzs-redcocoon"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"zzs-redcocoon"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"zzs-redcocoon"},"content":"        if(i \u003d\u003d 1){","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"zzs-redcocoon"},"content":"            System.out.println(\"There are no movies of this genre in this list\");","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"zzs-redcocoon"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"zzs-redcocoon"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"     * Remove a specific movie from the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"    public void remove(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.remove(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"     * Remove a movie from the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"     * @param index 1-indexed index of the movie in list.","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"        index \u003d index - 1; // Offset 1-index","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.remove(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"    public Movie createMovie(String[] movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"        String id \u003d movieStrings[0];","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"choongzhanhong"},"content":"        String title \u003d movieStrings[1];","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"choongzhanhong"},"content":"        int year \u003d Integer.parseInt(movieStrings[2]);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"choongzhanhong"},"content":"        int runTime \u003d Integer.parseInt(movieStrings[3]);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"choongzhanhong"},"content":"        String genreStrings \u003d movieStrings[4];","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"choongzhanhong"},"content":"        String[] genres \u003d parseGenres(genreStrings);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"choongzhanhong"},"content":"        Movie movie \u003d new Movie(id, title, year, runTime, genres);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"choongzhanhong"},"content":"        // Commenting this out first because Review is no longer a String.","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"choongzhanhong"},"content":"        /*","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"choongzhanhong"},"content":"        if (movieStrings.length \u003d\u003d 5) {","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"choongzhanhong"},"content":"            // Make a normal Movie","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"choongzhanhong"},"content":"            return movie;","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"choongzhanhong"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"choongzhanhong"},"content":"            // movie entry.","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"choongzhanhong"},"content":"            String review \u003d movieStrings[6];","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"choongzhanhong"},"content":"            return new MovieEntry(movie, review);","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"choongzhanhong"},"content":"        */","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"choongzhanhong"},"content":"        return movie;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"choongzhanhong"},"content":"    private String[] parseGenres(String genreStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"choongzhanhong"},"content":"        String[] genres \u003d genreStrings.split(\",\");","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"choongzhanhong"},"content":"        return genres;","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"choongzhanhong"},"content":"    public String getFileWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"choongzhanhong"},"content":"        for (Movie movie : this.movieList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"choongzhanhong"},"content":"            output +\u003d movie.getWriteFormat() + \u0027\\n\u0027;","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"choongzhanhong"},"content":"     * To be used by user-facing operations to automatically account for indexing problems.","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"choongzhanhong"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"choongzhanhong"},"content":"     * @param index","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"choongzhanhong"},"content":"     * @return","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"choongzhanhong"},"content":"    public Movie getMovie(int index) {","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"choongzhanhong"},"content":"        int i \u003d index - 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"choongzhanhong"},"content":"            return this.movieList.get(i);","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"I don\u0027t think you got the right movie number.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"choongzhanhong"},"content":"            e.getMessage();","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"choongzhanhong"},"content":"        // Do you want to return null or throw new exception?","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"choongzhanhong"},"content":"        return null;","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"choongzhanhong"},"content":"        return this.movieList.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":27,"zzs-redcocoon":29,"choongzhanhong":124}},{"path":"src/main/java/MovieMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":" * Movie Mate class is the main class that starts running the program.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"public class MovieMate {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    private static final Logger logger \u003d Logger.getLogger(\"MovieMate\");","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    private static String watchedListPath \u003d \"data/moviemate_watchlist.txt\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    private static String toWatchListPath \u003d \"data/moviemate_towatch.txt\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    private static WatchedList watchedList \u003d new WatchedList(storage.load(watchedListPath));","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    private static ToWatchList toWatchList \u003d new ToWatchList(storage.load(toWatchListPath));","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    private static MovieDatabase movieDatabase;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    static {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"            movieDatabase \u003d new MovieDatabase(storage.loadDatabase());","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"            logger.log(Level.WARNING, \"processing error\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Critical error: You might be missing a database file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"            System.exit(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zzs-redcocoon"},"content":"        //assert true: \"dummy assertion set to true\";","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"        // Initialise Scanner","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"        while (true) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"            // Get user input and parse it.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"            String userInput \u003d inputCommand(scan);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"            String[] commandTypeAndParams \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"            String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"            String commandArg \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"            switch (commandType) {","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            case \"watched\":","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"                // add to watched list","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"                watchedList.add(commandArg);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jared-ee"},"content":"            case \"remove\":","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"jared-ee"},"content":"                switch (commandArg) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"jared-ee"},"content":"                case \"watched\":","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"jared-ee"},"content":"                    //remove from watched list","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"jared-ee"},"content":"                    Ui.showListMessage(watchedList);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"jared-ee"},"content":"                    int removeWatchedIndex \u003d Integer.parseInt(inputCommand(scan));","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jared-ee"},"content":"                    watchedList.remove(removeWatchedIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jared-ee"},"content":"                case \"towatch\":","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"jared-ee"},"content":"                    //remove from towatch list","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"jared-ee"},"content":"                    Ui.showListMessage(toWatchList);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"jared-ee"},"content":"                    int removeToWatchIndex \u003d Integer.parseInt(inputCommand(scan));","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"jared-ee"},"content":"                    toWatchList.remove(removeToWatchIndex);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jared-ee"},"content":"                    break;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"                default:","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"                    break;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jared-ee"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"                // fallthrough","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"            case \"towatch\":","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"                // add to to-watch list","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"                toWatchList.add(commandArg);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"            case \"help\":","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"                Ui.help();","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"chao2048"},"content":"            case \"list\":","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"chao2048"},"content":"                // list the watched list","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"                watchedList.list();","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"chao2048"},"content":"            case \"watchlist\":","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"chao2048"},"content":"                // list the to-watch list","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"                toWatchList.list();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"            case \"seedetail\":","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"                // find relevant movie info","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"jared-ee"},"content":"            case \"addreview\":","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"jared-ee"},"content":"                watchedList.setReview(Integer.parseInt(commandArg));","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"jared-ee"},"content":"            case \"deletereview\":","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"jared-ee"},"content":"                watchedList.deleteReview(Integer.parseInt(commandArg));","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"jared-ee"},"content":"                break;","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"jared-ee"},"content":"            case \"viewreview\":","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"jared-ee"},"content":"                System.out.println(watchedList.viewReview(Integer.parseInt(commandArg)));","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"                break;","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"zzs-redcocoon"},"content":"            case \"filter\":","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"zzs-redcocoon"},"content":"                watchedList.filter(commandArg);","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"zzs-redcocoon"},"content":"                toWatchList.filter(commandArg);","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"                break;","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"            case \"exit\":","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"                // fallthrough","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"            case \"bye\":","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"                exit();","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"chao2048"},"content":"            default:","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"chao2048"},"content":"                Ui.help();","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"    private static void exit() {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"        Ui.printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"        storage.writeToFile(watchedListPath, watchedList.getFileWriteFormat());","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"        storage.writeToFile(toWatchListPath, toWatchList.getFileWriteFormat());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"chao2048"},"content":"     * Scan in the user input and trim extra white space.","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"chao2048"},"content":"     * If there is no input, continue to scan the next line for input.","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"chao2048"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"chao2048"},"content":"     * @return The string that the user entered","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"choongzhanhong"},"content":"    private static String inputCommand(Scanner scan) {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"choongzhanhong"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"chao2048"},"content":"        while (s.trim().isEmpty() || s.trim().charAt(0) \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"chao2048"},"content":"            s \u003d scan.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"chao2048"},"content":"        return s;","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":61,"zzs-redcocoon":8,"choongzhanhong":46,"jared-ee":23}},{"path":"src/main/java/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":" * Parses user input.","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"public class Parser {","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    public static String[] parseCommand(String userInputCommand) {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"        final String[] split \u003d userInputCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        final String[] commandTypeAndParams \u003d split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        return commandTypeAndParams;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":13}},{"path":"src/main/java/ReadCSVFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":" * Class that contains only static methods to parse CSV.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":" * To be used by Storage through delegation.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"public final class ReadCSVFile {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    // Split but ignore those in strings e.g. \"Genre, Genre, Genre\".","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    // Follow CSV convention.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    // https://stackoverflow.com/questions/1757065/java-splitting-a-comma-separated-string-but-ignoring-commas-in-quotes","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    private static final String CSV_DELIM \u003d \",(?\u003d(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    // For above, to target (and remove) the opening and closing quotes.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    private static final String REGEX_REMOVE_QUOTES \u003d \"^\\\\\\\"+|\\\\\\\"+$\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    // We only want this many movies (Note the file itself has about 130,000).","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    private static final int MAX_LINES_READ \u003d 150000;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    public static final ArrayList\u003cString[]\u003e readEntireCSV(InputStream is) {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        ArrayList\u003cString[]\u003e output \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        // Open file to read","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"        try (BufferedReader br \u003d new BufferedReader(new InputStreamReader(is))) {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"            int numLinesRead \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"            while (numLinesRead \u003c MAX_LINES_READ \u0026\u0026 (line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"                String[] row \u003d line.split(CSV_DELIM, -1);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"                for (int i \u003d 0; i \u003c row.length; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"                    row[i] \u003d trimQuotes(row[i]);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"                output.add(row);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"     * Remove start and end quotes.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"    private static String trimQuotes(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"        if (input.contains(\"\\\"\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"            String[] split \u003d input.split(REGEX_REMOVE_QUOTES);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"            for (String s : split) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"                if (!s.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"                    return s;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"        return input;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chao2048":4,"choongzhanhong":58}},{"path":"src/main/java/Review.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * A review encompasses a string (Text review).","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" * and a star review (0 to 5 scale).","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"public class Review implements Comparable\u003cReview\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    private String reviewText;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    private int reviewStars;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"     * Review constructor. If either parameter is missing, it will construct with blank ones.","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"     * @param reviewText String review in text.","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"     * @param reviewStars Integer review (0 to 5 stars)","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    public Review(String reviewText, int reviewStars) {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d reviewText;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewStars \u003d reviewStars;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    public Review(String reviewText) {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d reviewText;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewStars \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"    public Review(int reviewStars) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewStars \u003d reviewStars;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"    public Review() {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewStars \u003d 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"     * Set review for both text and stars.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"    public void setReview() {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"        // Set Review Text First","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        this.setReviewText(scan);","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\"Text review added.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"        this.setReviewStars(scan);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\"Star review added.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"        scan.close();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"     * Sets the star review from 0 to 5 (Inclusive).","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"     * Feedback to user (No change) if stars are not valid.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"     * @param stars star rating of 0 to 5 inclusive.","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"    public void setReviewStars(int stars) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"        // Bad path","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"        if (stars \u003e 5 || stars \u003c 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Hey! Reviews only from 0 to 5!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"            // Throw MovieMate exception?","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewStars \u003d stars;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"    public void setReviewStars(Scanner scan) {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"        // Sorry for arrow nesting it.","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"        while (true) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"            System.out.print(\"Please rate the movie [0 to 5]: \");","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"            if (scan.hasNextInt()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"                int stars \u003d scan.nextInt();","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"                // Bad path","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"                if (stars \u003e 5 || stars \u003c 0) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"                    System.out.println(\"Hey! Reviews only from 0 to 5!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"                    // Throw MovieMate exception?","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"                    continue;","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"                this.reviewStars \u003d stars;","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"                return;","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"            } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Please input a number [0 to 5]!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"    public int getReviewStars() {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"        return this.reviewStars;","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"     * Sets the review text, which actually requires scanner.","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"    public void setReviewText(Scanner scan) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"        String review \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\"Write your review. Use as many lines as you need. \"","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"                + \"To end, simply input a blank line.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"        // String line \u003d scan.nextLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"        // Stop when empty.","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"        while (true) {","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"            String line \u003d scan.nextLine();","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"            // has next as long as it\u0027s not whitespace only.","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"            if (line.trim().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"                break;","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"            review +\u003d line;","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d review;","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"    public String getReviewText() {","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"        return this.reviewText;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"     * Clears the review text to blank string.","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"choongzhanhong"},"content":"    public void deleteReviewText() {","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"choongzhanhong"},"content":"        this.reviewText \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"choongzhanhong"},"content":"        return String.format(\"Review: \"","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"choongzhanhong"},"content":"                + \"%s\"","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"choongzhanhong"},"content":"                + \"(%d/5 stars)\",","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"choongzhanhong"},"content":"                this.reviewText, this.reviewStars);","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"choongzhanhong"},"content":"     * Simply sort based on star value.","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"choongzhanhong"},"content":"    public int compareTo(Review r2) {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"choongzhanhong"},"content":"        return (this.reviewStars - r2.getReviewStars());","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"choongzhanhong":143}},{"path":"src/main/java/Save.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"public class Save {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"    //method that saves current content of movieList/ToWatchList into a text file","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"    //For each movie, content occupies one line in the text file like this:","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"    // TitleID/Title/Year/RunTimeMinutes/Genre1/Genre2/Genre3","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    public Save(String filepath, ArrayList\u003cMovie\u003e list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        String saveData \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        for (Movie movie : list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getTitleID() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getTitle() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getYear() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getRunTimeMinutes() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"            String[] genreArr \u003d movie.getGenres();","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"            for (String genre : genreArr) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"                saveData \u003d saveData + genre + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + \"\\n\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"            writeToFile(filepath, saveData);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"    private static void writeToFile(String filepath, String textToAdd) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        fw.close();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chao2048":18,"jared-ee":17}},{"path":"src/main/java/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.File;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":" * Class that handles data storage and loading.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":" * Discerning eyes will realise this is, more or less, taken from Zhan Hong\u0027s iP.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"public final class Storage {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    private static final String DB_PATH \u003d \"/movies_db.csv\";","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/moviemate_data.txt\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    private static final String FILE_DELIMITER \u003d \"|\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"    private final String filePath; // To store custom file path and for methods to reference.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * Constructor with custom FilePath defined","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     * @param filePath Where the saved files are stored.","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        openFile();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"     * Constructor without filepath defined.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"     * Uses default file path ({@value DEFAULT_FILE_PATH}) and runs constructor as usual.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"    public Storage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"     * Open the saved file.\u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"     * Checks if the directory and text file exist, and writes to the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"    private void openFile() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        // Create the directories required (if not exist)","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"            // Make directories, return true if successful.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"            if (file.getParentFile().mkdirs()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Successfully created directory in \" + file.getAbsolutePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Directory exists or unable to create.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"        // Create file if it doesn\u0027t exist.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"            // Returns true if created, false if already exists.","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"New save file created in \" + file.getAbsolutePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Loaded your saved movies.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"An error occurred in creating a new save file.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"     * Loads and parses each line of data in the save file.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"     * @return ArrayList ({@link java.util.ArrayList}) of String (Movie in parseable string format).","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"    public ArrayList\u003cString[]\u003e load(String path) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"        if (path.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"            // Fallback to default.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"            path \u003d this.filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"        Scanner s;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        ArrayList\u003cString[]\u003e output \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"                String[] split \u003d splitSaveFileLine(s.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"                output.add(split);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"File not found \u003e_\u003c: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"    private String[] splitSaveFileLine(String line) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"        return line.split(\"\\\\\"+ FILE_DELIMITER);","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"     * Writes input text to file.","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"     * This will overwrite existing contents (Intended, for updating)","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"     * @param textToAdd Everything to be written into the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"    public void writeToFile(String path, String textToAdd) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"        if (path.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"            // Fallback to default.","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"            path \u003d this.filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"            FileWriter writer \u003d new FileWriter(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"            writer.write(textToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"            // Add newline","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"            writer.close();","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Something wrong: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"    public ArrayList\u003cString[]\u003e loadDatabase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"        InputStream is \u003d getClass().getResourceAsStream(DB_PATH);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"        return ReadCSVFile.readEntireCSV(is);","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"choongzhanhong":122}},{"path":"src/main/java/ToWatchList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * A list of movies the user plans to watch.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"public class ToWatchList extends MovieList{","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    public ToWatchList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public ToWatchList(ArrayList\u003cString[]\u003e load) {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        super(load);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    // TODO: more methods here specific to toWatchList.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":4,"choongzhanhong":13}},{"path":"src/main/java/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":" * Text UI of the application.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"public class Ui {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"     * Show exit message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Thanks for using Movie Mate!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope to see you again soon :))\");","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"     * Show welcome message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello from Movie Mate!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello \" + in.nextLine() + \", welcome to movie mate\");","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Please enter the command to proceed with MovieMate :))\");","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"     * Show help message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"     * TODO change tbc into user guide","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"    public static void help() {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"First time using Movie Mate?\");","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Here is the link to the user guide: \");","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"tbc\");","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope it helps, and have a nice day!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"     * Shows successfully added movie to the watched/ to-watch list","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"     * @param movie The String containing movie title, year, runtime, and genre","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"    public static void showAddMovieMessage(String movie) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"You have successfully added the movie into your list!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Here is the movie detail\");","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"        System.out.println(movie);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Feel free to continue with other features\");","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"     * Show the movie list, watched or to-watch, to the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"     * @param movieList The movie list to show","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    public static void showListMessage(MovieList movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"        Integer watchId \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        for (Movie watched: movieList.movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"            System.out.print(watchId);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"            System.out.print(\". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"            System.out.println(watched.getTitle());","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"            watchId +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"These are the movies in your list, hope it helps!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"     * Show successfully deleted movie from list to the user","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"    public static void showDeleteMessage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"The movie has been deleted for you!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":74}},{"path":"src/main/java/WatchedList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class WatchedList extends MovieList {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    public WatchedList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    ","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    public WatchedList(ArrayList\u003cString[]\u003e loaded) {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"        super(loaded);","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    public void setReview(int index) {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        Movie currentMovie \u003d this.getMovie(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"        MovieEntry reviewedMovie \u003d new MovieEntry(currentMovie);","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        // Do review here.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        reviewedMovie.setReview();","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.set(index, reviewedMovie);","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"    public void deleteReview(int index) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"        Movie currentMovie \u003d this.getMovie(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"        MovieEntry reviewedMovie \u003d new MovieEntry(currentMovie);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"        reviewedMovie.deleteReview();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"        this.movieList.set(index, reviewedMovie);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"    public String viewReview(int index) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"        Movie currentMovie \u003d this.getMovie(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"jared-ee"},"content":"        MovieEntry reviewedMovie \u003d new MovieEntry(currentMovie);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jared-ee"},"content":"        return reviewedMovie.getReview();","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":6,"choongzhanhong":16,"jared-ee":16}},{"path":"src/test/java/WatchedTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"public class WatchedTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    public void dummyTest(){","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"chao2048":9}},{"path":"tp/.idea/misc.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zzs-redcocoon"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"ProjectRootManager\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coutput url\u003d\"file://$PROJECT_DIR$/out\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zzs-redcocoon":6}},{"path":"tp/.idea/modules.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zzs-redcocoon"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"ProjectModuleManager\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003cmodules\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cmodule fileurl\u003d\"file://$PROJECT_DIR$/.idea/tp.iml\" filepath\u003d\"$PROJECT_DIR$/.idea/tp.iml\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003c/modules\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zzs-redcocoon":8}},{"path":"tp/.idea/vcs.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zzs-redcocoon"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"VcsDirectoryMappings\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003cmapping directory\u003d\"$PROJECT_DIR$/..\" vcs\u003d\"Git\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zzs-redcocoon":6}},{"path":"tp/.idea/workspace.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zzs-redcocoon"},"content":"\u003cproject version\u003d\"4\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"ChangeListManager\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003clist default\u003d\"true\" id\u003d\"79b135cc-0c08-4be8-b823-1a2a280965f4\" name\u003d\"Changes\" comment\u003d\"\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../META-INF/MANIFEST.MF\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../data/further_filter.py\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../data/imdb.csv\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../data/moviemate_data.txt\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../data/movies_trimmed.csv\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../src/main/java/MovieDatabase.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../src/main/java/Storage.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange afterPath\u003d\"$PROJECT_DIR$/../src/test/java/WatchedTest.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../.gitignore\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../.gitignore\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../build.gradle\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../build.gradle\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../data/parsedata.py\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../data/parsedata.py\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../data/readme.txt\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../data/readme.md\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../docs/UserGuide.md\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../docs/UserGuide.md\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/Movie.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/Movie.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/MovieEntry.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/MovieEntry.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/MovieList.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/MovieList.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/MovieMate.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/MovieMate.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/ReadCSVFile.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/ReadCSVFile.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/ToWatchList.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/ToWatchList.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/Ui.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/Ui.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchange beforePath\u003d\"$PROJECT_DIR$/../src/main/java/WatchedList.java\" beforeDir\u003d\"false\" afterPath\u003d\"$PROJECT_DIR$/../src/main/java/WatchedList.java\" afterDir\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003c/list\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"SHOW_DIALOG\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"HIGHLIGHT_CONFLICTS\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value\u003d\"false\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"LAST_RESOLUTION\" value\u003d\"IGNORE\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"Git.Settings\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"RECENT_GIT_ROOT_PATH\" value\u003d\"$PROJECT_DIR$/..\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"ProjectId\" id\u003d\"2NDyXkwNTESAy1HDH1hw2W4vXh7\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"ProjectViewState\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"hideEmptyMiddlePackages\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003coption name\u003d\"showLibraryContents\" value\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"PropertiesComponent\"\u003e\u003c![CDATA[{","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zzs-redcocoon"},"content":"  \"keyToString\": {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zzs-redcocoon"},"content":"    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zzs-redcocoon"},"content":"    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zzs-redcocoon"},"content":"  }","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"zzs-redcocoon"},"content":"}]]\u003e\u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"SpellCheckerSettings\" RuntimeDictionaries\u003d\"0\" Folders\u003d\"0\" CustomDictionaries\u003d\"0\" DefaultDictionary\u003d\"application-level\" UseSingleDictionary\u003d\"true\" transferred\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003ccomponent name\u003d\"TaskManager\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003ctask active\u003d\"true\" id\u003d\"Default\" summary\u003d\"Default task\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cchangelist id\u003d\"79b135cc-0c08-4be8-b823-1a2a280965f4\" name\u003d\"Changes\" comment\u003d\"\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003ccreated\u003e1679212988286\u003c/created\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003coption name\u003d\"number\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003coption name\u003d\"presentableId\" value\u003d\"Default\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"zzs-redcocoon"},"content":"      \u003cupdated\u003e1679212988286\u003c/updated\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003c/task\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"zzs-redcocoon"},"content":"    \u003cservers /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"zzs-redcocoon"},"content":"  \u003c/component\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"zzs-redcocoon"},"content":"\u003c/project\u003e","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zzs-redcocoon":57}}]
