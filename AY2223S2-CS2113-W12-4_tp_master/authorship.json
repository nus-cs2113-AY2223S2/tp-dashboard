[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"# CS2113-W12-4 Team Project tP","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"To remove everything below:","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"Please download dataset (as it is a large file) from \u003ca href\u003d\"https://datasets.imdbws.com/\"\u003ethis link\u003c/a\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"Look for **title.basics.tsv.gz**. This contains basic data on titles.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"Follow up by running (TODO) processData (Which will process the TSV file into something parseable for our usage.)","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"Store it in \"/data/movies.tsv\" (so the overall path looks like this: \"tP/data/movies.tsv\")","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"choongzhanhong":11,"-":63}},{"path":"data/readme.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"This is a shortened version of the movie database that is much easier to handle without using databases, and smaller file size for easier usage for our purposes.","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"In essence, we are limiting to only movies in 2010-2020 (avoiding newly created movies in 2023 and just to be safe, 2022-2021, which may cause differences in the files)","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"Removing adult movies and unnecessary columns as well.","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"adapted from https://thatdatascienceguy.medium.com/working-with-the-imdb-dataset-589d46d230c6","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"python file added for reference too. ","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"I also made another further_filter which drops useless tables like movie type, and secondary title which we won\u0027t be using.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"Also removed those movies without runtime data and with special characters in the title.","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chao2048":1,"choongzhanhong":12}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"zzs-redcocoon"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/88608796?s\u003d400\u0026v\u003d4) | Jared Ee | [Github](https://github.com/jared-ee) | [Portfolio](docs/team/jared-ee.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Chao Yi-Ju | [Github](https://github.com/chao2048) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/65936691?v\u003d4) | Zhan Hong | [Github](https://github.com/choongzhanhong) | [Portfolio](docs/team/zhanhong.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"zzs-redcocoon"},"content":"![](https://avatars.githubusercontent.com/u/89850821) | ZhangZhanshan | [Github](https://github.com/zzs-RedCocoon) | [Portfolio](docs/team/ZhangZhanshan.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"zzs-redcocoon"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zzs-redcocoon":6,"-":3}},{"path":"docs/team/zhanhong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"# Zhan Hong - Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"I am zhan hong.","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"## Overview","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"choongzhanhong":6}},{"path":"src/main/java/Load.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.io.File;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"public class Load {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    public Load(String filepath, ArrayList\u003cMovie\u003e list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"            readFileContents(list, filepath);","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"jared-ee"},"content":"    //Reads in each line in text file separately. For each line, reinitializes the Movie class for that","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"jared-ee"},"content":"    //particular movie, then adds its to the movieList/ToWatchList","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    public static void readFileContents(ArrayList\u003cMovie\u003e list, String filepath) throws FileNotFoundException {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"jared-ee"},"content":"        File f \u003d new File(filepath);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"jared-ee"},"content":"        String line;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"            line \u003d s.nextLine();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"jared-ee"},"content":"            int slash1 \u003d line.indexOf(\"/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"            int slash2 \u003d line.indexOf(\"/\", slash1 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            int slash3 \u003d line.indexOf(\"/\", slash2 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"            int slash4 \u003d line.indexOf(\"/\", slash3 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"            int slash5 \u003d line.indexOf(\"/\", slash4 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"jared-ee"},"content":"            int slash6 \u003d line.indexOf(\"/\", slash5 + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"jared-ee"},"content":"            String titleID \u003d line.substring(0, slash1);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"jared-ee"},"content":"            String title \u003d line.substring(slash1 + 1, slash2);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"jared-ee"},"content":"            int year \u003d Integer.parseInt(line.substring(slash2 + 1, slash3));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"jared-ee"},"content":"            int runTimeMinutes \u003d Integer.parseInt(line.substring(slash3 + 1, slash4));","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"            String[] genres \u003d new String[3];","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"            genres[0] \u003d line.substring(slash4 + 1, slash5);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"            genres[1] \u003d line.substring(slash5 + 1, slash6);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"            genres[2] \u003d line.substring(slash6 + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"            Movie movie \u003d new Movie(titleID, title, year, runTimeMinutes, genres);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"            list.add(movie);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chao2048":15,"jared-ee":28}},{"path":"src/main/java/Movie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":" * Movie class containing the basic essentials of a movie.","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * A movie is categorised by its title (name), titleID (Alphanumeric way to categorise)","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" * Year of release, runtime/length (in minutes), and an array of up to 3 Genres.","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":" * Data is provided by IMDB.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"public class Movie implements Comparable\u003cMovie\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    private final String titleID;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    private final String title;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    private final int year;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    private final int runTimeMinutes;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    private final String[] genres;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"     * Default constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"     * @param titleID The Unique ID assigned to a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"     * @param title The full title of the movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"     * @param year The year the movie was made.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"     * @param runTimeMinutes The runtime (in minutes).","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * @param genres String[] of Genres, up to 3.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(String titleID, String title, int year, int runTimeMinutes, String... genres) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        this.titleID \u003d titleID;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        this.year \u003d year;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"        this.runTimeMinutes \u003d runTimeMinutes;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"        this.genres \u003d genres;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(String[] movieString) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        this.titleID \u003d movieString[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this.title \u003d movieString[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"        this.year \u003d Integer.parseInt(movieString[2]);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"        this.runTimeMinutes \u003d (int)Double.parseDouble(movieString[3]);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"        this.genres \u003d movieString[4].split(\",\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie A movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"    public Movie(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        this(movie.getTitleID(), movie.getTitle(), movie.getYear(), movie.getRunTimeMinutes(), movie.getGenres());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"     * Default comparator.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"     * Sorting rules: Alphabetical title, then year.","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"     * TODO: need to compareTo titleID in case there is a same movie same year?","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"     * @param o the object to be compared.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"     * @return","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"    public int compareTo(Movie o) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"        return (this.getTitle().equals(o.getTitle())) ?","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"                (this.getYear() - o.getYear())","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"                : (this.getTitle().compareTo(o.getTitle()));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"    public String getWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"        String splitGenres \u003d this.splitGenres();","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"        // TODO: See if i can extract the delimiter somehow...","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"        // ID|Title|Year|RunTime|Genres","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"        return String.format(\"%s|%s|%d|%d|%s\",","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"                this.titleID,","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"                this.title,","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"                this.year,","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"                this.runTimeMinutes,","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"                splitGenres);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"    public String splitGenres() {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"        for (String genre : this.genres) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"            output +\u003d genre + \",\";","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"        // Remove last comma","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"        return output.substring(0, output.length() - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"    /* Getters all here below */","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"    public String getTitleID() {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"        return titleID;","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"        return title;","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"    public int getYear() {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"        return year;","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"    public int getRunTimeMinutes() {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"        return runTimeMinutes;","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"    public String[] getGenres() {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"        return genres;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"chao2048"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"        return String.format(\"%s (%d)\", this.title, this.year);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"        /*","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"chao2048"},"content":"        return \"Title: \" + title + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"chao2048"},"content":"                \"Year: \" + year + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"chao2048"},"content":"                \"Run time: \" + runTimeMinutes + \"\\n\" +","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"chao2048"},"content":"                \"Genres: \" + genres;","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"         */","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"    ","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"chao2048":6,"choongzhanhong":110}},{"path":"src/main/java/MovieDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"public class MovieDatabase {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    // Movie will be sorted, found by its String name.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    private static TreeMap\u003cString, Movie\u003e movieDatabase;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    private static final int MAX_RELEVANT_MOVIES \u003d 5;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public MovieDatabase(ArrayList\u003cString[]\u003e movieStrings) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        System.out.print(\"Loading movie database...\");","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"        TreeMap\u003cString, Movie\u003e movies \u003d new TreeMap\u003cString, Movie\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"        // Get the headers first.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        // Not sure if this is required, but good to have I guess?","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"        // tconst, primaryTitle, startYear, runtimeMinutes, genres","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"        String[] headers \u003d movieStrings.get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        if (headers.length \u003c 5) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"There\u0027s something wrong with the CSV file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"            throw (new IOException());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        // Start from 1 to ignore headers.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        for (int i \u003d 1; i \u003c movieStrings.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"            String[] movieString \u003d movieStrings.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"            Movie movie \u003d new Movie(movieString);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"            movies.put(movie.toString(), movie);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"        this.movieDatabase \u003d movies;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        System.out.println(\" Okay, movie database loaded.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"     * Find the movies that contain the movie name entered by the user and return them","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"     * @param userInputMovieName The movie name entered by the user","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"     * @return return an array list of movies with at most five movies, whose names containing the user input movie name","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"    public static ArrayList\u003cMovie\u003e find(String userInputMovieName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"        ArrayList\u003cMovie\u003e relevantMovies \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"        Integer movieCount \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        for (Map.Entry\u003cString, Movie\u003e entry : movieDatabase.entrySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"            if (entry.getKey().toLowerCase().contains(userInputMovieName.toLowerCase())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"                relevantMovies.add(entry.getValue());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"                movieCount +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"            if (movieCount.equals(MAX_RELEVANT_MOVIES)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"        return relevantMovies;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"chao2048":24,"choongzhanhong":32}},{"path":"src/main/java/MovieEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * User-interacted Movie to be listed in {@link MovieList} MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"public class MovieEntry extends Movie {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"    private Date dateWatched;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    private String review;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    public MovieEntry(String titleID, String title, int year, int runTimeMinutes, String[] genres) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"        super(titleID, title, year, runTimeMinutes, genres);","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor...","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    public MovieEntry(Movie movie, String review) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"        super(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d review;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"     * Add (or overwrite) a review for the particular movie listing.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"     * @param review A string for your review.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"    public void setReview(String review) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d review;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    public void deleteReview(String review) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this.review \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"    public String getReview() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"        return this.review;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"     * Checks if there is an existing review.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"     * @return True if the review is not null and empty.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"    public boolean hasReview() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"        return (this.review !\u003d null \u0026\u0026 this.review !\u003d \"\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"    public String getWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"        return super.getWriteFormat()","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"                + String.format(\"|%s\", this.review);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"choongzhanhong":55}},{"path":"src/main/java/MovieList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":" * MovieList class containing the list of movies.","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":" * A movie list can be either a watched list or a to-watch list.","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"public class MovieList {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    protected ArrayList\u003cMovie\u003e movieList;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"     * Default constructed for empty MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"    public MovieList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"     * Overloaded constructor with filled MovieList.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * @param movieList List of movies.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    public MovieList(Collection\u003cMovie\u003e movieList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e(movieList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"    public MovieList(ArrayList\u003cString[]\u003e movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList \u003d new ArrayList\u003cMovie\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"        for (String[] movieString : movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"            this.movieList.add(createMovie(movieString));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"     * Add a movie to the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"    public void add(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.add(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"     * Adds a movie from the list of movies.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"     * @param inputTitle title of movie as input by user.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"    public void add(String inputTitle) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"        ArrayList\u003cMovie\u003e relevantMovies \u003d MovieDatabase.find(inputTitle);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        if (relevantMovies.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"            System.out.println( \"No relevant movie found, please try enter the movie name again!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"            return;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"        Integer id \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"        for (Movie relevantMovie: relevantMovies) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"            System.out.println(id + \". \" + relevantMovie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"            id +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Please enter the id of the movie you\u0027re looking for\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"                \"The program will then proceed with adding the movie you chose, thanks!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"        Scanner scan \u003d new Scanner(System.in);;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"        final Movie movie \u003d relevantMovies.get(Integer.parseInt(s)-1);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.add(movie);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"        Ui.showAddMovieMessage(movie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"     * Prints all the movies inside.","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"    public void list() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"        for (Movie movie : movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"            System.out.printf(\"%d. %s\\n\", i, movie.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"            i++;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"     * Remove a specific movie from the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"     * @param movie a movie.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"    public void remove(Movie movie) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.remove(movie);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"     * Remove a movie from the contained list.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"     * @param index 1-indexed index of the movie in list.","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"        index \u003d index - 1; // Offset 1-index","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"        this.movieList.remove(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"    public Movie createMovie(String[] movieStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"        String id \u003d movieStrings[0];","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"        String title \u003d movieStrings[1];","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"        int year \u003d Integer.parseInt(movieStrings[2]);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"        int runTime \u003d Integer.parseInt(movieStrings[3]);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"        String genreStrings \u003d movieStrings[4];","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"        String[] genres \u003d parseGenres(genreStrings);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"        Movie movie \u003d new Movie(id, title, year, runTime, genres);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"        if (movieStrings.length \u003d\u003d 5) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"            // Make a normal Movie","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"            return movie;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"            // movie entry.","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"            String review \u003d movieStrings[6];","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"            return new MovieEntry(movie, review);","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"    private String[] parseGenres(String genreStrings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"        String[] genres \u003d genreStrings.split(\",\");","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"        return genres;","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"    public String getFileWriteFormat() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"        for (Movie movie : this.movieList) {","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"choongzhanhong"},"content":"            output +\u003d movie.getWriteFormat() + \u0027\\n\u0027;","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"choongzhanhong"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"choongzhanhong"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"choongzhanhong"},"content":"        return this.movieList.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":30,"choongzhanhong":101}},{"path":"src/main/java/MovieMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":" * Movie Mate class is the main class that starts running the program.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":" *","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"public class MovieMate {","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"    private static String filePath \u003d \"data/movies.csv\";","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"    private static String watchedListPath \u003d \"data/moviemate_watchlist.txt\";","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    private static String toWatchListPath \u003d \"data/moviemate_towatch.txt\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    private static WatchedList watchedList \u003d new WatchedList(storage.load(watchedListPath));","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    private static ToWatchList toWatchList \u003d new ToWatchList(storage.load(toWatchListPath));","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    private static MovieDatabase movieDatabase;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    static {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"            movieDatabase \u003d new MovieDatabase(storage.loadDatabase());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Critical error: You might be missing a database file.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"            System.exit(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        Ui.showWelcomeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"        // Initialise Scanner","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"        while(true) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"            // Get user input and parse it.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"            String userInput \u003d inputCommand(scan);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"            String[] commandTypeAndParams \u003d Parser.parseCommand(userInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"            String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"            String commandArg \u003d commandTypeAndParams[1];","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"            switch (commandType) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"            case \"watched\":","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"                // add to watched list","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"                watchedList.add(commandArg);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"            case \"towatch\":","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"                // add to to-watch list","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"                toWatchList.add(commandArg);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"            case \"help\":","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"                Ui.help();","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"            case \"list\":","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"                // list the watched list","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"                watchedList.list();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"            case \"watchlist\":","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"                // list the to-watch list","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"                toWatchList.list();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"                Ui.printLine();   ","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"            case \"seedetail\":","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"                // find relevant movie info","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"            case \"exit\":","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"                // fallthrough","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"            case \"bye\":","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"                exit();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"            default:","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"                Ui.help();","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"    private static void exit() {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        Ui.showExitMessage();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"        Ui.printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"        storage.writeToFile(watchedListPath, watchedList.getFileWriteFormat());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"        storage.writeToFile(toWatchListPath, toWatchList.getFileWriteFormat());","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"chao2048"},"content":"     * Scan in the user input and trim extra white space.","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"chao2048"},"content":"     * If there is no input, continue to scan the next line for input.","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"chao2048"},"content":"     * @return The string that the user entered","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    private static String inputCommand(Scanner scan) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"chao2048"},"content":"        s \u003d scan.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"chao2048"},"content":"        while (s.trim().isEmpty() || s.trim().charAt(0) \u003d\u003d \u0027#\u0027) {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"chao2048"},"content":"            s \u003d scan.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"chao2048"},"content":"        return s;","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":56,"choongzhanhong":42}},{"path":"src/main/java/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":" * Parses user input.","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":"public class Parser {","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"    public static String[] parseCommand(String userInputCommand) {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"        final String[] split \u003d userInputCommand.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"        final String[] commandTypeAndParams \u003d split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"        return commandTypeAndParams;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":13}},{"path":"src/main/java/ReadCSVFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":" * Class that contains only static methods to parse CSV.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":" * To be used by Storage through delegation.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"public final class ReadCSVFile {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    // Split but ignore those in strings e.g. \"Genre, Genre, Genre\".","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    // Follow CSV convention.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"    // https://stackoverflow.com/questions/1757065/java-splitting-a-comma-separated-string-but-ignoring-commas-in-quotes","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    private static final String CSV_DELIM \u003d \",(?\u003d(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    // For above, to target (and remove) the opening and closing quotes.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    private static final String REGEX_REMOVE_QUOTES \u003d \"^\\\\\\\"+|\\\\\\\"+$\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"    // We only want this many movies (Note the file itself has about 130,000).","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    private static final int MAX_LINES_READ \u003d 150000;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"    public static final ArrayList\u003cString[]\u003e readEntireCSV(String filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"        String line \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        ArrayList\u003cString[]\u003e output \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        // Open file to read","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"            Integer numLinesRead \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"            while (numLinesRead \u003c MAX_LINES_READ \u0026\u0026 (line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"                String[] row \u003d line.split(CSV_DELIM, -1);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"                for (int i \u003d 0; i \u003c row.length; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"                    row[i] \u003d trimQuotes(row[i]);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"                output.add(row);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"     * Remove start and end quotes.","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"    private static String trimQuotes(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"        if (input.contains(\"\\\"\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"            String[] split \u003d input.split(REGEX_REMOVE_QUOTES);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"            for (String s : split) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"                if (!s.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"                    return s;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"        return input;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"chao2048":7,"choongzhanhong":54}},{"path":"src/main/java/Save.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jared-ee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"jared-ee"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"jared-ee"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"jared-ee"},"content":"public class Save {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"jared-ee"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"jared-ee"},"content":"    //method that saves current content of movieList/ToWatchList into a text file","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"jared-ee"},"content":"    //For each movie, content occupies one line in the text file like this:","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"jared-ee"},"content":"    // TitleID/Title/Year/RunTimeMinutes/Genre1/Genre2/Genre3","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    public Save(String filepath, ArrayList\u003cMovie\u003e list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        String saveData \u003d \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        for (Movie movie : list) {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getTitleID() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getTitle() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getYear() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + movie.getRunTimeMinutes() + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"            String[] genreArr \u003d movie.getGenres();","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"            for (String genre : genreArr) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"                saveData \u003d saveData + genre + \"/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"jared-ee"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"            saveData \u003d saveData + \"\\n\";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"jared-ee"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"            writeToFile(filepath, saveData);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"jared-ee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"jared-ee"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"jared-ee"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"jared-ee"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"    private static void writeToFile(String filepath, String textToAdd) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"        fw.close();","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"jared-ee"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chao2048":18,"jared-ee":17}},{"path":"src/main/java/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.io.File;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"choongzhanhong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":" * Class that handles data storage and loading.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":" * Discerning eyes will realise this is, more or less, taken from Zhan Hong\u0027s iP.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"public final class Storage {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    private static final String DATABASE_PATH \u003d \"data/movies_trimmed.csv\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/moviemate_data.txt\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    private static final String FILE_DELIMITER \u003d \"|\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"choongzhanhong"},"content":"    private String filePath; // To store custom file path and for methods to reference.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"choongzhanhong"},"content":"     * Constructor with custom FilePath defined","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"choongzhanhong"},"content":"     * @param filePath Where the saved files are stored.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"choongzhanhong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"choongzhanhong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"choongzhanhong"},"content":"        openFile();","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"choongzhanhong"},"content":"     * Constructor without filepath defined.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"choongzhanhong"},"content":"     * Uses default file path ({@value DEFAULT_FILE_PATH}) and runs constructor as usual.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"choongzhanhong"},"content":"    public Storage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"choongzhanhong"},"content":"        this(DEFAULT_FILE_PATH);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"choongzhanhong"},"content":"     * Open the saved file.\u003cbr\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"choongzhanhong"},"content":"     * Checks if the directory and text file exist, and writes to the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"choongzhanhong"},"content":"    private void openFile() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"choongzhanhong"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"choongzhanhong"},"content":"        // Create the directories required (if not exist)","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"choongzhanhong"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"choongzhanhong"},"content":"            // Make directories, return true if successful.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"choongzhanhong"},"content":"            if (file.getParentFile().mkdirs()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Successfully created directory in \" + file.getAbsolutePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"choongzhanhong"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"Directory exists or unable to create.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"choongzhanhong"},"content":"        // Check if file exists.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"choongzhanhong"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"choongzhanhong"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"choongzhanhong"},"content":"                file.createNewFile();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"choongzhanhong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"choongzhanhong"},"content":"                System.out.println(\"An error occurred in creating a new save file.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"New save file created in \" + file.getAbsolutePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"choongzhanhong"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Loaded your saved movies.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"choongzhanhong"},"content":"     * Loads and parses each line of data in the save file.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"choongzhanhong"},"content":"     * @return ArrayList ({@link java.util.ArrayList}) of String (Movie in parseable string format).","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"choongzhanhong"},"content":"    public ArrayList\u003cString[]\u003e load(String path) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"choongzhanhong"},"content":"        if (path.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"choongzhanhong"},"content":"            // Fallback to default.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"choongzhanhong"},"content":"            path \u003d this.filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"choongzhanhong"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"choongzhanhong"},"content":"        Scanner s;","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"choongzhanhong"},"content":"        ArrayList\u003cString[]\u003e output \u003d new ArrayList\u003cString[]\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"choongzhanhong"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"choongzhanhong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"choongzhanhong"},"content":"                String[] split \u003d splitSaveFileLine(s.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"choongzhanhong"},"content":"                output.add(split);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"choongzhanhong"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"choongzhanhong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"File not found \u003e_\u003c: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"choongzhanhong"},"content":"        return output;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"choongzhanhong"},"content":"    private String[] splitSaveFileLine(String line) {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"choongzhanhong"},"content":"        return line.split(\"\\\\|\");","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"choongzhanhong"},"content":"        // return line.split(\"\\\\s+\" + \"\\\\\" + FILE_DELIMITER + \"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"choongzhanhong"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"choongzhanhong"},"content":"     * Writes input text to file.","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"choongzhanhong"},"content":"     * This will overwrite existing contents (Intended, for updating)","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"choongzhanhong"},"content":"     * @param textToAdd Everything to be written into the file.","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"choongzhanhong"},"content":"     * @throws IOException Unable to write successfully.","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"choongzhanhong"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"choongzhanhong"},"content":"    public void writeToFile(String path, String textToAdd) {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"choongzhanhong"},"content":"        if (path.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"choongzhanhong"},"content":"            // Fallback to default.","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"choongzhanhong"},"content":"            path \u003d this.filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"choongzhanhong"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"choongzhanhong"},"content":"            FileWriter writer \u003d new FileWriter(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"choongzhanhong"},"content":"            writer.write(textToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"choongzhanhong"},"content":"            // Add newline","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"choongzhanhong"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"choongzhanhong"},"content":"            writer.close();","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"choongzhanhong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"choongzhanhong"},"content":"            System.out.println(\"Something wrong: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"choongzhanhong"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"choongzhanhong"},"content":"    public ArrayList\u003cString[]\u003e loadDatabase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"choongzhanhong"},"content":"        return ReadCSVFile.readEntireCSV(DATABASE_PATH);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"choongzhanhong"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"choongzhanhong":121}},{"path":"src/main/java/ToWatchList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"choongzhanhong"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":" * A list of movies the user plans to watch.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"choongzhanhong"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"public class ToWatchList extends MovieList{","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"    public ToWatchList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"choongzhanhong"},"content":"    public ToWatchList(ArrayList\u003cString[]\u003e load) {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"choongzhanhong"},"content":"        super(load);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"choongzhanhong"},"content":"    // TODO: more methods here specific to toWatchList.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":4,"choongzhanhong":13}},{"path":"src/main/java/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao2048"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"chao2048"},"content":" * Text UI of the application.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"public class Ui {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"chao2048"},"content":"     * Show exit message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"chao2048"},"content":"    public static void showExitMessage() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Thanks for using Movie Mate!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope to see you again soon :))\");","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"chao2048"},"content":"    public static void printLine() {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"-------------------------------------------------------------------------\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"chao2048"},"content":"     * Show welcome message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"chao2048"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello from Movie Mate!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"chao2048"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hello \" + in.nextLine() + \", welcome to movie mate\");","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Please enter the command to proceed with MovieMate :))\");","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"chao2048"},"content":"     * Show help message to the user","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"chao2048"},"content":"     * TODO change tbc into user guide","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"chao2048"},"content":"    public static void help() {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"First time using Movie Mate?\");","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Here is the link to the user guide: \");","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"tbc\");","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Hope it helps, and have a nice day!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"chao2048"},"content":"     * Shows successfully added movie to the watched/ to-watch list","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"chao2048"},"content":"     * @param movie The String containing movie title, year, runtime, and genre","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"chao2048"},"content":"    public static void showAddMovieMessage(String movie) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"You have successfully added the movie into your list!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Here is the movie detail\");","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"chao2048"},"content":"        System.out.println(movie);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"Feel free to continue with other features\");","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"chao2048"},"content":"     * Show the movie list, watched or to-watch, to the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"chao2048"},"content":"     * @param movieList The movie list to show","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"chao2048"},"content":"    public static void showListMessage(MovieList movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"chao2048"},"content":"        Integer watchId \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"chao2048"},"content":"        for (Movie watched: movieList.movieList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"chao2048"},"content":"            System.out.print(watchId);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"chao2048"},"content":"            System.out.print(\". \");","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"chao2048"},"content":"            System.out.println(watched.getTitle());","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"chao2048"},"content":"            watchId +\u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"chao2048"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"These are the movies in your list, hope it helps!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"chao2048"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"chao2048"},"content":"     * Show successfully deleted movie from list to the user","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"chao2048"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"chao2048"},"content":"    public static void showDeleteMessage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"chao2048"},"content":"        System.out.println(\"The movie has been deleted for you!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"chao2048"},"content":"        printLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":74}},{"path":"src/main/java/WatchedList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"choongzhanhong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"chao2048"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"chao2048"},"content":"public class WatchedList extends MovieList {","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"choongzhanhong"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"chao2048"},"content":"    public WatchedList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chao2048"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chao2048"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"choongzhanhong"},"content":"    ","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"choongzhanhong"},"content":"    public WatchedList(ArrayList\u003cString[]\u003e loaded) {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"choongzhanhong"},"content":"        super(loaded);","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"choongzhanhong"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"chao2048"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chao2048":6,"choongzhanhong":6}}]
