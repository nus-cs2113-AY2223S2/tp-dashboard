[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"theme: minima","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ong-ck":2,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    mainClass \u003d \"seedu.clialgo.CLIAlgo\"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"    archiveBaseName \u003d \"clialgo\"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heejet":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |    Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"--------|:-----------:|:--------------:|:---------:","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"![](https://avatars.githubusercontent.com/u/88279614?s\u003d400\u0026u\u003d3271621fb9d98584e92a54677e4e386854d94ec5\u0026v\u003d4) | Ong Hee Jet | [Github](https://github.com/heejet) | [Portfolio](team/ongheejet.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"![](https://avatars.githubusercontent.com/u/88373092?v\u003d4) | Loh Joo Hoe | [Github](https://github.com/lohjooh) | [Portfolio](team/lohjoohoe.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"![](https://avatars.githubusercontent.com/u/88139349?s\u003d400\u0026u\u003d1a6d496e41aae8ff748ef6aad040be452b531cd4\u0026v\u003d4) | Nikhil Shashidhar | [Github](https://github.com/nikkiDEEE) | [Portfolio](team/nikhil.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":"![](https://avatars.githubusercontent.com/u/85627680?s\u003d400\u0026u\u003d07e24badd619ed48cab013038fe25c7201e111a0\u0026v\u003d4) | Ong Chuan Kai | [Github](https://github.com/ong-ck) | [Portfolio](team/ongchuankai.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"![](https://avatars.githubusercontent.com/u/88270205?v\u003d4) | Nicholas H Goh Maowen | [Github](https://github.com/nicholas132000) | [Portfolio](team/nicholas.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nicholas132000":4,"lohjooh":2,"heejet":1,"ong-ck":2,"-":3}},{"path":"docs/team/lohjoohoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"# Loh Joo Hoe - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"lohjooh":6}},{"path":"docs/team/nicholas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"# Nicholas H Goh Maowen - Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"## Overview","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nicholas132000":6}},{"path":"docs/team/nikhil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"# Nikhil - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"nikkiDEEE":6}},{"path":"docs/team/ongchuankai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"# Ong Chuan Kai - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ong-ck":1,"-":5}},{"path":"docs/team/ongheejet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"# Ong Hee Jet - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"heejet":6}},{"path":"src/main/java/seedu/clialgo/CLIAlgo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"public class CLIAlgo {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    private final Ui ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    private final TopicManager topicManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    private final FileManager fileManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    private final Parser parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    public CLIAlgo() {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"        String dataPath \u003d \".\\\\data\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"        topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"        fileManager \u003d new FileManager(dataPath, topicManager.getTopicNames());","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    /** Continuously reads in the user input until the exit command is executed */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    private void run() {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"        fileManager.initialize();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"        while (true) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"            String fullCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"            Command command \u003d parser.parse(fullCommand, topicManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"            command.execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lohjooh":8,"heejet":32,"-":5}},{"path":"src/main/java/seedu/clialgo/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":" * The \u003ccode\u003eNote\u003c/code\u003e object represents each note file that the user can add into CLIAlgo.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"public class Note {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"    private String name;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    private String path;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    private String tag;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"     * Constructor for \u003ccode\u003eNote\u003c/code\u003e object.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"     * @param path Path to the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"     * @param tag Topic that note file should be tagged.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    public Note(String name, String path, String tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     * Prints the name of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    public void printNoteName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        System.out.println(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"     * Gets the location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"     * @return The location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"    public String getPath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"        return path;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"     * Sets the location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"     * @param path The new location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"    public void setPath(String path) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"     * Gets the tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"     * @return The tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"    public String getTag() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"        return tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"     * Sets the tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"     * @param tag The new tag for the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"    public String getName() {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        return this.name;","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":64,"heejet":7}},{"path":"src/main/java/seedu/clialgo/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.FilterCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.HelpCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.InvalidCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.InvalidTopicCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.command.NameNotFoundCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.RemoveCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"public class Parser implements StringManipulation {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    /** Delimiters use to separate inputs within commands */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    public static final String NAME_MARKER \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    public static final String COMMAND_MARKER \u003d \"c/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    public static final String TOPIC_MARKER \u003d \"t/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    public static final String KEYWORD_MARKER \u003d \"k/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"    public static final String WHITE_SPACE \u003d \" \";","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"    /** List of valid commands */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    private static final ArrayList\u003cString\u003e COMMANDS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"            Arrays.asList(\"help\", \"add\", \"remove\", \"filter\", \"exit\", \"list\")","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    );","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"     * Checks if the input string is a valid command.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"     * @param keyWord The input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"     * @return True if the input string is a valid keyword, False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"    public boolean isValidCommand(String keyWord) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"        return COMMANDS.contains(keyWord);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"     * Checks if the correct marker is used by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @param correctMarker The correct marker that is supposed to be used.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @return True if the marker used by the user matches correctMarker. False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     * @throws IndexOutOfBoundsException If length of userInput \u003c length of correctMarker.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"    public boolean isCorrectMarker(String userInput, String correctMarker) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        String markerPresent \u003d userInput.substring(0, correctMarker.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        return markerPresent.equals(correctMarker);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eHelpCommand\u003c/code\u003e object that teaches the user how to use CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eHelpCommand\u003c/code\u003e using the default constructor if description is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"     * @param description A string indicating the command the user need help with.","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"     * @return A Command object that teaches the user how to use CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"    private Command prepareHelpCommand(String description) {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"        // No description provided, show generic help message.","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"        String command;","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"            if (!isCorrectMarker(description, COMMAND_MARKER)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"            command \u003d StringManipulation.removeMarker(description, COMMAND_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"            if (!isValidCommand(command)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"        } catch (IndexOutOfBoundsException | EmptyFieldException | NullInputException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"        return new HelpCommand(command);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eAddCommand\u003c/code\u003e object that adds a note to CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"     * @param description String containing the information on the note to be added.","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"     * @return a Command object that adds a note to CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"    private Command prepareAddCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"        String noteName;","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"        String topicName;","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"ong-ck"},"content":"            String noteNameWithMarker \u003d StringManipulation.getFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"            topicName \u003d StringManipulation.removeFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"            if (topicName \u003d\u003d null || topicName.equals(\"\") || !isCorrectMarker(noteNameWithMarker, NAME_MARKER)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"ong-ck"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"ong-ck"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"            if (!topics.isValidTopic(topicName)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"ong-ck"},"content":"                return new InvalidTopicCommand(topicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"ong-ck"},"content":"            noteName \u003d StringManipulation.removeMarker(noteNameWithMarker, NAME_MARKER);","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"ong-ck"},"content":"        } catch (NullInputException | EmptyFieldException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"        return new AddCommand(noteName, topicName);","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eRemoveCommand\u003c/code\u003e object that deletes a note from CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"nicholas132000"},"content":"     * Returns \u003ccode\u003eNameNotFoundCommand\u003c/code\u003e when the user does not key in an existing note name.","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"     * @param description String containing the information on the note to be removed.","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"     * @return a Command object that deletes a note from CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"    private Command prepareRemoveCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"        String noteName;","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"            if (!isCorrectMarker(description, NAME_MARKER)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"            noteName \u003d StringManipulation.removeMarker(description, NAME_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"nicholas132000"},"content":"            if (!topics.noteExist(noteName)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"nicholas132000"},"content":"                return new NameNotFoundCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException | EmptyFieldException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        return new RemoveCommand(noteName);","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eFilterCommand\u003c/code\u003e object that lists notes according a certain criteria.","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"     * @param description String containing criteria to filter the notes by.","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"     * @return a Command object that lists notes according a certain criteria.","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"    private Command prepareFilterCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"        String keyWord;","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"        String topicName;","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"            String fullKeyWord \u003d StringManipulation.getFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"            topicName \u003d StringManipulation.removeFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"            if (fullKeyWord.equals(\"\") || !isCorrectMarker(fullKeyWord, KEYWORD_MARKER)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"            if (topicName!\u003d null \u0026\u0026 !topics.isValidTopic(topicName)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"                return new InvalidTopicCommand(topicName);","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"            keyWord \u003d StringManipulation.removeMarker(fullKeyWord, KEYWORD_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException | EmptyFieldException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"heejet"},"content":"        return new FilterCommand(keyWord, topicName);","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"heejet"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that list out the notes stored in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"heejet"},"content":"    private Command prepareListCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"heejet"},"content":"        return new ListCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"heejet"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that exits CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"heejet"},"content":"    private Command prepareExitCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"heejet"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"heejet"},"content":"     * This function takes in the command keyword and description and executes the specified command.","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"heejet"},"content":"     * @param command The command keyword indicating the type of command to execute.","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"heejet"},"content":"     * @param description The string specifying the details of the command.","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"heejet"},"content":"     * @return A Command object that executes the command corresponding to the command keyword keyed in by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"heejet"},"content":"    private Command prepareCommand(String command, String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"heejet"},"content":"        switch (command) {","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"heejet"},"content":"        case \"help\":","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"heejet"},"content":"            return prepareHelpCommand(description);","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"heejet"},"content":"        case \"add\":","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"heejet"},"content":"            return prepareAddCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"heejet"},"content":"        case \"remove\":","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"heejet"},"content":"            return prepareRemoveCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"heejet"},"content":"        case \"filter\":","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"heejet"},"content":"            return prepareFilterCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"heejet"},"content":"        case \"list\":","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"heejet"},"content":"            return prepareListCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"heejet"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"heejet"},"content":"            return prepareExitCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"heejet"},"content":"     * Returns the appropriate Command object based on the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"heejet"},"content":"     * @param fullCommand The full user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"heejet"},"content":"     * @return A Command objects that suits the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"heejet"},"content":"    public Command parse(String fullCommand, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"heejet"},"content":"        String command;","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"heejet"},"content":"        String description;","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"heejet"},"content":"            command \u003d StringManipulation.getFirstWord(fullCommand, WHITE_SPACE);","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"heejet"},"content":"            if (!isValidCommand(command)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"heejet"},"content":"            description \u003d StringManipulation.removeFirstWord(fullCommand, WHITE_SPACE);","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"heejet"},"content":"        return prepareCommand(command, description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":5,"lohjooh":11,"heejet":212,"ong-ck":6}},{"path":"src/main/java/seedu/clialgo/StringManipulation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"public interface StringManipulation {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"     * Extracts out the first word of an input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"     * @return The first word of the string.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If the userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    static String getFirstWord(String userInput, String regex) throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(regex, 2);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        return processedInputs[0].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"     * Removes the first word of an input string and returns the remaining string.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"     * Returns null if the string only consist of one word.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"     * @return The input string with the first word removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    static String removeFirstWord(String userInput, String regex) throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(regex, 2);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"        if (processedInputs.length \u003c\u003d 1 || processedInputs[1].trim().equals(\"\")) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"            return null;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        return processedInputs[1].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"     * This method removes the marker from the keyword and returns the keyword.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     * @param userInput The input with the marker at the front.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     * @param marker The marker to be removed.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @return userInput with the marker removed at the front.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @throws EmptyFieldException If the string is empty after removing the keyword.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"    static String removeMarker(String userInput, String marker) throws EmptyFieldException, NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"        String keyword \u003d userInput.substring(marker.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"        return keyword.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"heejet":60}},{"path":"src/main/java/seedu/clialgo/Topic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":" * The \u003ccode\u003eTopic\u003c/code\u003e object handles the operations of the notes within a specific topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"public class Topic {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"    private final String topicName;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"    private final HashMap\u003cString, Note\u003e notes;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"     * Constructor for \u003ccode\u003eTopic\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"     * @param topicName The name of the topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"    public Topic(String topicName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"        this.topicName \u003d topicName;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"        notes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"    public Topic(String topicName, HashMap\u003cString, Note\u003e notes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        this.topicName \u003d topicName;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ong-ck"},"content":"    public HashMap\u003cString, Note\u003e getNotes() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ong-ck"},"content":"        return notes;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"     * Adds a note linked to a specific topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"     * @param note A \u003ccode\u003eNote\u003c/code\u003e object representing the note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"    public void addNote(String name, Note note) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"        notes.put(name, note);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"    /** Checks if the topic have not notes inside */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"        return this.notes.isEmpty();","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"nicholas132000"},"content":"     * Removes a note based on its name","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"nicholas132000"},"content":"     * @param name Name of the note file","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"nicholas132000"},"content":"    public boolean removeNote(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"nicholas132000"},"content":"        notes.remove(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"nicholas132000"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"     * Gets all notes stored in this specific topic and stores them in an ArrayList.","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"     * @return An ArrayList containing all the notes stored in this topic.","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"    public ArrayList\u003cString\u003e getAllNotesInTopic() {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e topicNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"        for (Map.Entry\u003cString, Note\u003e entry : notes.entrySet()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"            String noteName \u003d entry.getValue().getName();","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"            topicNotes.add(noteName);","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"        return topicNotes;","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ong-ck"},"content":"     * A method that checks for equality of \u003ccode\u003eTopic\u003c/code\u003e objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ong-ck"},"content":"     * @param otherTopic The other \u003ccode\u003eTopic\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eTopic\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ong-ck"},"content":"    public boolean equals(Topic otherTopic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ong-ck"},"content":"        return Objects.equals(this.topicName, otherTopic.topicName) \u0026\u0026","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ong-ck"},"content":"                Objects.equals(this.notes, otherTopic.notes);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":19,"lohjooh":3,"heejet":23,"ong-ck":40}},{"path":"src/main/java/seedu/clialgo/TopicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":" * The \u003ccode\u003eTopicManager\u003c/code\u003e object handles the","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"public class TopicManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    /** List of valid topics */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    private static final ArrayList\u003cString\u003e TOPIC_NAMES \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"            Arrays.asList(\"SORTING\", \"LINKED_LIST\", \"GRAPH_STRUCTURES\", \"BINARY_HEAP\", \"HASH_TABLE\", \"GRAPH_TRAVERSAL\",","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"                    \"BINARY_SEARCH_TREE\", \"SS_SHORTEST_PATH\", \"UNION_FIND_DS\", \"MINIMUM_SPANNING_TREE\")","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"    );","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    /** General HashSet to check for duplicate names. */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    private final HashSet\u003cString\u003e allNotes;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"    /** Data Structure to hold all the topics */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"    private final HashMap\u003cString, Topic\u003e topics;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"    public TopicManager() {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"        allNotes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"        topics \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"        for (String topicName : TOPIC_NAMES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"            topics.put(topicName, new Topic(topicName));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"    public TopicManager(HashSet\u003cString\u003e allNotes, HashMap\u003cString, Topic\u003e topics) {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"        this.allNotes \u003d allNotes;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        this.topics \u003d topics;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"nicholas132000"},"content":"    public HashMap\u003cString, Topic\u003e getTopics() {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"nicholas132000"},"content":"        return this.topics;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"    public ArrayList\u003cString\u003e getTopicNames() {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"        return TOPIC_NAMES;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"     * Adds a new note into the specific \u003ccode\u003eTopic\u003c/code\u003e object","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"     * while keeping track of the names of all notes added.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"     * Name of the note to be added cannot be the same as a previously added note.","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"     * @param noteName Name of the note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"     * @param topicName Name of the topic the note is added to.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"     * @param note The \u003ccode\u003eNote\u003c/code\u003e object representing the note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"     * @return True if note is successfully added and False otherwise.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"    public boolean addNote(String noteName, String topicName, Note note) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"        // Check if note name has been taken","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ong-ck"},"content":"        if (allNotes.contains(noteName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ong-ck"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ong-ck"},"content":"        // Adds note into topic hashmap","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ong-ck"},"content":"        topics.get(topicName).addNote(noteName, note);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ong-ck"},"content":"        // Keep track of name of note added","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ong-ck"},"content":"        allNotes.add(noteName);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ong-ck"},"content":"        return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"     * Checks if the input string is a valid topic.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"     * @param topic The input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"     * @return True if the input string is a valid topic, False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"    public boolean isValidTopic(String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nicholas132000"},"content":"        return TOPIC_NAMES.contains(topic);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"nicholas132000"},"content":"     * Removes a note from the specific \u003ccode\u003eTopic\u003c/code\u003e object","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"nicholas132000"},"content":"     * while keeping track of the names of all notes remaining.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"nicholas132000"},"content":"     * Name of the note to be removed must be currently in the \u003ccode\u003eTopic\u003c/code\u003e object .","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"nicholas132000"},"content":"     * @param noteName Name of the note file","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"nicholas132000"},"content":"    public boolean removeNote(String noteName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"nicholas132000"},"content":"        for (String topicName : TOPIC_NAMES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"nicholas132000"},"content":"            // check which topic contains that particular note","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"nicholas132000"},"content":"            if ((topics.get(topicName).getNotes()).containsKey(noteName)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"nicholas132000"},"content":"                // remove name of note from the allNotes set to keep track of names","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"nicholas132000"},"content":"                allNotes.remove(noteName);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"nicholas132000"},"content":"                // remove the note from that particular topic","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"nicholas132000"},"content":"                return topics.get(topicName).removeNote(noteName);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"nicholas132000"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"nicholas132000"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"nicholas132000"},"content":"     * Checks if the name of a note exists.","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"nicholas132000"},"content":"     * @param noteName Name of the note file","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"nicholas132000"},"content":"     * @return Returns true if name of note file exists, false if otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"nicholas132000"},"content":"    public boolean noteExist (String noteName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"nicholas132000"},"content":"        for (String topicName : TOPIC_NAMES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"nicholas132000"},"content":"            return (topics.get(topicName).getNotes()).containsKey(noteName);","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"nicholas132000"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"    /** Checks if there are any notes stored in CLIAlgo. */","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"        return allNotes.isEmpty();","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"    /** Checks if a specified topic has no notes stored in it. */","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"    public boolean isTopicEmpty(String topic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        return topics.get(topic).isEmpty();","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"    /** Checks if a given note name have been used before. */","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"    public boolean isRepeatedNote(String noteName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"        return this.allNotes.contains(noteName);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"     * Gets all notes stored in CLIAlgo and stores it in an ArrayList.","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"     * @return An ArrayList containing all the names of the notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"    public ArrayList\u003cString\u003e getAllNotes() {","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e toPrintNotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        for (Map.Entry\u003cString, Topic\u003e entry : topics.entrySet()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"            Topic currentTopic \u003d entry.getValue();","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"            toPrintNotes.addAll(currentTopic.getAllNotesInTopic());","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"        return toPrintNotes;","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"     * Get a list of all note stored in a specified topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"     * @param topic The specified topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"     * @return An ArrayList containing names of all the notes stored in the specified topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"    public ArrayList\u003cString\u003e getNotesByTopic(String topic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"        return topics.get(topic).getAllNotesInTopic();","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"     * Get a list of all topics stored in CLIAlgo that are grouped by topics.","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"     * @return An HashMap containing all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"    public HashMap\u003cString, ArrayList\u003cString\u003e\u003e getAllNotesByTopic() {","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e toPrintNotes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"        for (Map.Entry\u003cString, Topic\u003e entry : topics.entrySet()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"            Topic currentTopic \u003d entry.getValue();","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"            if (currentTopic.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"                continue;","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"            toPrintNotes.put(entry.getKey(), currentTopic.getAllNotesInTopic());","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"heejet"},"content":"        return toPrintNotes;","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":57,"lohjooh":6,"heejet":84,"ong-ck":26}},{"path":"src/main/java/seedu/clialgo/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":" * Text UI of the application.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"public class Ui {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"     * Scanner object to read user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"    private final Scanner in;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"    public Ui() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns user input","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"     * @return userInput A String input by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a divider","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    public void printDivider() {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the intro message when application starts","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Hello! Welcome to CLIAlgo Notes!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the outro message when the application is closed","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Thank you for using CLIAlgo! Study hard!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a list of valid (available) user commands","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help\")","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpPage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"The available COMMAND_TYPE(s) are:\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[add]: add note\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[remove]: remove note\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[list]: displays all notes\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[filter]: filters notes by topic\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[exit]: close the application\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"                        \"For more help on a specific command, type `help c/COMMAND_TYPE`\");","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating successful addition of the notes to the tagged topic in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"     * @param name the name of the notes defined by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"     * @param topic the CS2040C topic","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"    public void printAddSuccess(String name, String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Successfully added %s into %s.%n\", name, topic);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating the failure to add notes to a topic (which does not exist in CS2040)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"     * @param topic the CS2040C topic","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"    public void printAddFail(String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Unsuccessful! %s is not a topic in CS2040C.%n\", topic);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Type \u0027help c/add\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the list of notes saved by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"    public void printListSuccess() {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Here are all your notes:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message if user has no saved notes","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"    public void printListFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"You have no notes!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/list\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating successful purge of a user-defined notes","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"nikkiDEEE"},"content":"     * @param name the name of the notes defined by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"nikkiDEEE"},"content":"    public void printRemoveSuccess(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Successfully removed %s.%n\", name);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message if user has not used appropriate flags/no notes exist of the specific name","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"nikkiDEEE"},"content":"    public void printRemoveFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/remove\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a filtered set of notes user-specified by keyword and topic name","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"nikkiDEEE"},"content":"    public void printFilterSuccess() {","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Here are the filtered notes:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a filtered set of notes user-specified by keyword and topic name","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"nikkiDEEE"},"content":"    public void printFilterFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/filter\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027add\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/add\")","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpAdd() {","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function adds a note and tags it to a topic.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027add\u0027 command is: add n/NAME t/TOPIC.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"nikkiDEEE"},"content":"                        \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"nikkiDEEE"},"content":"                        \"TOPIC refers to the topic that NAME will be tagged to.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Case sensitive. NAME and TOPIC fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid NAME or TOPIC will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027remove\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/remove\")","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpRemove() {","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function removes a note from the tagged topic.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027remove\u0027 command is: remove n/NAME.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"nikkiDEEE"},"content":"                        \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"nikkiDEEE"},"content":"                        \"\u0027n/\u0027 must be included else NAME will not be read.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid NAME will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027list\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/list\")","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function lists all stored notes.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027list\u0027 command is: list.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Command should only contain one word (i.e. no extensions).\");","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027filter\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/filter\")","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpFilter() {","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function filters by topic/importance and topic name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027filter\u0027 command is: filter k/KEYWORD t/TOPIC_NAME\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"nikkiDEEE"},"content":"                        \"KEYWORD has to be either \u0027topic\u0027 or \u0027importance\u0027.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"nikkiDEEE"},"content":"                        \"TOPIC_NAME can be any (one) of the pre-defined topics in CS2040C.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Case sensitive. KEYWORD and TOPIC_NAME fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid KEYWORD and/or TOPIC_NAME will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027exit\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/exit\")","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpExit() {","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function exits the application.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027exit\u0027 command is: exit.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Command should only contain one word (i.e. no extensions).\");","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"nicholas132000"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"nicholas132000"},"content":"        printDivider();","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"This is an invalid command, please ensure all your fields are correct\");","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"nicholas132000"},"content":"        printDivider();","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"nicholas132000"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"nicholas132000"},"content":"        this.in.close();","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"nicholas132000"},"content":"    public void printNameNotFoundCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"nicholas132000"},"content":"        printDivider();","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"nicholas132000"},"content":"        System.out.println(\"Cannot remove a note which does not exist, check spelling or case sensitivity\");","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"ong-ck"},"content":"     * Prints an error message when saving data is unsuccessful.","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"ong-ck"},"content":"    public void printSaveUnsuccessful() {","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"ong-ck"},"content":"        printDivider();","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"ong-ck"},"content":"        System.out.println(\"Saving data was unsuccessful. Please try again.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"nicholas132000"},"content":"        printDivider();","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":18,"nikkiDEEE":219,"lohjooh":1,"heejet":1,"ong-ck":6}},{"path":"src/main/java/seedu/clialgo/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":" * The \u003ccode\u003eAddCommand\u003c/code\u003e objects represents the user command to add new notes into CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"    private String name;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"    private String topic;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"     * Constructor for command to add note to topic list.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"     * @param topic The topic that this file is tagged to.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"    public AddCommand(String name, String topic) {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"    String getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        return this.name;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"    String getTag() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ong-ck"},"content":"        return this.topic;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     * An overridden method to execute the user command to add new notes into CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object responsible for saving information in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"    public void execute(TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"        String notePath \u003d name + \".txt\";","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"        Note newNote \u003d new Note(name, notePath, topic);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"        // Check if topicName is valid","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"        if (!topicManager.isValidTopic(topic)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"            new InvalidTopicCommand(topic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"        fileManager.addEntry(name, newNote);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"        boolean isAdded \u003d topicManager.addNote(name, topic, newNote);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"        // Check if added -\u003e execute invalid command if note is not added","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"        if (!isAdded) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"            new InvalidCommand().execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ong-ck"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"ong-ck"},"content":"        // Ui for successful adding","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"ong-ck"},"content":"        ui.printAddSuccess(name, topic);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"ong-ck"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eAddCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"ong-ck"},"content":"     * @param otherCommand The other \u003ccode\u003eAddCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eAddCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"ong-ck"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"ong-ck"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"ong-ck"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) otherCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        return Objects.equals(this.getName(), otherAddCommand.getName()) \u0026\u0026","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"                Objects.equals(this.getTag(), otherAddCommand.getTag());","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":5,"heejet":10,"ong-ck":66}},{"path":"src/main/java/seedu/clialgo/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command from the user. A \u003ccode\u003eCommand\u003c/code\u003e object contains the details needed to execute","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * the command. Each subclass of \u003ccode\u003eCommand\u003c/code\u003e will have an overridden method \u003ccode\u003eexecute\u003c/code\u003e which has its","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * own implementation.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"     * A method to be overridden by the subclasses to execute specific commands by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object responsible for saving information in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    public abstract void execute(TopicManager topicManager, Ui ui, FileManager fileManager);","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"     * A method to be overridden by the subclasses to check for equality of the instantiated objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"     * @param otherCommand The other object to be checked against.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the commands are equal.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"    public abstract boolean equals(Command otherCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":11,"lohjooh":4,"heejet":5,"ong-ck":10}},{"path":"src/main/java/seedu/clialgo/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command. A \u003ccode\u003eExitCommand\u003c/code\u003e object is created whenever the","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * user decides to exit the program.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"     * This method closes the scanner and exits from the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object responsible for saving information in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"    public void execute (TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"        ui.printHelpExit();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"        System.exit(0);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eExitCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eExitCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eExitCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"        return otherCommand instanceof ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":30,"lohjooh":3,"heejet":4}},{"path":"src/main/java/seedu/clialgo/command/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"    private String keyWord;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"    private String topic;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    public FilterCommand(String keyWord, String topic) {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"     * This method prints all the notes stored across all non-empty topics in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"    public void printAllTopics(TopicManager topicManager, Ui ui) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        HashMap\u003cString, ArrayList\u003cString\u003e\u003e notes \u003d topicManager.getAllNotesByTopic();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        ui.printFilterSuccess();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        for (Map.Entry\u003cString, ArrayList\u003cString\u003e\u003e entry : notes.entrySet()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"            ArrayList\u003cString\u003e currentTopicNotes \u003d entry.getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"            String topicName \u003d entry.getKey();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"            int serialNumber \u003d 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"            System.out.println(\"[\" + topicName + \"]\");","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"            for (String note : currentTopicNotes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"                System.out.println(serialNumber + \". \" + note);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"                serialNumber++;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"        ui.printDivider();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     * This method prints all the note stored in a single specified topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"    public void printSingleTopic(TopicManager topicManager, Ui ui) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e notes \u003d topicManager.getNotesByTopic(this.topic);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        ui.printFilterSuccess();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        int serialNumber \u003d 1;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        System.out.println(\"[\" + this.topic + \"]\");","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"        for (String note : notes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"            System.out.println(serialNumber + \". \" + note);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"            serialNumber++;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"        ui.printDivider();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"     * Prints the note stored in all topics or just a single topics depending on the topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"     * If there are no notes stored in CLIAlgo or in the given topic, it prints a string to inform the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"     * If an invalid topic is given, it prints a string to inform the reader.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object responsible for saving information in CLIAlgo.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"nicholas132000"},"content":"    public void execute (TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"        if (topicManager.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"            ui.printFilterFail();","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        if (this.topic \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"            printAllTopics(topicManager, ui);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"        if (!topicManager.isValidTopic(this.topic)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"            new InvalidTopicCommand(this.topic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"        if (topicManager.isTopicEmpty(this.topic)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"            ui.printFilterFail();","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"            return;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"        printSingleTopic(topicManager, ui);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"lohjooh"},"content":"        return Objects.equals(this.keyWord, otherFilterCommand.keyWord) \u0026\u0026","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"lohjooh"},"content":"                Objects.equals(this.topic, otherFilterCommand.topic);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"nicholas132000":4,"lohjooh":25,"heejet":68,"ong-ck":2}},{"path":"src/main/java/seedu/clialgo/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    private String command;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"        command \u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        return this.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    public void execute (TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"        HelpCommand otherHelpCommand \u003d (HelpCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        return Objects.equals(this.getCommand(), otherHelpCommand.getCommand());","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":24,"heejet":8}},{"path":"src/main/java/seedu/clialgo/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command. A \u003ccode\u003eInvalidCommand\u003c/code\u003e object is created whenever the user enters an invalid","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * command and is unable to generate the appropriate \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"     * This method informs the user that they have keyed in an invalid command.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"    public void execute(TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"        ui.printInvalidCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eInvalidCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eInvalidCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eInvalidCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"        return otherCommand instanceof InvalidCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":23,"lohjooh":5,"ong-ck":3}},{"path":"src/main/java/seedu/clialgo/command/InvalidTopicCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"ong-ck"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"public class InvalidTopicCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":"    private String topic;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"     * Constructor for command when an invalid topic is being tagged to a note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"     * @param topic The invalid topic for the note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"    public InvalidTopicCommand(String topic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"     * An overridden method to execute the command when","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"     * an invalid topic is being tagged to a note file.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"ong-ck"},"content":"    public void execute (TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"ong-ck"},"content":"        ui.printAddFail(topic);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     * @param otherCommand The other object to be checked against.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand otherInvalidTopicCommand \u003d (InvalidTopicCommand) otherCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"        return Objects.equals(this.topic, otherInvalidTopicCommand.topic);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":13,"ong-ck":34}},{"path":"src/main/java/seedu/clialgo/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"     * This method prints all the notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"     * If there are no notes stored in CLIAlgo, this method informs the user that the topicManager is empty.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"     * @param topicManager The \u003ccode\u003eTopicManager\u003c/code\u003e object which handles all notes stored in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object which handles outputs to the user.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object responsible for saving information in CLIAlgo.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    public void execute (TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"        if (topicManager.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"            ui.printListFail();","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        ui.printListSuccess();","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e printedNotes \u003d topicManager.getAllNotes();","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"        int serialNumber \u003d 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"        for (String note : printedNotes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"            System.out.println(serialNumber + \". \" + note);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"            serialNumber++;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        ui.printDivider();","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"        return otherCommand instanceof ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":14,"heejet":23}},{"path":"src/main/java/seedu/clialgo/command/NameNotFoundCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command. A \u003ccode\u003eNameNotFoundCommand\u003c/code\u003e object is created whenever the user enters a","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * command that does not contain any existing name of any notes and is unable to generate the appropriate","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" * \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"public class NameNotFoundCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     * This method informs the user that they have keyed in a command that does not contain any existing name of any","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"     * notes.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    public void execute(TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"        ui.printNameNotFoundCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eNameNotFoundCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eNameNotFoundCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eNameNotFoundCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"        return otherCommand instanceof NameNotFoundCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"nicholas132000":34}},{"path":"src/main/java/seedu/clialgo/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command from the user. A \u003ccode\u003eRemoveCommand\u003c/code\u003e object contains the name of","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":" * the note to be deleted. This object removes the note corresponding to the name of the note from the list when the","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":" * execute method is called.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    private final String name;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"     * Constructor for command to remove note from topic list.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"    public RemoveCommand(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"     * Overridden method that removes a note corresponding to \u003ccode\u003ename\u003c/code\u003e from the list. It then saves the","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"     * updated list.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"     * @param topicManager A Topic object containing all the different topics available.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"     * @param ui A Ui object which handles outputs to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"     * @param fileManager An object responsible for saving information.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nicholas132000"},"content":"    public void execute(TopicManager topicManager, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"nicholas132000"},"content":"        boolean isSuccessfullyRemoved \u003d topicManager.removeNote(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"nicholas132000"},"content":"        if (isSuccessfullyRemoved) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"            fileManager.deleteEntry(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"nicholas132000"},"content":"            ui.printRemoveSuccess(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"nicholas132000"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"nicholas132000"},"content":"     * Gets the name of the note to be removed.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"nicholas132000"},"content":"     * @return Name of the note.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"nicholas132000"},"content":"    public String getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"nicholas132000"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eRemoveCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eRemoveCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eRemoveCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"nicholas132000"},"content":"        RemoveCommand otherRemoveCommand \u003d (RemoveCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"nicholas132000"},"content":"        return Objects.equals(this.name, otherRemoveCommand.name);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":56,"lohjooh":8}},{"path":"src/main/java/seedu/clialgo/exceptions/parser/EmptyFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo.exceptions.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class EmptyFieldException extends Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":4}},{"path":"src/main/java/seedu/clialgo/exceptions/parser/NullInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo.exceptions.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class NullInputException extends Exception{","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":4}},{"path":"src/main/java/seedu/clialgo/storage/FileDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"public class FileDecoder {","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"    protected Note currentNote;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"    protected String currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    protected final String separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"     * Constructor for the fileDecoder object","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"     * @param separator The \u003ccode\u003eString\u003c/code\u003e which separates each form of data stored in each \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    public FileDecoder (String separator) {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"     * Converts an encoded \u003ccode\u003eNote\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e and stores the name of the","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"     * \u003ccode\u003eNote\u003c/code\u003e and the \u003ccode\u003eNote\u003c/code\u003e itself in this object.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"     * @param encodedNote The encoded \u003ccode\u003eString\u003c/code\u003e that represents a \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"    public void decodeString (String encodedNote) {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"        String[] temp \u003d encodedNote.split(separator);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"        temp[0] \u003d currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        currentNote \u003d new Note(currentName, temp[1], temp[2]);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"    public String decodedName () {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"        return currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"    public Note processedNote () {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"        return currentNote;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":40}},{"path":"src/main/java/seedu/clialgo/storage/FileEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"public class FileEncoder {","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"    protected final String separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"     * Constructor for the fileEncoder object.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"     * @param separator The \u003ccode\u003eString\u003c/code\u003e which separates each form of data stored in each \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"    public FileEncoder (String separator) {","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"     * Encodes a note into an encoded \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"     * @param name The name of the \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"     * @param note The \u003ccode\u003eNote\u003c/code\u003e object processed.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"     * @return Returns a processed string.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"    public String encodeNote (String name, Note note) {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"        return name + separator + note.getPath() + separator + note.getTag();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":29}},{"path":"src/main/java/seedu/clialgo/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"public class FileManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    private final FileEncoder encoder;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    private final FileDecoder decoder;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    private final String path;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    private final ArrayList\u003cString\u003e topicNames;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"    private final HashMap\u003cString, SingleFile\u003e topicRawData;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"     * Constructor for class containing \u003ccode\u003ecodeDecoder\u003c/code\u003e, \u003ccode\u003ecodeEncoder\u003c/code\u003e and raw data from the","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"     * .txt file stored as strings.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"    public FileManager(String path, ArrayList\u003cString\u003e topicNames) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        String separator \u003d \"\u0026@*\";","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"        this.topicRawData \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        this.topicNames \u003d topicNames;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"        this.encoder \u003d new FileEncoder(separator);","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"        this.decoder \u003d new FileDecoder(separator);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"     * Creates a \u003ccode\u003eSingleFile\u003c/code\u003e object and creates a .txt file if the .txt does not exist.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"     * @param name Name of the .txt file.","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"     * @return The SingleFile object created.","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"    public SingleFile createSingleFile(String name) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"        File file \u003d new File(path + \"\\\\\" + name + \".txt\");","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"        SingleFile newFile \u003d new SingleFile(file, name, decoder);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"                newFile.setFile(file);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"        return newFile;","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"     * Creates all the \u003ccode\u003eSingleFiles\u003c/code\u003e corresponding to each valid \u003ccode\u003eTopic\u003c/code\u003e. If the .txt file does","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"     * not exist, it creates a blank .txt file with \u003ccode\u003etopicNames\u003c/code\u003e.txt. For all the \u003ccode\u003eSingleFiles\u003c/code\u003e,","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"     * reads the \u003ccode\u003eFile\u003c/code\u003e corresponding to it.","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"    public void initialize() {","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"        createFolder();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"        for (String s : topicNames) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"            topicRawData.put(s, createSingleFile(s));","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"        for (SingleFile singleFile : topicRawData.values()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"lohjooh"},"content":"                singleFile.readFile();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"lohjooh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"File write error\");","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"lohjooh"},"content":"     * Creates a folder at \u003ccode\u003epath\u003c/code\u003e.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"lohjooh"},"content":"    public void createFolder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"lohjooh"},"content":"            Path dir \u003d Paths.get(path);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"lohjooh"},"content":"            Files.createDirectories(dir);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Folder not created\");","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"lohjooh"},"content":"     * Process a \u003ccode\u003eNote\u003c/code\u003e and add it to the stored data in the \u003ccode\u003eSingleFile\u003c/code\u003e object and append the","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"lohjooh"},"content":"     * processed \u003ccode\u003eNote\u003c/code\u003e as a \u003ccode\u003eString\u003c/code\u003e to the .txt file.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"lohjooh"},"content":"     * @param name The name of the note.","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"lohjooh"},"content":"     * @param note The \u003ccode\u003eNote\u003c/code\u003e being added.","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"lohjooh"},"content":"    public void addEntry (String name, Note note) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"        SingleFile singleFile \u003d topicRawData.get(note.getTag());","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"lohjooh"},"content":"            singleFile.writeNoteToFile(encoder.encodeNote(name ,note));","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"File write error\");","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"lohjooh"},"content":"     * Deletes \u003ccode\u003eNote\u003c/code\u003e with \u003ccode\u003enoteName\u003c/code\u003e in \u003ccode\u003etopicName\u003c/code\u003e.txt and rewrite the .txt file.","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"lohjooh"},"content":"     * @param noteName The name of the \u003ccode\u003eNote\u003c/code\u003e being deleted.","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"lohjooh"},"content":"    public void deleteEntry (String noteName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"lohjooh"},"content":"        for (SingleFile sf : topicRawData.values()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"lohjooh"},"content":"            sf.deleteEntry(noteName);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"lohjooh"},"content":"     * Deletes all stored raw data in \u003ccode\u003etopicName\u003c/code\u003e.txt.","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"lohjooh"},"content":"     * @param topicName The name of the .txt file being emptied.","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"lohjooh"},"content":"    public void deleteAllEntry (String topicName) {","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"lohjooh"},"content":"        topicRawData.get(topicName).clearFile();","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"lohjooh"},"content":"     * Reads all the raw data stored in this object and returns a \u003ccode\u003eHashMap\u003c/code\u003e of \u003ccode\u003eTopics\u003c/code\u003e that is","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"lohjooh"},"content":"     * processed.","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"lohjooh"},"content":"     * @return Returns the initialized \u003ccode\u003eHashMap\u003c/code\u003e of \u003ccode\u003eNotes\u003c/code\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"lohjooh"},"content":"    public HashMap\u003cString, Topic\u003e decodeAll() {","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"lohjooh"},"content":"        HashMap\u003cString, Topic\u003e topics \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"lohjooh"},"content":"        for (String s: topicRawData.keySet()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"lohjooh"},"content":"            topics.put(s, topicRawData.get(s).convertFileToTopic());","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"lohjooh"},"content":"        return topics;","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":135}},{"path":"src/main/java/seedu/clialgo/storage/SingleFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"public class SingleFile {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"    private File file;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    private final String name;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    private final HashMap\u003cString, String\u003e storedRawData \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    private final HashMap\u003cString, Note\u003e notes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    private final FileDecoder decoder;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    public SingleFile (File file, String name, FileDecoder decoder) {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"        this.decoder \u003d decoder;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"     * Reads data from the .txt file and stores it in this object.","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"     * @throws FileNotFoundException Thrown when the .txt file does not exist.","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"    public void readFile() throws FileNotFoundException {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"            String rawData \u003d s.nextLine();","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"            decoder.decodeString(rawData);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"            storedRawData.put(decoder.decodedName(), rawData);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"            notes.put(decoder.decodedName(), decoder.processedNote());","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"        s.close();","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"     * Writes a single \u003ccode\u003eNote\u003c/code\u003e encoded as a \u003ccode\u003eString\u003c/code\u003e to the .txt file.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"     * @param encodedNote The \u003ccode\u003eNote\u003c/code\u003e encoded as a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"     * @throws IOException Throws an exception if the file write fails.","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"    public void writeNoteToFile(String encodedNote) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"            fw.write(encodedNote);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"            fw.close();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"            throw new IOException();","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"     * Writes all the stored raw data into the .txt file, overwriting all the existing data stored in the .txt file.","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"     * @throws IOException Throws an exception if the file write fails.","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"    public void overwriteFile() throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"lohjooh"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"lohjooh"},"content":"            for (String s : storedRawData.values()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"lohjooh"},"content":"                fw.write(s);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"lohjooh"},"content":"            fw.close();","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"lohjooh"},"content":"            throw new IOException();","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"lohjooh"},"content":"    public void deleteEntry(String name) {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"lohjooh"},"content":"        if (storedRawData.remove(name) !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"lohjooh"},"content":"            try {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"lohjooh"},"content":"                overwriteFile();","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"lohjooh"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"File write fail\");","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"lohjooh"},"content":"            notes.remove(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"lohjooh"},"content":"    public Topic convertFileToTopic () {","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"lohjooh"},"content":"        return new Topic(name, notes);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"lohjooh"},"content":"    public void clearFile() {","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"lohjooh"},"content":"        storedRawData.clear();","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"lohjooh"},"content":"    public void setFile(File file) {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"lohjooh"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"lohjooh":99}},{"path":"src/test/java/seedu/clialgo/CLIAlgoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"class CLIAlgoTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"heejet":2,"-":10}},{"path":"src/test/java/seedu/clialgo/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.FilterCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.HelpCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.InvalidCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.InvalidTopicCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.command.ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"class ParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    /** Test isValidCommand */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    void isValidCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e correctCommands \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"help\", \"add\", \"remove\", \"filter\", \"exit\")","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongCommands \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"Help\", \"aDd\", \"remov\", \"filtre\", \"exits\", \"\")","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"        for (String correctCommand : correctCommands) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"            assertTrue(parser.isValidCommand(correctCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        for (String wrongCommand : wrongCommands) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isValidCommand(wrongCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    /** Test isCorrectMarker */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_correctInput_expectTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"        String nameMarkerInput \u003d \"n/NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"c/COMMAND\";","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"t/TOPIC\";","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"k/KEYWORD\";","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(nameMarkerInput, Parser.NAME_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(commandMarkerInput, Parser.COMMAND_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(topicMarkerInput, Parser.TOPIC_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(keywordMarkerInput, Parser.KEYWORD_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_wrongInput_expectFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongNameInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"t/TOPIC\", \"k/KEYWORD\", \"/nNAME\", \"N/NAME\")","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongCommandInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"n/NAME\", \"t/TOPIC\", \"k/KEYWORD\", \"/cCOMMAND\", \"C/COMMAND\")","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongTopicInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"n/NAME\", \"k/KEYWORD\", \"/tTOPIC\", \"T/TOPIC\")","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongKeywordInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"t/TOPIC\", \"n/NAME\", \"/kKEYWORD\", \"K/KEYWORD\")","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        for (String wrongNameInput : wrongNameInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongNameInput, Parser.NAME_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"        for (String wrongCommandInput : wrongCommandInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongCommandInput, Parser.COMMAND_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"        for (String wrongTopicInput : wrongTopicInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongTopicInput, Parser.TOPIC_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        for (String wrongKeywordInput : wrongKeywordInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongKeywordInput, Parser.KEYWORD_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_invalidInput_expectException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        String oneLetterInput \u003d \"c\";","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"                IndexOutOfBoundsException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"                () -\u003e parser.isCorrectMarker(oneLetterInput, Parser.COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"                IndexOutOfBoundsException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"                () -\u003e parser.isCorrectMarker(emptyString, Parser.COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"    void parse_normalInput_expectCorrectCommandObject() {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"        TopicManager topics \u003d new TopicManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"        String addInput \u003d \"add n/Name of File t/LINKED_LIST\";","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"        AddCommand correctAddOutput \u003d new AddCommand(\"Name of File\", \"LINKED_LIST\");","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"        Command actualAddOutput \u003d parser.parse(addInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"        assertTrue(correctAddOutput.equals(actualAddOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"        String helpInputNoCommand \u003d \"help\";","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"        HelpCommand correctHelpNoCommandOutput \u003d new HelpCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"        Command actualHelpNoCommandOutput \u003d parser.parse(helpInputNoCommand, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"        assertTrue(correctHelpNoCommandOutput.equals(actualHelpNoCommandOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"        String helpAdd \u003d \"help c/add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"        HelpCommand correctHelpAddOutput \u003d new HelpCommand(\"add\");","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"        Command actualHelpAddOutput \u003d parser.parse(helpAdd, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"        assertTrue(correctHelpAddOutput.equals(actualHelpAddOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"        String helpRemove \u003d \"help c/remove\";","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"        HelpCommand correctHelpRemoveOutput \u003d new HelpCommand(\"remove\");","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        Command actualHelpRemoveOutput \u003d parser.parse(helpRemove, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"        assertTrue(correctHelpRemoveOutput.equals(actualHelpRemoveOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"        String helpFilter \u003d \"help c/filter\";","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"        HelpCommand correctHelpFilterOutput \u003d new HelpCommand(\"filter\");","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"        Command actualHelpFilterOutput \u003d parser.parse(helpFilter, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        assertTrue(correctHelpFilterOutput.equals(actualHelpFilterOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"        String helpList \u003d \"help c/list\";","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"        HelpCommand correctHelpListOutput \u003d new HelpCommand(\"list\");","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        Command actualHelpListOutput \u003d parser.parse(helpList, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"        assertTrue(correctHelpListOutput.equals(actualHelpListOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"        String listInput \u003d \"list\";","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"        ListCommand correctListOutput \u003d new ListCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"        Command actualListOutput \u003d parser.parse(listInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"        assertTrue(correctListOutput.equals(actualListOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"        String filterNoTopicInput \u003d \"filter k/keyword\";","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"        FilterCommand correctFilterNoTopicOutput \u003d new FilterCommand(\"keyword\", null);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"        Command actualFilterNoTopicOutput \u003d parser.parse(filterNoTopicInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        assertTrue(correctFilterNoTopicOutput.equals(actualFilterNoTopicOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"        String filterTopicInput \u003d \"filter k/keyword t/BINARY_SEARCH_TREE\";","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"        FilterCommand correctFilterTopicOutput \u003d new FilterCommand(\"keyword\", \"BINARY_SEARCH_TREE\");","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"        Command actualFilterTopicOutput \u003d parser.parse(filterTopicInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"        assertTrue(correctFilterTopicOutput.equals(actualFilterTopicOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"        String exitInput \u003d \"exit\";","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"        ExitCommand correctExitOutput \u003d new ExitCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"        Command actualExitOutput \u003d parser.parse(exitInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"        assertTrue(correctExitOutput.equals(actualExitOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"    void parse_wrongMarkerInput_expectInvalidCommandObject() {","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"        TopicManager topics \u003d new TopicManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"        String wrongFirstMarkerInput \u003d \"add c/Name of File t/LINKED_LIST\";","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctWrongFirstMarkerOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"        Command actualWrongFirstMarkerOutput \u003d parser.parse(wrongFirstMarkerInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"        assertTrue(correctWrongFirstMarkerOutput.equals(actualWrongFirstMarkerOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"        String wrongSecondMarkerInput \u003d \"add n/Name of File c/LINKED_LIST\";","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctWrongSecondMarkerOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"        Command actualWrongSecondMarkerOutput \u003d parser.parse(wrongSecondMarkerInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"        assertTrue(correctWrongSecondMarkerOutput.equals(actualWrongSecondMarkerOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"        String wrongSingleMarker \u003d \"help t/add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctWrongSingleMarkerOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"        Command actualWrongSingleMarkerOutput \u003d parser.parse(wrongSingleMarker, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"heejet"},"content":"        assertTrue(correctWrongSingleMarkerOutput.equals(actualWrongSingleMarkerOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"heejet"},"content":"        String optionalFieldInput \u003d \"filter t/keyword\";","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctOptionalFieldOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"heejet"},"content":"        Command actualOptionalFieldOutput \u003d parser.parse(optionalFieldInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"heejet"},"content":"        assertTrue(correctOptionalFieldOutput.equals(actualOptionalFieldOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"heejet"},"content":"        String wrongOptionalMarker \u003d \"filter k/keyword t/BINARY_SEARCH_TREE\";","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"heejet"},"content":"        FilterCommand correctWrongOptionalMarkerOutput \u003d new FilterCommand(\"keyword\", \"BINARY_SEARCH_TREE\");","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"heejet"},"content":"        Command actualWrongOptionalMarkerOutput \u003d parser.parse(wrongOptionalMarker, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"heejet"},"content":"        assertTrue(correctWrongOptionalMarkerOutput.equals(actualWrongOptionalMarkerOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"heejet"},"content":"    void parse_wrongTopicInput_expectInvalidTopicObject() {","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"heejet"},"content":"        TopicManager topics \u003d new TopicManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"heejet"},"content":"        String wrongSpellingInput \u003d \"add n/Name of File t/LINKED LIST\";","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand correctWrongSpellingOutput \u003d new InvalidTopicCommand(\"LINKED LIST\");","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"heejet"},"content":"        Command actualWrongSpellingOutput \u003d parser.parse(wrongSpellingInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"heejet"},"content":"        assertTrue(correctWrongSpellingOutput.equals(actualWrongSpellingOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"heejet"},"content":"        String lowerCaseTopicInput \u003d \"add n/Name of File t/sorting\";","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand correctLowerCaseTopicOutput \u003d new InvalidTopicCommand(\"sorting\");","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"heejet"},"content":"        Command actualLowerCaseTopicOutput \u003d parser.parse(lowerCaseTopicInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"heejet"},"content":"        assertTrue(correctLowerCaseTopicOutput.equals(actualLowerCaseTopicOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"heejet"},"content":"        String outOfSyllabusInput \u003d \"filter k/keyword t/FENWICK_TREE\";","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand correctOutOfSyllabusOutput \u003d new InvalidTopicCommand(\"FENWICK_TREE\");","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"heejet"},"content":"        Command actualOutOfSyllabusOutput \u003d parser.parse(outOfSyllabusInput, topics);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"heejet"},"content":"        assertTrue(correctOutOfSyllabusOutput.equals(actualOutOfSyllabusOutput));","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"heejet"},"content":"    void parse_emptyFieldInput_expectInvalidCommandObject() {","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"heejet"},"content":"        TopicManager topics \u003d new TopicManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"heejet"},"content":"        String emptyFirstFieldInput \u003d \"add n/ t/LINKED_LIST\";","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctEmptyFirstFieldOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"heejet"},"content":"        Command actualEmptyFirstFieldOutput \u003d parser.parse(emptyFirstFieldInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"heejet"},"content":"        assertTrue(correctEmptyFirstFieldOutput.equals(actualEmptyFirstFieldOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"heejet"},"content":"        String emptySecondFieldInput \u003d \"add n/Name of File t/\";","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctEmptySecondFieldOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"heejet"},"content":"        Command actualEmptySecondFieldOutput \u003d parser.parse(emptySecondFieldInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"heejet"},"content":"        assertTrue(correctEmptySecondFieldOutput.equals(actualEmptySecondFieldOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":216,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"heejet"},"content":"        String emptySingleFieldInput \u003d \"help c/\";","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"heejet"},"content":"        InvalidCommand correctEmptySingleFieldOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"heejet"},"content":"        Command actualEmptySingleFieldOutput \u003d parser.parse(emptySingleFieldInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"heejet"},"content":"        assertTrue(correctEmptySingleFieldOutput.equals(actualEmptySingleFieldOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"heejet"},"content":"        String emptyOptionalFieldInput \u003d \"filter k/keyword t/\";","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"heejet"},"content":"        FilterCommand correctEmptyOptionalFieldOutput \u003d new FilterCommand(\"keyword\", null);","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"heejet"},"content":"        Command actualEmptyOptionalFieldOutput \u003d parser.parse(emptyOptionalFieldInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"heejet"},"content":"        assertTrue(correctEmptyOptionalFieldOutput.equals(actualEmptyOptionalFieldOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":228,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":229,"author":{"gitId":"heejet"},"content":"    void parse_nullInput_expectInvalidCommandObject() {","lastModifiedDate":"2023-03-07"},{"lineNumber":230,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-07"},{"lineNumber":231,"author":{"gitId":"heejet"},"content":"        TopicManager topics \u003d new TopicManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":232,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":234,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"add\", \"remove\", \"filter\")","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":236,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":237,"author":{"gitId":"heejet"},"content":"        for (String command : commands) {","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"heejet"},"content":"            String noSpaceInput \u003d command;","lastModifiedDate":"2023-03-07"},{"lineNumber":239,"author":{"gitId":"heejet"},"content":"            InvalidCommand correctNoSpaceOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":240,"author":{"gitId":"heejet"},"content":"            Command actualNoSpaceOutput \u003d parser.parse(noSpaceInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":241,"author":{"gitId":"heejet"},"content":"            assertTrue(correctNoSpaceOutput.equals(actualNoSpaceOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"heejet"},"content":"            String withSpaceInput \u003d command + \"        \";","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"heejet"},"content":"            InvalidCommand correctWithSpaceOutput \u003d new InvalidCommand();","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"heejet"},"content":"            Command actualWithSpaceOutput \u003d parser.parse(withSpaceInput, topics);","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"heejet"},"content":"            assertTrue(correctWithSpaceOutput.equals(actualWithSpaceOutput));","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":246,"ong-ck":3}},{"path":"src/test/java/seedu/clialgo/StringManipulationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"class StringManipulationTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    public static final String NAME_MARKER \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    public static final String COMMAND_MARKER \u003d \"c/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public static final String TOPIC_MARKER \u003d \"t/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    public static final String KEYWORD_MARKER \u003d \"k/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"    public static final String WHITE_SPACE \u003d \" \";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    /** Test getFirstWord */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    void getFirstWord_normalInputWhiteSpace_expectFirstWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        String twoWordsInput \u003d \"first word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        String singleLetterFirstWordInput \u003d \"a word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        String oneWordInput \u003d \"a\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"                \"first\",","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(twoWordsInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"                \"a\",","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(singleLetterFirstWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"                \"a\",","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(oneWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    void getFirstWord_normalInputMarker_expectFirstWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"help c/add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"name of file t/TOPIC_NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"filter k/topic\";","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"                \"help\",","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"                \"name of file\",","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"                \"filter\",","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"    void getFirstWord_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.getFirstWord(noInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.getFirstWord(nullInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"    /** Test removeFirstWord */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_normalInputWhiteSpace_expectSecondWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"        String twoWordsInput \u003d \"first word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"        String singleLetterFirstWordInput \u003d \"a word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        String oneWordInput \u003d \"a\";","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"                \"word\",","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(twoWordsInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"                \"word\",","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(singleLetterFirstWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        assertNull(StringManipulation.removeFirstWord(oneWordInput, WHITE_SPACE));","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_normalInputMarker_expectSecondWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"help c/add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"name of file t/TOPIC_NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"filter k/topic\";","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"                \"add\",","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"                \"TOPIC_NAME\",","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"                \"topic\",","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeFirstWord(noInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeFirstWord(nullInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"    /** Test removeMarker */","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"    void removeMarker_normalInput_expectKeyword() throws EmptyFieldException, NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        String nameMarkerInput \u003d \"n/NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"c/COMMAND\";","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"t/TOPIC\";","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"k/KEYWORD\";","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"                \"NAME\",","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(nameMarkerInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"                \"COMMAND\",","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"                \"TOPIC\",","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"                \"KEYWORD\",","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"    void removeMarker_emptyFieldInput_expectEmptyFieldException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"        String emptyFieldInput \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"                EmptyFieldException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(emptyFieldInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"    void removeMarker_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(noInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(nullInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":169}},{"path":"src/test/java/seedu/clialgo/TopicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"class TopicManagerTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"     * Checks the \u003ccode\u003eremoveNote\u003c/code\u003e method of the \u003ccode\u003eTopicManager\u003c/code\u003e class.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"     * Instantiates a topicManager object which contains a topic object which contains a test note.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"     * Expects the method to return true if the test note is removed successfully.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"    void removeNote_checkForNoteThatExist_expectTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"        Topic topic \u003d new Topic(\"SORTING\");","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"        topicManager.getTopics().put(\"SORTING\", topic);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"        topic.getNotes().put(\"bubble sort notes\", new Note(\"dummy\", \"dummy\", \"SORTING\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"        assertTrue(topicManager.removeNote(\"bubble sort notes\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"     * Checks the \u003ccode\u003enoteExist\u003c/code\u003e method of the \u003ccode\u003eTopicManager\u003c/code\u003e class.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"     * Inputs a non-existent note name.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"     * Expects the method to return false.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"    void noteExist_checkForNoteThatDoesNotExist_expectFalse() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"        String noteName \u003d \"thisNoteNameDoesNotExist\";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"        assertFalse(new TopicManager().noteExist(noteName));","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eaddNote\u003c/code\u003e method of the \u003ccode\u003eTopicManager\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     * Inputs proper inputs for \u003ccode\u003eaddNote\u003c/code\u003e method and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"     * to return True.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"    void addNote_checkProperInput_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"        String noteName \u003d \"dummyName\";","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"        String topicName \u003d \"SORTING\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"        Note note \u003d new Note(noteName, noteName + \".txt\", topicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"        assertTrue(new TopicManager().addNote(noteName, topicName, note));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eaddNote\u003c/code\u003e method of the \u003ccode\u003eTopicManager\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"     * Inputs repeated name for \u003ccode\u003eTopicManager\u003c/code\u003e object and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"     * to return False.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"    void addNote_checkRepeatedNoteName_expectFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"        String noteName \u003d \"dummyName\";","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"        String topicName \u003d \"SORTING\";","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"        Note note \u003d new Note(noteName, noteName + \".txt\", topicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ong-ck"},"content":"        topicManager.addNote(noteName, topicName, note);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ong-ck"},"content":"        assertFalse(topicManager.addNote(noteName, topicName, note));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"    void isValidTopic_validTopicInput_expectTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e validTopics \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"SORTING\", \"LINKED_LIST\", \"GRAPH_STRUCTURES\", \"BINARY_HEAP\", \"HASH_TABLE\",","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"                        \"GRAPH_TRAVERSAL\", \"BINARY_SEARCH_TREE\", \"SS_SHORTEST_PATH\", \"UNION_FIND_DS\",","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"                        \"MINIMUM_SPANNING_TREE\")","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"        for (String topic : validTopics) {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"            assertTrue(topicManager.isValidTopic(topic));","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"    void isValidTopic_invalidTopicInput_expectFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e lowerCaseTopics \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"sorting\", \"linked_list\", \"graph_structures\", \"binary_heap\", \"hash_table\",","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"                        \"graph_traversal\", \"binary_search_tree\", \"ss_shortest_path\", \"union_find_ds\",","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"                        \"minimum_spanning_tree\")","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        for (String topic : lowerCaseTopics) {","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"            assertFalse(topicManager.isValidTopic(topic));","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e capitalizedCaseTopics \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"Sorting\", \"Linked_list\", \"Graph_structures\", \"Binary_heap\", \"Hash_table\",","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"                        \"Graph_traversal\", \"Binary_search_tree\", \"Ss_shortest_path\", \"Union_find_ds\",","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"                        \"Minimum_spanning_tree\")","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"        for (String topic : capitalizedCaseTopics) {","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"            assertFalse(topicManager.isValidTopic(topic));","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e noUnderScoreTopics \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"LINKED LIST\", \"GRAPH STRUCTURES\", \"BINARY HEAP\", \"HASH TABLE\", \"GRAPH TRAVERSAL\",","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"                        \"BINARY SEARCH TREE\", \"SS SHORTEST PATH\", \"UNION FIND DS\", \"MINIMUM SPANNING TREE\")","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"        for (String topic : noUnderScoreTopics) {","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"            assertFalse(topicManager.isValidTopic(topic));","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nicholas132000":34,"heejet":40,"ong-ck":33}},{"path":"src/test/java/seedu/clialgo/TopicTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ong-ck"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":"class TopicTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eTopic\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"     * Inputs two equal \u003ccode\u003eTopic\u003c/code\u003e objects and expects the method to return true.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"    void equals_checkEqualTopic_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"        String firstTopicName \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"        String secondTopicName \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"        Topic firstTopic \u003d new Topic(firstTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"        Topic secondTopic \u003d new Topic(secondTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"        assertTrue(firstTopic.equals(secondTopic));","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eTopic\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"     * Inputs two unequal \u003ccode\u003eTopic\u003c/code\u003e objects and expects the method to return false.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ong-ck"},"content":"    void equals_checkUnequalTopic_expectFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ong-ck"},"content":"        String firstTopicName \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ong-ck"},"content":"        String secondTopicName \u003d \"SORTING\";","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ong-ck"},"content":"        Topic firstTopic \u003d new Topic(firstTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"        Topic secondTopic \u003d new Topic(secondTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"        assertFalse(firstTopic.equals(secondTopic));","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eaddNote\u003c/code\u003e method correctly","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"     * adds a \u003ccode\u003eNote\u003c/code\u003e object into its Hashmap.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"    void addNote_checkNoteIsAdded_expectCorrectNotesHashmapAttribute() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"        String testTopicName \u003d \"SORTING\";","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"        String testNoteName \u003d \"dummyName\";","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ong-ck"},"content":"        Note testNote \u003d new Note(testNoteName, testNoteName + \".txt\", testTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"        HashMap\u003cString, Note\u003e testNotesHashmap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"        testNotesHashmap.put(testNoteName, testNote);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"        Topic testTopic \u003d new Topic(testTopicName);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"        testTopic.addNote(testNoteName, testNote);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"        assertEquals(testTopic.getNotes(), testNotesHashmap);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"lohjooh":1,"ong-ck":57}},{"path":"src/test/java/seedu/clialgo/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"class UiTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"    public static final String WINDOWS_WHITESPACE \u003d \"\\r\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"    public static final String MAC_WHITESPACE \u003d \"\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintWelcomeMessage() {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Hello! Welcome to CLIAlgo Notes!\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Hello! Welcome to CLIAlgo Notes!\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintExitMessage() {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printExitMessage();","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Thank you for using CLIAlgo! Study hard!\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Thank you for using CLIAlgo! Study hard!\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpPage() {","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpPage();","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The available COMMAND_TYPE(s) are:\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[add]: add note\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[remove]: remove note\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[list]: displays all notes\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[filter]: filters notes by topic\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[exit]: close the application\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"                    \"For more help on a specific command, type `help c/COMMAND_TYPE`\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The available COMMAND_TYPE(s) are:\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[add]: add note\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[remove]: remove note\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[list]: displays all notes\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[filter]: filters notes by topic\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"                    \"[exit]: close the application\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"                    \"For more help on a specific command, type `help c/COMMAND_TYPE`\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintAddSuccess() {","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"        String name \u003d \"queue\";","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"        String topic \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printAddSuccess(name, topic);","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Successfully added queue into LINKED_LIST.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Successfully added queue into LINKED_LIST.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintAddFail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"nikkiDEEE"},"content":"        String topic \u003d \"FENWICK_TREE\";","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printAddFail(topic);","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful! FENWICK_TREE is not a topic in CS2040C.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful! FENWICK_TREE is not a topic in CS2040C.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintListSuccess() {","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printListSuccess();","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Here are all your notes:\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Here are all your notes:\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintListFail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printListFail();","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"nikkiDEEE"},"content":"                    \"You have no notes!\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/list\u0027 for assistance.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d  \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"nikkiDEEE"},"content":"                    \"You have no notes!\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/list\u0027 for assistance.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintRemoveSuccess() {","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"nikkiDEEE"},"content":"        String name \u003d \"queue\";","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printRemoveSuccess(name);","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Successfully removed queue.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d  \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Successfully removed queue.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintRemoveFail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printRemoveFail();","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/remove\u0027 for assistance.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +  MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful!\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/remove\u0027 for assistance.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintFilterSuccess() {","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":250,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printFilterSuccess();","lastModifiedDate":"2023-03-07"},{"lineNumber":251,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":252,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Here are the filtered notes:\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Here are the filtered notes:\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintFilterFail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":273,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printFilterFail();","lastModifiedDate":"2023-03-07"},{"lineNumber":274,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":275,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/filter\u0027 for assistance.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Unsuccessful!\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Type \u0027help c/filter\u0027 for assistance.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":292,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpAdd() {","lastModifiedDate":"2023-03-07"},{"lineNumber":294,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":296,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":297,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":298,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpAdd();","lastModifiedDate":"2023-03-07"},{"lineNumber":299,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":300,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":302,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":305,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function adds a note and tags it to a topic.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":306,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027add\u0027 command is: add n/NAME t/TOPIC.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"nikkiDEEE"},"content":"                    \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"nikkiDEEE"},"content":"                    \"TOPIC refers to the topic that NAME will be tagged to.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Case sensitive. NAME and TOPIC fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid NAME or TOPIC will cause an error.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function adds a note and tags it to a topic.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027add\u0027 command is: add n/NAME t/TOPIC.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"nikkiDEEE"},"content":"                    \"NAME refers to the notes\u0027 file name.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"nikkiDEEE"},"content":"                    \"TOPIC refers to the topic that NAME will be tagged to.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Case sensitive. NAME and TOPIC fields must be non-empty.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid NAME or TOPIC will cause an error.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":325,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":326,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpRemove() {","lastModifiedDate":"2023-03-07"},{"lineNumber":327,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":328,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":329,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":331,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpRemove();","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":333,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":334,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":336,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":337,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":338,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function removes a note from the tagged topic.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":339,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027remove\u0027 command is: remove n/NAME.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":340,"author":{"gitId":"nikkiDEEE"},"content":"                    \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":341,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u0027n/\u0027 must be included else NAME will not be read.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":342,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid NAME will cause an error.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":343,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":344,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":345,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":346,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function removes a note from the tagged topic.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":347,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027remove\u0027 command is: remove n/NAME.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":348,"author":{"gitId":"nikkiDEEE"},"content":"                    \"NAME refers to the notes\u0027 file name.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":349,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u0027n/\u0027 must be included else NAME will not be read.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":350,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid NAME will cause an error.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":351,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":352,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":353,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":354,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":355,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":356,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":357,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":358,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":360,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":361,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":362,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpList();","lastModifiedDate":"2023-03-07"},{"lineNumber":363,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":364,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":365,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":366,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":367,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":368,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":369,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function lists all stored notes.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":370,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027list\u0027 command is: list.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":371,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Command should only contain one word (i.e. no extensions).\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":372,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":373,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":374,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":375,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function lists all stored notes.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":376,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027list\u0027 command is: list.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":377,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Command should only contain one word (i.e. no extensions).\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":378,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":379,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":380,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpFilter() {","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":386,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":387,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":388,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":389,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpFilter();","lastModifiedDate":"2023-03-07"},{"lineNumber":390,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":391,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":392,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":393,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":394,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":395,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":396,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function filters by topic/importance and topic name.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":397,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027filter\u0027 command is: filter k/KEYWORD t/TOPIC_NAME\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":398,"author":{"gitId":"nikkiDEEE"},"content":"                    \"KEYWORD has to be either \u0027topic\u0027 or \u0027importance\u0027.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":399,"author":{"gitId":"nikkiDEEE"},"content":"                    \"TOPIC_NAME can be any (one) of the pre-defined topics in CS2040C.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":400,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Case sensitive. KEYWORD and TOPIC_NAME fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":401,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid KEYWORD and/or TOPIC_NAME will cause an error.\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":402,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":403,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":404,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":405,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function filters by topic/importance and topic name.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":406,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027filter\u0027 command is: filter k/KEYWORD t/TOPIC_NAME\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":407,"author":{"gitId":"nikkiDEEE"},"content":"                    \"KEYWORD has to be either \u0027topic\u0027 or \u0027importance\u0027.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":408,"author":{"gitId":"nikkiDEEE"},"content":"                    \"TOPIC_NAME can be any (one) of the pre-defined topics in CS2040C.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":409,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Case sensitive. KEYWORD and TOPIC_NAME fields must be non-empty.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":410,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Invalid KEYWORD and/or TOPIC_NAME will cause an error.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":411,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":412,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":413,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":414,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":415,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":416,"author":{"gitId":"nikkiDEEE"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":417,"author":{"gitId":"nikkiDEEE"},"content":"    void testPrintHelpExit() {","lastModifiedDate":"2023-03-07"},{"lineNumber":418,"author":{"gitId":"nikkiDEEE"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-07"},{"lineNumber":419,"author":{"gitId":"nikkiDEEE"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-07"},{"lineNumber":420,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":421,"author":{"gitId":"nikkiDEEE"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-07"},{"lineNumber":422,"author":{"gitId":"nikkiDEEE"},"content":"        ui.printHelpExit();","lastModifiedDate":"2023-03-07"},{"lineNumber":423,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":424,"author":{"gitId":"nikkiDEEE"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":425,"author":{"gitId":"nikkiDEEE"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":426,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":427,"author":{"gitId":"nikkiDEEE"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":428,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":429,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function exits the application.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":430,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027exit\u0027 command is: exit.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":431,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Command should only contain one word (i.e. no extensions).\" + WINDOWS_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":432,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + WINDOWS_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":433,"author":{"gitId":"nikkiDEEE"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":434,"author":{"gitId":"nikkiDEEE"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":435,"author":{"gitId":"nikkiDEEE"},"content":"                    \"This function exits the application.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":436,"author":{"gitId":"nikkiDEEE"},"content":"                    \"The syntax for the \u0027exit\u0027 command is: exit.\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":437,"author":{"gitId":"nikkiDEEE"},"content":"                    \"Command should only contain one word (i.e. no extensions).\" + MAC_WHITESPACE +","lastModifiedDate":"2023-03-08"},{"lineNumber":438,"author":{"gitId":"nikkiDEEE"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" + MAC_WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":439,"author":{"gitId":"nikkiDEEE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":440,"author":{"gitId":"nikkiDEEE"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-07"},{"lineNumber":441,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":442,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nikkiDEEE":442}},{"path":"src/test/java/seedu/clialgo/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":" * JUnit test for the \u003ccode\u003eAddCommand\u003c/code\u003e class methods.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"     * Deletes folder at \u003ccode\u003epathToFolder\u003c/code\u003e and all the files within.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"     * @param pathToFolder The \u003ccode\u003eFile\u003c/code\u003e representing the folder to delete.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"    public void deleteAll(File pathToFolder) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"        for (File f : Objects.requireNonNull(pathToFolder.listFiles())) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"            if (!f.delete()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"        if (!pathToFolder.delete()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     * Inputs two equal \u003ccode\u003eAddCommand\u003c/code\u003e objects and expects the method to return true.","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"    void equals_checkEqualAddCommand_expectTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"        String firstName \u003d \"dummyName\";","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"        String secondName \u003d \"dummyName\";","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"        String firstPath \u003d \"dummyPath\";","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"        String secondPath \u003d \"dummyPath\";","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"        AddCommand firstAddCommand \u003d new AddCommand(firstName, firstPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"ong-ck"},"content":"        AddCommand secondAddCommand \u003d new AddCommand(secondName, secondPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"        assertTrue(firstAddCommand.equals(secondAddCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"     * Inputs two unequal \u003ccode\u003eAddCommand\u003c/code\u003e objects and expects the method to return false.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"    void equals_checkUnequalAddCommand_expectFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"        String firstName \u003d \"dummyName1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"        String secondName \u003d \"dummyName2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"        String firstPath \u003d \"dummyPath1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"ong-ck"},"content":"        String secondPath \u003d \"dummyPath2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"ong-ck"},"content":"        AddCommand firstAddCommand \u003d new AddCommand(firstName, firstPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"ong-ck"},"content":"        AddCommand secondAddCommand \u003d new AddCommand(secondName, secondPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"ong-ck"},"content":"        assertFalse(firstAddCommand.equals(secondAddCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ong-ck"},"content":"     * Inputs proper inputs for \u003ccode\u003eAddCommand\u003c/code\u003e object and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ong-ck"},"content":"     * to print message for successful adding of note.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ong-ck"},"content":"    void execute_properInput_expectAddSuccessfulMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ong-ck"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ong-ck"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"lohjooh"},"content":"        String testDataPath \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"ong-ck"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ong-ck"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"lohjooh"},"content":"        FileManager fileManager \u003d new FileManager(testDataPath, topicManager.getTopicNames());","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"lohjooh"},"content":"        fileManager.initialize();","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ong-ck"},"content":"        String noteName \u003d \"queue\";","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ong-ck"},"content":"        String noteTopic \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ong-ck"},"content":"        new AddCommand(noteName, noteTopic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ong-ck"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ong-ck"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ong-ck"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ong-ck"},"content":"            // This expected output has \"File Created\" due to the first","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ong-ck"},"content":"            // initialisation of the FileManager in AddCommandTest.","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"ong-ck"},"content":"                    \"Successfully added queue into LINKED_LIST.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ong-ck"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"lohjooh"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"ong-ck"},"content":"                    \"Successfully added queue into LINKED_LIST.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"ong-ck"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(testDataPath));","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"ong-ck"},"content":"     * Inputs invalid topic for \u003ccode\u003eAddCommand\u003c/code\u003e object and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"ong-ck"},"content":"     * to print message for unsuccessful adding of note due to invalid topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"ong-ck"},"content":"    void execute_invalidTopicInput_expectAddUnsuccessfulDueToInvalidTopicMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"ong-ck"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"ong-ck"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"lohjooh"},"content":"        String testDataPath \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"ong-ck"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"ong-ck"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"lohjooh"},"content":"        FileManager fileManager \u003d new FileManager(testDataPath, topicManager.getTopicNames());","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"lohjooh"},"content":"        fileManager.initialize();","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"ong-ck"},"content":"        String noteName \u003d \"queue\";","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"ong-ck"},"content":"        String noteTopic \u003d \"invalidTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"ong-ck"},"content":"        new AddCommand(noteName, noteTopic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"ong-ck"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"ong-ck"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"ong-ck"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"ong-ck"},"content":"                    \"Unsuccessful! invalidTopic is not a topic in CS2040C.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"ong-ck"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"ong-ck"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"ong-ck"},"content":"                    \"Unsuccessful! invalidTopic is not a topic in CS2040C.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"ong-ck"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"ong-ck"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(testDataPath));","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"ong-ck"},"content":"     * Inputs repeated name for \u003ccode\u003eAddCommand\u003c/code\u003e object and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"ong-ck"},"content":"     * to print message for unsuccessful adding of note due to invalid command.","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"ong-ck"},"content":"    void execute_repeatedInput_expectAddUnsuccessfulDueToInvalidCommandMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"ong-ck"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"ong-ck"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"lohjooh"},"content":"        String testDataPath \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"ong-ck"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"ong-ck"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"lohjooh"},"content":"        FileManager fileManager \u003d new FileManager(testDataPath, topicManager.getTopicNames());","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"lohjooh"},"content":"        fileManager.initialize();","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"ong-ck"},"content":"        String noteName \u003d \"queue\";","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"ong-ck"},"content":"        String noteTopic \u003d \"LINKED_LIST\";","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"ong-ck"},"content":"        // Adding the note with same name twice into same topic","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"ong-ck"},"content":"        new AddCommand(noteName, noteTopic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"ong-ck"},"content":"        new AddCommand(noteName, noteTopic).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"ong-ck"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"ong-ck"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"ong-ck"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"ong-ck"},"content":"                    \"Successfully added queue into LINKED_LIST.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"nicholas132000"},"content":"                    \"This is an invalid command, please ensure all your fields are correct\\r\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"ong-ck"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"ong-ck"},"content":"                    \"Successfully added queue into LINKED_LIST.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"nicholas132000"},"content":"                    \"This is an invalid command, please ensure all your fields are correct\\n\" +","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"ong-ck"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(testDataPath));","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":2,"lohjooh":33,"ong-ck":158}},{"path":"src/test/java/seedu/clialgo/command/InvalidTopicCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.TopicManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"class InvalidTopicCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"     * Deletes folder at \u003ccode\u003epathToFolder\u003c/code\u003e and all the files within.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"     * @param pathToFolder The \u003ccode\u003eFile\u003c/code\u003e representing the folder to delete.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    public void deleteAll(File pathToFolder) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"        for (File f : Objects.requireNonNull(pathToFolder.listFiles())) {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"            if (!f.delete()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        if (!pathToFolder.delete()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Delete successful\");","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"     * Inputs two equal \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e objects and expects the method to return true.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"    void equals_checkEqualInvalidTopicCommand_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"        String firstTopic \u003d \"dummyTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"        String secondTopic \u003d \"dummyTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand firstInvalidTopicCommand \u003d new InvalidTopicCommand(firstTopic);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand secondInvalidTopicCommand \u003d new InvalidTopicCommand(secondTopic);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"        assertTrue(firstInvalidTopicCommand.equals(secondInvalidTopicCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"     * Inputs two unequal \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e objects and expects the method to return false.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"    void equals_checkUnequalInvalidTopicCommand_expectFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"        String firstTopic \u003d \"dummyTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"        String secondTopic \u003d \"diffDummyTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand firstInvalidTopicCommand \u003d new InvalidTopicCommand(firstTopic);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"        InvalidTopicCommand secondInvalidTopicCommand \u003d new InvalidTopicCommand(secondTopic);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"        assertFalse(firstInvalidTopicCommand.equals(secondInvalidTopicCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ong-ck"},"content":"     * Inputs repeated name for \u003ccode\u003eInvalidTopicCommand\u003c/code\u003e object and expects the method","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ong-ck"},"content":"     * to print message for unsuccessful adding of note due to invalid topic.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ong-ck"},"content":"    void execute_checkMethodExecution_expectAddUnsuccessfulDueToInvalidTopicMessage() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ong-ck"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ong-ck"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"lohjooh"},"content":"        String testDataPath \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"ong-ck"},"content":"        TopicManager topicManager \u003d new TopicManager();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ong-ck"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"lohjooh"},"content":"        FileManager fileManager \u003d new FileManager(testDataPath, topicManager.getTopicNames());","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"lohjooh"},"content":"        fileManager.initialize();","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ong-ck"},"content":"        String topicName \u003d \"invalidTopic\";","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ong-ck"},"content":"        new InvalidTopicCommand(topicName).execute(topicManager, ui, fileManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ong-ck"},"content":"        String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ong-ck"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ong-ck"},"content":"        if (os.contains(\"Windows\")) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ong-ck"},"content":"                    \"Unsuccessful! invalidTopic is not a topic in CS2040C.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ong-ck"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\\r\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\r\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ong-ck"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ong-ck"},"content":"            expectedOutput \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ong-ck"},"content":"                    \"Unsuccessful! invalidTopic is not a topic in CS2040C.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ong-ck"},"content":"                    \"Type \u0027help c/add\u0027 for assistance.\\n\" +","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ong-ck"},"content":"                    \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ong-ck"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ong-ck"},"content":"        assertEquals(expectedOutput, outContent.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(testDataPath));","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"lohjooh":23,"ong-ck":76}},{"path":"src/test/java/seedu/clialgo/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"public class RemoveCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    public void testRemoveCommandConstructor() {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"        RemoveCommand myObj \u003d new RemoveCommand(\"queue notes\");","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"        assertEquals(\"queue notes\", myObj.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":14,"lohjooh":1}},{"path":"src/test/java/seedu/clialgo/storage/FileManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"public class FileManagerTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"     * Deletes folder at \u003ccode\u003epathToFolder\u003c/code\u003e and all the files within.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"     * @param pathToFolder The \u003ccode\u003eFile\u003c/code\u003e representing the folder to delete.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"    public void deleteAll(File pathToFolder) {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"        for (File f : Objects.requireNonNull(pathToFolder.listFiles())) {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"            if (!f.delete()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"        if (!pathToFolder.delete()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Delete failed\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"Delete successful\");","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"     * Test if folder is created correctly when \u003ccode\u003einitialize\u003c/code\u003e is called from a \u003ccode\u003eFileManager\u003c/code\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"     * object.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"    void isFolderCorrectlyCreated_noInput_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"        ArrayList\u003cString\u003e test \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"        String path \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"        FileManager fm \u003d new FileManager(path, test);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"        fm.initialize();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"        deleteAll(file);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"     * Test if a single .txt \u003ccode\u003eFile\u003c/code\u003e is created correctly when \u003ccode\u003einitialize\u003c/code\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"     * is called from a \u003ccode\u003eFileManager\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"    void isOneFileCorrectlyCreated_oneInput_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"        ArrayList\u003cString\u003e test \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"        test.add(\"test\");","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"        String path \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"        FileManager fm \u003d new FileManager(path, test);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"        fm.initialize();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"        File file \u003d new File(path + \"\\\\test.txt\");","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(path));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"     * Test if a multiple .txt \u003ccode\u003eFiles\u003c/code\u003e are created correctly when \u003ccode\u003einitialize\u003c/code\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"lohjooh"},"content":"     * is called from a \u003ccode\u003eFileManager\u003c/code\u003e object.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"lohjooh"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"lohjooh"},"content":"    void areMultipleFilesCorrectlyCreated_multipleInputs_expectTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"lohjooh"},"content":"        ArrayList\u003cString\u003e test \u003d new ArrayList\u003c\u003e(Arrays.asList(\"test1\", \"test2\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"lohjooh"},"content":"        String path \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"lohjooh"},"content":"        FileManager fm \u003d new FileManager(path, test);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"lohjooh"},"content":"        fm.initialize();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"lohjooh"},"content":"        for (String s : test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"lohjooh"},"content":"            File file \u003d new File(path + \"\\\\\" + s + \".txt\");","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"lohjooh"},"content":"            assertTrue(file.exists());","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(path));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"lohjooh"},"content":"    /** Test if a \u003ccode\u003eHashMap\u003c/code\u003e with the correctly named \u003ccode\u003ekeys\u003c/code\u003e is created. */","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"lohjooh"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"lohjooh"},"content":"    void areCorrectKeysWhenDecodeAll_multipleInputs_expectTrue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"lohjooh"},"content":"        ArrayList\u003cString\u003e test \u003d new ArrayList\u003c\u003e(Arrays.asList(\"test1\", \"test2\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"lohjooh"},"content":"        String path \u003d \".\\\\testdata\";","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"lohjooh"},"content":"        FileManager fm \u003d new FileManager(path, test);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"lohjooh"},"content":"        fm.initialize();","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"lohjooh"},"content":"        HashMap\u003cString, Topic\u003e testOutput \u003d fm.decodeAll();","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"lohjooh"},"content":"        for (String s: test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"lohjooh"},"content":"            assertNotNull(testOutput.get(s));","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"lohjooh"},"content":"        deleteAll(new File(path));","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"lohjooh":95}}]
