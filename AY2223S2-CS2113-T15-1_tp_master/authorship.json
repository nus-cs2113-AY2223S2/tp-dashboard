[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"theme: minima","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ong-ck":2,"-":64}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    mainClass \u003d \"seedu.clialgo.CLIAlgo\"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"    archiveBaseName \u003d \"clialgo\"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"heejet":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Display |    Name     | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"--------|:-----------:|:--------------:|:---------:","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"![](https://avatars.githubusercontent.com/u/88279614?s\u003d400\u0026u\u003d3271621fb9d98584e92a54677e4e386854d94ec5\u0026v\u003d4) | Ong Hee Jet | [Github](https://github.com/heejet) | [Portfolio](team/ongheejet.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"![](https://avatars.githubusercontent.com/u/88373092?v\u003d4) | Loh Joo Hoe | [Github](https://github.com/lohjooh) | [Portfolio](team/lohjoohoe.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"![](https://avatars.githubusercontent.com/u/88139349?s\u003d400\u0026u\u003d1a6d496e41aae8ff748ef6aad040be452b531cd4\u0026v\u003d4) | Nikhil Shashidhar | [Github](https://github.com/nikkiDEEE) | [Portfolio](team/nikhil.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":"![](https://avatars.githubusercontent.com/u/85627680?s\u003d400\u0026u\u003d07e24badd619ed48cab013038fe25c7201e111a0\u0026v\u003d4) | Ong Chuan Kai | [Github](https://github.com/ong-ck) | [Portfolio](team/ongchuankai.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"![](https://avatars.githubusercontent.com/u/88270205?v\u003d4) | Nicholas H Goh Maowen | [Github](https://github.com/nicholas132000) | [Portfolio](team/nicholas.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nicholas132000":4,"lohjooh":2,"heejet":1,"ong-ck":2,"-":3}},{"path":"docs/team/lohjoohoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"# Loh Joo Hoe - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"lohjooh":6}},{"path":"docs/team/nicholas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholas132000"},"content":"# Nicholas H Goh Maowen - Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"## Overview","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nicholas132000":6}},{"path":"docs/team/nikhil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nikkiDEEE"},"content":"# Nikhil - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"nikkiDEEE":6}},{"path":"docs/team/ongchuankai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ong-ck"},"content":"# Ong Chuan Kai - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ong-ck":1,"-":5}},{"path":"docs/team/ongheejet.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"# Ong Hee Jet - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"heejet":6}},{"path":"src/main/java/seedu/clialgo/CLIAlgo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"public class CLIAlgo {","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"    public CLIAlgo() {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"What is your name?\");","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello \" + in.nextLine());","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"heejet":5,"-":16}},{"path":"src/main/java/seedu/clialgo/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":" * The \u003ccode\u003eNote\u003c/code\u003e object represents each note file that the user can add into CLIAlgo.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"public class Note {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"    public String name;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    public String path;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    public String tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"     * Constructor for \u003ccode\u003eNote\u003c/code\u003e object.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"     * @param path Path to the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"     * @param tag Topic that note file should be tagged.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    public Note(String name, String path, String tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     * Prints the name of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    public void printNoteName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        System.out.println(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"     * Gets the location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"     * @return The location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"    public String getPath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"        return path;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"     * Sets the location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"     * @param path The new location path of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"    public void setPath(String path) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"     * Gets the tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"     * @return The tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"    public String getTag() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"        return tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"     * Sets the tag of the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"     * @param tag The new tag for the note file.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"    public void setTag(String tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":67}},{"path":"src/main/java/seedu/clialgo/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.FilterCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.HelpCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.InvalidCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.InvalidTopicCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.command.RemoveCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"public class Parser implements StringManipulation {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    /** Delimiters use to separate inputs within commands */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    public static final String NAME_MARKER \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    public static final String COMMAND_MARKER \u003d \"c/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    public static final String TOPIC_MARKER \u003d \"t/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"    public static final String KEYWORD_MARKER \u003d \"k/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    public static final String WHITE_SPACE \u003d \" \";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"    /** List of valid commands */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"    private static final ArrayList\u003cString\u003e COMMANDS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"            Arrays.asList(\"help\", \"add\", \"remove\", \"filter\", \"exit\")","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"    );","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"     * Checks if the input string is a valid command.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"     * @param keyWord The input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"     * @return True if the input string is a valid keyword, False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"    public boolean isValidCommand(String keyWord) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        return COMMANDS.contains(keyWord);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"     * Checks if the correct marker is used by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     * @param correctMarker The correct marker that is supposed to be used.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @return True if the marker used by the user matches correctMarker. False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @throws IndexOutOfBoundsException If length of userInput \u003c length of correctMarker.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"    public boolean isCorrectMarker(String userInput, String correctMarker) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        String markerPresent \u003d userInput.substring(0, correctMarker.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        return markerPresent.equals(correctMarker);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eHelpCommand\u003c/code\u003e object that teaches the user how to use CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eHelpCommand\u003c/code\u003e using the default constructor if description is empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"     * @param description A string indicating the command the user need help with.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"     * @return A Command object that teaches the user how to use CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"    private Command prepareHelpCommand(String description) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"        // No description provided, show generic help message.","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null || description.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"        String command;","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"            if (!isCorrectMarker(description, COMMAND_MARKER)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"            command \u003d StringManipulation.removeMarker(description, COMMAND_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"            if (!isValidCommand(command)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        } catch (IndexOutOfBoundsException | EmptyFieldException | NullInputException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"        return new HelpCommand(command);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eAddCommand\u003c/code\u003e object that adds a note to CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"     * @param description String containing the information on the note to be added.","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"     * @return a Command object that adds a note to CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"    private Command prepareAddCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"        String noteName;","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"        String topicName;","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"            noteName \u003d StringManipulation.getFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"            topicName \u003d StringManipulation.removeFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"            if (!topics.isValidTopic(topicName)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"                return new InvalidTopicCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"        return new AddCommand(noteName, topicName);","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eRemoveCommand\u003c/code\u003e object that deletes a note from CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"     * @param description String containing the information on the note to be removed.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"     * @return a Command object that deletes a note from CLIAlgo when executed.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"    private Command prepareRemoveCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"        String noteName;","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"            if (!isCorrectMarker(description, NAME_MARKER)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"            noteName \u003d StringManipulation.removeMarker(description, NAME_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException | EmptyFieldException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"        return new RemoveCommand(noteName);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"     * Returns a \u003ccode\u003eFilterCommand\u003c/code\u003e object that lists notes according a certain criteria.","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"     * Returns \u003ccode\u003eInvalidCommand\u003c/code\u003e when the user does not follow the input format in the user guide.","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"     * @param description String containing criteria to filter the notes by.","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"     * @return a Command object that lists notes according a certain criteria.","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"    private Command prepareFilterCommand(String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"        String keyWord;","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"        String topicName;","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"            String fullKeyWord \u003d StringManipulation.getFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"            topicName \u003d StringManipulation.removeFirstWord(description, TOPIC_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"            if (!isCorrectMarker(fullKeyWord, KEYWORD_MARKER)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"            keyWord \u003d StringManipulation.removeMarker(fullKeyWord, KEYWORD_MARKER);","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException | EmptyFieldException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"        return new FilterCommand(keyWord, topicName);","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that list out the notes stored in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"    private Command prepareListCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"        return new ListCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"     * @return A \u003ccode\u003eCommand\u003c/code\u003e object that exits CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"heejet"},"content":"    private Command prepareExitCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"heejet"},"content":"        return new ExitCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"heejet"},"content":"     * This function takes in the command keyword and description and executes the specified command.","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"heejet"},"content":"     * @param command The command keyword indicating the type of command to execute.","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"heejet"},"content":"     * @param description The string specifying the details of the command.","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"heejet"},"content":"     * @return A Command object that executes the command corresponding to the command keyword keyed in by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"heejet"},"content":"    private Command prepareCommand(String command, String description, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"heejet"},"content":"        switch (command) {","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"heejet"},"content":"        case \"help\":","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"heejet"},"content":"            return prepareHelpCommand(description);","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"heejet"},"content":"        case \"add\":","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"heejet"},"content":"            return prepareAddCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"heejet"},"content":"        case \"remove\":","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"heejet"},"content":"            return prepareRemoveCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"heejet"},"content":"        case \"filter\":","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"heejet"},"content":"            return prepareFilterCommand(description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"heejet"},"content":"        case \"list\":","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"heejet"},"content":"            return prepareListCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"heejet"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"heejet"},"content":"            return prepareExitCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"heejet"},"content":"     * Returns the appropriate Command object based on the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"heejet"},"content":"     * @param fullCommand The full user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"heejet"},"content":"     * @param topics The topic manager class containing all topics in CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"heejet"},"content":"     * @return A Command objects that suits the user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"heejet"},"content":"    public Command parse(String fullCommand, TopicManager topics) {","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"heejet"},"content":"        String command;","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"heejet"},"content":"        String description;","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"heejet"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"heejet"},"content":"            command \u003d StringManipulation.getFirstWord(fullCommand, WHITE_SPACE);","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"heejet"},"content":"            if (!isValidCommand(command)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"heejet"},"content":"                return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"heejet"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"heejet"},"content":"            description \u003d StringManipulation.removeFirstWord(fullCommand, WHITE_SPACE);","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"heejet"},"content":"        } catch (NullInputException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"heejet"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"heejet"},"content":"        return prepareCommand(command, description, topics);","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":11,"heejet":211}},{"path":"src/main/java/seedu/clialgo/StringManipulation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"public interface StringManipulation {","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"     * Extracts out the first word of an input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"     * @return The first word of the string.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If the userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    static String getFirstWord(String userInput, String regex) throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(regex, 2);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        return processedInputs[0].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"     * Removes the first word of an input string and returns the remaining string.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"     * Returns null if the string only consist of one word.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"     * @param userInput The input string.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"     * @return The input string with the first word removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    static String removeFirstWord(String userInput, String regex) throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        String[] processedInputs \u003d userInput.split(regex, 2);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"        if (processedInputs.length \u003d\u003d 1) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"            return null;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        return processedInputs[1].trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"     * This method removes the marker from the keyword and returns the keyword.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"     * @param userInput The input with the marker at the front.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"     * @param marker The marker to be removed.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"     * @return userInput with the marker removed at the front.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"     * @throws EmptyFieldException If the string is empty after removing the keyword.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"     * @throws NullInputException If userInput is empty or null.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"    static String removeMarker(String userInput, String marker) throws EmptyFieldException, NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        if (userInput \u003d\u003d null || userInput.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"            throw new NullInputException();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"        String keyword \u003d userInput.substring(marker.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"        return keyword.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"heejet":60}},{"path":"src/main/java/seedu/clialgo/Topic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"ong-ck"},"content":"// Placeholder class","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"public class Topic {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"    private String topicName;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"    private HashMap\u003cString, Note\u003e notes;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    public Topic(String topicName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"        this.topicName \u003d topicName;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"        notes \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"    public boolean addNote(String name, String path) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"        return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"    // Placeholder method","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"    public void removeNote(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"    public void printSortedOrder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":1,"heejet":13,"ong-ck":13}},{"path":"src/main/java/seedu/clialgo/TopicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"public class TopicManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"    /** List of valid topics */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"    private static final ArrayList\u003cString\u003e TOPIC_NAMES \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"            Arrays.asList(\"SORTING\", \"LINKED_LIST\", \"GRAPH_STRUCTURES\", \"BINARY_HEAP\", \"HASH_TABLE\", \"GRAPH_TRAVERSAL\",","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"                    \"BINARY_SEARCH_TREE\", \"SS_SHORTEST_PATH\", \"UNION_FIND_DS\", \"MINIMUM_SPANNING_TREE\")","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    );","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    // General HashSet to check for duplicate names.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    private HashSet\u003cString\u003e allNotes;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"    // Data Structure to hold all the topics","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    private HashMap\u003cString, Topic\u003e topics;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    public TopicManager() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        allNotes \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        topics \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        for (String topicName : TOPIC_NAMES) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"            topics.put(topicName, new Topic(topicName));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"     * Checks if the input string is a valid topic.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"     * @param topic The input string.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"     * @return True if the input string is a valid topic, False otherwise.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"    public boolean isValidTopic(String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"        return TOPIC_NAMES.contains(topic);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":37}},{"path":"src/main/java/seedu/clialgo/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nikkiDEEE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nikkiDEEE"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nikkiDEEE"},"content":" * Text UI of the application.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nikkiDEEE"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nikkiDEEE"},"content":"public class Ui {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nikkiDEEE"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nikkiDEEE"},"content":"     * Scanner object to read user input.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nikkiDEEE"},"content":"    private final Scanner in;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nikkiDEEE"},"content":"    public Ui() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nikkiDEEE"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nikkiDEEE"},"content":"     * Returns user input","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nikkiDEEE"},"content":"     * @return userInput A String input by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nikkiDEEE"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nikkiDEEE"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a divider","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"nikkiDEEE"},"content":"    private void printDivider() {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the intro message when application starts","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nikkiDEEE"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Hello! Welcome to CLIAlgo Notes!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the outro message when the application is closed","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nikkiDEEE"},"content":"    public void printExitMessage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Thank you for using CLIAlgo! Study hard!\");","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a list of valid (available) user commands","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help\")","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpPage() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"The available COMMAND_TYPE(s) are:\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[add]: add note\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[remove]: remove note\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[list]: displays all notes\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[filter]: filters notes by topic\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"nikkiDEEE"},"content":"                        \"[exit]: close the application\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"nikkiDEEE"},"content":"                        \"For more help on a specific command, type `help c/COMMAND_TYPE`\\n\");","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating successful addition of the notes to the tagged topic in the list","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"nikkiDEEE"},"content":"     * @param name the name of the notes defined by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"nikkiDEEE"},"content":"     * @param topic the CS2040C topic","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"nikkiDEEE"},"content":"    public void printAddSuccess(String name, String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Successfully added %s into %s.%n\", name, topic);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating the failure to add notes to a topic (which does not exist in CS2040)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"nikkiDEEE"},"content":"     * @param topic the CS2040C topic","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"nikkiDEEE"},"content":"    public void printAddFail(String topic) {","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Unsuccessful! %s is not a topic in CS2040C.%n\", topic);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Type \u0027help c/add\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the list of notes saved by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"nikkiDEEE"},"content":"    public void printListSuccess() {","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Here are all your notes:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message if user has no saved notes","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"nikkiDEEE"},"content":"    public void printListFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"You have no notes!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/list\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a message indicating successful purge of a user-defined notes","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"nikkiDEEE"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"nikkiDEEE"},"content":"     * @param name the name of the notes defined by the user","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"nikkiDEEE"},"content":"    public void printRemoveSuccess(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.printf(\"Successfully removed %s.%n\", name);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints an error message if user has not used appropriate flags/no notes exist of the specific name","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"nikkiDEEE"},"content":"    public void printRemoveFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/remove\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a filtered set of notes user-specified by keyword and topic name","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"nikkiDEEE"},"content":"    public void printFilterSuccess() {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Here are the filtered notes:\");","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints a filtered set of notes user-specified by keyword and topic name","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"nikkiDEEE"},"content":"    public void printFilterFail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"Unsuccessful!\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Type \u0027help c/filter\u0027 for assistance.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027add\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/add\")","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpAdd() {","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function adds a note and tags it to a topic.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027add\u0027 command is: add n/NAME t/TOPIC. \\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"nikkiDEEE"},"content":"                        \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"nikkiDEEE"},"content":"                        \"TOPIC refers to the topic that NAME will be tagged to.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Case sensitive. NAME and TOPIC fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid NAME or TOPIC will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027remove\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/remove\")","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpRemove() {","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function removes a note from the tagged topic.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027remove\u0027 command is: remove n/NAME. \\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"nikkiDEEE"},"content":"                        \"NAME refers to the notes\u0027 file name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"nikkiDEEE"},"content":"                        \"\u0027n/\u0027 must be included else NAME will not be read.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid NAME will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027list\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/list\")","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function lists all stored notes.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027list\u0027 command is: list.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Command should only contain one word (i.e. no extensions).\");","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027filter\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/filter\")","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpFilter() {","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function filters by topic/importance and topic name.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027filter\u0027 command is: filter k/KEYWORD t/TOPIC_NAME\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"nikkiDEEE"},"content":"                        \"KEYWORD has to be either \u0027topic\u0027 or \u0027importance\u0027.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"nikkiDEEE"},"content":"                        \"TOPIC_NAME can be any (one) of the pre-defined topics in CS2040C.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Case sensitive. KEYWORD and TOPIC_NAME fields must be non-empty.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Invalid KEYWORD and/or TOPIC_NAME will cause an error.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"nikkiDEEE"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"nikkiDEEE"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"nikkiDEEE"},"content":"     * Prints the requirements for using the \u0027exit\u0027 command","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"nikkiDEEE"},"content":"     * To be called when userInput.equals(\"help c/exit\")","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"nikkiDEEE"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"nikkiDEEE"},"content":"    public void printHelpExit() {","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"nikkiDEEE"},"content":"        System.out.println(\"This function exits the application.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"nikkiDEEE"},"content":"                        \"The syntax for the \u0027exit\u0027 command is: exit.\\n\" +","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"nikkiDEEE"},"content":"                        \"Command should only contain one word (i.e. no extensions).\");","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"nikkiDEEE"},"content":"        printDivider();","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"nikkiDEEE"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"nikkiDEEE"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nikkiDEEE":219,"lohjooh":1}},{"path":"src/main/java/seedu/clialgo/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":" * The \u003ccode\u003eAddCommand\u003c/code\u003e objects represents the user command to add new notes into CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"    public String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"    public String path;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"     * Constructor for command to add note to topic list.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"     * @param path Path of the note file.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"    public AddCommand(String name, String path) {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"ong-ck"},"content":"     * An overridden method to execute the user command to add new notes into CLIAlgo.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"ong-ck"},"content":"     * @param topic The \u003ccode\u003eTopic\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"ong-ck"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"     * @param fileManager The \u003ccode\u003eStorage\u003c/code\u003e object.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"    public void execute(Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"        boolean isAdded \u003d topic.addNote(name, path);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"        // Check if added -\u003e execute invalid command if note added","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"        // Save list into Storage","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"ong-ck"},"content":"        // Ui for successful adding","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"ong-ck"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eAddCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"ong-ck"},"content":"     * @param otherCommand The other \u003ccode\u003eAddCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eAddCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"ong-ck"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"ong-ck"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"ong-ck"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) otherCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"ong-ck"},"content":"        return Objects.equals(this.name, otherAddCommand.name) \u0026\u0026","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"ong-ck"},"content":"                Objects.equals(this.path, otherAddCommand.path);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":8,"ong-ck":52}},{"path":"src/main/java/seedu/clialgo/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command from the user. A \u003ccode\u003eCommand\u003c/code\u003e object contains the details needed to execute","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * the command. Each subclass of \u003ccode\u003eCommand\u003c/code\u003e will have an overridden method \u003ccode\u003eexecute\u003c/code\u003e which has its","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * own implementation.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"     * A method to be overridden by the subclasses to execute specific commands by the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"     * @param topic The \u003ccode\u003eTopic\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"     * @param fileManager The \u003ccode\u003eFileManager\u003c/code\u003e object.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"    public abstract void execute(Topic topic, Ui ui, FileManager fileManager);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"     * A method to be overridden by the subclasses to check for equality of the instantiated objects.","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"     * @param otherCommand The other object to be checked against.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"     * @return A boolean value to determine whether the commands are equal.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"    public abstract boolean equals(Command otherCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":11,"lohjooh":7,"ong-ck":12}},{"path":"src/main/java/seedu/clialgo/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command. A \u003ccode\u003eExitCommand\u003c/code\u003e object is created whenever the","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * user decides to exit the program.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"     * This method closes the scanner and exits from the program","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"     * @param topic","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"     * @param ui","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"     * @param fileManager","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    public void execute (Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"        //ui.closeScanner();","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"        //ui.exitProgram();","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eExitCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eExitCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eExitCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"        return otherCommand instanceof ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":28,"lohjooh":6}},{"path":"src/main/java/seedu/clialgo/command/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    String keyWord;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    String topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"    public FilterCommand(String keyWord, String topic) {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"        this.topic \u003d topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    public void execute (Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"        return Objects.equals(this.keyWord, otherFilterCommand.keyWord) \u0026\u0026","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"                Objects.equals(this.topic, otherFilterCommand.topic);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":29}},{"path":"src/main/java/seedu/clialgo/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    private String command;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    public HelpCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    public void execute (Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"        HelpCommand otherHelpCommand \u003d (HelpCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"        return Objects.equals(this.command, otherHelpCommand.command);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":28}},{"path":"src/main/java/seedu/clialgo/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command. A \u003ccode\u003eInvalidCommand\u003c/code\u003e object is created whenever the user enters an invalid","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":" * command and is unable to generate the appropriate \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"     * This method informs the user that they have keyed in an invalid command.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    public void execute(Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"        //ui.printInvalidCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eInvalidCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eInvalidCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eInvalidCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"        return otherCommand instanceof InvalidCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":24,"lohjooh":7}},{"path":"src/main/java/seedu/clialgo/command/InvalidTopicCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"public class InvalidTopicCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    public void execute (Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"        return otherCommand instanceof InvalidTopicCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":16}},{"path":"src/main/java/seedu/clialgo/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    public void execute (Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"        return otherCommand instanceof ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"lohjooh":16}},{"path":"src/main/java/seedu/clialgo/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.storage.FileManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Topic;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":" * Represents an executable command from the user. A \u003ccode\u003eRemoveCommand\u003c/code\u003e object contains the name of","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":" * the note to be deleted. This object removes the note corresponding to the name of the note from the list when the","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":" * execute method is called.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicholas132000"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicholas132000"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicholas132000"},"content":"    public String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicholas132000"},"content":"     * Constructor for command to remove note from topic list.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicholas132000"},"content":"     * @param name Name of the note file.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicholas132000"},"content":"    public RemoveCommand(String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicholas132000"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicholas132000"},"content":"     * This method removes a note corresponding to \u003ccode\u003ename\u003c/code\u003e from the list. It then saves the","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicholas132000"},"content":"     * updated list.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nicholas132000"},"content":"     * @param topic A Topic object containing all the different topics available.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nicholas132000"},"content":"     * @param ui A Ui object which handles outputs to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"     * @param fileManager An object responsible for saving information.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"    public void execute(Topic topic, Ui ui, FileManager fileManager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"nicholas132000"},"content":"        //topic.removeNote(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"nicholas132000"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"nicholas132000"},"content":"     * An overridden method that checks for equality of \u003ccode\u003eRemoveCommand\u003c/code\u003e objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"nicholas132000"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"nicholas132000"},"content":"     * @param otherCommand The other \u003ccode\u003eRemoveCommand\u003c/code\u003e object to be checked against.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"nicholas132000"},"content":"     * @return A boolean value to determine whether the \u003ccode\u003eRemoveCommand\u003c/code\u003e objects are equal.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"nicholas132000"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"nicholas132000"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"nicholas132000"},"content":"    public boolean equals(Command otherCommand) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"nicholas132000"},"content":"        RemoveCommand otherRemoveCommand \u003d (RemoveCommand) otherCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"nicholas132000"},"content":"        return Objects.equals(this.name, otherRemoveCommand.name);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":44,"lohjooh":8}},{"path":"src/main/java/seedu/clialgo/exceptions/parser/EmptyFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo.exceptions.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class EmptyFieldException extends Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":4}},{"path":"src/main/java/seedu/clialgo/exceptions/parser/NullInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo.exceptions.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"public class NullInputException extends Exception{","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":4}},{"path":"src/main/java/seedu/clialgo/storage/FileDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"public class FileDecoder {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    protected File file;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    protected Note currentNote;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"    protected String currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    protected final String separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"     * Constructor for the fileDecoder object","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"     * @param file The file object referring to the .txt file with the raw data.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"     * @param separator The \u003ccode\u003eString\u003c/code\u003e which separates each form of data stored in each \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    public FileDecoder (File file, String separator) {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     * Converts an encoded \u003ccode\u003eNote\u003c/code\u003e from a \u003ccode\u003eString\u003c/code\u003e and stores the name of the","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"     * \u003ccode\u003eNote\u003c/code\u003e and the \u003ccode\u003eNote\u003c/code\u003e itself in this object.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"     * @param encodedNote The encoded \u003ccode\u003eString\u003c/code\u003e that represents a \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"    public void decodeString (String encodedNote) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"        String[] temp \u003d encodedNote.split(separator);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"        temp[0] \u003d currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"        currentNote \u003d new Note(currentName, temp[1], temp[2]);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"    public String decodedName () {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"        return currentName;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"    public Note processedNote () {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"        return currentNote;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":45}},{"path":"src/main/java/seedu/clialgo/storage/FileEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"public class FileEncoder {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"    protected File file;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"    protected final String separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"     * Constructor for the fileEncoder object.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"     * @param file The file object referring to the .txt file with the raw data.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"     * @param separator The \u003ccode\u003eString\u003c/code\u003e which separates each form of data stored in each \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    public FileEncoder (File file, String separator) {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"        this.file \u003d file;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"        this.separator \u003d separator;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"     * Encodes a note into an encoded \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     * @param name The name of the \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"     * @param note The \u003ccode\u003eNote\u003c/code\u003e object processed.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"     * @return Returns a processed string.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"    public String encodeNote (String name, Note note) {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        return name + separator + note.getPath() + separator + note.getTag();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":34}},{"path":"src/main/java/seedu/clialgo/storage/FileManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"lohjooh"},"content":"import java.io.File;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"lohjooh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"lohjooh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"lohjooh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"lohjooh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"lohjooh"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"lohjooh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"lohjooh"},"content":"import seedu.clialgo.Note;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"lohjooh"},"content":"public class FileManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"lohjooh"},"content":"    private File file;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"lohjooh"},"content":"    private final FileEncoder encoder;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"lohjooh"},"content":"    private final FileDecoder decoder;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"lohjooh"},"content":"    private final String path;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"lohjooh"},"content":"    private final String folder;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"lohjooh"},"content":"    private final Hashtable\u003cString, String\u003e storedRawData \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"lohjooh"},"content":"     * Constructor for class containing \u003ccode\u003ecodeDecoder\u003c/code\u003e, \u003ccode\u003ecodeEncoder\u003c/code\u003e and raw data from the","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"lohjooh"},"content":"     * .txt file stored as strings.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"lohjooh"},"content":"    public FileManager() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"lohjooh"},"content":"        this.path \u003d \".\\\\data\\\\data.txt\";","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"lohjooh"},"content":"        this.folder \u003d \".\\\\data\";","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"lohjooh"},"content":"        String separator \u003d \"\u0026@*\";","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"lohjooh"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"lohjooh"},"content":"        this.encoder \u003d new FileEncoder(file, separator);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"lohjooh"},"content":"        this.decoder \u003d new FileDecoder(file, separator);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"lohjooh"},"content":"            readFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"lohjooh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"lohjooh"},"content":"            createFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"lohjooh"},"content":"     * Reads data from the .txt file and stores it in this object.","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"lohjooh"},"content":"     * @throws FileNotFoundException Thrown when the .txt file does not exist.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"lohjooh"},"content":"    public void readFile() throws FileNotFoundException {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"lohjooh"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"lohjooh"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"lohjooh"},"content":"            String rawData \u003d s.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"lohjooh"},"content":"            decoder.decodeString(rawData);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"lohjooh"},"content":"            storedRawData.put(decoder.decodedName(), rawData);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"lohjooh"},"content":"        s.close();","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"lohjooh"},"content":"     * Creates a folder \u003ccode\u003e.\\\\data\u003c/code\u003e if it does not exist. Then, creates a file \u003ccode\u003edata.txt\u003c/code\u003e in the","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"lohjooh"},"content":"     * folder if it does not exist.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"lohjooh"},"content":"    public void createFile() {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"lohjooh"},"content":"            Path dir \u003d Paths.get(folder);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"lohjooh"},"content":"            Files.createDirectories(dir);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"lohjooh"},"content":"            this.file \u003d new File(path);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"lohjooh"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"File created\");","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"lohjooh"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"lohjooh"},"content":"                System.out.println(\"File already exists\");","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"lohjooh"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"lohjooh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"lohjooh"},"content":"     * Process a \u003ccode\u003eNote\u003c/code\u003e and add it to the stored data in this object and append the processed","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"lohjooh"},"content":"     * \u003ccode\u003eNote\u003c/code\u003e as a \u003ccode\u003eString\u003c/code\u003e to the .txt file.","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"lohjooh"},"content":"     * @param name The name of the \u003ccode\u003eNote\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"lohjooh"},"content":"     * @param note The \u003ccode\u003eNote\u003c/code\u003e being added.","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"lohjooh"},"content":"    public void addEntry (String name, Note note) {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"lohjooh"},"content":"        storedRawData.put(name, encoder.encodeNote(name, note));","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"lohjooh"},"content":"            writeNoteToFile(storedRawData.get(name));","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"File write failed\");","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"lohjooh"},"content":"     * Deletes entry with \u003ccode\u003ekey name\u003c/code\u003e and rewrite the .txt file.","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"lohjooh"},"content":"     * @param name The \u003ccode\u003ekey\u003c/code\u003e of the entry being deleted.","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"lohjooh"},"content":"    public void deleteEntry (String name) {","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"lohjooh"},"content":"        storedRawData.remove(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"lohjooh"},"content":"            writeAllToFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"File write failed\");","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"lohjooh"},"content":"     * Deletes all stored raw data in this object and in the .txt file.","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"lohjooh"},"content":"    public void deleteAllEntry () {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"lohjooh"},"content":"        storedRawData.clear();","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"lohjooh"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"lohjooh"},"content":"            writeAllToFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"lohjooh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"lohjooh"},"content":"            System.out.println(\"File write failed\");","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"lohjooh"},"content":"     * Writes a single \u003ccode\u003eNote\u003c/code\u003e encoded as a \u003ccode\u003eString\u003c/code\u003e to the .txt file.","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"lohjooh"},"content":"     * @param encodedString The \u003ccode\u003eNote\u003c/code\u003e encoded as a \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"lohjooh"},"content":"     * @throws IOException Throws an exception if the file write fails.","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"lohjooh"},"content":"    public void writeNoteToFile (String encodedString) throws IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"lohjooh"},"content":"        FileWriter fw \u003d new FileWriter(path, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"lohjooh"},"content":"        fw.write(encodedString);","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"lohjooh"},"content":"        fw.close();","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"lohjooh"},"content":"     * Writes all the stored raw data into the .txt file, overwriting all the existing data stored in the .txt file.","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"lohjooh"},"content":"     * @throws IOException Throws an exception if the file write fails.","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"lohjooh"},"content":"    public void writeAllToFile () throws IOException {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"lohjooh"},"content":"        FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"lohjooh"},"content":"        for (String s : storedRawData.values()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"lohjooh"},"content":"            fw.write(s);","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"lohjooh"},"content":"        fw.close();","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"lohjooh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"lohjooh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"lohjooh"},"content":"     * Reads all the raw data stored in this object and returns a \u003ccode\u003eHashtable\u003c/code\u003e of \u003ccode\u003eNotes\u003c/code\u003e that is","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"lohjooh"},"content":"     * processed.","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"lohjooh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"lohjooh"},"content":"     * @return Returns the initialized \u003ccode\u003eHashtable\u003c/code\u003e of \u003ccode\u003eNotes\u003c/code\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"lohjooh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"lohjooh"},"content":"    public Hashtable\u003cString, Note\u003e decodeAll() {","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"lohjooh"},"content":"        Hashtable\u003cString, Note\u003e decodedNotes \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"lohjooh"},"content":"        for (String s : storedRawData.keySet()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"lohjooh"},"content":"            decoder.decodeString(storedRawData.get(s));","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"lohjooh"},"content":"            decodedNotes.put(decoder.decodedName(), decoder.processedNote());","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"lohjooh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"lohjooh"},"content":"        return decodedNotes;","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"lohjooh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"lohjooh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":157}},{"path":"src/test/java/seedu/clialgo/CLIAlgoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"class CLIAlgoTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"heejet":2,"-":10}},{"path":"src/test/java/seedu/clialgo/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"class ParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"    /** Test isValidCommand */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    void isValidCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e correctCommands \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"help\", \"add\", \"remove\", \"filter\", \"exit\")","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongCommands \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"Help\", \"aDd\", \"remov\", \"filtre\", \"exits\", \"\")","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        for (String correctCommand : correctCommands) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"            assertTrue(parser.isValidCommand(correctCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"        for (String wrongCommand : wrongCommands) {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isValidCommand(wrongCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"    /** Test isCorrectMarker */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_correctInput_expectTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"        String nameMarkerInput \u003d \"n/NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"c/COMMAND\";","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"t/TOPIC\";","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"k/KEYWORD\";","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(nameMarkerInput, Parser.NAME_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(commandMarkerInput, Parser.COMMAND_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(topicMarkerInput, Parser.TOPIC_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"        assertTrue(parser.isCorrectMarker(keywordMarkerInput, Parser.KEYWORD_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_wrongInput_expectFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongNameInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"t/TOPIC\", \"k/KEYWORD\", \"/nNAME\", \"N/NAME\")","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongCommandInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"n/NAME\", \"t/TOPIC\", \"k/KEYWORD\", \"/cCOMMAND\", \"C/COMMAND\")","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongTopicInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"n/NAME\", \"k/KEYWORD\", \"/tTOPIC\", \"T/TOPIC\")","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"        ArrayList\u003cString\u003e wrongKeywordInputs \u003d new ArrayList\u003cString\u003e(","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"                Arrays.asList(\"c/COMMAND\", \"t/TOPIC\", \"n/NAME\", \"/kKEYWORD\", \"K/KEYWORD\")","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"        for (String wrongNameInput : wrongNameInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongNameInput, Parser.NAME_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"        for (String wrongCommandInput : wrongCommandInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongCommandInput, Parser.COMMAND_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        for (String wrongTopicInput : wrongTopicInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongTopicInput, Parser.TOPIC_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        for (String wrongKeywordInput : wrongKeywordInputs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"            assertFalse(parser.isCorrectMarker(wrongKeywordInput, Parser.KEYWORD_MARKER));","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"    void isCorrectMarker_invalidInput_expectException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        String oneLetterInput \u003d \"c\";","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"                IndexOutOfBoundsException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"                () -\u003e parser.isCorrectMarker(oneLetterInput, Parser.COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"                IndexOutOfBoundsException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"                () -\u003e parser.isCorrectMarker(emptyString, Parser.COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":90}},{"path":"src/test/java/seedu/clialgo/StringManipulationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heejet"},"content":"package seedu.clialgo;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"heejet"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"heejet"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.EmptyFieldException;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"heejet"},"content":"import seedu.clialgo.exceptions.parser.NullInputException;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"heejet"},"content":"class StringManipulationTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"heejet"},"content":"    public static final String NAME_MARKER \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"heejet"},"content":"    public static final String COMMAND_MARKER \u003d \"c/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"heejet"},"content":"    public static final String TOPIC_MARKER \u003d \"t/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"heejet"},"content":"    public static final String KEYWORD_MARKER \u003d \"k/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"heejet"},"content":"    public static final String WHITE_SPACE \u003d \" \";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"heejet"},"content":"    /** Test getFirstWord */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"heejet"},"content":"    void getFirstWord_normalInputWhiteSpace_expectFirstWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"heejet"},"content":"        String twoWordsInput \u003d \"first word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"heejet"},"content":"        String singleLetterFirstWordInput \u003d \"a word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"heejet"},"content":"        String oneWordInput \u003d \"a\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"heejet"},"content":"                \"first\",","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(twoWordsInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"heejet"},"content":"                \"a\",","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(singleLetterFirstWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"heejet"},"content":"                \"a\",","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(oneWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"heejet"},"content":"    void getFirstWord_normalInputMarker_expectFirstWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"help c/add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"name of file t/TOPIC_NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"filter k/topic\";","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"heejet"},"content":"                \"help\",","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"heejet"},"content":"                \"name of file\",","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"heejet"},"content":"                \"filter\",","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"heejet"},"content":"                StringManipulation.getFirstWord(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"heejet"},"content":"    void getFirstWord_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.getFirstWord(noInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.getFirstWord(nullInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"heejet"},"content":"    /** Test removeFirstWord */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_normalInputWhiteSpace_expectSecondWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"heejet"},"content":"        String twoWordsInput \u003d \"first word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"heejet"},"content":"        String singleLetterFirstWordInput \u003d \"a word\";","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"heejet"},"content":"        String oneWordInput \u003d \"a\";","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"heejet"},"content":"                \"word\",","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(twoWordsInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"heejet"},"content":"                \"word\",","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(singleLetterFirstWordInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"heejet"},"content":"        assertNull(StringManipulation.removeFirstWord(oneWordInput, WHITE_SPACE));","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_normalInputMarker_expectSecondWord() throws NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"help c/add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"name of file t/TOPIC_NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"filter k/topic\";","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"heejet"},"content":"                \"add\",","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"heejet"},"content":"                \"TOPIC_NAME\",","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"heejet"},"content":"                \"topic\",","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeFirstWord(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"heejet"},"content":"    void removeFirstWord_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeFirstWord(noInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeFirstWord(nullInput, WHITE_SPACE)","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"heejet"},"content":"    /** Test removeMarker */","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"heejet"},"content":"    void removeMarker_normalInput_expectKeyword() throws EmptyFieldException, NullInputException {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"heejet"},"content":"        String nameMarkerInput \u003d \"n/NAME\";","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"heejet"},"content":"        String commandMarkerInput \u003d \"c/COMMAND\";","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"heejet"},"content":"        String topicMarkerInput \u003d \"t/TOPIC\";","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"heejet"},"content":"        String keywordMarkerInput \u003d \"k/KEYWORD\";","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"heejet"},"content":"                \"NAME\",","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(nameMarkerInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"heejet"},"content":"                \"COMMAND\",","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(commandMarkerInput, COMMAND_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"heejet"},"content":"                \"TOPIC\",","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(topicMarkerInput, TOPIC_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"heejet"},"content":"        assertEquals(","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"heejet"},"content":"                \"KEYWORD\",","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"heejet"},"content":"                StringManipulation.removeMarker(keywordMarkerInput, KEYWORD_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"heejet"},"content":"    void removeMarker_emptyFieldInput_expectEmptyFieldException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"heejet"},"content":"        String emptyFieldInput \u003d \"n/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"heejet"},"content":"                EmptyFieldException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(emptyFieldInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"heejet"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"heejet"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"heejet"},"content":"    void removeMarker_nullInput_expectNullInputException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"heejet"},"content":"        String noInput \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"heejet"},"content":"        String nullInput \u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(noInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"heejet"},"content":"        assertThrows(","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"heejet"},"content":"                NullInputException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"heejet"},"content":"                () -\u003e StringManipulation.removeMarker(nullInput, NAME_MARKER)","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"heejet"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"heejet"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"heejet"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"heejet":169}},{"path":"src/test/java/seedu/clialgo/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"ong-ck"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ong-ck"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"ong-ck"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"ong-ck"},"content":" * JUnit test for the \u003ccode\u003eAddCommand\u003c/code\u003e class methods.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"ong-ck"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"ong-ck"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ong-ck"},"content":"     * Inputs two equal \u003ccode\u003eAddCommand\u003c/code\u003e objects and expects the method to return true.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"ong-ck"},"content":"    void equals_checkEqualAddCommand_expectTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ong-ck"},"content":"        String firstName \u003d \"dummyName\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ong-ck"},"content":"        String secondName \u003d \"dummyName\";","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"ong-ck"},"content":"        String firstPath \u003d \"dummyPath\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"ong-ck"},"content":"        String secondPath \u003d \"dummyPath\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"ong-ck"},"content":"        AddCommand firstAddCommand \u003d new AddCommand(firstName, firstPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ong-ck"},"content":"        AddCommand secondAddCommand \u003d new AddCommand(secondName, secondPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"ong-ck"},"content":"        assertTrue(firstAddCommand.equals(secondAddCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"ong-ck"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ong-ck"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"ong-ck"},"content":"     * Checks the \u003ccode\u003eequals\u003c/code\u003e method of the \u003ccode\u003eAddCommand\u003c/code\u003e class.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"ong-ck"},"content":"     * Inputs two unequal \u003ccode\u003eAddCommand\u003c/code\u003e objects and expects the method to return false.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"ong-ck"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"ong-ck"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"ong-ck"},"content":"    void equals_checkUnequalAddCommand_expectFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"ong-ck"},"content":"        String firstName \u003d \"dummyName1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"ong-ck"},"content":"        String secondName \u003d \"dummyName2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"ong-ck"},"content":"        String firstPath \u003d \"dummyPath1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"ong-ck"},"content":"        String secondPath \u003d \"dummyPath2\";","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"ong-ck"},"content":"        AddCommand firstAddCommand \u003d new AddCommand(firstName, firstPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"ong-ck"},"content":"        AddCommand secondAddCommand \u003d new AddCommand(secondName, secondPath);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"ong-ck"},"content":"        assertFalse(firstAddCommand.equals(secondAddCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"ong-ck"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"ong-ck"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"lohjooh":1,"ong-ck":41}},{"path":"src/test/java/seedu/clialgo/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lohjooh"},"content":"package seedu.clialgo.command;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicholas132000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicholas132000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicholas132000"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicholas132000"},"content":"public class RemoveCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicholas132000"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicholas132000"},"content":"    public void testRemoveCommandConstructor() {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicholas132000"},"content":"        RemoveCommand myObj \u003d new RemoveCommand(\"queue notes\");","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicholas132000"},"content":"        assertEquals(\"queue notes\", myObj.name);","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicholas132000"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicholas132000"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicholas132000":12,"lohjooh":1}}]
