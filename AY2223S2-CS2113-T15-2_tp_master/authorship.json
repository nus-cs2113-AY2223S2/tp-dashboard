[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DeepanjaliDhawan":2,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |   Name   |           Github Profile            | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"--------|:--------:|:-----------------------------------:|:---------:","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./team/pics/hosea.jpg\" width\u003d\"50%\" height\u003d\"50%\" /\u003e |  Hosea   | [Github](https://github.com/ollayf) | [Portfolio](docs/team/hosea.md)","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Khairul Aizat | [Github](https://github.com/kairuler) | [Portfolio](https://github.com/kairuler)","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Zheng Xi | [Github](https://github.com/euzhengxi) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Deepanjali Dhawan | [Github](https://github.com/DeepanjaliDhawan) | [Portfolio](https://github.com/DeepanjaliDhawan)","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"![](https://rb.gy/2lyjkm) |  Steven  | [Github](https://github.com/stevenantya) | [Portfolio](docs/team/stevenantya.md)","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"ollayf":2,"kairuler":1,"DeepanjaliDhawan":1,"stevenantya":1,"-":3,"euzhengxi":1}},{"path":"docs/DGDiagramsCreator/Backend.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title Backend Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"node SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"frame Backend {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    rectangle Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"SecretMaster \u003c-[dotted]right-\u003e Backend : sends data for export OR\\n collects data for import","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":9}},{"path":"docs/DGDiagramsCreator/ClassHigh.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title Class Connectivity Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"actor User","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"file \"database\"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"frame \"Application\" {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    frame \"UI\" {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        node Ui","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"        node Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"        node Commands","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"        Ui -\u003e Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"        Parser -\u003e Commands","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    frame SecureNUS {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"        node SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    frame SecretStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        node SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        node SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        node SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    frame Backend {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        node Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    Commands --\u003e SecureNUS.SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    SecureNUS.SecureNUS --\u003e SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    SecretMaster \u003c-\u003e Backend.Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"Ui \u003c-left- User","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"Application.Backend.Backend \u003c-left-\u003e database","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":34}},{"path":"docs/DGDiagramsCreator/ClassLevel.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"package Application {","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    Commands \u003c- Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    Parser \u003c- UI","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    Commands --\u003e SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    SecureNUS --\u003e SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    SecretMaster \u003c-\u003e Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"InputCLI.User -\u003e UI","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"Backend \u003c-\u003e OutputFile.database","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":17}},{"path":"docs/DGDiagramsCreator/HighLevel.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"package Application {","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    SecureNUS \u003c- UI","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    SecureNUS --\u003e SecretStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    SecretStorage \u003c-\u003e Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"InputCLI.User -\u003e UI","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"Backend \u003c-\u003e OutputFile.database","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":12}},{"path":"docs/DGDiagramsCreator/SecretStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title SecretStorage Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"node Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"frame SecretStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    rectangle SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    rectangle SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    rectangle SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    SecretMaster -[dotted]-\u003e SecretEnumerator: alters","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    SecretMaster -[dotted]-\u003e SecretSearcher: alters","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"() SecureNUS -[dotted]right-\u003e SecretMaster :requests alteration \\n of data via","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"SecretMaster \u003c-[dotted]right-\u003e Backend : sends data for export OR\\n collects data for import","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":14}},{"path":"docs/DGDiagramsCreator/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"!define COMMAND_COLOR #Salmon","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!define UI_COLOR #7777DB","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":5}},{"path":"docs/DGDiagramsCreator/UI.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title UI Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"actor User","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"node SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"node SecretStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"frame \"UI\" {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    node Ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    node Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    rectangle Commands COMMAND_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    Ui -\u003e Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    Parser -[dotted]-\u003e Commands :creates","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"Commands -[dotted]right-\u003e SecureNUS :executes in","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"SecureNUS -[dotted]up-\u003e SecretStorage :makes changes in","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"Ui \u003c-down- User","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":17}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"[//]: # (@@author DeepanjaliDhawan)","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Acknowledgements","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"## [AddressBook Template](https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature)","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"The format of this Developer’s guide (DG) as well as some basic support is inspired/ taken from the AddressBook ","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"project’s DG.","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"## [Bitwarden](https://go.bitwarden.com/password-management-for-business-teams-organizations/?utm_source\u003dgoogle\u0026utm_medium\u003dcpc\u0026utm_campaign\u003dAW_APAC_NU_CL_Bitwarden_en_GSN_DTMB_Brand_KW:Brand_Exact\u0026utm_content\u003d646898599878\u0026utm_term\u003dbitwarden\u0026hsa_acc\u003d2567950947\u0026hsa_cam\u003d11319090405\u0026hsa_grp\u003d114652450007\u0026hsa_ad\u003d646898599878\u0026hsa_src\u003dg\u0026hsa_tgt\u003dkwd-442029814536\u0026hsa_kw\u003dbitwarden\u0026hsa_mt\u003db\u0026hsa_net\u003dadwords\u0026hsa_ver\u003d3\u0026gclid\u003dCjwKCAjwzuqgBhAcEiwAdj5dRn0X9IDtuPlHiXveE0H8FMOOYNtwMBxX7lUL4yzK8zUTKH_58EV-4xoCrVkQAvD_BwE)","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"The idea for this product stems out from Applications like Bitwarden and the like that serve to store and protect users passwords. Many of our features were inspired by these applications.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"## CLI Applications","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"The idea for this product is for users who are familiar with CLI environments. Users are able to see only the necessary information given in text format. Things can be done faster with just a single line of input command compared to navigating through a GUI environment.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Setting up, getting started","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Setting up the project in your computer","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"First, fork this repo, and clone the fork into your computer.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. **Configure the JDK:** Follow the guide [[se-edu/guides] IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use JDK 11.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. **Import the project as a Gradle project:** Follow the guide [[se-edu/guides] IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA. \\","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ExclamationMark.png\" width\u003d\"4%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. **Verify the setup:**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    1. Run the _seedu.address.Main_ and try a few commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    2. [Run the tests](https://se-education.org/addressbook-level3/Testing.html) to ensure they all pass.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Before writing code","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. **Configure the coding style** \\","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"   If using IDEA, follow the guide [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA’s coding style to match ours. ","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ExclamationMark.png\" width\u003d\"4%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"Tip: Optionally, you can follow the guide [[se-edu/guides] Using Checkstyle](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems as you write code.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. **Set up CI** This project comes with a GitHub Actions config files (in .github/workflows folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the master branch or to any PR. No set up required.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. **Learn the design** When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](https://se-education.org/addressbook-level3/DeveloperGuide.html#architecture).  ","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. **Do the tutorials These tutorials will help you get acquainted with the codebase.**  ","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Tracing code](https://se-education.org/addressbook-level3/tutorials/TracingCode.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Adding a new command](https://se-education.org/addressbook-level3/tutorials/AddRemark.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Removing fields](https://se-education.org/addressbook-level3/tutorials/RemovingFields.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"[//]: # (@@author ollayf)","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"## Architecture","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ArchitectureDiagram.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"This **Architecture Diagram** explains the high-level design of the App.","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"### Main Components of the architecture","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"**SecureNUS** has 1 class called SecureNUS. It is responsible for,","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"* At app launch: initializing all the important components in the correct sequence and initializes the appropriate connections between them.","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"* It connects and sends the appropriate information and executes different actions using the other helpers via **Commands**.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"**SecretStorage** is responsible for the management of Secret Objects which store information of different Secret classes, e.g. passwords, credit cards. It also manages the different underlying data structures within it that help optimize the speed of queries through indexing, etc. It consists of 3 classes: **SecretMaster, SecretSearcher** and **SecretEnumerator**, which contain the different views.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"* **SecretMaster:** Manages the other views and also ensures there are no duplicates in naming where they should not exist","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"* **SecretSearcher:** Contains the Hashtable view for directly querying the Secret by name","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"* **SecretEnumerator:** Contains the ArrayList view for querying the Secret by index","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"The other 2 components are:","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"* **UI:** The main interface the user have access to through the Command Line","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"* **Backend:** Which handles the details regarding the initialisation and saving (or exporting) of data across sessions","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ArchitectureDiagram.png\" width\u003d\"100%\" /\u003e  ","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"___","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"### How the architecture components interact with each other","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario where the user creates a new basic password initiated using the command `new password.`","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"[//]: # (@@author stevenantya)","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"Sequence Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/SequenceDiagramNew.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"Each of the six main components (also shown in the diagram above)","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"[//]: # (@@author ollayf)","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"* defines its API in an interface with the same name as the Component.","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"## UI Component","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"The API of this component is specified in `Ui.java`","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/LightBulb.png\" width\u003d\"10%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"The UI consists of the Ui class which handles all the inputs provided by the user. The Ui then sends information to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"parser which will interpret the commands provided by user input. The **Parser **will create **Commands** which will be","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"sent to **SecureNUS** to execute some command that will alter the data in SecretStorage. The **Ui **also handles ","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"responses/ feedback to the User.","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"## SecureNUS Component","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"This is the main component that initialises all other components and connects them when the application is running.","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"## SecretStorage Component","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/SecretStorageComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"The Secret Storage component abstracts the data that is to be stored into many views/ indexes. This optimizes the speed of queries for many types of queries without developers needing to access the individual data structures used. The data structures, namely Hash Table and Array are stored in the SecretSearcher and SecretEnumerator class respectively. Finally, during the initialisation of the application, the Backend will connect past data to the SecretMaster. During shutdown, the Backend will handle saving it into an encrypted file.","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"[//]: # (@@author stevenantya)","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"stevenantya"},"content":"## Command Component","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"stevenantya"},"content":"The API of this component is specified in Command.java","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"Command is an abstract class that is inherited by various components such as AddBasicPasswordCommand.java","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/CommandComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"The Command consist of Command abstract class that handles all of its command constructors and executions through its child classes. The user inputs command in Ui, that is parsed in Parser, and then instantiated and executed in Command classes.","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"stevenantya"},"content":"## Backend Component","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/BackendComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"The backend manages the saving and loading of data from the database.txt file. To do so, it collates and organises information stored in the SecretMaster and encrypts it into the database.txt. When starting up, it will decrypt the database.txt file and transfer its data into the SecretMaster.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"stevenantya"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"euzhengxi"},"content":"[//]: # (@@author euzhengxi)","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"euzhengxi"},"content":"# Product Scope","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"## Target user profile:","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"euzhengxi"},"content":"* has a need to manage a significant number of passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"euzhengxi"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"euzhengxi"},"content":"* can type fast","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"euzhengxi"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"euzhengxi"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"## Value proposition:","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"* SecureNUS manages passwords faster than a typical mouse/GUI-driven password manager app.","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"euzhengxi"},"content":"* SecureNUS manages and stores passwords locally, there is no risk of a server side failure/ attack leaking your passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"euzhengxi"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"[//]: # (@@author kairuler)","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"# User Stories","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eVersion\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eAs a …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eI want to …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eSo that I can …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eview all my passwords in a single location","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave an overview of all my stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003estore and find my passwords in an intuitive and structured manner","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eeasily find a password","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eview all my stored passwords at a glance (without details)","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003equickly see what passwords I have used before","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003edelete stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eremove passwords that I no longer use","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eadd and store passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure my stored passwords are safe","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to worry about the security of my passwords after storing them","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse local storage to store my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave my passwords stored locally so that they are safer from online breaches","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehide my password while typing it","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot allow people around me to view my password as I type","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eauthenticate myself before accessing","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure that nobody else but me gets access to my stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003efirst-time user","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ewant to be able to see the demo to use the password manager","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003elearn how to use SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ereceive notification any of my previous passwords are reused","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse a new and different password each time","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eknow when I created a certain password","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ekeep track of how long my passwords have been used for","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":333,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to think of a strong password by myself and let the app handle it","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eknow when to change my password as passwords should be changed periodically","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ereceive reminder to change passwords that have not been changed for an extended period of time","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to check every single password manually (but still have the ability to) to know when to change my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":350,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":351,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":352,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":353,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eselect a particular stored password and expand it to reveal details","lastModifiedDate":"2023-03-24"},{"lineNumber":354,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":355,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse the details of the password to make decisions regarding the password (e.g. change the password if it has been used for a long time, create a stronger password the next time if the current one is not strong, etc.)","lastModifiedDate":"2023-03-24"},{"lineNumber":356,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":357,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":360,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":362,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ecopy and paste my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to type my password, just simply copy paste","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":372,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003esearch/filter out specific passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003equickly refer to a password that is used for a specific login (e.g. password for NUS email)","lastModifiedDate":"2023-03-24"},{"lineNumber":376,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":378,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":379,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":380,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":381,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser who wishes to use complex passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":382,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":383,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003egenerate complex passwords for me","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to think of a strong password by myself and let the app handle it","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":393,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003esync my stored passwords manually","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":395,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave my stored passwords on different devices","lastModifiedDate":"2023-03-24"},{"lineNumber":396,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":397,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":398,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":399,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":400,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":402,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":403,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eencrypt the password.txt file","lastModifiedDate":"2023-03-24"},{"lineNumber":404,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":405,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure that nobody but me has access to the .txt file that stores my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":406,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":407,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":408,"author":{"gitId":"kairuler"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":409,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":410,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":411,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":412,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":413,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":414,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"kairuler"},"content":"# Non-Functional Requirements","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":417,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":418,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":419,"author":{"gitId":"kairuler"},"content":"* Should be responsive and fast, providing quick access to passwords and other information with just one or two commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"kairuler"},"content":"* Should be user-friendly, with intuitive commands that makes it easy for users to create, store, and retrieve passwords.","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"kairuler"},"content":"* Should be compatible with various operating systems as long as Java 11 or above is installed.","lastModifiedDate":"2023-03-24"},{"lineNumber":422,"author":{"gitId":"kairuler"},"content":"* Should be reliable and operational all the time with little-to-no bugs or errors.","lastModifiedDate":"2023-03-24"},{"lineNumber":423,"author":{"gitId":"kairuler"},"content":"* Should be able to store at least 1000 passwords without compromising performance or security.","lastModifiedDate":"2023-03-27"},{"lineNumber":424,"author":{"gitId":"kairuler"},"content":"* Should be maintainable, with a clear and well-documented codebase that makes it easy to fix bugs and add new features.","lastModifiedDate":"2023-03-24"},{"lineNumber":425,"author":{"gitId":"kairuler"},"content":"* Must ensure that user data is not shared with third parties without user consent.","lastModifiedDate":"2023-03-24"},{"lineNumber":426,"author":{"gitId":"kairuler"},"content":"* Should be secure, using strong encryption to protect user passwords and data from being hacked or stolen.","lastModifiedDate":"2023-03-24"},{"lineNumber":427,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":428,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":429,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":430,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":431,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":432,"author":{"gitId":"kairuler"},"content":"# Glossary","lastModifiedDate":"2023-03-24"},{"lineNumber":433,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":434,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":435,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":436,"author":{"gitId":"kairuler"},"content":"* { _glossary item_ - Definition }","lastModifiedDate":"2023-03-24"},{"lineNumber":437,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":438,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":439,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":440,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":441,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":442,"author":{"gitId":"kairuler"},"content":"# Instructions for manual testing","lastModifiedDate":"2023-03-24"},{"lineNumber":443,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":444,"author":{"gitId":"kairuler"},"content":"_{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}_","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":69,"DeepanjaliDhawan":70,"stevenantya":31,"kairuler":252,"euzhengxi":22}},{"path":"docs/UML/ClassHigh.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"!include Style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"title Command Diagram","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"actor User","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"file \"database\"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"circle Ui","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"circle Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"frame Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    abstract Command","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"\u0027Ui \u003c-left- User","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"\u0027Application.Backend.Backend \u003c-left-\u003e database","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":15}},{"path":"docs/UML/Command.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"circle Ui","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"circle Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"frame Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"    rectangle Command","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"    Parser -\u003e Command","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    rectangle AddBasicPasswordCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddBasicPasswordCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    rectangle AddCreditCardCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddCreditCardCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    rectangle AddNUSNetCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddNUSNetCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    rectangle OtherCommands","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e OtherCommands","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":21}},{"path":"docs/UML/NewBasicPassword.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"autonumber","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"autoactivate on","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"actor User #FFFBBB","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"User-\u003e Ui #FFBBBB: \"new password\"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e SecureNUS #FFBFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Parser#BBFFFF: parse()","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"Parser -\u003e Command **","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"activate Command#BBB","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:extractName()","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:extractFolderName()","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquireURL()","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquireUsername()","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquirePassword()","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Command#FFAFFF:execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"Command -\u003e SecretStorage#FFAAFF:addSecret()","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"SecretStorage -\u003e SecretStorage#11AF1F:add()","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Backend#FFAF1F:updateStorage()","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"return Added!","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"stevenantya":37}},{"path":"docs/UML/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"# **User Guide for SecureNUS**","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eIntroduction\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"SecureNUS is a desktop Command Line Interface (CLI) application that allows users to manage and store their passwords ","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"securely.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"SecureNUS operates on a command-line interface that allows for a simple and efficient management of passwords for fast ","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"typists. ","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Quick Start](#span-styletext-decorationunderlinequick-startspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Feature List](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Feature Details](#span-styletext-decorationunderlinefeature-detailsspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [FAQ\u0027s](#span-styletext-decorationunderlinefaqsspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Command Summary](#span-styletext-decorationunderlinecommand-summaryspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eQuick Start\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. Download the latest `tp.jar` from [here](https://github.com/AY2223S2-CS2113-T15-2/tp/releases).","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. Copy the `tp.jar` file to the folder for SecureNUS.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. Open a command terminal, `cd` into the folder you put your `tp.jar` file in, and use the `java -jar tp.jar` command","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"to run the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"5. Type the command in the command box and press Enter to execute it.\u003cbr\u003e e.g. typing `menu` and pressing Enter key ","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"will open the menu window.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eFeature List\u003c/span\u003e**","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. [Add `new` password](#add-a-new-password--new)","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"   - Type of Passwords","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     1. Basic Password","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     2. Credit Card","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     3. Crypto Wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     4. NUSNet","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     5. StudentID - Starting with A","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     6. Wifi Password","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. [`delete` a password](#deleting-a-password--delete) ","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. [`list` all passwords](#general-format--list-ffoldername)","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. [`view`password](#viewing-password-in-command-line--view) ","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"5. [`search` for password](#general-format--search-nnamelike--f-ffolderlike)","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"6. [`save` the passwords into a .txt file](#general-format--save) ","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"7. [`load` all passwords from a .txt file](#general-format--load--a-append-ffilepath)","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"8. [`edit` ","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"the old passwords and","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"update them](#general-format--edit-ppasswordname--f-nfnewfoldername--d-ndnew description--n-npnewpasswordname)","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"9. [`menu` of all the commands for a quick reference](#menu--menu)","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"10. [`exit` for users to close SecureNUS](#exiting-the-program--exit)","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eFeature Details\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Note about the command format:","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"* Items in square brackets `[]` are optional.","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"* Items with `[…]` after them can be used multiple times including zero times.","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `menu`, and `exit`) will be ignored. \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"e.g. if the command specifies `menu 234`, it will be interpreted as `menu`.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Add a new password: `new`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Adds a new password in SecureNUS based on the type of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Opens a list of questions to fill in including username, password, etc.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Ctrl-C at any time to cancel the creation.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format:  `new [o/ OPTIONS] PASSWORD_NAME [f/ FOLDER_NAME]`","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Types of passwords: ","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. Basic Password `new PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. Credit Card `new o/CreditCard PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. Cryptocurrency Wallet `new o/CryptoWallet PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. NUSNet ID `new o/NUSNet PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"5. Student ID `new o/StudentID PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"6. Wifi Password `new o/WifiPassword PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"new password_name ","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"new password_name /f folder_name ","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"new o/CreditCard password123","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"new o/CryptoWallet password234 f/ folder_name","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"new o/NUSNet My nus net","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"new o/StudentID A02888888","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"new o/WifiPassword Home wifi","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Deleting a password: `delete`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Deletes a list of passwords. The hash or name of the password can be used.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `delete p1/PASSWORD_1 [p2/PASSWORD_2] […]`","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"delete p1/canvas.nus.edu.sg p2/www.gmail.com","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [List all passwords: `list`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"- List all the passwords in the folder specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"- If a folder is added, it will only list out passwords in the folder else it will list out all the passwords stored by","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"  the user irrespective of folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `list [f/FOLDER_NAME]`","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"**\u003cspan style\u003d\"text-decoration:underline;\"\u003e\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"list","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"list f/School_Websites","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"Output: ","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"ID: 1 | canvas.nus.edu.sg\t| School Module Website\t","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"ID: 2 | nus.edu.sg\t\t| School Website\t\t","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"ID: 3 | outlook.com\t\t| School Email\t\t","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Viewing Password in Command Line: `view`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Since the password is sensitive, it will only be revealed on specific command. Either the password_name or ","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"password_hash must be used to reveal it. ","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"- For passwords that are “password-required”, a secret password is required to reveal.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `view p/PASSWORD_NAME`","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"View p/canvas.nus.edu.sg","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"Output:","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"Enter secret password to reveal \"canvas.nus.edu.sg\":\t\t\t\t","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"—-----Password:securePassword@NUS123—-----------------------------------","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Search Passwords: `search`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Returns all passwords that have a similar name to “NAME_LIKE” or folder with name like “FOLDER_LIKE”","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `search n/NAME_LIKE [-f f/FOLDER_LIKE]`","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"search n/canvas","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"search n/canvas -f f/School","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"Output:","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"FOUND 1 Match!","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"ID: 1 | canvas.nus.edu.sg\t| School Module Website\t","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Saving Passwords: `save`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Saves all the passwords in an output logfile: `./logs/out`","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `save`","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Loading Passwords: `load`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Loads all password from a textfile (.txt)","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Use -a if you want these to be appended. Otherwise, it will erase and overwrite all other passwords. ","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Default input logfile: `./logs/in`","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `load [-a, –append] [f/FILE_PATH]`","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"load -a f/~/users/cs2113/passwords.txt","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Editing Password: `edit`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Allows users to edit exisitng password.","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"- If no flags added, it will open a prompt to input your new password.","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `edit p/PASSWORD_NAME [-f nf/NEW_FOLDER_NAME] [-d nd/NEW_DESCRIPTION] [-N np/NEW_PASSWORD_NAME]`","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### Examples: \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"edit p/canva.com -f nf/School_Stuffs -d nd/My Modules Website -N np/canvas.nus.edu.sg","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"Output:","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"Enter your new password:\t\t\t\t\t\t\t","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"```","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Menu for reference: `menu`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Allows users to refer to all the CLI commands by typing one command.","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `menu`","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":193,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":194,"author":{"gitId":"DeepanjaliDhawan"},"content":"### [Exiting the Program: `exit`](#span-styletext-decorationunderlinefeature-listspan)","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Exits the program. ","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Shows a message with all possible commands and syntax.","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"DeepanjaliDhawan"},"content":"###### General Format: `exit`","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":201,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eFAQ\u0027s\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"ollayf"},"content":"**Q**: I forgot to save before exiting. Are all my passwords lost?","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"ollayf"},"content":"**A**: By default, the program will save the last copy of the passwords before exiting in the filepath ./logs/last_exit if allowed to exit gracefully","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"stevenantya"},"content":"**Q**: What if I create a password without a folder?","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"stevenantya"},"content":"**A**: Do not worry! Your password is still saved in the unnamed folder.","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"DeepanjaliDhawan"},"content":"## **\u003cspan style\u003d\"text-decoration:underline;\"\u003eCommand Summary\u003c/span\u003e**","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"ollayf"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eAction","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eFormat/Examples","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eNew","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003enew [o/OPTIONS] PASSWORD_NAME \u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eDelete","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003edelete p1/PASSWORD_1 [p2/PASSWORD_2] [...]\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eList","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003elist [f/FOLDER_NAME]\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eView","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003eview p/PASSWORD_NAME\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eSearch","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003esearch n/NAME_LIKE [-f f/FOLDER_LIKE]\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eSave","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003esave\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"DeepanjaliDhawan"},"content":" \u003ctr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003ctd\u003eLoad","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003c/td\u003e ","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003ctd\u003e \u003ccode\u003e load [-a, –append] [f/FILE_PATH]\u003c/code\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"DeepanjaliDhawan"},"content":" \u003c/tr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eEdit","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003eedit p/PASSWORD_NAME [-f nf/NEW_FOLDER_NAME] [-d nd/NEW_DESCRIPTION] [-N np/NEW_PASSWORD_NAME]\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"ollayf"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003eHelp","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"ollayf"},"content":"   \u003ctd\u003e\u003ccode\u003ehelp\u003c/code\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"ollayf"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"ollayf"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"ollayf"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ollayf":139,"DeepanjaliDhawan":125,"stevenantya":6,"-":2,"euzhengxi":5}},{"path":"docs/team/hosea.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"# Hosea - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"- Data structures","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"- Customised fields","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"- Other password fields:","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    - Crypto wallet password","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    - Passport","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    - Credit Card","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    - Secure Notes","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    - Software Licenses","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    - WiFi    ","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    - Receipt","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"- How to structure data","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ollayf":16}},{"path":"docs/team/steven.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"# Steven - Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"## Overview","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"1. Creation and Deletion of Password Fields","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"2. Different classes for different passwords","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"1.  Different password fields: Adding passwords","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"2.  Standard Password","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    -   Name (MUST BE UNIQUE check and give error for duplicates)","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    -   Username","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    -   Password","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    -   URI (e.g.): google.com","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"3.  Student ID","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"4.  NUSNet","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"5.  Delete Password (by name ONLY) ","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"stevenantya":19}},{"path":"src/main/java/seedu/duke/Backend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"euzhengxi"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.storage.SecretEnumerator;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.storage.SecretSearcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class which represents the backend of the SecureNUS application.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Handles file input/output and secret creation and manipulation.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"public class Backend {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"    private static final Logger LOGGER \u003d DukeLogger.LOGGER;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"    private static final String BACKEND_LOG_INITIALISATION_IDENTIFIER","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"        \u003d \"Backend - Initialisation : \";","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"    private static final String BACKEND_LOG_UPDATESTORAGE_IDENTIFIER","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"            \u003d \"Backend - updateStorage : \";","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"    private static final int DECRYPTION_STARTING_INDEX \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    private static final String DATABASE_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    private static final String DATABASE_FILE \u003d \"database.txt\";","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"    private static final String DELIMITER \u003d \",\";","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"    private static final String ENCRYPTION_IDENTIFIER \u003d \"DKENC\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"    private static final String EMPTY_FIELD_IDENTIFIER \u003d \"empty\";","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"    private static final String PASSWORD_IDENTIFIER \u003d \"Password\";","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"    private static final String CREDIT_CARD_IDENTIFIER \u003d \"CreditCard\";","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"    private static final String CRYPTOWALLET_IDENTIFIER \u003d \"CryptoWallet\";","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"    private static final String NUSNETID_IDENTIFIER \u003d \"nusNetID\";","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"    private static final String STUDENTID_IDENTIFIER \u003d \"studentID\";","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"    private static final String WIFI_PASSWORD_IDENTIFIER \u003d \"wifiPassword\";","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"     * Returns data from previous session as a SecretMaster Object.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"     * If data is not available, a new file is created.","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"     * @return SecretMaster","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    public static SecretMaster initialisation() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"        ArrayList\u003cSecret\u003e secretList \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        //create folder if it does not exist","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"        String pathOfCurrentDirectory \u003d System.getProperty(Backend.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"        String assetsPath \u003d Paths.get(pathOfCurrentDirectory, Backend.DATABASE_FOLDER).toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"        File assets \u003d new File(assetsPath);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"        if (!assets.exists()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"euzhengxi"},"content":"            assets.mkdir();","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"        //create file if it does not exist","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"        String databasePath \u003d Paths.get(assetsPath, Backend.DATABASE_FILE).toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"        File database \u003d new File(databasePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"            if (!database.createNewFile()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"                database.createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.log(Level.SEVERE, BACKEND_LOG_INITIALISATION_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"            Scanner reader \u003d new Scanner(database);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"euzhengxi"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"euzhengxi"},"content":"                String[] inputArray \u003d reader.nextLine().split(Backend.DELIMITER);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"                secretList \u003d Backend.readAndUpdate(inputArray, secretList);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"            reader.close();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.log(Level.SEVERE, BACKEND_LOG_INITIALISATION_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        } catch (InvalidExpiryDateException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"euzhengxi"},"content":"        //for secretEnumerator","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e foldersHashTable \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"            Backend.createFolderHashtable(secretList);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"        SecretEnumerator secretEnumerator \u003d new SecretEnumerator(secretList,","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"            foldersHashTable);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"euzhengxi"},"content":"        //for secretSearcher","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Secret\u003e nameHashtable \u003d Backend.","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"            createNameHashtable(secretList);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e hashtableFolders \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"euzhengxi"},"content":"            Backend.createHashtableFolders(foldersHashTable);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"euzhengxi"},"content":"        SecretSearcher secretSearcher \u003d new SecretSearcher(nameHashtable, hashtableFolders);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"euzhengxi"},"content":"        return new SecretMaster(secretSearcher, secretEnumerator);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"euzhengxi"},"content":"     * Returns ArrayList of Secret with the new Secret added.","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"euzhengxi"},"content":"     * @param input String to create a Secret.","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"euzhengxi"},"content":"     * @param database Current ArrayList of Secret.","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"euzhengxi"},"content":"     * @return ArrayList of Secret","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"    public static ArrayList\u003cSecret\u003e readAndUpdate(String[] input, ArrayList\u003cSecret\u003e database)","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"            throws InvalidURLException, InvalidExpiryDateException {","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"euzhengxi"},"content":"        //create different password based on constructor","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"euzhengxi"},"content":"        //studentID","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"euzhengxi"},"content":"        if (input[0].equals(Backend.PASSWORD_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new BasicPassword(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]), Backend.parseEmptyField(input[6]));","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.CREDIT_CARD_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new CreditCard(input[2], input[3], input[4],","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]), Integer.parseInt(Backend.decode(input[6])),","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"euzhengxi"},"content":"                        input[7]);","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.CRYPTOWALLET_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new CryptoWallet(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]), Backend.decode(input[6]),","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"                        Backend.createUrlArrayList(input));","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.NUSNETID_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new NUSNet(input[2], input[3], input[4],","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]));","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.STUDENTID_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new StudentID(input[2], input[3], input[4]);","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.WIFI_PASSWORD_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new WifiPassword(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]));","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"euzhengxi"},"content":"            database.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"euzhengxi"},"content":"        //Password","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"euzhengxi"},"content":"        return database;","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretList the list of secrets to group by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e createFolderHashtable(ArrayList\u003cSecret\u003e secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folderHashtable \u003d new","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"euzhengxi"},"content":"            Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"euzhengxi"},"content":"        for (Secret secret : secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"euzhengxi"},"content":"            String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"euzhengxi"},"content":"            ArrayList\u003cSecret\u003e secretsInFolder \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"euzhengxi"},"content":"            if (folderHashtable.containsKey(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"euzhengxi"},"content":"                secretsInFolder \u003d folderHashtable.get(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"euzhengxi"},"content":"            secretsInFolder.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"euzhengxi"},"content":"            folderHashtable.put(folderName, secretsInFolder);","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"euzhengxi"},"content":"        return folderHashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets by their name.","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretList the list of secrets to group by name.","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by name.","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, Secret\u003e createNameHashtable(ArrayList\u003cSecret\u003e secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Secret\u003e nameHashtable \u003d new Hashtable\u003cString, Secret\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"euzhengxi"},"content":"        for (Secret secret : secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"euzhengxi"},"content":"            nameHashtable.put(secret.getName(), secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"euzhengxi"},"content":"        return nameHashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets grouped by folder and name.","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderHashtable the hashtable of secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by folder and name.","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e createHashtableFolders(","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"            Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folderHashtable) {","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e hashtableFolders \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"euzhengxi"},"content":"            new Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"        for (String folder : folderHashtable.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"euzhengxi"},"content":"            hashtableFolders.put(folder, Backend.createNameHashtable(folderHashtable.get(folder)));","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"euzhengxi"},"content":"        return hashtableFolders;","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"    public static ArrayList\u003cString\u003e createUrlArrayList(String[] input) {","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cString\u003e urlArrayList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"kairuler"},"content":"        for (int i \u003d 7; i \u003c input.length; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"kairuler"},"content":"            urlArrayList.add(input[i]);","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"kairuler"},"content":"        return urlArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Encodes a given field using a custom encryption method.","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be encoded.","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the encoded field.","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"euzhengxi"},"content":"    public static String encode(String field) {","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"euzhengxi"},"content":"        String encodedField \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"euzhengxi"},"content":"        for (int i \u003d 0; i \u003c field.length(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"euzhengxi"},"content":"            int asciiValue \u003d (int) (field.charAt(i) + 1);","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"euzhengxi"},"content":"            encodedField +\u003d (char) asciiValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"euzhengxi"},"content":"        return Backend.ENCRYPTION_IDENTIFIER + encodedField;","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Decodes a given field that was encoded using a custom encryption method.","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be decoded.","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the decoded field.","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"euzhengxi"},"content":"    public static String decode(String field) {","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"euzhengxi"},"content":"        String modifiedField \u003d field.substring(Backend.DECRYPTION_STARTING_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":229,"author":{"gitId":"euzhengxi"},"content":"        String actualField \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"euzhengxi"},"content":"        for (int i \u003d 0; i \u003c modifiedField.length(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"euzhengxi"},"content":"            int asciiValue \u003d (int) (modifiedField.charAt(i) - 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":232,"author":{"gitId":"euzhengxi"},"content":"            actualField +\u003d (char) asciiValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"euzhengxi"},"content":"        return actualField;","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses an empty field to return an empty string if it is \"empty\".","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be parsed.","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an empty string if field is \"empty\", else returns the field.","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"euzhengxi"},"content":"    public static String parseEmptyField(String field) {","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"euzhengxi"},"content":"        return field.equals(Backend.EMPTY_FIELD_IDENTIFIER) ? \"\" : field;","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":246,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":247,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"euzhengxi"},"content":"     * Saves changes made by the user during the session","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"euzhengxi"},"content":"     * in a .txt document.","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"euzhengxi"},"content":"     * @param input the list of secrets provided by user.","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"euzhengxi"},"content":"    public static void updateStorage(ArrayList\u003cSecret\u003e input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"euzhengxi"},"content":"        String currDir \u003d System.getProperty(Backend.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-03-22"},{"lineNumber":255,"author":{"gitId":"euzhengxi"},"content":"        String databasePath \u003d Paths.get(currDir,","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"euzhengxi"},"content":"                Backend.DATABASE_FOLDER, Backend.DATABASE_FILE).toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":257,"author":{"gitId":"euzhengxi"},"content":"        File database \u003d new File(databasePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"euzhengxi"},"content":"            FileWriter myWriter \u003d new FileWriter(database);","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"euzhengxi"},"content":"            for (int i \u003d 0; i \u003c input.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"euzhengxi"},"content":"                Secret secret \u003d input.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"euzhengxi"},"content":"                myWriter.write(secret.toStringForDatabase() + \"\\n\");","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"euzhengxi"},"content":"            myWriter.close();","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"euzhengxi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.log(Level.SEVERE, BACKEND_LOG_UPDATESTORAGE_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":2,"stevenantya":4,"DeepanjaliDhawan":42,"kairuler":8,"euzhengxi":214}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.ExceptionMain;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"public class Duke {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"    private static final Logger LOGGER \u003d DukeLogger.LOGGER;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"    private static final String DUKE_LOG_EXECUTECOMMAND_IDENTIFIER \u003d \"Duke - executeCommand\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Duke class handles the main entry-point for the application, parsing of user commands and execution of commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Duke class also initializes a SecretMaster object to store and manage the secrets for the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    private SecretMaster secureNUSData;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Duke constructor initializes a SecretMaster object to store and manage the secrets for the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException         If the database folder already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException    If the name of a folder is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public Duke() throws FolderExistsException, IllegalFolderNameException {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        secureNUSData \u003d Backend.initialisation();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"        DukeLogger.setUpLogger();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Main entry-point for the Duke application.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Initializes a Duke object and runs the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param args An array of command-line arguments for the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException         If the database folder already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException    If the name of a folder is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException    If the name of a secret is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException       If the specified secret cannot be found.","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    public static void main(String[] args) throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"            IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        duke.run();","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Starts the main loop of the Duke application.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses user input commands and executes them until the \"exit\" command is given.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException    If the name of a folder is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException    If the name of a secret is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException       If the specified secret cannot be found.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    public void run() throws IllegalFolderNameException, IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"            Command c \u003d parseCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"            if (c \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"                continue;","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"            Ui.printLine(); //middle line","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"            isExit \u003d executeCommand(c);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"            ","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"            Ui.printLine(); //end line","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        Backend.updateStorage(this.secureNUSData.listSecrets());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Reads user input command and returns a Command object.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A Command object that represents the user input command.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"    public Command parseCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"        String command \u003d Ui.readCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"        Ui.printLine(); //top most line","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"            return Parser.parse(command);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"        } catch(InvalidCommandException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"            Ui.printError(\"Invalid Command\");","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"            Ui.printLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"            return null;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the given Command object and returns a boolean indicating whether the application should exit.","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command The Command object to execute.","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A boolean indicating whether the application should exit.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException    If the name of a folder is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException    If the name of a secret is not valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException       If the specified secret cannot be found.","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"    public boolean executeCommand(Command command) throws IllegalFolderNameException, IllegalSecretNameException,","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"            SecretNotFoundException {","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"                command.execute(secureNUSData);","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"                return command.isExit();","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"            } catch (ExceptionMain e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"euzhengxi"},"content":"                Ui.printError(e.getMessage()); //do they want UI to handle it or?","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"euzhengxi"},"content":"                LOGGER.log(Level.SEVERE, DUKE_LOG_EXECUTECOMMAND_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"                DukeLogger.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":1,"stevenantya":66,"DeepanjaliDhawan":42,"euzhengxi":9}},{"path":"src/main/java/seedu/duke/DukeLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"euzhengxi"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"public class DukeLogger {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"    public static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"    private static final String LOGGER_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"    private static final String LOGGER_FILE \u003d \"logFiles.txt\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"        LOGGER.setLevel(Level.ALL);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"        consoleHandler.setLevel(Level.SEVERE);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"            String currentPath \u003d System.getProperty(DukeLogger.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"            String logFilesPath \u003d Paths.get(currentPath,","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"                    DukeLogger.LOGGER_FOLDER, DukeLogger.LOGGER_FILE).toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"            File logFiles \u003d new File(logFilesPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"            if (!logFiles.createNewFile()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"                logFiles.createNewFile();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"            FileHandler fileHandler \u003d new FileHandler(logFilesPath, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"            fileHandler.setLevel(Level.WARNING);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.addHandler(fileHandler);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.log(Level.SEVERE, \"DUKE logger is not working!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"    public static void close() {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"        for (Handler handler : LOGGER.getHandlers()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"            handler.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"euzhengxi":48}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.command.AddBasicPasswordCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.AddCreditCardCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"//import seedu.duke.command.AddCryptoWalletCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.command.AddNUSNetCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.command.AddStudentIDCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"//import seedu.duke.command.AddWifiPasswordCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.DeleteCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.EditCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.ExitCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.command.ListCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.command.MenuCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import seedu.duke.command.SearchCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import seedu.duke.command.ViewCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Parses user commands and returns the corresponding command object.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"public class Parser {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses user input and returns the corresponding command object.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command user input command string","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Command object corresponding to the user input","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    public static Command parse(String command) throws InvalidCommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"        if (command.startsWith(\"new o/CreditCard\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return new AddCreditCardCommand(command);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (command.startsWith(\"new o/CryptoWallet\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return new AddStudentIDCommand(command); // Have to change to AddCryptoWalletCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (command.startsWith(\"new o/NUSNet\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"            return new AddNUSNetCommand(command);","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"new o/StudentID\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"            return new AddStudentIDCommand(command);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (command.startsWith(\"new o/WifiPassword\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return new AddStudentIDCommand(command); // Have to change to AddWifiPasswordCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"new o/\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"o/ option is invalid\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"                    \"Valid options are: \\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"                    \"new o/NUSNet\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"                    \"new o/Student ID\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"                    \"new o/CryptoWallet\");","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"new\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"            return new AddBasicPasswordCommand(command);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"list\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"            return new ListCommand(command);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"search\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"            return new SearchCommand(command);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"view\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"            return new ViewCommand(command);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"edit\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            return new EditCommand(command);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"        } else if (command.startsWith(\"exit\") || command.startsWith(\"bye\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (command.startsWith(\"menu\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return new MenuCommand();","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            // represents accidental wrong input","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":5,"stevenantya":32,"DeepanjaliDhawan":25,"kairuler":5}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Ui class to handle all user interface printing.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class Ui {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Greets the user upon start up of the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Welcome to secureNUS v1.0\\n\" +","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"                \"Current Features\\n\" +","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"                \"Adding a password      : new [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"                \"Adding a NUSNet ID     : new o/NUSNet [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"                \"Adding a Student ID    : new o/StudentID [NAME] /f [FOLDER_NAME] \\n\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a horizontal line to separate UI elements.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    public static void printLine() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"_____________________________________________________\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Reads the user\u0027s command from the console.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return String containing user\u0027s command.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"            return in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        in.close();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints error message to console.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"    public static void printError(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Oops! Error encountered\\n\"+ message);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"stevenantya":31,"DeepanjaliDhawan":20}},{"path":"src/main/java/seedu/duke/command/AddBasicPasswordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.ExceptionMain;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to add a basic password to the secret storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from Command.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Upon execution, creates a new BasicPassword object with the provided name, folderName, username, password, and url.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Adds the BasicPassword object to the secret storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Prompts the user to input the username, password, and url if they are not provided in the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" * If the BasicPassword object cannot be created or added to the storage, throws a RuntimeException.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Prints a success message upon completion of execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"public class AddBasicPasswordCommand extends Command{","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    private String name;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    private String folderName;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    private String username;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"    private String url;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for AddBasicPasswordCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name, folderName, username, password, and url from the provided input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input string to extract the relevant information from.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    public AddBasicPasswordCommand(String input) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d extractName(input);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"        this.url \u003d inquireURL(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        this.username \u003d inquireUsername(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d inquirePassword();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    public AddBasicPasswordCommand(BasicPassword basicPassword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d basicPassword.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d basicPassword.getFolderName();","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        this.url \u003d basicPassword.getUrl();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        this.username \u003d basicPassword.getUsername();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d basicPassword.getPassword();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the AddBasicPasswordCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new BasicPassword object with the provided name, folderName, username, password, and url.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds the BasicPassword object to the secret storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input the username, password, and url if they are not provided in the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the BasicPassword object cannot be created or added to the storage, throws a RuntimeException.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a success message upon completion of execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The secret storage to add the BasicPassword object to.","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain If there is an error creating or adding the BasicPassword object to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPasswordData;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"            basicPasswordData \u003d new BasicPassword(name,folderName,username,password,url);","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"            throw new ExceptionMain(\"Invalid URL! Please enter a valid url with the domain! e.g. google.com\");","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(basicPasswordData);","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        String starsPassword \u003d \"*\".repeat(8);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have added a new basic password:\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"name     \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"                           \"folder   \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"                           \"url      \u003d \" + url + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"                           \"username \u003d \" + username + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"                           \"password \u003d \" + starsPassword);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name from the provided input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input string to extract the name from.","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The name extracted from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"        String extractedName \u003d input.split(\"new \")[1];","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"        extractedName \u003d extractedName.split(\" /f\")[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"        return extractedName;","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  Extracts the name of the folder from the provided input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param input The input string to extract the folderName from.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @return The folderName extracted from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"        if (input.split(\"/f \").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"            extractedFolderName \u003d input.split(\"/f \")[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input the username.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the username entered by the user","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"    public String inquireUsername(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter your username: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"        String username \u003d Ui.readCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"        return username;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input a password and returns the input as a String.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a String representing the password input by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"    public String inquirePassword() {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter your password: \");","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"        String password \u003d Ui.readCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input the URL and returns it as a String.","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input String used for any necessary prompts","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the URL inputted by the user","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"stevenantya"},"content":"    public String inquireURL(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter the url: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"stevenantya"},"content":"        String url \u003d Ui.readCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"stevenantya"},"content":"        return url;","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns false, indicating that this command does not result in program exit.","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"stevenantya":94,"DeepanjaliDhawan":66}},{"path":"src/main/java/seedu/duke/command/AddCreditCardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.duke.messages.Inquiries;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * A class to add a new credit card to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from AddSecretCommand, which contains the common attributes","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and methods needed to add a secret to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"public class AddCreditCardCommand extends AddSecretCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private String name;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    private String folderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    private String fullName;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    private String creditCardNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    private int cvcNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    private String expiryDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for AddCreditCardCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the necessary information from the input string using the super constructor","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and prompts the user for additional information.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input User input command string.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public AddCreditCardCommand(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        super(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        fullName \u003d inquire(Inquiries.FULLNAME);","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        creditCardNumber \u003d inquire(Inquiries.CREDIT_CARD_NUMBER);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        cvcNumber \u003d Integer.parseInt(inquire(Inquiries.CVC_NUMBER));","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        expiryDate \u003d inquire(Inquiries.EXPIRY_DATE);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new credit card to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The user\u0027s secureNUSData object.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RuntimeException if there is a repeated id or if there is an issue with the name or folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"            creditCard \u003d new CreditCard(name,folderName,fullName, creditCardNumber,cvcNumber, expiryDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        } catch (InvalidExpiryDateException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(creditCard);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"        String starsPassword \u003d \"********\";","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"I have added a new Credit Card:\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"Name     \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"                \"Folder   \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"                \"Full Name      \u003d \" + fullName + \"\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":50,"DeepanjaliDhawan":19}},{"path":"src/main/java/seedu/duke/command/AddNUSNetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a Class to giva a command to add a NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Extends the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"public class AddNUSNetCommand extends Command{","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    private String folderName;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    private String nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an AddNUSNetCommand object.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input string containing the details of the account to add.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    public AddNUSNetCommand(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d extractName(input);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        this.nusNetId \u003d inquirenusNetId();","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"            this.name \u003d nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d inquirePassword();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    public AddNUSNetCommand(NUSNet nusNet) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d nusNet.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d nusNet.getFolderName();","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"        this.nusNetId \u003d nusNet.getNusNetId();","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d nusNet.getPassword();","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to add the NUSNet account to the SecretMaster.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The SecretMaster that stores the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RuntimeException if there is a RepeatedIdException","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                          or FolderExistsException","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                          or IllegalSecretNameException","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                          or IllegalFolderNameException.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNetIdData \u003d new NUSNet(name,folderName,nusNetId,password);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(nusNetIdData);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        String starsPassword \u003d \"*\".repeat(8);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have added a new NUS Net ID password:\\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        System.out.println(","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"                \"folder     \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"                \"NUS Net ID \u003d \" + nusNetId + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"                \"password   \u003d \" + starsPassword);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the account from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input string containing the details of the account to add.","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The name of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        String[] extractedNames \u003d input.split(\"o/NUSNet \");","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        String extractedName;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        if (extractedNames.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"            if (extractedNames[1].split(\" /f\").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"                extractedName \u003d extractedNames[1].split(\" /f\")[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"                extractedName \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"            extractedName \u003d null; //Default Name","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"        return extractedName;","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the user\u0027s input.","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user\u0027s input string","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the folder name string, or \"unnamed\" if not found","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"        if (input.split(\"/f \").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"            extractedFolderName \u003d input.split(\"/f \")[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter their NUS Net ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the user\u0027s NUS Net ID string input","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"    public String inquirenusNetId() {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter your NUS Net ID: \");","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"        String nusNetId \u003d Ui.readCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"        return nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter their NUS Net ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the user\u0027s NUS Net ID string input","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"    public String inquirePassword() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter your NUS Net password: \");","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"        String password \u003d Ui.readCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the URL from the user\u0027s input.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user\u0027s input string","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an empty string","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"    public String extractURL(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"stevenantya":88,"DeepanjaliDhawan":51,"kairuler":2}},{"path":"src/main/java/seedu/duke/command/AddSecretCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the Class to give a command to add a secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"public class AddSecretCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    private String name;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    private String folderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for AddSecretCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input command string","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public AddSecretCommand(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        name \u003d extractName(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret from the input command.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * ","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input command string","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the name of the secret","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        String extractedName \u003d input.split(\"new \")[1];","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        extractedName \u003d extractedName.split(\" /f\")[0];","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        return extractedName;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name of the secret from the input command.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input command string","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the folder name of the secret","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        String extractedFolderName \u003d \"unfiled\";","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        if (input.split(\"/f \").length \u003e 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d input.split(\"/f \")[1];","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user for input and returns the user\u0027s response.","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * ","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param question the question to ask the user","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return return the user\u0027s response","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    public String inquire(String question) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        System.out.println(question);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        String result \u003d Ui.readCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        return result;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the AddSecretCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new secret to the SecureNUS application.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData secureNUSData the secret master object","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(name,folderName);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(secret);","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"        String starsPassword \u003d \"********\";","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"I have added a new Secret:\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"name     \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"                \"folder   \u003d \" + folderName + \"\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as it is not an exit command","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":58,"DeepanjaliDhawan":39}},{"path":"src/main/java/seedu/duke/command/AddStudentIDCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the class to give a command to add a new Student ID to the SecureNUS system.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"public class AddStudentIDCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    private String folderName;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    private String studentId;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an AddStudentIDCommand object with the user input as the command parameter.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The command input entered by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    public AddStudentIDCommand(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d extractName(input);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        this.studentId \u003d inquireStudentID();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"            this.name \u003d studentId;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public AddStudentIDCommand(StudentID studentID) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d studentID.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d studentID.getFolderName();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        this.studentId \u003d studentID.getStudentID();","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the AddStudentIDCommand to add a new Student ID to the SecureNUS system.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        StudentID studentIdData \u003d new StudentID(name,folderName,studentId);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(studentIdData);","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"I have added a new Student ID:\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        System.out.println(","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"                \"Student ID \u003d \" + studentId);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the Student ID from the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The command input entered by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The name of the Student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"        String[] extractedNames \u003d input.split(\"o/StudentID \");","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        String extractedName;","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        if (extractedNames.length \u003d\u003d 2) {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"            if (extractedNames[1].split(\" /f\").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"                extractedName \u003d extractedNames[1].split(\" /f\")[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"                extractedName \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"            extractedName \u003d null; //Default Name","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        return extractedName;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name of the Student ID from the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The command input entered by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The folder name of the Student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"        if (input.split(\"/f \").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"            extractedFolderName \u003d input.split(\"/f \")[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter the Student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The Student ID entered by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"    public String inquireStudentID() {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"        System.out.println(\"Please enter your Student ID: \");","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"        String studentID \u003d Ui.readCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"        return studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * Extracts the URL of the Student ID from the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"    *","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @param input The command input entered by the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"    */","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"    public String extractURL(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as it is not an exit command","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"stevenantya":78,"DeepanjaliDhawan":46,"kairuler":1}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.ExceptionMain;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The abstract class Command serves as a blueprint for all other command classes to inherit from. It contains two","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * abstract methods: isExit and execute, which must be implemented by any child classes.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    public abstract void execute (SecretMaster secureNUSData) throws SecretNotFoundException, ExceptionMain;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":10,"DeepanjaliDhawan":4}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to delete a secret from the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    private String secretName;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    private String folderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Class constructor that extracts the name of the secret and its folder from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string from the user","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        this.secretName \u003d extractName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret to be deleted from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string from the user","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the name of the secret to be deleted","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"        String extractedName \u003d input.split(\"delete \")[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        extractedName \u003d extractedName.split(\" /f\")[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        return extractedName;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the folder in which the secret to be deleted is located from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string from the user","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the name of the folder in which the secret to be deleted is located","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        if (input.split(\"/f \").length \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"            extractedFolderName \u003d input.split(\"/f \")[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the specified secret from the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object that stores all the secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret to be deleted is not found in the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) throws SecretNotFoundException {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        Secret deleteData \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"            deleteData \u003d secureNUSData.getByName(secretName);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"            isValid \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"        } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"            Ui.printError(\"Data not found!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"            isValid \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        if (isValid \u0026\u0026 (deleteData !\u003d null)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"You deleted \" + secretName + \" in folder: \" + folderName);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"                secureNUSData.removeSecret(deleteData);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"            } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"                Ui.printError(\"Data not found!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"Please enter a valid secret name!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as it is not an exit command","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"stevenantya":51,"DeepanjaliDhawan":41}},{"path":"src/main/java/seedu/duke/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to edit a secret in the secureNUS application.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class extends the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class takes in a String input that specifies which secret to edit","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and the new values of the fields to be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class extracts the new values of the fields from the input string using regular expressions.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The class then uses these values to edit the secret in the SecretMaster object.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    private final String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    private final String newFolderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    private final String newName;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an EditCommand object with the specified input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret to edit and the new values of the fields to be updated from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string that specifies which secret to edit and the new values of the fields to be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    public EditCommand(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"        String[] extractedFields \u003d extract(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        this.name \u003d extractedFields[0];","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        this.newFolderName \u003d extractedFields[1];","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"        this.newName \u003d extractedFields[2];","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"     * Asks user for the new fields that will replace the old fields.","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"     * @return The new fields","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    public String[] inquireFields(Secret secret) {","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d null;","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[3];","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Username: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Password: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"            inquiredFields[1] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new URL: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"            inquiredFields[2] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[4];","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Full Name: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Credit Card Number: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"            inquiredFields[1] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new CVC Number: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"            inquiredFields[2] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Expiry Date: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"            inquiredFields[3] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[2];","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new NUSNet ID: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Credit Card Number: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"            inquiredFields[1] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[1];","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Student ID: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[2];","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Username: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Password: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"            inquiredFields[1] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[3];","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Username: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"            inquiredFields[0] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Private Key: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"            inquiredFields[1] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"Enter the new Seed Phrase: \");","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"            inquiredFields[2] \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        return inquiredFields;","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret to edit and the new values of the fields to be updated from the input string","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * using regular expressions.","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string that specifies which secret to edit and the new values of the fields to be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an array of Strings containing the extracted values of the fields to be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"    public String[] extract(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"        String[] extractedFields \u003d new String[3];","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"        // Define regular expression patterns","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"        final Pattern namePattern \u003d Pattern.compile(\"p/([\\\\w\\\\s]+)\");","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"        final Pattern newFolderPattern \u003d Pattern.compile(\"-f nf/([\\\\w\\\\s]+)\");","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"        final Pattern newNamePattern \u003d Pattern.compile(\"-N np/([\\\\w\\\\s]+)\");  // rmb to check for valid Name","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"        // Extract values using regular expressions","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        Matcher nameMatcher \u003d namePattern.matcher(input);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"        Matcher newFolderMatcher \u003d newFolderPattern.matcher(input);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"        Matcher newNameMatcher \u003d newNamePattern.matcher(input);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"        // Check if there is a match and extract the value","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"        extractedFields[0] \u003d nameMatcher.find() ? nameMatcher.group(1).trim() : null;","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"        extractedFields[1] \u003d newFolderMatcher.find() ? newFolderMatcher.group(1).trim() : null;","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"        extractedFields[2] \u003d newNameMatcher.find() ? newNameMatcher.group(1).trim() : null;","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"        return extractedFields;","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Edits the specified secret in the SecretMaster object with the new values of the fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object containing the list of secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"kairuler"},"content":"        Secret passwordSecret;","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"kairuler"},"content":"            passwordSecret \u003d secureNUSData.getByName(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"kairuler"},"content":"            String[] inquiredFields \u003d inquireFields(passwordSecret);","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"            secureNUSData.editSecret(passwordSecret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"        } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"            Ui.printError(\"(Make sure you follow this format: \\\"edit p/PASSWORD_NAME\\\")\");","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"kairuler"},"content":"            Ui.printError(\"(That folder already exists)\");","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as it is not an exit command","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"kairuler"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"kairuler"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":2,"kairuler":121,"DeepanjaliDhawan":33}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to exit the password manager","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates an instance of ExitCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the exit command by doing nothing.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The secret master data to execute the command on","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns true to indicate that this command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ollayf":1,"stevenantya":14,"DeepanjaliDhawan":19}},{"path":"src/main/java/seedu/duke/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The ListCommand class represents the command to list all secrets in a specific folder or all secrets if no folder","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" * is specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    private final String folderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new ListCommand object with the given input.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string containing the folder name, if specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string containing the folder name, if specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        if (input.split(\" \").length \u003e 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"            extractedFolderName \u003d input.split(\" \")[1];","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type and details of the given secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the secret to get the type and details of.","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return return the type and details of the secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @SuppressWarnings(\"checkstyle:LocalVariableName\")","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private String getSecretTypeInfo(Secret secret) {","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"            BasicPassword basicPassword \u003d (BasicPassword) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Type of Secret: Basic Password\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"                            \"Name: \" + basicPassword.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"                            \"Folder: \" + basicPassword.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"                            \"Username: \" + basicPassword.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"                            \"URL: \" + basicPassword.getUrl() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"                            \"Password: \" + basicPassword.getPassword() + \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"            CreditCard creditCard \u003d (CreditCard) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Credit Card\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + creditCard.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + creditCard.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Full Name: \" + creditCard.getFullName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Credit Card Number: \" + creditCard.getCreditCardNumber() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"CVC Number: \" + creditCard.getCvcNumber() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Expiry Date: \" + creditCard.getExpiryDate()+ \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"            CryptoWallet cryptoWallet \u003d (CryptoWallet) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: CryptoCurrency Wallet\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + cryptoWallet.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + cryptoWallet.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Username: \" + cryptoWallet.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Private Key: \" + cryptoWallet.getPrivateKey() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Seed Phrase: \" + cryptoWallet.getSeedPhrase()+ \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"            NUSNet nusNet \u003d (NUSNet) secret;","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: NUSNet ID\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"                    \"Name: \" + nusNet.getName() + \"\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"                    \"Folder: \" + nusNet.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"                    \"NUSNet ID: \" + nusNet.getNusNetId() + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"                    \"Password: \" + nusNet.getPassword() + \"\\n\";","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"            StudentID studentID \u003d (StudentID) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Student ID\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + studentID.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + studentID.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Student ID: \" + studentID.getStudentID()+ \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"            WifiPassword wifiPassword \u003d (WifiPassword) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Wifi Password\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + wifiPassword.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + wifiPassword.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Username: \" + wifiPassword.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password: \" + wifiPassword.getPassword()+ \"\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Secret\";","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the ListCommand by listing all secrets or secrets in a specific folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object to execute the command on","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"        ArrayList\u003cSecret\u003e secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"            if (folderName.equals(\"unnamed\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"                secrets \u003d secureNUSData.listSecrets();","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"                secrets \u003d secureNUSData.listSecrets(folderName);","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"            if (secrets.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"                System.out.println(\"There are no secrets in this folder.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"                return;","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"List of secrets:\");","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"            int counter \u003d 1;","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"            for (Secret secret : secrets) {","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"                String secretTypeInfo \u003d getSecretTypeInfo(secret);","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"                System.out.println(counter + \". \" + secretTypeInfo);","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"                counter +\u003d 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"        } catch (NonExistentFolderException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"Folder \" + folderName + \" does not exist.\");","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns false the ListCommand is an exit command which shows that the code does not exit when list is called","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return always false for ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":45,"DeepanjaliDhawan":103,"kairuler":5}},{"path":"src/main/java/seedu/duke/command/MenuCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class that displays the list of all available commands in a menu format.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class MenuCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Displays the list of all available commands in a menu format.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public void displayMenu() {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"        System.out.println(\"SecureNUS Command Menu:\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"1. Add a general password: new [PASSWORD_NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"2. Add password for websites needing Credit Card details: \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"new o/CreditCard [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"3. Add password for websites needing Crypto Wallet details: \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"new o/CryptoWallet [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"4. Add password for websites needing NUSNet ID: \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"new o/NUSNet [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"5. Add passwords for websites needing NUS StudentID (starting with A): \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"new o/StudentID [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"6. Add passwords for websites needing Wifi Passwords: \" +","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"new o/WifiPassword [NAME] /f [FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"7. Delete the unwanted password: delete\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"8. List all the passwords: list [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"9. View password: view p/PASSWORD_NAME \\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"10. Search for password: search n/NAME_LIKE [-f f/FOLDER_LIKE]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"11. Save the password in .txt file: save\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"12. Load the password from the .txt file: load [-a, –append] [f/FILE_PATH]\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"                \"(BUGGY, NOT COMPLETED) 13. Edit the passwords: edit p/PASSWORD_NAME [-f nf/NEW_FOLDER_NAME]\\n \" +","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"                \"[-d nd/NEW_DESCRIPTION] [-N np/NEW_PASSWORD_NAME]\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"14. Menu list to refer for commands: menu\\n\" +","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"15. Exit from the password manager: exit\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"        );","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the menu command, which displays the list of all available commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"        displayMenu();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns false the ListCommand is an exit command which shows that the code does not exit when list is called","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return always false for ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"DeepanjaliDhawan":54,"kairuler":2}},{"path":"src/main/java/seedu/duke/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to search for a secret by name in the SecretMaster.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"    private final String name;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"    private final String folderName;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SearchCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input String containing the name and optionally the folder name to search for.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    public SearchCommand(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"        this.name \u003d extractName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"        this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name from the input String.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input String containing the name and optionally the folder name to search for.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the name to search for.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        if (input.contains(\"-f\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"            return input.substring(input.indexOf(\"n/\") + 2, input.indexOf(\"-f\")).trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"        return input.substring(input.indexOf(\"n/\") + 2).trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the input String.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input String containing the name and optionally the folder name to search for.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the folder name to search in, or null if not provided.","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        if (input.contains(\"-f\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"            return input.substring(input.indexOf(\"f/\") + 2).trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        return null;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Searches for secrets in the SecretMaster with names that contain the specified name and optionally, in the","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * specified folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints out the search results in a formatted table.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The SecretMaster containing the secrets to search in.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cSecret\u003e secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"        if (this.folderName !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            // search a specific folder","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"                secrets \u003d secureNUSData.listSecrets(this.folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"            } catch (NonExistentFolderException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"            // search all passwords","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"            secrets \u003d secureNUSData.listSecrets();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"        for (Secret secret : secrets) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"            if (secret.getName().contains(this.name)) { // case-sensitive search","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"                ++count;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"                output.append(\"ID: \").append(count).append(\"\\t|\\t\").append(secret.getName()).append(\"\\t|\\n\");","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"        System.out.println(\"Found \" + count + \" matches!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        System.out.print(output.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a boolean indicating if this Command is an exit Command.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Always returns false.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":2,"kairuler":61,"DeepanjaliDhawan":30}},{"path":"src/main/java/seedu/duke/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to view a specific secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"    private final String passwordName;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a ViewCommand object.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input to extract the password name","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"    public ViewCommand(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"        this.passwordName \u003d extractName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the password name from the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input containing the password name","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the password name","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"        return input.substring(input.indexOf(\"p/\") + 2).trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter the secret password to reveal the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the user input of the secret password","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    public String inquirePassword() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        System.out.println(\"Enter secret password to reveal \\\"\" + this.passwordName + \"\\\":\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the view command to reveal the password of a specific secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object containing the secret to view","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"        Secret passwordSecret;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"            passwordSecret \u003d secureNUSData.getByName(this.passwordName);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"            System.out.println(passwordSecret.getRevealStr());","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"        } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            System.out.println(\"There are no passwords that matches that name!\\n\" +","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"                    \"Make sure you follow this format: \\\"view p/PASSWORD_NAME\\\"\");","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns whether the command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false as view command is not an exit command","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":2,"kairuler":38,"DeepanjaliDhawan":31}},{"path":"src/main/java/seedu/duke/exceptions/ExceptionMain.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * ExceptionMain is a custom exception that extends the Exception class.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It is used for handling exceptions that occur during the main execution of the program.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class ExceptionMain extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an ExceptionMain with the specified detail message.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    public ExceptionMain(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        super(message);","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":8,"DeepanjaliDhawan":9}},{"path":"src/main/java/seedu/duke/exceptions/IllegalNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the name provided is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"public class IllegalNameException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":4}},{"path":"src/main/java/seedu/duke/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":7}},{"path":"src/main/java/seedu/duke/exceptions/RepeatedIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an object with a repeated id is added to the system.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class RepeatedIdException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/FolderExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when trying to create a folder that already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"public class FolderExistsException extends Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":3,"DeepanjaliDhawan":4,"euzhengxi":1}},{"path":"src/main/java/seedu/duke/exceptions/secrets/FolderNotEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class FolderNotEmptyException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/FolderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder is not found or no folder is created.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class FolderNotFoundException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/IllegalFolderNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder name is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class IllegalFolderNameException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/IllegalSecretNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the name of the secret is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class IllegalSecretNameException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/InvalidCreditCardNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an invalid credit card number is detected during validation","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidCreditCardNumberException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/InvalidExpiryDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the expiry date in the Credit Card is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidExpiryDateException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/InvalidURLException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the URL inputted by the user is of incorrect format","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"public class InvalidURLException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":5,"DeepanjaliDhawan":2}},{"path":"src/main/java/seedu/duke/exceptions/secrets/NonExistentFolderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a user attempts to access a folder that does not exist","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class NonExistentFolderException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/exceptions/secrets/SecretNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.exceptions.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a secret with the given name cannot be found in the secret master.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class SecretNotFoundException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/duke/messages/Inquiries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" *  The Inquiries class contains constants representing different inquiry messages.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" *  These messages are used to prompt the user for information.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"public class Inquiries {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  The inquiry message for the user\u0027s full name.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    public static final String FULLNAME \u003d \"What is your full name?\";","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The inquiry message for the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    public static final String CREDIT_CARD_NUMBER \u003d \"What is the Credit Card Number?\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The inquiry message for the CVC number.","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    public static final String CVC_NUMBER \u003d \"What is the CVC Number?\";","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The inquiry message for the expiry date.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    public static final String EXPIRY_DATE \u003d \"What is the Expiry Date?\";","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":8,"DeepanjaliDhawan":20}},{"path":"src/main/java/seedu/duke/secrets/BasicPassword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.Backend;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" * BasicPassword class represents a basic password entry that contains a username,","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class BasicPassword extends Secret{","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    private String username;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    private String url;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a BasicPassword object with the specified name, username, password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name name of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username username of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password password of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url URL of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if the provided URL is not a valid URL","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    public BasicPassword(String name, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"                         String password, String url) throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        if (url.contains(\".\") \u0026\u0026 (url.indexOf(\".\") \u003d\u003d url.lastIndexOf(\".\"))) {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            this.url \u003d url;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"            throw new InvalidURLException();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a BasicPassword object with the specified name, folder name, username, password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name name of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName name of the folder that the basic password entry is stored in","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username username of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password password of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url URL of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if the provided URL is not a valid URL","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    public BasicPassword(String name, String folderName, String username,","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"                            String password, String url) throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"        if (url.contains(\".\") \u0026\u0026 (url.indexOf(\".\") \u003d\u003d url.lastIndexOf(\".\"))) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"            this.url \u003d url;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"            throw new InvalidURLException();","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password of the basic password entry.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return password of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the URL of the basic password entry.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return URL of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    public String getUrl() {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"        return url;","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string representation of the BasicPassword object for the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return formatted string representation of the BasicPassword object for the database","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"Password,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"            \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.password) +","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"               \",\" + this.url;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"euzhengxi"},"content":"        if (this.url.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"            formattedString +\u003d \"empty\";","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the BasicPassword object for revealing the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return string representation of the BasicPassword object for revealing the password","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"                        \"Url: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"                        \"Username: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"                        \"Password: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"                getName(), url, username, password);","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username associated with the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the username of the password","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"        return username;","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"    public void setUrl(String url) throws InvalidURLException {","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"        if (url.contains(\".\") \u0026\u0026 (url.indexOf(\".\") \u003d\u003d url.lastIndexOf(\".\"))) {","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"            this.url \u003d url;","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"            throw new InvalidURLException();","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":6,"stevenantya":42,"DeepanjaliDhawan":54,"kairuler":16,"euzhengxi":12}},{"path":"src/main/java/seedu/duke/secrets/CreditCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.Backend;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a credit card entry in the user\u0027s secrets list.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Stores the credit card\u0027s name, full name, credit card number, CVC number and expiry date.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Credit card numbers are expected to be a string of 16 digits, while expiry dates are expected to be in the format","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" * \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"public class CreditCard extends Secret {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"    private static final String expiryDateFmt \u003d \"[0-1][0-9]/[0-3][0-9]\";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"    private static final String creditCardNumberFmt \u003d \"\\\\d{16}\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    private String fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    private String creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private int cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    private String expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for a CreditCard object.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName Full name of the credit card owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber 16-digit credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber 3-digit CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException If the expiry date is not in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException If the credit card number is not a string of 16 digits.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public CreditCard(String name, String fullName,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"                      String creditCardNumber,","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"                      int cvcNumber, String expiryDate) throws","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"        if (!creditCardNumber.matches(creditCardNumberFmt)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        if (!expiryDate.matches(expiryDateFmt)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for a CreditCard object in a specific folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName Name of the folder containing the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName Full name of the credit card owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber 16-digit credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber 3-digit CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException If the expiry date is not in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    public CreditCard(String name, String folderName,","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"                      String fullName, String creditCardNumber,","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"                      int cvcNumber, String expiryDate) throws InvalidExpiryDateException {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        if (!expiryDate.matches(expiryDateFmt)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the expiry date of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        return expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the expiry date of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"    public void setExpiryDate(String expiryDate) throws InvalidExpiryDateException {","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"        if (!expiryDate.matches(expiryDateFmt)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the full name associated with the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the full name associated with the credit card","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    public String getFullName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"        return fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the full name associated with the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName the full name to be set","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"    public void setFullName(String fullName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Gets the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"    public String getCreditCardNumber() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        return creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber A String representing the credit card number to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"    public void setCreditCardNumber(String creditCardNumber) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the CVC number","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    public int getCvcNumber() {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"        return cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber the new CVC number","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"    public void setCvcNumber(int cvcNumber) throws InvalidCreditCardNumberException {","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"kairuler"},"content":"        if (!creditCardNumber.matches(creditCardNumberFmt)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"kairuler"},"content":"            throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the credit card, including its credit card number,","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * CVC number, and expiry date.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the credit card","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"        return String.format(\"Credit Card Number: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: %d\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: %s\", creditCardNumber, cvcNumber,","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"                expiryDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"CreditCard,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"euzhengxi"},"content":"                \",\" + this.fullName + \",\" + Backend.encode(this.creditCardNumber) + \",\" +","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"                Backend.encode(\"\" + this.cvcNumber) + \",\" + this.expiryDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":81,"DeepanjaliDhawan":76,"kairuler":8,"euzhengxi":11}},{"path":"src/main/java/seedu/duke/secrets/CryptoWallet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.Backend;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a Crypto Wallet secret that stores information","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * about a cryptocurrency wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"public class CryptoWallet extends Secret {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Username associated with the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private String privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    private String seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    private ArrayList\u003cString\u003e urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for CryptoWallet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name of the crypto wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username The username associated with the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey The private key of the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase The seed phrase of the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    public CryptoWallet(String name, String username,","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"                        String privateKey, String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new CryptoWallet object with specified name, folder name, username, private key, and seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name of the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey the private key associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase the seed phrase associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public CryptoWallet(String name, String folderName, String username,","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"                        String privateKey, String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    public CryptoWallet(String name, String folderName, String username,","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"                        String privateKey, String seedPhrase, ArrayList\u003cString\u003e urls) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d urls;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the username.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        return username;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the username associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username A String representing the new username to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the private key associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the private key.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"    public String getPrivateKey() {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        return privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"    public void setPrivateKey(String privateKey) {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the seed phrase associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    public String getSeedPhrase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        return seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the seed phrase associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase A String representing the new seed phrase to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"    public void setSeedPhrase(String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return An ArrayList of String objects representing the urls.","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cString\u003e getUrls() {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"        return urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param urls An ArrayList of String objects representing the new urls to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"    public void setUrls(ArrayList\u003cString\u003e urls) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        this.urls \u003d urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new url to the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url A String representing the new url to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"    public void addUrl(String url) {","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"        urls.add(url);","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string representation of the secret\u0027s seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a formatted string representation of the secret\u0027s seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        return String.format(\"Seed Phrase: %s\", seedPhrase);","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"CryptoWallet,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"euzhengxi"},"content":"                \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.privateKey) + \",\" +","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"euzhengxi"},"content":"                Backend.encode(\"\" + this.seedPhrase) + \",\";","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"euzhengxi"},"content":"        String formattedURLs \u003d \"\";","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"euzhengxi"},"content":"        for (String url : this.urls) {","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"euzhengxi"},"content":"            formattedURLs +\u003d url + \",\";","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"euzhengxi"},"content":"        return formattedString + formattedURLs;","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":63,"DeepanjaliDhawan":72,"kairuler":4,"euzhengxi":24}},{"path":"src/main/java/seedu/duke/secrets/NUSNet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.Backend;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a NUSNet secret that stores the user\u0027s NUSNet ID and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"public class NUSNet extends Secret{","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    private String nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for creating a NUSNet secret with a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName Name of the folder that the NUSNet account belongs to.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param nusNetId NUSNet ID of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password Password of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    public NUSNet(String name, String folderName, String nusNetId, String password) {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for creating a NUSNet secret without a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param nusNetId NUSNet ID of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password Password of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    public NUSNet(String name, String nusNetId, String password) {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        super(name, \"unnamed\");","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password of the NUSNet account","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The password of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    public void setNusNetId(String nusNetId) {","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the NUSNet ID of the NUSNet account","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The NUSNet ID of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    public String getNusNetId() {","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        return nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string that represents the NUSNet secret in a form that can be stored in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        String formattedString \u003d  \"nusNetId,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"                \",\" + this.nusNetId + \",\" + Backend.encode(this.password);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        return formattedString;","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string that reveals the name, NUSNet ID and password of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The string that reveals the NUSNet secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"                        \"NUSNet ID: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"                        \"Password: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"                getName(), nusNetId, password);","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"stevenantya":37,"DeepanjaliDhawan":44,"kairuler":10}},{"path":"src/main/java/seedu/duke/secrets/Secret.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the basic \"Password-like\" class, which is intended to be the parent class of all future password classes.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class provides the basic attributes and methods required to store and retrieve password-like information.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"public class Secret {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A regex pattern for matching illegal characters in password names.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    private static final Pattern ILLEGAL_CHARS_PATTERN \u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"            Pattern.compile(\"^.*[~!@#$%^\u0026*()_+\u003d\\\\-`{}\u003c\u003e()\\\\[\\\\]|\\\"\\\\_].*$\");","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The folder name of the password. By default, it is set to \"unnamed\".","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    protected String folderName \u003d \"unnamed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    private String uid \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new password with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    public Secret(String name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        // Assumes that name is not illegal before creation","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        uid \u003d name; // current just a duplicated, can be changed later","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  Constructs a new password with the given name and folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param name The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param folderName The folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public Secret(String name, String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        // Assumes that name is not illegal before creation","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        uid \u003d name; // current just a duplicated, can be changed later","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the given name contains any illegal characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name to be checked.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return if the name contains any illegal characters, {@code false} otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    public static boolean isIllegalName(String name) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        return ILLEGAL_CHARS_PATTERN.matcher(name).matches();","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    public String getUid() {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        return uid;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The new name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"    public void setName(String name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"        this.uid \u003d name; // since they are linked now","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"    public String getName() {","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        return name;","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Edits the name of the password to the given new name and updates the unique identifier accordingly.","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param newName The new name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"    public void editName(String newName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"        uid \u003d newName;","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        name \u003d newName;","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"    public String getFolderName() {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        return folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the folder name of the password to the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The new folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"    public void setFolderName(String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the password, formatted for storage in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A string representation of the password, formatted for storage in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"        return this.uid + \",\" + this.name + \",\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"            this.folderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an empty string as there is no information to reveal in this Secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return An empty string","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        return \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":45,"DeepanjaliDhawan":75,"stevenantya":20}},{"path":"src/main/java/seedu/duke/secrets/StudentID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class represents a student ID secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class StudentID extends Secret {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"    private String studentID;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new StudentID object with the specified name and student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    public StudentID(String name, String studentID) {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"        super(name);","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new StudentID object with the specified name, folder name, and student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    public StudentID(String name, String folderName, String studentID) {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the student ID number.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public String getStudentID() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return studentID;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the StudentID object for storing in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the StudentID object","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        String formattedString \u003d  \"studentID,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"            \",\" + this.studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"        return formattedString;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the StudentID object.","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the StudentID object","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"                        \"StudentID: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"                getName(), studentID);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"    public void setStudentID(String studentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"stevenantya":28,"DeepanjaliDhawan":37,"kairuler":4}},{"path":"src/main/java/seedu/duke/secrets/WifiPassword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.duke.Backend;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class to represent a Wi-Fi password and its associated information.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"public class WifiPassword extends Secret{","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    private String password;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new Wi-Fi password object with the specified name, username (optional), and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username (optional) used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    public WifiPassword(String name, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"                        String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        // username can be null","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new Wi-Fi password object with the specified name, folder name, username (optional), and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder containing the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    public WifiPassword(String name, String folderName, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"                         String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        return username;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removes the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    public void removeUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        username \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        return password;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the password used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the Wi-Fi password object, including the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the Wi-Fi password object, including the password","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        return String.format(\"Password: %s\", password);","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"wifiPassword,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"                \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.password);","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":48,"DeepanjaliDhawan":44,"euzhengxi":9}},{"path":"src/main/java/seedu/duke/storage/SecretEnumerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderNotEmptyException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class that manages the storage and retrieval of secrets and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"public class SecretEnumerator {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"    private final ArrayList\u003cSecret\u003e storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Hashtable that stores secrets organized by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretEnumerator class.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    public SecretEnumerator() {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        storage \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        folders \u003d new Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretEnumerator class that takes in existing storage and folder data.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param storage ArrayList of Secret objects to be added to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders Hashtable of Secret objects organized by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"    public SecretEnumerator(ArrayList\u003cSecret\u003e storage, Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder in the Hashtable of folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be created.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists in the Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        if (folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"            throw new FolderExistsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        folders.put(folderName,","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"                new ArrayList\u003cSecret\u003e());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes a folder from the Hashtable of folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be deleted.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder does not exist in the Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotEmptyException if the folder is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    public void deleteFolder(String folderName) throws FolderNotFoundException, FolderNotEmptyException {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        if (!folders.get(folderName).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotEmptyException();","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        folders.remove(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the Secret object located at the specified index in the storage list.","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index the index of the Secret object to retrieve","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the Secret object at the specified index","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is greater than or equal to the size of the storage list","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"    public Secret get(int index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        if (index \u003e\u003d storage.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        return storage.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves a Secret object from the storage ArrayList based on its index in the ArrayList.","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index the index of the Secret object to be retrieved","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder where the Secret object is stored","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the Secret object at the specified index in the specified folder","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ArrayIndexOutOfBoundsException if the specified index is out of bounds of the specified folder","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"    public Secret get(int index, String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        // assumes folder already exists","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e tempStorage \u003d folders.get(folderName);","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"        if (index \u003e\u003d tempStorage.size()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        return tempStorage.get(index);","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an ArrayList containing all the secrets stored in the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an ArrayList of all secrets stored in the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e getList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"        return storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an ArrayList containing all the secrets stored in the specified folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the folder does not exist, returns null.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an ArrayList of secrets stored in the specified folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e getList(String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        return folders.get(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new secret to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Throws FolderExistsException if the folder name already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret The secret to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder name already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"    public void add(Secret secret) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"        storage.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        // creates a folder if it doesn\u0027t already exist","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(secret.getFolderName())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"            createFolder(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the given secret from the storage, including from its corresponding folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the folder becomes empty after the deletion, it will also be removed from the folders list.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the secret to be deleted","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"    public void delete(Secret secret) {","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"        storage.remove(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).remove(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"        // delete folder if it is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"        if (folders.get(secret.getFolderName()).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"            folders.remove(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the number of secrets stored in the container.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the size of the container","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"euzhengxi"},"content":"    public int size() {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"euzhengxi"},"content":"        return this.storage.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a HashSet of all the folder names currently in the container.","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a HashSet containing all folder names","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"euzhengxi"},"content":"    public HashSet getFolders() {","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"euzhengxi"},"content":"        HashSet\u003cString\u003e folderHashset \u003d new HashSet();","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"euzhengxi"},"content":"        for (String name : this.folders.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"            folderHashset.add(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"        return folderHashset;","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":79,"DeepanjaliDhawan":78,"euzhengxi":20}},{"path":"src/main/java/seedu/duke/storage/SecretMaster.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Master class that manages the storage and retrieval of secrets and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"public class SecretMaster {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    // use for quick finding","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    private static final String DEFAULT_FOLDER \u003d \"unnamed\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    private static final String ALLOWED_NAMES_REGEX \u003d \"^[a-zA-Z0-9_]*$\"; // only alphanumeric allowed","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Object that manages searching for secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    private SecretSearcher secretSearcher; // Hash Table","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Object that manages enumerating secrets or listing secrets in the order it was added in.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    private SecretEnumerator secretEnumerator; // Array view","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * HashSet that stores the names of folders and ensure folders and passwords are distinct.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    private HashSet\u003cString\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * HashSet that stores the names of secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private HashSet\u003cString\u003e secretNames;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretMaster class.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    public SecretMaster() {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        secretSearcher \u003d new SecretSearcher();","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        secretEnumerator \u003d new SecretEnumerator();","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        folders \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        secretNames \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretMaster class that takes in existing SecretSearcher and SecretEnumerator objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretSearcher SecretSearcher object containing existing secret data.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretEnumerator SecretEnumerator object containing existing secret data.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"    public SecretMaster(SecretSearcher secretSearcher, SecretEnumerator secretEnumerator) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"        this.secretSearcher \u003d secretSearcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        this.secretEnumerator \u003d secretEnumerator;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d secretEnumerator.getFolders();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"        this.secretNames \u003d secretSearcher.getNames();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a given name is a legal name conforming to the standards.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name String name to check.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return boolean indicating whether the name is legal.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    public boolean isLegalName(String name) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        return name.matches(ALLOWED_NAMES_REGEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the HashSet of folder names.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return HashSet of folder names.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getFolders() {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        return folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the SecretSearcher object.","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return SecretSearcher object.","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"    public SecretSearcher getSecretSearcher() {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        return secretSearcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the SecretEnumerator object.","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @return SecretEnumerator object.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"    public SecretEnumerator getSecretEnumerator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator;","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the HashSet of secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return HashSet of secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getSecretNames() {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"        return secretNames;","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be created.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException, IllegalFolderNameException {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        if (!isLegalName(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"            throw new IllegalFolderNameException();","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"            folders.add(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            secretEnumerator.createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"            secretSearcher.createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object at the given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index int index of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object at the given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"    public Secret getByIndex(int index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object at the given index within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index int index of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folder String name of the folder to retrieve the Secret from.","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object at the given index within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"    public Secret getByIndex(int index, String folder) {","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.get(index, folder);","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e listSecrets() {","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.getList();","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secrets within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to retrieve Secrets from.","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secrets within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e listSecrets(String folderName) throws NonExistentFolderException {","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"            throw new NonExistentFolderException();","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.getList(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretName String name of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the Secret does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"    public Secret getByName(String secretName) throws SecretNotFoundException {","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        if (!secretNames.contains(secretName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"ollayf"},"content":"        return secretSearcher.get(secretName);","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new Secret to the storage system.","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret Secret object to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder specified in the Secret already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the Secret has a repeated ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the Secret name is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name in the Secret is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"ollayf"},"content":"    public void addSecret(Secret secret) throws FolderExistsException, RepeatedIdException,","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, IllegalFolderNameException {","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"        if (!isLegalName(secret.getName())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"ollayf"},"content":"        if (secretNames.contains(secret.getUid())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"ollayf"},"content":"            throw new RepeatedIdException();","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"ollayf"},"content":"        String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"ollayf"},"content":"        // Creating a new folder","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"ollayf"},"content":"        if (folderName !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"ollayf"},"content":"            createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"        secretNames.add(secret.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"ollayf"},"content":"        secretEnumerator.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"kairuler"},"content":"     * Updates a Secret\u0027s name and folder as well as its name in secretNames, and","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"kairuler"},"content":"     * itself in secretSearcher and secretEnumerator.","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"kairuler"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"kairuler"},"content":"     * @param secret         Secret object to be edited.","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"kairuler"},"content":"     * @param newName        updated name of the Secret object.","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"kairuler"},"content":"     * @param newFolderName  updated folder of the Secret object.","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"kairuler"},"content":"     * @param inquiredFields","lastModifiedDate":"2023-04-04"},{"lineNumber":236,"author":{"gitId":"kairuler"},"content":"     * @throws FolderExistsException if the folder specified in the Secret already exists and cannot be created.","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"kairuler"},"content":"    public void editSecret(Secret secret, String newName, String newFolderName,","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"kairuler"},"content":"                           String[] inquiredFields) throws FolderExistsException {","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"kairuler"},"content":"        secretNames.remove(secret.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"kairuler"},"content":"        secretSearcher.delete(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"kairuler"},"content":"        secretEnumerator.delete(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":244,"author":{"gitId":"kairuler"},"content":"        if (newName !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"kairuler"},"content":"            secret.setName(newName);","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":247,"author":{"gitId":"kairuler"},"content":"        if (newFolderName !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":248,"author":{"gitId":"kairuler"},"content":"            secret.setFolderName(newFolderName);","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":250,"author":{"gitId":"kairuler"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":251,"author":{"gitId":"kairuler"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":252,"author":{"gitId":"kairuler"},"content":"                ((BasicPassword) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":253,"author":{"gitId":"kairuler"},"content":"                ((BasicPassword) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":254,"author":{"gitId":"kairuler"},"content":"                ((BasicPassword) secret).setUrl(inquiredFields[2]);","lastModifiedDate":"2023-04-04"},{"lineNumber":255,"author":{"gitId":"kairuler"},"content":"            } catch (InvalidURLException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":256,"author":{"gitId":"kairuler"},"content":"                Ui.printError(\"Invalid URL! Please enter a valid url with the domain! e.g. google.com\");","lastModifiedDate":"2023-04-04"},{"lineNumber":257,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":258,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-04-04"},{"lineNumber":259,"author":{"gitId":"kairuler"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":260,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setFullName(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":261,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setCreditCardNumber(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":262,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setCvcNumber(Integer.parseInt(inquiredFields[2]));","lastModifiedDate":"2023-04-04"},{"lineNumber":263,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setExpiryDate(inquiredFields[3]);","lastModifiedDate":"2023-04-04"},{"lineNumber":264,"author":{"gitId":"kairuler"},"content":"            } catch (InvalidCreditCardNumberException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":265,"author":{"gitId":"kairuler"},"content":"                Ui.printError(\"Invalid Credit Card Number! Must be 16 digits long\");","lastModifiedDate":"2023-04-04"},{"lineNumber":266,"author":{"gitId":"kairuler"},"content":"            } catch (InvalidExpiryDateException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":267,"author":{"gitId":"kairuler"},"content":"                Ui.printError(\"Invalid Expiry Date! Must be in the format \\\"MM/YY\\\"\");","lastModifiedDate":"2023-04-04"},{"lineNumber":268,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":269,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":270,"author":{"gitId":"kairuler"},"content":"            ((NUSNet) secret).setNusNetId(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"kairuler"},"content":"            ((NUSNet) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":272,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":273,"author":{"gitId":"kairuler"},"content":"            ((StudentID) secret).setStudentID(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":274,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":275,"author":{"gitId":"kairuler"},"content":"            ((WifiPassword) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":276,"author":{"gitId":"kairuler"},"content":"            ((WifiPassword) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":277,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":278,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":279,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setPrivateKey(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setSeedPhrase(inquiredFields[2]);","lastModifiedDate":"2023-04-04"},{"lineNumber":281,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"kairuler"},"content":"        secretNames.add(secret.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"kairuler"},"content":"        secretSearcher.add(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"kairuler"},"content":"        secretEnumerator.add(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removes a Secret from the storage system.","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret Secret object to be removed.","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the Secret does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"ollayf"},"content":"    public void removeSecret(Secret secret) throws SecretNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"ollayf"},"content":"        if (!secretNames.contains(secret.getUid())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"ollayf"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"ollayf"},"content":"        String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"ollayf"},"content":"        secretNames.remove(secret.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"ollayf"},"content":"        secretEnumerator.delete(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"ollayf"},"content":"        secretSearcher.delete(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":304,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public ArrayList\u003cString\u003e listSecretNames() {","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ArrayList\u003cString\u003e secretNamesList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":312,"author":{"gitId":"DeepanjaliDhawan"},"content":"        for (Secret secret : secretEnumerator.getList()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":313,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretNamesList.add(secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":314,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return secretNamesList;","lastModifiedDate":"2023-03-14"},{"lineNumber":316,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":318,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secret names within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to retrieve Secret names from.","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secret names within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":323,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":325,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public ArrayList \u003cString\u003e listSecretNames(String folderName) throws NonExistentFolderException {","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"DeepanjaliDhawan"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"DeepanjaliDhawan"},"content":"            throw new NonExistentFolderException();","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ArrayList\u003cString\u003e secretNamesList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"DeepanjaliDhawan"},"content":"        for (Secret secret : secretEnumerator.getList(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretNamesList.add(secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return secretNamesList;","lastModifiedDate":"2023-03-14"},{"lineNumber":334,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":335,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":114,"kairuler":78,"DeepanjaliDhawan":139,"stevenantya":1,"euzhengxi":3}},{"path":"src/main/java/seedu/duke/storage/SecretSearcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderNotEmptyException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * A class that stores and retrieves Secret objects by their unique identifier (UID) using a hash table.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It also provides the ability to group secrets by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"public class SecretSearcher {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A hash table that stores all Secret objects by their unique identifier (UID).","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, Secret\u003e storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A hash table that stores secrets grouped by folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Each folder name maps to another hash table that stores Secret objects by their UID.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This allows for efficient retrieval of secrets based on both their UID and folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new instance of the SecretSearcher class with an empty storage and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public SecretSearcher() {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        storage \u003d new Hashtable\u003cString, Secret\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        folders \u003d new Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new instance of the SecretSearcher class with the given storage and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param storage A hash table containing Secret objects to be stored in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders A hash table containing folders and their respective Secret objects to be stored in the","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"    public SecretSearcher(Hashtable\u003cString, Secret\u003e storage, Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e folders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object with the given UID from the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretId The UID of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The Secret object with the given UID, or null if no Secret object with that UID exists in the","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *         search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    public Secret get(String secretId) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        return storage.get(secretId);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder in the search index with the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The name of the folder to create.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the given name already exists in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        if (folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            throw new FolderExistsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        folders.put(folderName,","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"                new Hashtable\u003cString, Secret\u003e());","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes a folder from the search index with the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The name of the folder to delete.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if a folder with the given name does not exist in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotEmptyException if the folder to be deleted is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"    public void deleteFolder(String folderName) throws FolderNotFoundException, FolderNotEmptyException {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        if (!folders.get(folderName).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotEmptyException();","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        folders.remove(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a Secret object to the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret The Secret object to add to the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder specified by the Secret object does not exist in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"    public void add(Secret secret) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"        storage.put(secret.getUid(), secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"        // creates a folder if it doesn\u0027t already exist (MIGHT remove in future)","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(secret.getFolderName())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"            createFolder(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).put(secret.getUid(), secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the given Secret object from the storage and the folders Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the Secret object to delete","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    public void delete(Secret secret) {","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        storage.remove(secret.getUid());","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).remove(secret.getUid());","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        // delete folder if it is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        if (folders.get(secret.getFolderName()).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"            folders.remove(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a HashSet containing all the secret names in the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a HashSet of strings containing all the secret names in the storage","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"euzhengxi"},"content":"    public HashSet getNames() {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"euzhengxi"},"content":"        HashSet\u003cString\u003e nameHashset \u003d new HashSet();","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"euzhengxi"},"content":"        for (String name : this.storage.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"euzhengxi"},"content":"            nameHashset.add(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"euzhengxi"},"content":"        return nameHashset;","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":55,"DeepanjaliDhawan":61,"euzhengxi":16}},{"path":"src/test/java/seedu/duke/BackendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"euzhengxi"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for Backend.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"public class BackendTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the encoding and decoding of special characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"    public void encodeAndDecodeSpecialCharactersTrue() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"            Backend.decode(Backend.encode(\"~!@#$%^\u0026*()_+{}|:\u003c\u003e?,./;\u0027[]\\\\\")), \"~!@#$%^\u0026*()_+{}|:\u003c\u003e?,./;\u0027[]\\\\\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the parsing of empty fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"    public void parseEmptyFieldEmptyEmpty() {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"        Assertions.assertEquals(Backend.parseEmptyField(\"empty\"), \"\");","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"        Assertions.assertNotEquals(Backend.parseEmptyField(\"Empty\"), \"\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"DeepanjaliDhawan":9,"euzhengxi":20}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for Duke class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"class DukeTest {","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"    private static final String DUKETEST_LOG_EXECUTECOMMANDEXITTRUE_IDENTIFIER","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"        \u003d \"DukeTest - executeCommandExitTrue: \";","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"    private static final String DUKETEST_LOG_EXECUTECOMMANDNOTEXITFALSE_IDENTIFIER","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"            \u003d \"DukeTest - executeCommand: \";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"    public void executeCommandExitTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertTrue(duke.executeCommand(Parser.parse(\"bye\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertTrue(duke.executeCommand(Parser.parse(\"hellooooo\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.setUpLogger();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.LOGGER.log(Level.WARNING, DukeTest.DUKETEST_LOG_EXECUTECOMMANDEXITTRUE_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"    public void executeCommandNotExitFalse() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"new o/NUSNet\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"new o/StudentID\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"new o/CryptoWallet\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"delete\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"list\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"search\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"view\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"            Assertions.assertFalse(duke.executeCommand(Parser.parse(\"edit\")));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.setUpLogger();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.LOGGER.log(Level.WARNING,","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"                DukeTest.DUKETEST_LOG_EXECUTECOMMANDNOTEXITFALSE_IDENTIFIER, e);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"            DukeLogger.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"DeepanjaliDhawan":4,"-":7,"euzhengxi":38}},{"path":"src/test/java/seedu/duke/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.ExceptionMain;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestFolder() throws SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        Command addStudentId \u003d new AddStudentIDCommand(studentID);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        addStudentId.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID2Name\",sm.getByName(\"StudentID2Name\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    public void nusNetFolder() throws SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNetName2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        Command addNusNet \u003d new AddNUSNetCommand(nusNet);","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        addNusNet.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNetName2\", sm.getByName(\"NUSNetName2\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    void basicPasswordFolder() throws InvalidURLException, SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        Command addBasicPassword \u003d new AddBasicPasswordCommand(basicPassword);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        addBasicPassword.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", sm.getByName(\"basicPassword1\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"stevenantya":42}},{"path":"src/test/java/seedu/duke/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.ExceptionMain;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    //Missing Wi-Fi password","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestFolder() throws SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"        Command addStudentId \u003d new AddStudentIDCommand(studentID);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"        addStudentId.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"StudentID2Name\",sm.getByName(\"StudentID2Name\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        Command deleteStudentID \u003d new DeleteCommand(\"delete StudentID2Name /f StudentsOfNUS\");","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"        deleteStudentID.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"                sm.getByName(\"StudentID2Name\");","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"    public void nusNetFolder() throws SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNetName2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        Command addNusNet \u003d new AddNUSNetCommand(nusNet);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        addNusNet.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"NUSNetName2\", sm.getByName(\"NUSNetName2\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        Command deleteNusNet \u003d new DeleteCommand(\"delete NUSNetName2 /f FolderName\");","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        deleteNusNet.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"                sm.getByName(\"NUSNetName2\");","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    void basicPasswordFolder() throws InvalidURLException, SecretNotFoundException, ExceptionMain {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"        Command addBasicPassword \u003d new AddBasicPasswordCommand(basicPassword);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"        addBasicPassword.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"basicPassword1\", sm.getByName(\"basicPassword1\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"        Command deleteBasicPassword \u003d new DeleteCommand(\"delete basicPassword1 /f FolderName\");","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        deleteBasicPassword.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"            sm.getByName(\"basicPassword1\");","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"stevenantya":47,"kairuler":17}},{"path":"src/test/java/seedu/duke/command/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommandTest class tests the EditCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"class EditCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test the extract method in EditCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"     * The test case checks for extraction of name, new folder, new description and new password name.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    void extract_validInput() {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(\"edit p/PASSWORD_NAME -f nf/NEW_FOLDER_NAME \" +","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"                \"-N np/NEW_PASSWORD_NAME\");","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"        String[] expectedOutputs \u003d {\"PASSWORD_NAME\", \"NEW_FOLDER_NAME\", \"NEW_PASSWORD_NAME\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        String[] actualOutputs \u003d editCommand.extract(\"edit p/PASSWORD_NAME -f nf/NEW_FOLDER_NAME \" +","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"                \"-N np/NEW_PASSWORD_NAME\");","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(actualOutputs, expectedOutputs);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"     * Test the extract method in EditCommand class.","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"     * The test case checks for an invalid input which results in null","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"     * extracted fields (except for folder which is \"unnamed\").","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    void extract_invalidInput_extractDefaultValues() {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(\"invalid input\");","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"        String[] output \u003d editCommand.extract(\"invalid input\");","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"        assertNull(output[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"        assertNull(output[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        assertNull(output[2]);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"    void execute_withExistingSecret_editSecret() throws SecretNotFoundException, IllegalFolderNameException,","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new Secret(\"Password1\", \"Folder1\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new Secret(\"Password2\", \"Folder2\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(\"p/Password1 -f nf/Folder3 -N np/Password3\");","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"        editCommand.execute(secretMaster);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"Password3\", secretMaster.getByName(\"Password3\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"Folder3\", secretMaster.getByName(\"Password3\").getFolderName());","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e secretMaster.getByName(\"Password1\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"    void execute_withNonExistingSecret_printErrorMessage() throws IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new Secret(\"Password1\", \"Folder1\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new Secret(\"Password2\", \"Folder2\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(\"p/Password3 -f nf/Folder3 -N np/Password4\");","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"        editCommand.execute(secretMaster);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e secretMaster.getByName(\"Password4\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test the isExit method in EditCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(\"edit p/Test\");","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"        assertFalse(editCommand.isExit());","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"kairuler":83,"DeepanjaliDhawan":9}},{"path":"src/test/java/seedu/duke/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":" * @author : Steven A. O. Waskito","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":" **/","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"stevenantya":7}},{"path":"src/test/java/seedu/duke/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the ListCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isExit method when there is no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void isExit_noFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\");","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertFalse(listCommand.isExit());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isExit method when there is a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void isExit_withFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list f/Folder123!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertFalse(listCommand.isExit());","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extractFolderName method when there is no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void getList_noFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        assertEquals(listCommand.extractFolderName(\"list\"), \"unnamed\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extractFolderName method when there is a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void getList_withFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list f/Folder123!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertEquals(listCommand.extractFolderName(\"list f/Folder123!\"), \"f/Folder123!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the ListCommand method for different secret types.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void testSecretTypes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new BasicPassword(\"BasicPassword1\", \"Username1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\", \"Url1.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new CreditCard(\"CreditCard1\", \"John Doe\",","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"1234567812345678\", 123, \"12/25\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new CryptoWallet(\"CryptoWallet1\", \"Folder1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"DeepsD\", \"PrivateKey1\", \"SeedPhrase1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new NUSNet(\"NUSNet1\", \"NUSNetId1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new StudentID(\"StudentID1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"StudentID1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new WifiPassword(\"WifiPassword1\", \"Username1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"            ListCommand listCommand \u003d new ListCommand(\"list\");","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"            listCommand.execute(secretMaster);","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } catch (FolderExistsException | IllegalFolderNameException | IllegalSecretNameException | RepeatedIdException","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"                | InvalidURLException | InvalidCreditCardNumberException | InvalidExpiryDateException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":1,"DeepanjaliDhawan":94}},{"path":"src/test/java/seedu/duke/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class represents the unit tests for the SearchCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It checks the following functionalities:","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Extraction of name from input","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Extraction of folder name from input","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":" * execute method","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" * isExit method","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"class SearchCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPassword1;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"            mockBasicPassword1 \u003d new BasicPassword(\"Facebook\", \"Tom123\", \"password123\", \"facebook.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPassword2;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"            mockBasicPassword2 \u003d new BasicPassword(\"Instagram\", \"Tom123\", \"password123\", \"instagram.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPasswordWithFolder1;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"            mockBasicPasswordWithFolder1 \u003d new BasicPassword(\"Facebook\", \"Socials\", \"Tom123\", \"password123\", \"fb.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPasswordWithFolder2;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"            mockBasicPasswordWithFolder2 \u003d new BasicPassword(\"Instagram\", \"Socials\", \"Tom123\", \"password123\", \"ig.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of name only.","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"    void extractName_nameOnly() {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"        SearchCommand searchCommandNameOnly \u003d new SearchCommand(\"search n/Name123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"        assertEquals(searchCommandNameOnly.extractName(\"search n/Name123!\"), \"Name123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of name and folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"    void extractName_nameAndFolder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(\"search n/Name123! -f f/Folder123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"        assertEquals(searchCommand.extractName(\"search n/Name123! -f f/Folder123!\"), \"Name123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of folder name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of folder name only.","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"    void extractFolderName_nameOnly() {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(\"search n/Name123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"        assertNull(searchCommand.extractFolderName(\"search n/Name123!\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of folder name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of name and folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"    void extractFolderName_nameAndFolder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(\"search n/Name123! -f f/Folder123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"        assertEquals(searchCommand.extractFolderName(\"search n/Name123! -f f/Folder123!\"), \"Folder123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"    public void execute_nameOnly() throws IllegalFolderNameException,","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"        SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPassword1);","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPassword2);","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"        SearchCommand command \u003d new SearchCommand(\"search n/Facebook\");","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"        command.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"Found 1 matches!\\nID: 1\\t|\\tFacebook\\t|\\n\", output.toString().replace(\"\\r\",\"\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"    public void execute_nameAndFolder() throws IllegalFolderNameException,","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"        SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPasswordWithFolder1);","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPasswordWithFolder2);","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"kairuler"},"content":"        SearchCommand command \u003d new SearchCommand(\"search n/Facebook -f f/Socials\");","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"        command.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"Found 1 matches!\\nID: 1\\t|\\tFacebook\\t|\\n\", output.toString().replace(\"\\r\",\"\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isExit method.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(\"search n/Name123!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"        assertFalse(searchCommand.isExit());","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"kairuler":116,"DeepanjaliDhawan":28}},{"path":"src/test/java/seedu/duke/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import seedu.duke.storage.SecretMaster;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"class ViewCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_NAME \u003d \"testName\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_USERNAME \u003d \"testUsername\";","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_PASSWORD \u003d \"testPassword\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_URL \u003d \"testURL.com\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_REVEAL_STR \u003d String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"                    \"Url: %s\\n\" +","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"                    \"Username: %s\\n\" +","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"                    \"Password: %s\",","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"            TEST_NAME, TEST_URL, TEST_USERNAME, TEST_PASSWORD);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_NAME_NOT_FOUND \u003d \"There are no passwords that matches that name!\\n\" +","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"            \"Make sure you follow this format: \\\"view p/PASSWORD_NAME\\\"\";","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"    private final SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPassword;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"            mockBasicPassword \u003d new BasicPassword(TEST_NAME, TEST_USERNAME,","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"                    TEST_PASSWORD, TEST_URL);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidURLException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    void extractName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view p/\" + TEST_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        assertEquals(TEST_NAME, viewCommand.extractName(\"view p/\" + TEST_NAME));","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"    void inquirePassword() {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"    void execute_matchingName() throws IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPassword);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view p/\" + TEST_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"        viewCommand.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"        assertEquals(TEST_REVEAL_STR, output.toString().trim());","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"    public void execute_nonMatchingName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view p/\" + TEST_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"        viewCommand.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"        assertEquals(TEST_NAME_NOT_FOUND, output.toString().trim());","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(TEST_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"        assertFalse(viewCommand.isExit());","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"kairuler":84}},{"path":"src/test/java/seedu/duke/secrets/BasicPasswordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit Test for the constructor of the BasicPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class BasicPasswordTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of basic password without folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if URL format is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    public void basicPasswordNoFolder() throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", basicPassword.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", basicPassword.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicUsername\", basicPassword.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 112\", basicPassword.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"google.com\", basicPassword.getUrl());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of basic password with folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if URL format is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public void basicPasswordFolder() throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", basicPassword.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"FolderName\", basicPassword.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicUsername\", basicPassword.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 112\", basicPassword.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"google.com\", basicPassword.getUrl());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":32,"DeepanjaliDhawan":10}},{"path":"src/test/java/seedu/duke/secrets/CreditCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the CreditCard class.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"class CreditCardTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test without creation of folder","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date is of incorrect format","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException when an invalid credit card number is detected during validation","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    void noFolderCreationTest () throws InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", creditCard.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"John Doe Lim Guang\", creditCard.getFullName());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"1234567890123456\", creditCard.getCreditCardNumber());","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"12/23\", creditCard.getExpiryDate());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test with creation of folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    void withFolderCreationTest () throws InvalidExpiryDateException {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"12341567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", creditCard.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"John Doe Lim Guang\", creditCard.getFullName());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"12341567890123456\", creditCard.getCreditCardNumber());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"12/23\", creditCard.getExpiryDate());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test legal dates.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    void legalDatesTest() throws InvalidExpiryDateException {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"                    \"22/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"                    \"12/43\");","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"                    \"123/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"                    \"12/53\");","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"                    \"12/g\");","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"                    \"kfc\");","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234r567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"12341567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"rtyuiohgfghjkjhgffghuytres\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test the getRevealStr method of the CreditCard class","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if the credit card number is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() throws InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Credit Card Number: 1234567890123456\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: 123\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: 12/23\", creditCard.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard2 \u003d new CreditCard(\"creditCard1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Credit Card Number: 1234567890123456\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: 123\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: 12/23\", creditCard2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":116,"DeepanjaliDhawan":22}},{"path":"src/test/java/seedu/duke/secrets/CryptoWalletTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the CryptoWallet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"class CryptoWalletTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of a CryptoWallet with no folder specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    void noFolderCryptoWalletCreationTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of a CryptoWallet with a folder specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    void withFolderCryptoWalletCreationTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests editing of CryptoWallet details.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    void editingDetails() {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setSeedPhrase(\"fdfghj rewfs weqf weqf weqr fwer weqrgfdvsg thr fdc sda\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setFolderName(\"folder2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setName(\"cryptoWallet2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cString\u003e urls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(new ArrayList\u003cString\u003e(), cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http.guefhwbqhyhwuijrf.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http.guefhwbqhydbdfdf.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setUrls(urls);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(urls, cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        // adding urls","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.addUrl(\"http://newsite.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http://newsite.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertEquals(urls, cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        assertEquals(3, cryptoWallet.getUrls().size());","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder2\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"fdfghj rewfs weqf weqf weqr fwer weqrgfdvsg thr fdc sda\",","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"                cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet2\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet2\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test code to verify the RevealOutput method","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Seed Phrase: hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"name\");","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet2 \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Seed Phrase: hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":76,"DeepanjaliDhawan":15}},{"path":"src/test/java/seedu/duke/secrets/NUSNetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test for NUSNet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"public class NUSNetTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test NUSNet creation without folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    public void nusNetNoFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNet Name\", \"e088888@u.nus.edu\",\"aSecurePassword2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNet Name\", nusNet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", nusNet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"e088888@u.nus.edu\", nusNet.getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"aSecurePassword2\", nusNet.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test NUSNet creation with folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    public void nusNetFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNet Name 2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNet Name 2\", nusNet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"FolderName\", nusNet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"e081888@u.nus.edu\", nusNet.getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 12\", nusNet.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":22,"DeepanjaliDhawan":10,"kairuler":2}},{"path":"src/test/java/seedu/duke/secrets/SecretTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"class SecretTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the isIllegalName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the method returns true for all weird characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    void isIllegalName_checkWeirdChars() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        String[] names \u003d {\"$\", \"#\", \"!\", \"@\", \"%\", \"^\",","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"            \"\u0026\", \"*\", \"(\", \")\", \"~\", \"`\", \"-\", \"+\", \"\u003d\"};","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        for (String name: names) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            assertEquals(true, Secret.isIllegalName(name));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, Secret.isIllegalName(\"Garena Login\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getUid() and getName() methods.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if both methods return the same value.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    void getUidAndName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getFolderName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the correct folder name is returned.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    void getFolder() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the editName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the name and uid are changed correctly.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    void editName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        secret.editName(\"newName\");","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newName\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newName\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the setFolderName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the folder name is changed correctly.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"    void setFolderName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        secret.setFolderName(\"newFolder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newFolder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getRevealStr() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the reveal string is empty for a newly created secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"\", secret.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"name\");","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"\", secret2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":57,"DeepanjaliDhawan":27}},{"path":"src/test/java/seedu/duke/secrets/StudentIDTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test for StudentID class in seedu.duke.secrets package.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"public class StudentIDTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for creating a StudentID object with no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestNoFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID Name\",\"A021313J\");","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID Name\", studentID.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", studentID.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"A021313J\", studentID.getStudentID());","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for creating a StudentID object with a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2 Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID2 Name\", studentID.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentsOfNUS\", studentID.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"A021313G\", studentID.getStudentID());","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"stevenantya":22,"DeepanjaliDhawan":10}},{"path":"src/test/java/seedu/duke/secrets/WifiPasswordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for the WifiPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"class WifiPasswordTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the creation of a WifiPassword object without a folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    void noFolderWifiPasswordCreationTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"admin\", \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"admin\", wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", wifiPassword.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        wifiPassword.removeUsername();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        // for no username","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", null, \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword2.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", wifiPassword2.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        wifiPassword2.setPassword(\"P@ssw0rd2\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"P@ssw0rd2\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the creation of a WifiPassword object with a folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    void withFolderWifiPasswordCreationTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"folder1\", \"admin\",","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"                \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"admin\", wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", wifiPassword.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        wifiPassword.removeUsername();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        // for no username","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", \"folder1\", null,","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"                \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword2.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", wifiPassword2.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        wifiPassword2.setPassword(\"P@ssw0rd2\");","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"P@ssw0rd2\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the getRevealStr() method of the WifiPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"folder1\", \"admin\",","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"                \"P@ssword1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password: P@ssword1\", wifiPassword.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", \"admin\",","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                \"P@ssword1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password: P@ssword1\", wifiPassword2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":62,"DeepanjaliDhawan":14}},{"path":"src/test/java/seedu/duke/storage/SecretEnumeratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for SecretEnumerator class.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class tests the behavior of the class when the list of secrets and the hashtable of secrets are empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Specifically, it tests the getter methods when there is nothing to get, adding a secret to the list,","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and getting the list and elements from the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"class SecretEnumeratorTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    void emptyGetters() throws FolderExistsException {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e list3 \u003d new Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator enumerator \u003d new SecretEnumerator(list2, list3);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        assertEquals(new ArrayList\u003c\u003e(), enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            enumerator.get(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            enumerator.get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"secret1\", \"folder1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"secret1\", \"folder1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        Secret secret3 \u003d new Secret(\"secret3\", \"folder3\");","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        enumerator.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        list.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        assertEquals(secret, enumerator.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertNotEquals(secret2, enumerator.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList(\"folder1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        enumerator.add(secret3);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList(\"folder1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        list.add(secret3);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":42,"DeepanjaliDhawan":6}},{"path":"src/test/java/seedu/duke/storage/SecretMasterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.RepeatedIdException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.Secret;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the SecretMaster class in the storage package.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"class SecretMasterTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isLegalName method in the SecretMaster class.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    void isLegalName() throws IllegalFolderNameException, FolderExistsException {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalName(\"gyujnuygvjkm\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalName(\"hfjewqsdierjdfhnreqwewqfvsvd\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalName(\"fvdwhjejsdkjfk879809\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalName(\"jhgfhdwv \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalName(\"jkfewrjfv90r93f47   \"));","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalName(\"jkfewrjfv90r93f47^\u0026IO(*\u0026^\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the createFolder method in the SecretMaster class.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the id of a secret is repeated","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    void createFolder() throws IllegalFolderNameException, FolderExistsException, RepeatedIdException,","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, IllegalFolderNameException, IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e set \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        set.add(\"unnamed\");","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(new HashSet\u003cString\u003e(), secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        assertThrows(IllegalFolderNameException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            secretMaster.createFolder(\"\\\"jkfewrjfv90r93f47^\u0026IO(*\u0026^\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertThrows(IllegalFolderNameException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            secretMaster.createFolder(\"jhfe \");","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(new HashSet\u003cString\u003e(), secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        Secret secret1 \u003d new Secret(\"blimp\");","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(secret1);","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"blimp\", \"folder1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        Secret secret3 \u003d new Secret(\"blimp2\", \"folder1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        set.add(secret2.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        System.out.println(set);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        assertNotEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        assertThrows(RepeatedIdException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            secretMaster.addSecret(secret2);","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(secret3);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        assertEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the addSecret methods of the SecretMaster class for all secret types.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder already exists with the same name","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if an invalid expiry date is provided for a secret","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if an illegal folder name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if a secret with the same ID already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if an illegal secret name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if an invalid credit card number is provided for a credit card secret","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if an invalid URL is provided for a basic password secret","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"    void addAllSecrets() throws FolderExistsException, InvalidExpiryDateException, IllegalFolderNameException,","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"            RepeatedIdException, IllegalSecretNameException, InvalidCreditCardNumberException,","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            InvalidExpiryDateException, InvalidCreditCardNumberException, InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"basic1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new CreditCard(\"credit1\", \"HJ HJ UI\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"                \"12/23\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new CryptoWallet(\"crypto1\", \"hjhbj\", \"fdertyuiytyui876ytfgyuit5rt\",","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"                \"hb jnjkm kjijh ijhui hjhb iujh uhbgv gfcd\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new NUSNet(\"nusnet1\", \"folder1\", \"e0987654\", \"oitfghjmjh\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new StudentID(\"hi\", \"T0987490A\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new WifiPassword(\"wifi1\", \"username1\", \"password1\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for adding secrets with special characters in their names to SecretMaster.","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if an invalid URL is provided for a basic password secret","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if an illegal folder name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if a secret with the same ID already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if an illegal secret name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder already exists with the same name","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"    void addSecretsWithCharacter() throws InvalidURLException, IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword2_\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword2\", \"Folder9\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword4\", \"Folder9_\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"    public void editBasicPassword() throws FolderExistsException, IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, InvalidURLException {","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"kairuler"},"content":"        BasicPassword secret \u003d new BasicPassword(\"secret1\", \"folder1\", \"username1\", \"password1\", \"https://example.com\");","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"newusername\", \"newpassword\", \"https://example.com\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], secret.getUsername());","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], secret.getPassword());","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[2], ((BasicPassword) secret).getUrl());","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"kairuler"},"content":"    public void editCreditCard() throws FolderExistsException, InvalidExpiryDateException,","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"kairuler"},"content":"        CreditCard secret \u003d new CreditCard(\"secret1\", \"folder1\", \"John Doe\", \"1234567890123456\", 123, \"12/23\");","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"Jane Doe\", \"1234567890123456\", \"456\", \"12/24\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], ((CreditCard) secret).getFullName());","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], ((CreditCard) secret).getCreditCardNumber());","lastModifiedDate":"2023-04-04"},{"lineNumber":168,"author":{"gitId":"kairuler"},"content":"        assertEquals(Integer.parseInt(inquiredFields[2]), ((CreditCard) secret).getCvcNumber());","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[3], ((CreditCard) secret).getExpiryDate());","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":172,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"kairuler"},"content":"    public void editNUSNet() throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"kairuler"},"content":"        NUSNet secret \u003d new NUSNet(\"secret1\", \"folder1\", \"e0123456\", \"password1\");","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":178,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"e0012345\", \"password2\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":183,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":184,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], ((NUSNet) secret).getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], ((NUSNet) secret).getPassword());","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"kairuler"},"content":"    public void editStudentID() throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        StudentID secret \u003d new StudentID(\"secret1\", \"folder1\", \"e0123456\");","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"e0012345\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":201,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":96,"DeepanjaliDhawan":36,"kairuler":73}},{"path":"src/test/java/seedu/duke/storage/SecretSearcherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.duke.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.duke.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.BasicPassword;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.CreditCard;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.CryptoWallet;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.StudentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.WifiPassword;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.duke.secrets.NUSNet;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit Test for the SecretSearcher() Class","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"class SecretSearcherTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    void addAllPasswords() throws FolderExistsException, InvalidExpiryDateException, InvalidCreditCardNumberException,","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        SecretSearcher secretSearcher \u003d new SecretSearcher();","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new BasicPassword(\"basic1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new CreditCard(\"credit1\", \"HJ HJ UI\", \"1234567890123456\", 123,","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"                \"12/23\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new CryptoWallet(\"crypto1\", \"hjhbj\", \"fdertyuiytyui876ytfgyuit5rt\",","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"                \"hb jnjkm kjijh ijhui hjhb iujh uhbgv gfcd\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new NUSNet(\"nusnet1\", \"folder1\", \"e0987654\", \"oitfghjmjh\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new StudentID(\"hi\", \"T0987490A\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new WifiPassword(\"wifi1\", \"username1\", \"password1\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":30,"DeepanjaliDhawan":3}},{"path":"text-ui-test/runjar.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"java -jar ../ip.jar \u003c input_JAR.txt \u003e ACTUAL_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"# convert to UNIX format","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"cp EXPECTED_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"diff ACTUAL_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":15}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"java -ea -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"stevenantya":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"echo yeet","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"java -ea -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"echo yeet2","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ollayf":3,"-":22}},{"path":"text-ui-test/runtest_mac.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"# change to script directory","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"cd ..","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"cd text-ui-test","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":22}}]
