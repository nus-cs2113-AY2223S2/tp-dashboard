[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/secureNUS/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"* A skeleton JUnit test (`src/test/java/seedu/secureNUS/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ollayf":2,"-":62}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    mainClass \u003d \"seedu.securenus.SecureNUS\"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    archiveBaseName \u003d \"secureNUS\"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ollayf":2,"DeepanjaliDhawan":2,"-":42}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"| Display                                                           |       Name        |                Github Profile                 |                Portfolio                |","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"|-------------------------------------------------------------------|:-----------------:|:---------------------------------------------:|:---------------------------------------:|","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"| \u003cimg src\u003d\"./team/pics/hosea.jpg\" width\u003d\"50%\" height\u003d\"50%\" /\u003e      |       Hosea       |      [Github](https://github.com/ollayf)      |      [Portfolio](./team/ollayf.md)      |","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"| \u003cimg src\u003d\"./team/pics/khairul.jpg\" width\u003d\"50%\" height\u003d\"50%\" /\u003e     |   Khairul Aizat   |     [Github](https://github.com/kairuler)     |      [Portfolio](./team/ollayf.md)      |","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto)               |     Zheng Xi      |    [Github](https://github.com/euzhengxi)     |    [Portfolio](./team/euzhengxi.md)     |","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"| \u003cimg src\u003d\"./team/pics/Deepanjali.jpg\" width\u003d\"50%\" height\u003d\"50%\" /\u003e | Deepanjali Dhawan | [Github](https://github.com/DeepanjaliDhawan) | [Portfolio](./team/deepanjalidhawan.md) |","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"| ![](https://rb.gy/2lyjkm)                                         |      Steven       |   [Github](https://github.com/stevenantya)    |      [Portfolio](./team/steven.md)      |","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"kairuler":7,"-":2}},{"path":"docs/DGDiagramsCreator/Backend.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title Backend Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"file database","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"node SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"component Backend {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    rectangle Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"SecretMaster \u003c-[dotted]right-\u003e Backend.Backend : sends data for export OR\\n collects data for import","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"database \u003c-[dotted]left-\u003e Backend.Backend : encrypts data for export OR\\n decrypts data for import","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":11}},{"path":"docs/DGDiagramsCreator/Basic_Intro.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"autoactivate on","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"actor User #FFFBBB","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"  -\u003e \"secureNUS:SecureNUS\"#00cccc: run()","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \"\u003c\u003cclass\u003e\u003e\\nUi\"#F00000: greetUser()","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"loop while !isExit","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"secureNUS:SecureNUS\"#FF0AB0: parseCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"\u003c\u003cclass\u003e\u003e\\nUi\"#F00000: readCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    User-\u003e \"\u003c\u003cclass\u003e\u003e\\nUi\" #FFBBBB: \"new password\"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"\u003c\u003cclass\u003e\u003e\\nParser\"#BBFFFF: parse(command, usedNames, folders)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    \"\u003c\u003cclass\u003e\u003e\\nParser\"-\u003e \"\u003c\u003cclass\u003e\u003e\\nParser\"#FFFAAA:parseAdd(command, usedNames)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    \"\u003c\u003cclass\u003e\u003e\\nParser\" -\u003e \":AddBasicPassword\" **","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    activate \":AddBasicPassword\"#BBB","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:extractName(input, keyword)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:extractFolderName(input)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(URL, \"URL\")","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(USERNAME, \"Username\")","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(PASSWORD, \"Password\")","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    return command","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"secureNUS:SecureNUS\"#BBFFFB:executeCommand(c)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \":AddBasicPassword\"#FFAAFF:execute(secureNUSData)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \":BasicPassword\"**","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    activate \":BasicPassword\"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \"secureNUSData:SecretMaster\"#FA0012:addSecret(basicPasswordData)","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    \"secureNUSData:SecretMaster\" -\u003e \"secretEnumerator:SecretEnumerator\"#FF1233:add(secret)","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    \"secureNUSData:SecretMaster\" -\u003e \"secretSearcher:SecretSearcher\"#FF1233:add(secret)","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \"\u003c\u003cclass\u003e\u003e\\nUi\"#000134: inform(\"I have added new basic password...\")","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \"\u003c\u003cclass\u003e\u003e\\nBackend\"#317821: updateStorage(input)","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    return isExit \u003d false","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    destroy \":AddBasicPassword\"","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ollayf":57}},{"path":"docs/DGDiagramsCreator/ClassHigh.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title Class Connectivity Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"component \"Application\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    component \u0027SecureNUS {","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"        package \"command\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"            node Commands","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"        package secureNUS {","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            node SecureNUS","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    component UI {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"        package \"ui\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            node Ui","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"            node Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"            Ui -\u003e Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    Parser -right-\u003e Commands","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    component \u0027Backend {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        package secureNUS {","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            node Backend","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    component SecretStorage {","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        package SecretStorage {","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"            node SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"            node SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"            node SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    Commands --\u003e SecureNUS","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    SecureNUS --\u003e SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    SecretMaster \u003c-right-\u003e Backend","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"component InputCLI {","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"component Logger {","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    node secure.SecureNUSLogger","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    node secure.SecureNUSLoggerFormatter","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    SecureNUSLogger --\u003e SecureNUSLoggerFormatter","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"component OutputFiles {","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    file logFiles","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    file database","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"Application --\u003e SecureNUSLogger","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"SecureNUSLoggerFormatter --\u003e logFiles","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"User --\u003e Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"Backend \u003c-\u003e database","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":61}},{"path":"docs/DGDiagramsCreator/ClassLevel.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"package Application {","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    rectangle Commands","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    class Parser {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    class UI {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    Commands \u003c- Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    Parser \u003c- UI","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    Commands --\u003e SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    SecureNUS --\u003e SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    SecretMaster --\u003e SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    SecretMaster \u003c-\u003e Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"actor InputCLI.User","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"file OutputFile.database","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"InputCLI.User -\u003e UI","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"Backend \u003c-\u003e OutputFile.database","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":23}},{"path":"docs/DGDiagramsCreator/HighLevel.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title High Level Architecture Diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"component Application {","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    rectangle SecureNUS","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    rectangle UI","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    rectangle Backend","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    rectangle SecretStorage","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    rectangle Logger","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    SecureNUS \u003c- UI","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    SecureNUS \u003c--\u003e SecretStorage","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    SecretStorage \u003c-\u003e Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    SecureNUS -\u003e Backend","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"component InputCLI {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"InputCLI.User -left-\u003e UI","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"component OutputFiles {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    file logFiles","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    file database","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"UI -\u003e Logger","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"SecureNUS -\u003e Logger","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"SecretStorage -\u003e Logger","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"Backend -\u003e Logger","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"Logger --\u003e logFiles","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"Backend \u003c-down-\u003e database","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":33}},{"path":"docs/DGDiagramsCreator/New_Basic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"autoactivate on","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"actor User #FFFBBB","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"User-\u003e \"secureNUS:SecureNUS\" #FFBBBB:","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \"secureNUS:SecureNUS\"#00cccc: run()","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Ui\"#F00000: greetUser()","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"loop while !isExit","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"secureNUS:SecureNUS\"#FF0AB0: parseCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \":Ui\"#F00000: readCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    User-\u003e \":Ui\" #FFBBBB: \"new password\"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \":Parser\"#BBFFFF: parse(command, usedNames, folders)","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    \":Parser\"-\u003e \":Parser\"#FFFAAA:parseAdd(command, usedNames)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    \":Parser\" -\u003e \":AddBasicPassword\" **","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    activate \":AddBasicPassword\"#BBB","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:extractName(input, keyword)","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:extractFolderName(input)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(URL, \"URL\")","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(USERNAME, \"Username\")","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\"-\u003e \":AddBasicPassword\"#FFFAAA:inquire(PASSWORD, \"Password\")","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    return command","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \"secureNUS:SecureNUS\"#BBFFFB:executeCommand(c)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    \"secureNUS:SecureNUS\" -\u003e \":AddBasicPassword\"#FFAAFF:execute(secureNUSData)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \":BasicPassword\"**","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    activate \":BasicPassword\"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \":SecretMaster\"#FA0012:addSecret(basicPasswordData)","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    \":SecretMaster\" -\u003e \":SecretEnumerator\"#FF1233:add(secret)","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    \":SecretMaster\" -\u003e \":SecretSearcher\"#FF1233:add(secret)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    \":AddBasicPassword\" -\u003e \":Ui\"#000134: inform(\"I have added new basic password\")","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    return","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    return isExit \u003d false","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Ui\"#000134: inform(SAVING)","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Backend\"#317821: updateStorage(input)","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Ui\"#000134: inform(SAVE_COMPLETE)","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Ui\"#000134: inform(CLOSE)","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"\"secureNUS:SecureNUS\" -\u003e \":Ui\"#000134: close()","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"return","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"destroy \":Parser\"","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"destroy \":Ui\"","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"destroy \":Backend\"","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"destroy \":AddBasicPassword\"","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"destroy \":BasicPassword\"","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"destroy \"secureNUS:SecureNUS\"","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"destroy \":SecretMaster\"","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"destroy \":SecretEnumerator\"","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"destroy \":SecretSearcher\"","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ollayf":78}},{"path":"docs/DGDiagramsCreator/SecretStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title SecretStorage Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"node Backend","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"frame SecretStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"    rectangle SecretMaster","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    rectangle SecretSearcher","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    rectangle SecretEnumerator","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    SecretMaster -[dotted]-\u003e SecretEnumerator: alters","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    SecretMaster -[dotted]-\u003e SecretSearcher: alters","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"() SecureNUS -[dotted]right-\u003e SecretMaster :requests alteration \\n of data via","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"SecretMaster \u003c-[dotted]right-\u003e Backend : sends data for export OR\\n collects data for import","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":14}},{"path":"docs/DGDiagramsCreator/SecretStorageClaassNoMeth.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"hide circle","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"title Secret Storage Diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"package secrets {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    class Secret {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    class BasicPassword {","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    class CreditCard {","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    class CryptoWallet {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    class NUSNet {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    class StudentID {","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    class WifiPassword {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    Secret \u003c|-- WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"package storage {","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    class SecretMaster {","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    class SecretEnumerator {","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    class SecretSearcher {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    SecretMaster *-up- \"1\" SecretSearcher","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    SecretMaster *-up- \"1\" SecretEnumerator","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    SecretEnumerator *-up- \"*\" WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    SecretSearcher *-up- \"*\" WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":51}},{"path":"docs/DGDiagramsCreator/SecretStorageClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"title Secret Storage Diagram","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"component SecretStorage {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    package secrets {","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        class Secret {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            {static}- ILLEGAL_CHARS_PATTERN: String","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"            - folderName: String","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"            - uid: String","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"            - name: String","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"            + Secret(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"            + Secret(String, String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            {static}+ getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"            {static}+ isIllegalName(String): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"            + getUid(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"            + setName(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            + getName(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            + getFolderName(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"            + setFolderName(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        class BasicPassword {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"            - username: String","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            - url: String","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"            + BasicPassword(String, String,","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"                String, String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"            + BasicPassword(String, String, String,","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"                String, String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            + getPassword(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"            + getUrl(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"            + getUsername(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"            + setUsername(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"            + setUrl(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        class CreditCard {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"            - EXPIRY_DATE_FMT: String","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"            - CREDIT_CARD_NUMBER_FMT: String","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"            {static}- CVC_NUMBER_FMT: String","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"            - fullName: String","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"            - creditCardNumber: String","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"            - cvcNumber: String","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"            - expiryDate: String","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            + CreditCard(name: String, fullName: String, creditCardNumber: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"                 cvcNumber: String, expiryDate: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"            + CreditCard(name: String, folderName: String, fullName: String, creditCardNumber: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"                 cvcNumber: String, expiryDate: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"            {static}+ isLegalNameExpiryDate(String): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            {static}+ isLegalCreditCardNumber: boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"            {static}+ isLegalCvcNumber: boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"            + getExpiryDate(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            + setExpiryDate(expiryDate: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"            + getFullName(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"            + setFullName(fullName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            + getCreditCardNumber(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            + setCreditCardNumber(creditCardNumber: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            + getCvcNumber(): int","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            + setCvcNumber(cvcNumber: int): void","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        class CryptoWallet {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            - username: String","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"            - privateKey: String","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            - seedPhrase: String","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            - urls: ArrayList\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"            + CryptoWallet(name: String, username: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"                    privateKey: String, seedPhrase: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            + CryptoWallet(name: String, folderName: String, username: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"                    privateKey: String, seedPhrase: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            + CryptoWallet(name: String, folderName: String, username: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"                    privateKey: String, seedPhrase: String, urls: ArrayList\u003cString\u003e): void","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            + getUsername(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            + setUsername(username: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"            + getPrivateKey(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"            + setPrivateKey(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            + getSeedPhrase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"            + setSeedPhrase(seedPhrase: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"            + getUrls(): ArrayList\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"            + setUrls(urls: ArrayList\u003cString\u003e): void","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"            + addUrl(url: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"        class NUSNet {","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            {static}- ALLOWED_ID_REGEX: String","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"            - nusNetId: String","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"            + NUSNet(name: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"                nusNetId: String, password: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"            + NUSNet(name: String, folderName: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"                nusNetId: String, password: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"            {static}+ isLegalId(String): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"            + getPassword(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"            + setPassword(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"            + getnusNetId(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"            + setnusNetId(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"        class StudentID {","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"            {static}- ACCEPTED_ID_REGEX: String","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"            - studentID: String","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"            + StudentID(name: String, studentID: String)","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"            + StudentID(name: String, folderName: String, studentID: String)","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"            {static}+ isLegalId(String): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"            + getStudentID(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"            + setStudentId(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"        class WifiPassword {","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"            {static}+ TYPE: String","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"            - username: String","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"            + WifiPassword(name: String, username: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"                    password: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"            + WifiPassword(name: String, folderName: String,","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"                    username: String, password: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            + getType(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"            + getUsername(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"            + setUsername(username: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"            + removeUsername(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"            + getPassword(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"            + setPassword(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"            + getRevealStr(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"            + toStringForDatabase(): String","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        skinparam groupInheritance 3","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"        Secret \u003c|-- WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"    package storage {","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"        class SecretMaster {","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"            - DEFAULT_FOLDER: String","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"            - ALLOWED_NAMES_REGEX: String","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"            - secretSearcher: SecretSearcher","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"            - secretEnumerator: SecretEnumerator","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"            - folders: HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"            - secretName: HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"            + SecretMaster()","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"            + SecretMaster(secretSearcher: SecretSearcher, secretEnumerator: SecretEnumerator): void","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"            + isLegalName(name: String): boolean","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"            + getFolders(): HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"            + getSecretSearcher: SecretSearcher","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"            + getSecretEnumerator: SecretEnumerator","lastModifiedDate":"2023-04-04"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"            + getSecretNames: HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"            + createFolder(folderName: String)","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"            + getByIndex(index: int): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"            + getByIndex(index: int, folderName: String): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"            + listSecrets(): ArrayList\u003cSecret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"            + listSecrets(folderName: String): ArrayList\u003cSecret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"            + getByName(name: String): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"            + addSecret(secret: Secret): void","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"            + editSecret(secret: Secret, newName: String, newFolderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"            + removeSecret(secret: Secret, newName: String, newFolderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"        class SecretEnumerator {","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"            - storage: ArrayList\u003cSecret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"            - folders: Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"            + SecretEnumerator(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"            + SecretEnumerator(storage: ArrayList\u003cSecret\u003e, folders: Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e)","lastModifiedDate":"2023-04-04"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"            + createFolder(folderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"            + deleteFolder(folderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"            + get(index: int): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"ollayf"},"content":"            + get(index: int, folderName: String): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"ollayf"},"content":"            + getList(): ArrayList\u003cSecret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"ollayf"},"content":"            + getList(folderName: String): ArrayList\u003cSecret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"ollayf"},"content":"            + add(secret: Secret): void","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"ollayf"},"content":"            + delete(secret: Secret): void","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"            + size(): int","lastModifiedDate":"2023-04-04"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"            + getFolders(): HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"ollayf"},"content":"        class SecretSearcher {","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"ollayf"},"content":"            - storage: Hashtable\u003cString, Secret\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"ollayf"},"content":"            - folders: Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"ollayf"},"content":"            + SecretSearcher(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"ollayf"},"content":"            + SecretSearcher(storage: Hashtable\u003cString, Secret\u003e,","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"ollayf"},"content":"                folders: Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e): void","lastModifiedDate":"2023-04-04"},{"lineNumber":201,"author":{"gitId":"ollayf"},"content":"            + get(secretId: String): Secret","lastModifiedDate":"2023-04-04"},{"lineNumber":202,"author":{"gitId":"ollayf"},"content":"            + createFolder(folderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"ollayf"},"content":"            + deleteFolder(folderName: String): void","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"ollayf"},"content":"            + add(secret: Secret): void","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"ollayf"},"content":"            + delete(secret: Secret): void","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"ollayf"},"content":"            + getNames(): HashSet\u003cString\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":207,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":208,"author":{"gitId":"ollayf"},"content":"        SecretMaster *-up- \"1\" SecretSearcher","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"ollayf"},"content":"        SecretMaster *-up- \"1\" SecretEnumerator","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator *-up- \"*\" WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" BasicPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" CreditCard","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" CryptoWallet","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" NUSNet","lastModifiedDate":"2023-04-04"},{"lineNumber":220,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" StudentID","lastModifiedDate":"2023-04-04"},{"lineNumber":221,"author":{"gitId":"ollayf"},"content":"        SecretSearcher *-up- \"*\" WifiPassword","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":224,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":224}},{"path":"docs/DGDiagramsCreator/SecureNUS.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"hide circle","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"component SecureNUS {","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"    package securenus {","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"        class SecureNUS {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"            {static}- LOGGER: SecureNUSLogger","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"            {static}- DUKE_LOG_EXECUTECOMMAND_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"            - secureNUSData: SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            + SecureNUS(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"            {static}+ main(String[] args): void","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"            + run(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"            + parseCommand(): Command","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"            + executeCommand(Command): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    securenus.SecureNUS -[dashed]-\u003e command.Command","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    package command {","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        abstract class Command {","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            {static}# HIDDEN_FIELD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            {static}# CANCEL_COMMAND: String","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"            {static}- FOLDER_DELIMITER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"            {static}- EMPTY_STRING_REGEX: String","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"            {abstract}+ isExit(): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"            {abstract}+ execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"            + inquire(String, String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            + extractName(String, String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"            + nameCheck(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"            + nameCheckWithExistence(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            + extractFolderName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"            + query(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"            + isEmptyEntry(String): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"            + printCurrentState(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        class AddBasicPasswordCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"            - username: String","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"            - url: String","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"            + AddBasicPasswordCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"            + AddBasicPasswordCommand(BasicPassword): void","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        class AddCreditCardCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"            - fullName: String","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"            - creditCardNumber: String","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"            - cvcNumber: String","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"            - expiryDate: String","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"            + AddCreditCardCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            + inquireCreditCardNumber(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"            + inquireCvcNumber(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"            + inquireExpiryDate(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        class AddCryptoWalletCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"            - fullName: String","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"            - privateKey: String","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            - seedPhrase: String","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"            + AddCryptoWalletCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        class AddNUSNetCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"            - nusNetId: String","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            + AddNUSNetCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"            + AddNUSNetCommand(NUSNet): void","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"            + inquirenusNetId(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        class AddStudentIDCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            - studentID: String","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            + AddStudentIDCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"            + AddStudentIDCommand(StudentID): void","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            + inquireStudentID(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        class AddWifiPasswordCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"            - username: String","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            - password: String","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"            + AddWifiPasswordCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"            + AddWifiPasswordCommand(NUSNet): void","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        class DeleteCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            {static}- SECRET_DELIMITER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"            - secretNames: String[]","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"            + DeleteCommand(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            + extractName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"        class EditCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"            - name: String","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            + EditCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"            + extractName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"            + inquireFields(Secret): String[]","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"            + inquireCreditCardNumber(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"            + inquireCvcNumber(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"            + inquireExpiryDate(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"            + inquirenusNetId(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            + inquireStudentID(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"        class ExitCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"        + ExitCommand(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"        + isExit(): boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"        + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        class AddSecretCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"            {static}- KEYWORD: String","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"            - name: String","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"            - folderName: String","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"            + AddSecretCommand(String, HashSet\u003cString\u003e, String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"            + AddSecretCommand(Secret): void","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"            + checkNameAndFolderName(String, String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"        class ListCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"            {static}- FOLDER_DELIMITER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"            - folderName: String","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"            + ListCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"            + extractFolderName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            + maskStringPassword(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"            + maskIntPasswordAsString(int): String","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"            + getSecretTypeInfo(Secret): String","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"        class MenuCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"            + displayMenu: void","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"        class SearchCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"            {static}- FOLDER_DELIMITER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"            - name: String","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"            - folderName: String","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"            + SearchCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"            + checkNameAndFolderName(String, String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"            + extractFolderName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"            + centerString(int, String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"        class ViewCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"            - passwordName","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"            + ViewCommand(String, HashSet\u003cString\u003e): void","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"            + extractName(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"        class SaveCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"            + execute(SecretMaster): void","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"   skinparam groupInheritance 3","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- DeleteCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- EditCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- ExitCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- ListCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- AddSecretCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- MenuCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- SaveCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- SearchCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    Command \u003c|-- ViewCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddBasicPasswordCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddCreditCardCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddCryptoWalletCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddNUSNetCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddStudentIDCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"    AddSecretCommand \u003c|-- AddWifiPasswordCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ollayf":187}},{"path":"docs/DGDiagramsCreator/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"!define COMMAND_COLOR #Salmon","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!define UI_COLOR #7777DB","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":5}},{"path":"docs/DGDiagramsCreator/UI.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"title UI Component Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"actor User","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"node SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"node SecretStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"component \"UI\" {","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"    rectangle Ui UI_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    rectangle Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    Ui -\u003e Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"rectangle Commands COMMAND_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"Parser -[dotted]-\u003e Commands :creates","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"Commands -[dotted]right-\u003e SecureNUS :executes in","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"SecureNUS \u003c-[dotted]up-\u003e SecretStorage :reads or writes data from","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"SecureNUS -[dotted]up-\u003e Ui :responds to user after processing through","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"Ui \u003c-up-\u003e User","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":18}},{"path":"docs/DGDiagramsCreator/UIClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"@startuml","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"component Ui {","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"    package ui {","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"        class Ui {","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"            {static}+ DUPLICATE_WHITESPACE_FMT: String","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"            {static}+ in: Scanner","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"            {static}+ greetUser(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"            {static}+ printLine(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"            {static}+ inform(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            {static}+ removeBackSlashes(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"            {static}+ removeExtraWhiteSpaces(String): String","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"            {static}+ informUserToStartCommand(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"            {static}+ readCommand(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"            {static}+ readLine(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"            {static}+ printError(String): void","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            {static}+ informOperationCancel(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"            {static}+ close(): void","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        class Parser {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            {static}+ parse(): Command","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            {static}+ parseAdd(): Command","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"            {static}+ parseAddSpecial(): Command","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"            {static}+ checkCommand(): void","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        Parser -[dotted]\u003e Ui","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"@enduml","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"[//]: # (@@author DeepanjaliDhawan)","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Acknowledgements","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"## [AddressBook Template](https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature)","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"The format of this Developer’s guide (DG) as well as some basic support is inspired/ taken from the AddressBook ","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"project’s DG.","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"## [Bitwarden](https://go.bitwarden.com/password-management-for-business-teams-organizations/?utm_source\u003dgoogle\u0026utm_medium\u003dcpc\u0026utm_campaign\u003dAW_APAC_NU_CL_Bitwarden_en_GSN_DTMB_Brand_KW:Brand_Exact\u0026utm_content\u003d646898599878\u0026utm_term\u003dbitwarden\u0026hsa_acc\u003d2567950947\u0026hsa_cam\u003d11319090405\u0026hsa_grp\u003d114652450007\u0026hsa_ad\u003d646898599878\u0026hsa_src\u003dg\u0026hsa_tgt\u003dkwd-442029814536\u0026hsa_kw\u003dbitwarden\u0026hsa_mt\u003db\u0026hsa_net\u003dadwords\u0026hsa_ver\u003d3\u0026gclid\u003dCjwKCAjwzuqgBhAcEiwAdj5dRn0X9IDtuPlHiXveE0H8FMOOYNtwMBxX7lUL4yzK8zUTKH_58EV-4xoCrVkQAvD_BwE)","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"The idea for this product stems out from Applications like Bitwarden and the like that serve to store and protect users passwords. Many of our features were inspired by these applications.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"## CLI Applications","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"The idea for this product is for users who are familiar with CLI environments. Users are able to see only the necessary information given in text format. Things can be done faster with just a single line of input command compared to navigating through a GUI environment.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Setting up, getting started","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Setting up the project in your computer","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"First, fork this repo, and clone the fork into your computer.","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. **Configure the JDK:** Follow the guide [[se-edu/guides] IDEA: Configuring the JDK](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use JDK 11.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. **Import the project as a Gradle project:** Follow the guide [[se-edu/guides] IDEA: Importing a Gradle project](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA. \\","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ExclamationMark.png\" width\u003d\"4%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. **Verify the setup:**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    1. Run the _seedu.address.Main_ and try a few commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    2. [Run the tests](https://se-education.org/addressbook-level3/Testing.html) to ensure they all pass.","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Before writing code","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. **Configure the coding style** \\","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"   If using IDEA, follow the guide [[se-edu/guides] IDEA: Configuring the code style](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA’s coding style to match ours. ","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ExclamationMark.png\" width\u003d\"4%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"Tip: Optionally, you can follow the guide [[se-edu/guides] Using Checkstyle](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems as you write code.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. **Set up CI** This project comes with a GitHub Actions config files (in .github/workflows folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the master branch or to any PR. No set up required.  ","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. **Learn the design** When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](https://se-education.org/addressbook-level3/DeveloperGuide.html#architecture).  ","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. **Do the tutorials These tutorials will help you get acquainted with the codebase.**  ","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Tracing code](https://se-education.org/addressbook-level3/tutorials/TracingCode.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Adding a new command](https://se-education.org/addressbook-level3/tutorials/AddRemark.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * [Removing fields](https://se-education.org/addressbook-level3/tutorials/RemovingFields.html)","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"[//]: # (@@author ollayf)","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"# Design \u0026 Implementation","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"## Architecture","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ArchitectureDiagram.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"This **Architecture Diagram** explains the high-level design of the App.","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"### Main Components of the architecture","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"**SecureNUS** has 1 class called SecureNUS. It is responsible for,","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"* At app launch: initializing all the important components in the correct sequence and initializes the appropriate connections between them.","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"* It connects and sends the appropriate information and executes different actions using the other helpers via **Commands**.","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"**SecretStorage** is responsible for the management of Secret Objects which store information of different Secret classes, e.g. passwords, credit cards. It also manages the different underlying data structures within it that help optimize the speed of queries through indexing, etc. It consists of 3 classes: **SecretMaster, SecretSearcher** and **SecretEnumerator**, which contain the different views.","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"* **SecretMaster:** Manages the other views and also ensures there are no duplicates in naming where they should not exist","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"* **SecretSearcher:** Contains the Hashtable view for directly querying the Secret by name","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"* **SecretEnumerator:** Contains the ArrayList view for querying the Secret by index","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"The other 2 components are:","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"* **UI:** The main interface the user have access to through the Command Line","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"* **Backend:** Which handles the details regarding the initialisation and saving (or exporting) of data across sessions","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/ArchitectureDiagram.png\" width\u003d\"100%\" /\u003e  ","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"___","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"### How the architecture components interact with each other","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"The Sequence Diagram below shows how the components interact with each other for the scenario where the user creates a new basic password initiated using the command `new password.`","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"[//]: # (@@author stevenantya)","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"Sequence Diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/SequenceDiagramNew.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"Each of the six main components (also shown in the diagram above)","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"[//]: # (@@author ollayf)","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"* defines its API in an interface with the same name as the Component.","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"## UI Component","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"The API of this component is specified in `Ui.java`","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/LightBulb.png\" width\u003d\"10%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"The UI consists of the Ui class which handles all the inputs provided by the user. The Ui then sends information to the ","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"parser which will interpret the commands provided by user input. The **Parser **will create **Commands** which will be","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"sent to **SecureNUS** to execute some command that will alter the data in SecretStorage. The **Ui **also handles ","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"responses/ feedback to the User.","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"## SecureNUS Component","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"This is the main component that initialises all other components and connects them when the application is running.","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"## SecretStorage Component","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/SecretStorageComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"The Secret Storage component abstracts the data that is to be stored into many views/ indexes. This optimizes the speed of queries for many types of queries without developers needing to access the individual data structures used. The data structures, namely Hash Table and Array are stored in the SecretSearcher and SecretEnumerator class respectively. Finally, during the initialisation of the application, the Backend will connect past data to the SecretMaster. During shutdown, the Backend will handle saving it into an encrypted file.","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"[//]: # (@@author stevenantya)","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"stevenantya"},"content":"## Command Component","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"stevenantya"},"content":"The API of this component is specified in Command.java","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"stevenantya"},"content":"Command is an abstract class that is inherited by various components such as AddBasicPasswordCommand.java","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/CommandComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"The Command consist of Command abstract class that handles all of its command constructors and executions through its child classes. The user inputs command in Ui, that is parsed in Parser, and then instantiated and executed in Command classes.","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"stevenantya"},"content":"## Backend Component","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"stevenantya"},"content":"\u003cimg src\u003d\"./DGDiagramsCreator/DGUsedDiagrams/BackendComponent.png\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"The backend manages the saving and loading of data from the database.txt file. To do so, it collates and organises information stored in the SecretMaster and encrypts it into the database.txt. When starting up, it will decrypt the database.txt file and transfer its data into the SecretMaster.","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"stevenantya"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"euzhengxi"},"content":"[//]: # (@@author euzhengxi)","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"euzhengxi"},"content":"# Product Scope","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"## Target user profile:","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"euzhengxi"},"content":"* has a need to manage a significant number of passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"euzhengxi"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"euzhengxi"},"content":"* can type fast","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"euzhengxi"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"euzhengxi"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"## Value proposition:","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"* SecureNUS manages passwords faster than a typical mouse/GUI-driven password manager app.","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"euzhengxi"},"content":"* SecureNUS manages and stores passwords locally, there is no risk of a server side failure/ attack leaking your passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"euzhengxi"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"[//]: # (@@author kairuler)","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"# User Stories","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eVersion\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eAs a …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eI want to …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e\u003cstrong\u003eSo that I can …\u003c/strong\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eview all my passwords in a single location","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave an overview of all my stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003estore and find my passwords in an intuitive and structured manner","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eeasily find a password","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eview all my stored passwords at a glance (without details)","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003equickly see what passwords I have used before","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003edelete stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eremove passwords that I no longer use","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eadd and store passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure my stored passwords are safe","lastModifiedDate":"2023-03-24"},{"lineNumber":264,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":265,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to worry about the security of my passwords after storing them","lastModifiedDate":"2023-03-24"},{"lineNumber":266,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":273,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse local storage to store my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave my passwords stored locally so that they are safer from online breaches","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":277,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev1.0","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehide my password while typing it","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot allow people around me to view my password as I type","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eauthenticate myself before accessing","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure that nobody else but me gets access to my stored passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003efirst-time user","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ewant to be able to see the demo to use the password manager","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003elearn how to use SecureNUS","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":309,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":310,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":311,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":312,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":313,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ereceive notification any of my previous passwords are reused","lastModifiedDate":"2023-03-24"},{"lineNumber":314,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse a new and different password each time","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":319,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":320,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eknow when I created a certain password","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ekeep track of how long my passwords have been used for","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":333,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to think of a strong password by myself and let the app handle it","lastModifiedDate":"2023-03-24"},{"lineNumber":334,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":335,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eknow when to change my password as passwords should be changed periodically","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":338,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":340,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":341,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":342,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":343,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ereceive reminder to change passwords that have not been changed for an extended period of time","lastModifiedDate":"2023-03-24"},{"lineNumber":344,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":345,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to check every single password manually (but still have the ability to) to know when to change my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":346,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":347,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":348,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":349,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":350,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":351,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":352,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":353,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eselect a particular stored password and expand it to reveal details","lastModifiedDate":"2023-03-24"},{"lineNumber":354,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":355,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euse the details of the password to make decisions regarding the password (e.g. change the password if it has been used for a long time, create a stronger password the next time if the current one is not strong, etc.)","lastModifiedDate":"2023-03-24"},{"lineNumber":356,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":357,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":358,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":359,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":360,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":361,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":362,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":363,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ecopy and paste my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":364,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":365,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to type my password, just simply copy paste","lastModifiedDate":"2023-03-24"},{"lineNumber":366,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":367,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":368,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":369,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":370,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":372,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":373,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003esearch/filter out specific passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":375,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003equickly refer to a password that is used for a specific login (e.g. password for NUS email)","lastModifiedDate":"2023-03-24"},{"lineNumber":376,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":377,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":378,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":379,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":380,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":381,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser who wishes to use complex passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":382,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":383,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003egenerate complex passwords for me","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003enot have to think of a strong password by myself and let the app handle it","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":391,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":393,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003esync my stored passwords manually","lastModifiedDate":"2023-03-24"},{"lineNumber":394,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":395,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ehave my stored passwords on different devices","lastModifiedDate":"2023-03-24"},{"lineNumber":396,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":397,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":398,"author":{"gitId":"kairuler"},"content":"  \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":399,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003ev2.0","lastModifiedDate":"2023-03-24"},{"lineNumber":400,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003euser","lastModifiedDate":"2023-03-24"},{"lineNumber":402,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":403,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eencrypt the password.txt file","lastModifiedDate":"2023-03-24"},{"lineNumber":404,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":405,"author":{"gitId":"kairuler"},"content":"   \u003ctd\u003eensure that nobody but me has access to the .txt file that stores my passwords","lastModifiedDate":"2023-03-24"},{"lineNumber":406,"author":{"gitId":"kairuler"},"content":"   \u003c/td\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":407,"author":{"gitId":"kairuler"},"content":"  \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":408,"author":{"gitId":"kairuler"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":409,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":410,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":411,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":412,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":413,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":414,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"kairuler"},"content":"# Non-Functional Requirements","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":417,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":418,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":419,"author":{"gitId":"kairuler"},"content":"* Should be responsive and fast, providing quick access to passwords and other information with just one or two commands.","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"kairuler"},"content":"* Should be user-friendly, with intuitive commands that makes it easy for users to create, store, and retrieve passwords.","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"kairuler"},"content":"* Should be compatible with various operating systems as long as Java 11 or above is installed.","lastModifiedDate":"2023-03-24"},{"lineNumber":422,"author":{"gitId":"kairuler"},"content":"* Should be reliable and operational all the time with little-to-no bugs or errors.","lastModifiedDate":"2023-03-24"},{"lineNumber":423,"author":{"gitId":"kairuler"},"content":"* Should be able to store at least 1000 passwords without compromising performance or security.","lastModifiedDate":"2023-03-27"},{"lineNumber":424,"author":{"gitId":"kairuler"},"content":"* Should be maintainable, with a clear and well-documented codebase that makes it easy to fix bugs and add new features.","lastModifiedDate":"2023-03-24"},{"lineNumber":425,"author":{"gitId":"kairuler"},"content":"* Must ensure that user data is not shared with third parties without user consent.","lastModifiedDate":"2023-03-24"},{"lineNumber":426,"author":{"gitId":"kairuler"},"content":"* Should be secure, using strong encryption to protect user passwords and data from being hacked or stolen.","lastModifiedDate":"2023-03-24"},{"lineNumber":427,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":428,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":429,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":430,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":431,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":432,"author":{"gitId":"kairuler"},"content":"# Glossary","lastModifiedDate":"2023-03-24"},{"lineNumber":433,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":434,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":435,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":436,"author":{"gitId":"kairuler"},"content":"* { _glossary item_ - Definition }","lastModifiedDate":"2023-03-24"},{"lineNumber":437,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":438,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":439,"author":{"gitId":"kairuler"},"content":"---","lastModifiedDate":"2023-03-24"},{"lineNumber":440,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":441,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":442,"author":{"gitId":"kairuler"},"content":"# Instructions for manual testing","lastModifiedDate":"2023-03-24"},{"lineNumber":443,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":444,"author":{"gitId":"kairuler"},"content":"_{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}_","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ollayf":69,"DeepanjaliDhawan":70,"stevenantya":31,"kairuler":252,"euzhengxi":22}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"# SecureNUS","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"SecureNUS is a password manager application that allows users to store and manage their secrets and ","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"other sensitive information securely.","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Features","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Add, delete, and edit secrets","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Organize secrets into folders","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Search for secrets by name or folder","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Generate strong passwords","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ View password strength and last modified date for each secret","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Automatic saving and loading of data","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Getting Started","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Prerequisites","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Java Runtime Environment (JRE) version 11 installed on your machine","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Access to the command line interface","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Installation","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Download the SecureNUS JAR file from the latest release on the repository.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Open a terminal or command prompt.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Navigate to the directory where the JAR file is located.","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"+ Run the following command: `java -jar [CS2113-T15-2][SecureNUS].jar`","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eAction \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eFormat/Examples \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eNew \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003enew [o/OPTION] SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eDelete\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003edelete SECRET_NAME1 [SECRET_NAME2] [...] \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eList\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003elist [f/FOLDER_NAME]\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eView \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003eview SECRET_NAME\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eSearch\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003esearch SECRET_NAME_LIKE [f/FOLDER_NAME]\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eSave\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003esave\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eEdit\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003e edit SECRET_NAME \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eMenu\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003emenu\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Exit \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003eexit\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Cancel \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e c/ \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Build With","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"Java 11","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Useful links:","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"DeepanjaliDhawan":68,"-":10}},{"path":"docs/UML/Backend.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"skinparam groupInheritance 4","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"hide circle","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"allowmixing","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"component Backend {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    package securenus {","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"        class Backend {","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"            {static}+ isCorrupted: boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            {static}+ isDatabaseEmpty: boolean","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"            {static}- Logger: SecureNUSLogger.LOGGER;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"            {static}- DECRYPTION_STARTING_INDEX: int","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"            {static}- DELIMITER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"            {static}- EMPTY_FIELD_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"            {static}- USER_DIRECTORY_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            {static}- PASSWORD_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"            {static}- CREDIT_CARD_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"            {static}- CRYPTOWALLET_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"            {static}- NUSNETID_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            {static}- STUDENTID_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            {static}- WIFI_PASSWORD_IDENTIFIER: String","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"            {static}- ENCRYPTION_IDENTIFIER","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"            {static}- DATABASE_FOLDER","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"            {static}- DATABASE_FILE","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"            {static}+ initialisation(): SecretMaster","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"            {static}+ createAssetFolderAndDatabaseFile(): File","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            {static}+ getDatabasePath(): String","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"            {static}+ initialiseSecretMaster(): SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"            {static}+ readAndUpdate(String[], SecretMaster): SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"            {static}+ createFolderHashtable(ArrayList\u003cSecret\u003e): Hashtable\u003cString, (ArrayList\u003cSecret\u003e))","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"            {static}+ createNameHashtable(ArrayList\u003cSecret\u003e): Hashtable\u003cString, Secret\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"            {static}+ createHashTableFolders(Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e): Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"            {static}+ encode(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"            {static}+ decode(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"            {static}+ parseEmptyField(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"            {static}+ updateStorage(ArrayList\u003cSecret\u003e): void","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"component SecretStorage{","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"    package storage {","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        class SecretMaster {","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"        class SecretSearcher {","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        class SecretEnumerator {","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    package secrets {","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e StudentID","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e NUSNet","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e BasicPassword","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e CreditCard","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e CryptoWallet","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        Backend.securenus.Backend -[dotted]up-\u003e WifiPassword","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        class Secret {","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        class StudentID {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        class NUSNet {","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"        class BasicPassword {","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"        class CreditCard {","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        class CryptoWallet {","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"        class WifiPassword {","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"        class BasicPassword {","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"        StudentID --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        NUSNet --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"        BasicPassword --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        CryptoWallet --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        CreditCard --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        WifiPassword --u|\u003e Secret","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"Backend.securenus.Backend -[dotted]-\u003e SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"Backend.securenus.Backend -[dotted]-\u003e SecretSearcher","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"Backend.securenus.Backend -[dotted]-\u003e SecretEnumerator","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"ollayf":35,"stevenantya":52}},{"path":"docs/UML/ClassHigh.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"!include Style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"title Command Diagram","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"actor User","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"file \"database\"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"circle Ui","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"circle Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"frame Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    abstract Command","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"\u0027Ui \u003c-left- User","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"\u0027Application.Backend.Backend \u003c-left-\u003e database","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":15}},{"path":"docs/UML/Command.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"circle Ui","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"circle Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e Parser","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"frame Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"    rectangle Command","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"    Parser -\u003e Command","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"    rectangle AddBasicPasswordCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddBasicPasswordCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    rectangle AddCreditCardCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddCreditCardCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    rectangle AddNUSNetCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e AddNUSNetCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    rectangle OtherCommands","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    Command -down-\u003e OtherCommands","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":21}},{"path":"docs/UML/NewBasicPassword.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"autonumber","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"autoactivate on","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"actor User #FFFBBB","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"User-\u003e Ui #FFBBBB: \"new password\"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"Ui -\u003e SecureNUS #FFBFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Parser#BBFFFF: parse()","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"Parser -\u003e Command **","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"activate Command#BBB","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:extractName()","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:extractFolderName()","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquireURL()","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquireUsername()","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"Command-\u003e Command#FFFAAA:inquirePassword()","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Command#FFAFFF:execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"Command -\u003e SecretStorage#FFAAFF:addSecret()","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"SecretStorage -\u003e SecretStorage#11AF1F:add()","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"SecureNUS -\u003e Backend#FFAF1F:updateStorage()","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"return","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"return Added!","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"stevenantya":37}},{"path":"docs/UML/SecretStorage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"abstract class AbstractList","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"abstract AbstractCollection","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"interface List","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"interface Collection","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"List \u003c|-- AbstractList","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"Collection \u003c|-- AbstractCollection","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"Collection \u003c|- List","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"AbstractCollection \u003c|- AbstractList","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"AbstractList \u003c|-- ArrayList","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"class ArrayList {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"Object[] elementData","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"size()","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"enum TimeUnit {","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"DAYS","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"HOURS","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"MINUTES","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"stevenantya":27}},{"path":"docs/UML/SecureNUSClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"class SecureNUS {","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"-secureNUSData: SecretMaster","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"+ Duke()","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"+ run()","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"+ parseCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"+ executeCommand()","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"skinparam groupInheritance 3","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"SecureNUS \u003c|-- Command","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- DeleteCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- EditCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- ExitCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- MenuCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- SearchCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- ViewCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"Command \u003c|-- AddSecretCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"AddSecretCommand \u003c|-- AddBasicPasswordCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"AddSecretCommand \u003c|-- AddCreditCardCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"AddSecretCommand \u003c|-- AddNUSNetCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"AddSecretCommand \u003c|-- AddStudentIDCommand","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"abstract class Command {","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"{abstract}+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"{abstract}+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"class AddBasicPasswordCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"- username: String","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"- passwordName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"- url: String","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"+ AddBasicPasswordCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"+ AddBasicPasswordCommand(BasicPassword): void","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"+ inquireUsername(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"+ inquirePassword(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"+ inquireURL(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"class AddCreditCardCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"- fullName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"- creditCardNumber: String","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"- cvcNumber: int","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"- expiryDate: String","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"+ AddCreditCardCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"class AddNUSNetCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"- nusNetId: String","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"- password: String","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"+ AddNUSNetCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"+ AddNUSNetCommand(NUSNet): void","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"+ inquirenusNetId(): String","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"+ inquirePassword(): String","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"class AddSecretCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"- name: String","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"- folderName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"+ AddSecretCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"+ extractFolderName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"+ inquire(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"class AddStudentIDCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"- studentID: String","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"+ AddStudentIDCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"+ AddStudentIDCommand(StudentID): void","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"+ inquireStudentID(): String","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"class DeleteCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"- secretName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"- folderName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"+ DeleteCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"+ extractFolderName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"class EditCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"- name: String","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"- newFolderName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"- newDescription: String","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"- newName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"+ EditCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"+ extract(String) : String[]","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"class ExitCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"+ ExitCommand(): void","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"class ListCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"stevenantya"},"content":"- folderName: String","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"+ ListCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"stevenantya"},"content":"+ extractFolderName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"stevenantya"},"content":"- getSecretTypeInfo(Secret): String","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"stevenantya"},"content":"class MenuCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"+ displayMenu: void","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"stevenantya"},"content":"class SearchCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"- name","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"- folderName","lastModifiedDate":"2023-04-05"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"- newDescription","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"+ SearchCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"stevenantya"},"content":"+ extractFolderName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":135,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"class ViewCommand {","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"stevenantya"},"content":"- passwordName","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"stevenantya"},"content":"+ ViewCommand(String): void","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"stevenantya"},"content":"+ extractName(String): String","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"stevenantya"},"content":"+ isExit(): boolean","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"stevenantya"},"content":"+ execute(SecretMaster): void","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"stevenantya"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"stevenantya":146}},{"path":"docs/UML/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"stevenantya":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"# **User Guide for SecureNUS**","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Introduction","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"SecureNUS is a CLI application that provides secure secret management for NUS students. ","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"It\u0027s designed to be efficient and user-friendly, allowing users to securely store and manage passwords using a ","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"command-line interface.","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"With a focus on security, SecureNUS employs robust measures such as secret masking, storage, and user convenience.","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"Its CLI interface allows for fast and streamlined password management, making it an ideal solution for users who are ","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"comfortable typing commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"In summary, SecureNUS offers a reliable and secure secret management solution for NUS students, addressing the","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"challenge of managing multiple passwords for various sites and applications.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Table of Contents","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Feature List](#feature-list)","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Feature Details](#feature-details)","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Frequently Asked Questions (FAQ\u0027s)](#frequently-asked-questions)","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Quick Start","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. Ensure you have **Java 11** installed on your computer. If not so, you can download from","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"    [here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. Download the latest `[CS2113-T15-2][SecureNUS].jar` from ","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"    [here](https://github.com/AY2223S2-CS2113-T15-2/tp/releases).","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"                                                                 ","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. Open a Command Prompt in your system which contains the JAR File.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"                                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. Verify if the Java Version you are using is *Java 11* (recommended and tested version) by using `java -version`","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003cimg src\u003d\"./UGImages/QuickStart/CheckJavaVersion.jpg\" width\u003d\"60%\" /\u003e                                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"5. Using `cd`, navigate to the folder where `[CS2113-T15-2][SecureNUS].jar` is stored in your system. ","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"6. Launch the application in the terminal after running `java -jar [CS2113-T15-2][SecureNUS].jar` in the terminal. ","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    If the program is launched correctly, you can see the following.\\","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"   \u003cimg src\u003d\"./UGImages/QuickStart/UI.jpg\" width\u003d\"60%\" /\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"7. Type the command when prompted and press enter to execute it. e.g. typing `menu` and pressing menu will give an","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"overview of all the user commands.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"Some example commands:","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `new sname f/fold`: creates a new general secret with name `sname` in a folder called `fold`.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `new o/CreditCard ccname f/ccfold`: creates a secret for storing credit card details with the name `ccname` in ","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"   `ccfold` folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `list`: List all the secrets typed by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `menu`: List of command used in the program.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `view pname`: view the secrets stored under `cname` which is masked for security reasons.","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `search n/cc f/ccfold`: search for entries in the `ccfold` folder which have `cc` in their name.","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `edit pname`: edit the secret to another in `pname`.","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"   * `exit`: exit from the program. ","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Feature List","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"1. [Note about Command Formats](#note-about-the-command-format-)","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"2. [Add new Secret](#add-new-secret)","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"   - Password Options","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + Basic Password            ","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + Credit Card","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + Crypto Wallet","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + NUSNet ID (e.g: e0123456)","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + NUS Student ID (e.g. A1234567B)","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     + WiFi Password","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"3. [Delete a Secret](#delete-a-secret) ","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"4. [List all Secrets](#list-all-secrets)","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"5. [View Masked Secret](#view-masked-secret) ","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"6. [Search for a Secret](#search-secrets)","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"7. [Save Secrets](#save-secrets) ","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"8. [Edit current secrets](#edit-secrets)","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"9. [Menu for commands](#menu)","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"10. [Exit](#exit)","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"11. [Cancel current operation](#cancel-current-operation)","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Feature Details","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Note about the command format:","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Commands in `UPPER_CASE` and without a bracket refers to the essential parameters to be given by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"                ","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Do note the commands are **Case Sensitive**. ","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"e.g. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    exit       // Correct","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"    eXiT       // Incorrect","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"* If user enters a parameter with a command which does not need parameters, it will be considered as invalid command.","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"e.g. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"    menu       // Correct","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"    menu123    // Incorrect","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Commands in square brackets `[]` represents the folder to store the secrets. In our application, users ","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"can choose not to store a secret in a folder. Thus, every secret with no assigned folder name,","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"is stored in an `unnamed` folder. ","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    **Example of correct syntax:**","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````    ","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"    new passname              // folder name: unnamed","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"    new passname f/passfold   // folder name: passfold","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    ````                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"  ","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Commands with [...] shows that parameters of the same type can be added multiple times.","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Please note that the `NAME` parameter in some commands does not refer to the username.","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"  `NAME` allows to easily *identify* and *manage* the secrets when performing actions such as ","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"  deleting, editing, or viewing them. ","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"  ","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"  We recommend using a descriptive name that accurately reflects the contents ","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"  of the secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"                                                                 ","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Add new Secret","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview:","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS provides a simple way to create new secrets in the secret manager with the `new` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Users can select the type of secret they want to store by using the `o/OPTION` extension with the `new` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"  - If no option is selected, a basic password will be created by default.","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS guides users through tailored questions to fill in the required particulars for that password type.","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"  - These questions ensure that all necessary information is securely stored in one place for that specific type of ","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"DeepanjaliDhawan"},"content":"  password.","lastModifiedDate":"2023-04-09"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Do note, secrets and other sensitive information are masked by asterisks for security purposes. They can be viewed ","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"using `view` command which will be elaborated upon [here](#view-masked-secret).","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Each time a new secret is created, it will be auto-saved in `database.txt` in the `assets` folder. But ","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"users are advised to keep saving their passwords using the `save` command. Users can refer [here](#save-secrets)","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"for more details on the `save` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Format: `new [o/OPTION] SECRET_NAME [f/FOLDER_NAME]` \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Basic Password \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e URL \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Username \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Password\u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Credit Card \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new o/CreditCard SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Full Name \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Credit Card Number (e.g. 1234 5678 9012 3456)\u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e CVC Number \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Expiry Date (MM/YY) \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Crypto Wallet \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new o/Crypto SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Username \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":189,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Private Key \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Seed Phrase \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":191,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":192,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":193,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":194,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":195,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e NUSNet ID (e.g.e0771234) \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new o/NUSNet SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":198,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e NUSNet \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Password \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Student ID (e.g A1234567B) \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new o/StudentID SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Student ID \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":210,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":211,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":212,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":213,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":214,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Wifi Password \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":215,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e new o/WifiPassword SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":216,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":217,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":218,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Username \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":219,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e Password \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":220,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":222,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":223,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":224,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":225,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs:","lastModifiedDate":"2023-04-09"},{"lineNumber":226,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/AddPassword/Addbasicpassword.jpg\" width\u003d\"100%\" /\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/AddPassword/Addccpassword.jpg\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":234,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e  ","lastModifiedDate":"2023-04-09"},{"lineNumber":235,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":236,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Delete a Secret","lastModifiedDate":"2023-04-09"},{"lineNumber":238,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":239,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Deletes a secret from the existing list of secrets using secret name. ","lastModifiedDate":"2023-04-09"},{"lineNumber":240,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":241,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Can delete multiple secrets in the same command.","lastModifiedDate":"2023-04-09"},{"lineNumber":242,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":243,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Each time an existing secret is deleted by the `delete` command, it will be auto-saved in `database.txt` in the ","lastModifiedDate":"2023-04-09"},{"lineNumber":244,"author":{"gitId":"DeepanjaliDhawan"},"content":"`assets` folder. But users are advised to keep saving their passwords using the `save` command. Users can refer","lastModifiedDate":"2023-04-09"},{"lineNumber":245,"author":{"gitId":"DeepanjaliDhawan"},"content":"[here](#save-secrets) for more details on the `save` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":246,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":247,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `delete SECRET_NAME1 [SECRET_NAME2] […]`","lastModifiedDate":"2023-04-09"},{"lineNumber":248,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":249,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs:","lastModifiedDate":"2023-04-09"},{"lineNumber":250,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/DeletePassword/deletepassword.jpg\" width\u003d\"100%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":251,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":253,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":254,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":255,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":256,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":257,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":258,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"DeepanjaliDhawan"},"content":"### List all Secrets","lastModifiedDate":"2023-04-09"},{"lineNumber":260,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":261,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":262,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS enables users to list secrets stored in a specified folder if the folder name is specified.","lastModifiedDate":"2023-04-09"},{"lineNumber":263,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":264,"author":{"gitId":"DeepanjaliDhawan"},"content":"- It also enables users to list all the secrets if the folder name is not specified.","lastModifiedDate":"2023-04-09"},{"lineNumber":265,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Do note, secrets and other sensitive information are masked by asterisks for security purposes. They can be viewed","lastModifiedDate":"2023-04-09"},{"lineNumber":267,"author":{"gitId":"DeepanjaliDhawan"},"content":"  using `view` command which will be elaborated upon [here](#view-masked-secret).","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"DeepanjaliDhawan"},"content":"General Format: `list [f/FOLDER_NAME]`","lastModifiedDate":"2023-04-09"},{"lineNumber":270,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"DeepanjaliDhawan"},"content":"Examples and Outputs:\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":272,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/ListPassword/ListwithoutFolder.jpg\" width\u003d\"65%\" /\u003e  \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":273,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/ListPassword/ListwithFolder.jpg\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":274,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":277,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":278,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":279,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":280,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":281,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":282,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"DeepanjaliDhawan"},"content":"### View Masked Secret","lastModifiedDate":"2023-04-09"},{"lineNumber":284,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":285,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":286,"author":{"gitId":"DeepanjaliDhawan"},"content":"- When creating a new secret using the `new` command in SecureNUS or while listing the existing secrets using `list` ","lastModifiedDate":"2023-04-09"},{"lineNumber":287,"author":{"gitId":"DeepanjaliDhawan"},"content":"command, the secret entered by the user is hidden under asterisks (********) for added security.","lastModifiedDate":"2023-04-09"},{"lineNumber":288,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":289,"author":{"gitId":"DeepanjaliDhawan"},"content":"- This is a common practice in password management systems to prevent anyone from viewing the actual secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":290,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":291,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Users can view the original secret using the `view` command, which will display the secrets in plain text.","lastModifiedDate":"2023-04-09"},{"lineNumber":292,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":293,"author":{"gitId":"DeepanjaliDhawan"},"content":"- It is important to exercise caution when using the `view` command, as anyone with access to the SecureNUS application","lastModifiedDate":"2023-04-09"},{"lineNumber":294,"author":{"gitId":"DeepanjaliDhawan"},"content":"can view the secrets in plain text.","lastModifiedDate":"2023-04-09"},{"lineNumber":295,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":296,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Therefore, it is recommended to use SecureNUS on a secure and private device, and to take necessary precautions to ","lastModifiedDate":"2023-04-09"},{"lineNumber":297,"author":{"gitId":"DeepanjaliDhawan"},"content":"prevent unauthorized access to the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":298,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":299,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `view SECRET_NAME`","lastModifiedDate":"2023-04-09"},{"lineNumber":300,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":301,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: ","lastModifiedDate":"2023-04-09"},{"lineNumber":302,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/ViewPassword/viewpassword.jpg\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":303,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":304,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":306,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":307,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":308,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":309,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":310,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":311,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":312,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Search Secrets ","lastModifiedDate":"2023-04-09"},{"lineNumber":313,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":314,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS allows users to search for stored secrets by using partial characters of the secret name but not that of ","lastModifiedDate":"2023-04-09"},{"lineNumber":315,"author":{"gitId":"DeepanjaliDhawan"},"content":"the folder name.","lastModifiedDate":"2023-04-09"},{"lineNumber":316,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":317,"author":{"gitId":"DeepanjaliDhawan"},"content":"- This feature helps users to quickly locate a specific secret in a large list of stored secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":318,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":319,"author":{"gitId":"DeepanjaliDhawan"},"content":"- It is important to remember that secret names are case-sensitive, and users must enter the correct case of the secret ","lastModifiedDate":"2023-04-09"},{"lineNumber":320,"author":{"gitId":"DeepanjaliDhawan"},"content":"name when searching.","lastModifiedDate":"2023-04-09"},{"lineNumber":321,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":322,"author":{"gitId":"DeepanjaliDhawan"},"content":"- This search functionality is a convenient and time-saving feature for users who have many stored secrets and need to","lastModifiedDate":"2023-04-09"},{"lineNumber":323,"author":{"gitId":"DeepanjaliDhawan"},"content":"locate a specific one quickly.","lastModifiedDate":"2023-04-09"},{"lineNumber":324,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `search SECRET_NAME_LIKE [f/FOLDER_NAME]`","lastModifiedDate":"2023-04-09"},{"lineNumber":326,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: ","lastModifiedDate":"2023-04-09"},{"lineNumber":328,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/SearchPassword/SearchPasswordWithoutFolder.jpg\" width\u003d\"80%\" /\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":329,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/SearchPassword/SearchPasswordwithFolder.jpg\" width\u003d\"80%\" /\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":330,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":333,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":334,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":335,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":336,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":337,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":338,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Save Secrets","lastModifiedDate":"2023-04-09"},{"lineNumber":340,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":341,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS allows to save a secret in the `database.txt` file located in the `assets` folder using the `save` ","lastModifiedDate":"2023-04-09"},{"lineNumber":342,"author":{"gitId":"DeepanjaliDhawan"},"content":"command.","lastModifiedDate":"2023-04-09"},{"lineNumber":343,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":344,"author":{"gitId":"DeepanjaliDhawan"},"content":"- The secrets will be saved even after exiting the program using the `exit` command. ","lastModifiedDate":"2023-04-09"},{"lineNumber":345,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":346,"author":{"gitId":"DeepanjaliDhawan"},"content":"- In SecureNUS, if the `database.txt` file is not corrupted, users can view their saved secrets even after ","lastModifiedDate":"2023-04-09"},{"lineNumber":347,"author":{"gitId":"DeepanjaliDhawan"},"content":"reloading the JAR file by running `java -jar [CS2113-T15-2][SecureNUS].jar` in the terminal.","lastModifiedDate":"2023-04-09"},{"lineNumber":348,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":349,"author":{"gitId":"DeepanjaliDhawan"},"content":"- The `database.txt` file is used to store all secrets in a structured manner for easy retrieval and management.","lastModifiedDate":"2023-04-09"},{"lineNumber":350,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Each time a new secret is created using `new` command, delete a secret using `delete` command and edit a secret using","lastModifiedDate":"2023-04-09"},{"lineNumber":351,"author":{"gitId":"DeepanjaliDhawan"},"content":"the `edit` command, the changes are automatically saved in the `database.txt` file.","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":353,"author":{"gitId":"DeepanjaliDhawan"},"content":"- It is recommended that the users keep using the `save` command to store their secrets. ","lastModifiedDate":"2023-04-09"},{"lineNumber":354,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":355,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Important Note","lastModifiedDate":"2023-04-09"},{"lineNumber":356,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Please refrain from manually editing or tampering the `database.txt` file as it may lead to data corruption. ","lastModifiedDate":"2023-04-09"},{"lineNumber":357,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":358,"author":{"gitId":"DeepanjaliDhawan"},"content":"- To know if the database.txt is corrupted, exit from the current program run using the `exit` command and rerun the ","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"DeepanjaliDhawan"},"content":"JAR file using `java -jar [CS2113-T15-2][SecureNUS].jar` and observe the following in the UI: ","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":361,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":362,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":363,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e 1. \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":364,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003cimg src\u003d\"./UGImages/SavePassword/UserReload.png\"\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":365,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":366,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":367,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e The secrets from the previous sessions are stored correctly. \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":368,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e The \u003ccode\u003e database.txt \u003c/code\u003e file is not corrupted.\u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":369,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":370,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":372,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":373,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e 2. \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":374,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":375,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cimg src\u003d\"./UGImages/SavePassword/DataCorrupt.png\"\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":376,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":378,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003cul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":379,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e The secrets from the previous sessions may not be stored correctly. \u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":380,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \u003cli\u003e The \u003ccode\u003e database.txt \u003c/code\u003e file is corrupted.\u003c/li\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":381,"author":{"gitId":"DeepanjaliDhawan"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":382,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":383,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":384,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":385,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"DeepanjaliDhawan"},"content":"* In case of `2.`, users can follow 2 troubleshooting steps: ","lastModifiedDate":"2023-04-09"},{"lineNumber":387,"author":{"gitId":"DeepanjaliDhawan"},"content":"  * Recommended: Users can still manually save their secrets using the `save` command to rewrite everything at the ","lastModifiedDate":"2023-04-09"},{"lineNumber":388,"author":{"gitId":"DeepanjaliDhawan"},"content":"  current point. That way all the corrupted data in `database.txt` will be overwritten by the new secrets, thus leading ","lastModifiedDate":"2023-04-09"},{"lineNumber":389,"author":{"gitId":"DeepanjaliDhawan"},"content":"  to no loss of data. ","lastModifiedDate":"2023-04-09"},{"lineNumber":390,"author":{"gitId":"DeepanjaliDhawan"},"content":"  * Can revert the `database.txt` to the original contents before its corruption. ","lastModifiedDate":"2023-04-09"},{"lineNumber":391,"author":{"gitId":"ollayf"},"content":"  ","lastModifiedDate":"2023-03-24"},{"lineNumber":392,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `save`","lastModifiedDate":"2023-04-09"},{"lineNumber":393,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":394,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":395,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/SavePassword/Savecommand.jpg\" width\u003d\"80%\"/\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":396,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":398,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":399,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":400,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":401,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":402,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":403,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":404,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":405,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Edit Secrets","lastModifiedDate":"2023-04-09"},{"lineNumber":406,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":407,"author":{"gitId":"DeepanjaliDhawan"},"content":"- SecureNUS enables users to edit an existing secret using the `edit` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":408,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":409,"author":{"gitId":"DeepanjaliDhawan"},"content":"- By using the `edit` command, users can make changes to a secret without having to delete it and create a new one.","lastModifiedDate":"2023-04-09"},{"lineNumber":410,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":411,"author":{"gitId":"DeepanjaliDhawan"},"content":"- It is important to note that secret names are case-sensitive and must be entered correctly in order to edit the ","lastModifiedDate":"2023-04-09"},{"lineNumber":412,"author":{"gitId":"DeepanjaliDhawan"},"content":"associated secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":413,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":414,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `edit SECRET_NAME`","lastModifiedDate":"2023-04-09"},{"lineNumber":415,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: ","lastModifiedDate":"2023-04-09"},{"lineNumber":417,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/EditPassword/edit.jpg\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":418,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":419,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":421,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":422,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":423,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":424,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":425,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":426,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":427,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Menu","lastModifiedDate":"2023-04-09"},{"lineNumber":428,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":429,"author":{"gitId":"DeepanjaliDhawan"},"content":"- In SecureNUS, the menu command displays a list of available commands that users can access from the ","lastModifiedDate":"2023-04-09"},{"lineNumber":430,"author":{"gitId":"DeepanjaliDhawan"},"content":"command line interface.","lastModifiedDate":"2023-04-09"},{"lineNumber":431,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":432,"author":{"gitId":"DeepanjaliDhawan"},"content":"- This feature is useful for new users who may be unfamiliar with the available commands and need a quick reference.","lastModifiedDate":"2023-04-09"},{"lineNumber":433,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":434,"author":{"gitId":"DeepanjaliDhawan"},"content":"- The menu command also provides a convenient way for users to access specific commands ","lastModifiedDate":"2023-04-09"},{"lineNumber":435,"author":{"gitId":"DeepanjaliDhawan"},"content":"without having to remember their syntax or name.","lastModifiedDate":"2023-04-09"},{"lineNumber":436,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":437,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `menu`","lastModifiedDate":"2023-04-09"},{"lineNumber":438,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":439,"author":{"gitId":"DeepanjaliDhawan"},"content":"Examples and Outputs: \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":440,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/Menu.png\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":441,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":442,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":443,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":444,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":445,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":446,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":447,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":448,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":449,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":450,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Exit","lastModifiedDate":"2023-04-09"},{"lineNumber":451,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"DeepanjaliDhawan"},"content":"- In SecureNUS, the exit command is used to terminate the program and exit the command line interface.","lastModifiedDate":"2023-04-09"},{"lineNumber":453,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":454,"author":{"gitId":"DeepanjaliDhawan"},"content":"- This command is useful for users who are finished using the application and wish to close it without having to close ","lastModifiedDate":"2023-04-09"},{"lineNumber":455,"author":{"gitId":"DeepanjaliDhawan"},"content":"the entire command prompt or terminal.","lastModifiedDate":"2023-04-09"},{"lineNumber":456,"author":{"gitId":"DeepanjaliDhawan"},"content":"- If the `database.txt` file is not corrupted, the `exit` command will save the current list of secrets. ","lastModifiedDate":"2023-04-09"},{"lineNumber":457,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":458,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `exit`","lastModifiedDate":"2023-04-09"},{"lineNumber":459,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":460,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":461,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/exitcommand.jpg\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":462,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":463,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":464,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":465,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":466,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":467,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":468,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":469,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":470,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":471,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":472,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Cancel current operation","lastModifiedDate":"2023-04-09"},{"lineNumber":473,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Overview","lastModifiedDate":"2023-04-09"},{"lineNumber":474,"author":{"gitId":"DeepanjaliDhawan"},"content":"- The `c/` command allows users to cancel the current operation in SecureNUS. ","lastModifiedDate":"2023-04-09"},{"lineNumber":475,"author":{"gitId":"DeepanjaliDhawan"},"content":"This can be useful in situations where the user has started an operation, but realizes that they need to abort it ","lastModifiedDate":"2023-04-09"},{"lineNumber":476,"author":{"gitId":"DeepanjaliDhawan"},"content":"before it is complete.","lastModifiedDate":"2023-04-09"},{"lineNumber":477,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":478,"author":{"gitId":"DeepanjaliDhawan"},"content":"- To cancel the current operation, simply type `c/` followed by the Enter key. SecureNUS will immediately terminate the ","lastModifiedDate":"2023-04-09"},{"lineNumber":479,"author":{"gitId":"DeepanjaliDhawan"},"content":"current operation and return the user to the main command prompt.","lastModifiedDate":"2023-04-09"},{"lineNumber":480,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":481,"author":{"gitId":"DeepanjaliDhawan"},"content":"- Note that cancelling an operation may result in data loss or other unintended consequences, depending on the specific ","lastModifiedDate":"2023-04-09"},{"lineNumber":482,"author":{"gitId":"DeepanjaliDhawan"},"content":"operation being performed. It is recommended that users use the `c/` command only when absolutely necessary and that ","lastModifiedDate":"2023-04-09"},{"lineNumber":483,"author":{"gitId":"DeepanjaliDhawan"},"content":"they save their data frequently to avoid losing any unsaved changes.","lastModifiedDate":"2023-04-09"},{"lineNumber":484,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":485,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### General Format: `c/`","lastModifiedDate":"2023-04-09"},{"lineNumber":486,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":487,"author":{"gitId":"DeepanjaliDhawan"},"content":"##### Examples and Outputs: \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":488,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cimg src\u003d\"./UGImages/Cancelop.jpg\" width\u003d\"65%\" /\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":489,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":490,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-04-09"},{"lineNumber":491,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-04-09"},{"lineNumber":492,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e                                                            ","lastModifiedDate":"2023-04-09"},{"lineNumber":493,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#feature-list\"\u003eFeature List \u003c/a\u003e \u003c/td\u003e                                                      ","lastModifiedDate":"2023-04-09"},{"lineNumber":494,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-04-09"},{"lineNumber":495,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":496,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":497,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":498,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Frequently Asked Questions","lastModifiedDate":"2023-04-09"},{"lineNumber":499,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":500,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** How does SecureNUS store my secrets?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":501,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** SecureNUS stores your secrets in a structured format in the `database.txt` file located in the `assets` folder. ","lastModifiedDate":"2023-04-09"},{"lineNumber":502,"author":{"gitId":"DeepanjaliDhawan"},"content":"The secrets are stored securely to ensure that your sensitive information is protected.","lastModifiedDate":"2023-04-09"},{"lineNumber":503,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":504,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":505,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":506,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** What is the difference between a basic password and other password options?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":507,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** A basic password is a simple password that only requires a password name and password value to be entered. Other ","lastModifiedDate":"2023-04-09"},{"lineNumber":508,"author":{"gitId":"DeepanjaliDhawan"},"content":"password options provide additional fields for specific types of passwords, such as credit cards or NUSNet ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":509,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":510,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":511,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":512,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** What if I create a secret without a folder?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":513,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** Secret will assign itself in an `unnamed` folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":514,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":515,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":516,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":517,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** What should I do if I forget my secret for SecureNUS?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":518,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** You can use the `list` command to view the details of the all the secrets you stored. Do note that the ","lastModifiedDate":"2023-04-09"},{"lineNumber":519,"author":{"gitId":"DeepanjaliDhawan"},"content":"sensitive information is masked to ensure security and can be viewed by using the `view` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":520,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":521,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":522,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":523,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** How can I ensure the security of my secrets in SecureNUS?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":524,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** At SecureNUS, we strive to keep the secrets of the users secure. Keeping this in consideration, we mask ","lastModifiedDate":"2023-04-09"},{"lineNumber":525,"author":{"gitId":"DeepanjaliDhawan"},"content":"sensitive information using asterisks when the user creates a new secret using `new` command or list the secrets using ","lastModifiedDate":"2023-04-09"},{"lineNumber":526,"author":{"gitId":"DeepanjaliDhawan"},"content":"`list` command. ","lastModifiedDate":"2023-04-09"},{"lineNumber":527,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":528,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":529,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":530,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** Can I export my secrets stored in SecureNUS to another device?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":531,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** Yes, you can export your secrets to another device by opening the same JAR file in another machine. ","lastModifiedDate":"2023-04-09"},{"lineNumber":532,"author":{"gitId":"DeepanjaliDhawan"},"content":"Do ensure to save `database.txt` in the root directory\u0027s `assets/database.txt`","lastModifiedDate":"2023-04-09"},{"lineNumber":533,"author":{"gitId":"DeepanjaliDhawan"},"content":"As a user, you ou can ensure the security of your secrets in SecureNUS by using strong and unique secrets, ","lastModifiedDate":"2023-04-09"},{"lineNumber":534,"author":{"gitId":"DeepanjaliDhawan"},"content":"keeping your secrets private and secure, and regularly updating your secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":535,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":536,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":537,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":538,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** I forgot to save before exiting. Are all my secrets lost?\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":539,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** SecureNUS realizes the importance of keeping the passwords safe and secure. So we ensure that the secrets added ","lastModifiedDate":"2023-04-09"},{"lineNumber":540,"author":{"gitId":"DeepanjaliDhawan"},"content":"are stored conveniently.","lastModifiedDate":"2023-04-09"},{"lineNumber":541,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Each time a new secret is added using `new` command, deleted using `delete` command or edited using `edit` command,","lastModifiedDate":"2023-04-09"},{"lineNumber":542,"author":{"gitId":"DeepanjaliDhawan"},"content":"it is automatically saved in the `database.txt` file in the `assets` folder. ","lastModifiedDate":"2023-04-09"},{"lineNumber":543,"author":{"gitId":"DeepanjaliDhawan"},"content":"* On exiting the program using the `exit` command, SecureNUS will save all the unsaved secrets in ","lastModifiedDate":"2023-04-09"},{"lineNumber":544,"author":{"gitId":"DeepanjaliDhawan"},"content":"the `database.txt` file.","lastModifiedDate":"2023-04-09"},{"lineNumber":545,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Users have an option to keep saving their secrets using the `save` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":546,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":547,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":548,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":549,"author":{"gitId":"DeepanjaliDhawan"},"content":"**Q:** How can I report a bug or issue with SecureNUS? \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":550,"author":{"gitId":"DeepanjaliDhawan"},"content":"**A:** You can report a bug or issue with SecureNUS by raising an issue in the issue tracker of the team\u0027s","lastModifiedDate":"2023-04-09"},{"lineNumber":551,"author":{"gitId":"DeepanjaliDhawan"},"content":"[Github Repo](https://github.com/AY2223S2-CS2113-T15-2/tp/issues).","lastModifiedDate":"2023-04-09"},{"lineNumber":552,"author":{"gitId":"DeepanjaliDhawan"},"content":"Please attach the screenshots of the issues/bugs and the log files (`assets/logFiles.txt`) for us to better understand ","lastModifiedDate":"2023-04-09"},{"lineNumber":553,"author":{"gitId":"DeepanjaliDhawan"},"content":"and trace the origin of the issue.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":554,"author":{"gitId":"DeepanjaliDhawan"},"content":"Alternatively, you can also contact the ","lastModifiedDate":"2023-04-09"},{"lineNumber":555,"author":{"gitId":"DeepanjaliDhawan"},"content":"[developers](https://github.com/AY2223S2-CS2113-T15-2/tp/blob/master/docs/AboutUs.md) of SecureNUS. ","lastModifiedDate":"2023-04-09"},{"lineNumber":556,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":557,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":558,"author":{"gitId":"ollayf"},"content":"\u003ctable\u003e                                                               ","lastModifiedDate":"2023-03-24"},{"lineNumber":559,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e                                                           ","lastModifiedDate":"2023-03-24"},{"lineNumber":560,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":561,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e                                                          ","lastModifiedDate":"2023-03-24"},{"lineNumber":562,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":563,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":564,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Command Summary","lastModifiedDate":"2023-04-09"},{"lineNumber":565,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":566,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":567,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eAction \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":568,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eFormat/Examples \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":569,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":570,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":571,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eNew \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":572,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003enew [o/OPTION] SECRET_NAME [f/FOLDER_NAME] \u003c/code\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":573,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":574,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":575,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eDelete\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":576,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003edelete SECRET_NAME1 [SECRET_NAME2] [...] \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":577,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":578,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":579,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eList\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":580,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003elist [f/FOLDER_NAME]\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":581,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":582,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":583,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eView \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":584,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003eview SECRET_NAME\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":585,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":586,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":587,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eSearch\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":588,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003esearch SECRET_NAME_LIKE [f/FOLDER_NAME]\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":589,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":590,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":591,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eSave\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":592,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003esave\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":593,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":594,"author":{"gitId":"ollayf"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":595,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eEdit\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":596,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003e edit SECRET_NAME \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":597,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":598,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":599,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003eMenu\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":600,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e\u003ccode\u003emenu\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":601,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":602,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":603,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Exit \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":604,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003eexit\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":605,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":606,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":607,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e Cancel \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":608,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ccode\u003e c/ \u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":609,"author":{"gitId":"ollayf"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":610,"author":{"gitId":"ollayf"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":612,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":613,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003ctr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":614,"author":{"gitId":"DeepanjaliDhawan"},"content":"        \u003ctd\u003e \u003ca href\u003d\"#table-of-contents\"\u003eTable of Contents \u003c/a\u003e \u003c/td\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":615,"author":{"gitId":"DeepanjaliDhawan"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":616,"author":{"gitId":"DeepanjaliDhawan"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ollayf":48,"DeepanjaliDhawan":561,"stevenantya":1,"-":2,"euzhengxi":4}},{"path":"docs/team/deepanjalidhawan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Deepanjali Dhawan - Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"## Overview","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":"**SecureNUS**, a Command Line Interface (CLI) based password manager for students in National University of","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"Singapore (NUS) to store and refer to their passwords in a jiffy.","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"The application offers various functionalities such as creating, removing, displaying, finding, storing, and ","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"retrieving passwords, as well as modifying password information.","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"Additionally, the app provides a menu function that displays summaries and syntax for commands.","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"Users can easily navigate and operate the app, which is designed to be user-friendly and effective. ","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Code Contributed: ","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"* List of all the passwords entered by the user. ","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"  * `list`: if the user wants to list all the passwords in SecureNUS. ","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"  * `list [f/FOLDER_NAME]`: if the user wants to list all the passwords of a specific folder. ","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Menu command `menu`: for users to refer to the command list for easy navigation through the application.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Performed the respective JUnit Tests for them as well","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Update the Java Documentation for the entire code.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"* For further information, can refer to the code contribution in the ","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"[tp Code Dashboard](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003ddeepanjalidhawan\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Enhancements implemented:","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Enhanced the `list` command to include other important details to provide a one-stop destination for every ","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"information pertaining to the specific password.\\","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"(e.g. list will include usernames, passwords and particular details based on the type of the password the user wants","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"to store).","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Updated the Parser and UI class to help enhance user experience with the CLI Password Manager.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Contributions to the UG:","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Created the entire layout of the UG. ","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Updated all the features and their relevant screenshots.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Did the quality testing and finalization of the entire UG.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Contributions to the DG:","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"**To be updated**","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Worked on the Java Documentation of the entire application.","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Took charter of completing and delivering the entire UG.","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Delivered the weekly requirements by deadlines as discussed and agreed upon by the team. ","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Attended every weekly team meeting (every Tuesday, 6pm) and gave inputs during ideation and work division.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Took inputs from fellow teammates and kept in considerations their feedbacks during code iterations.","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Reviewed code sections and gave subsequent feedbacks to the team.","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Review/mentoring contributions: ","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Helped in finding potential bugs in the code.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"[List of issues](https://github.com/AY2223S2-CS2113-T15-2/tp/issues?q\u003dis%3Aissue+is%3Aclosed+author%3ADeepanjaliDhawan)","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Suggested improvements in the code to the team. ","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Worked in tandem with the team to solve major application bugs and issues.","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Helped in reiterating timelines and submission requirements to the team for timely and quality submissions. ","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"#### Contributions beyond the project team:","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Reported bugs in other projects (mention team names) during the PE Dry Run and PE.\\","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"[View the PE-D contribution here](https://github.com/DeepanjaliDhawan/ped/issues)","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Gave suggestions and feedbacks to other teams about the DG and Code Quality.","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"[View the DG contribution here](https://github.com/nus-cs2113-AY2223S2/tp/pull/20/files)","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"* Contributed in giving inputs to other teams after reviewing their draft User guide","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"ollayf":1,"DeepanjaliDhawan":64}},{"path":"docs/team/euzhengxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"euzhengxi"},"content":"# Zheng Xi\u0027s - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"## Overview","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"\u003eSecureNUS is a Command-Line-Interface (CLI) application that allows users to store sensitive credentials locally.","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"Examples of such credentials include basic password, credit card details as well as CryptoWallet fields.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"Information submitted by users are encrypted to safeguard the interests of the user in the event the device is lost","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"or hacked.","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"### [X] Code contributed","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"[RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003deuzhengxi\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"***","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"### [X] Features \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"#### 1. Save Command - `$save` \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"All credentials submitted by users thus far will be written to the database. This function is automatically triggered ","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"when new secrets added, edited or deleted from the database.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"Enter Command: $save","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"_____________________________________________________","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"Saving secrets to storage, please do not close application...","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"_____________________________________________________","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"_____________________________________________________","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"Save complete. All secrets saved into assets/database.txt.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"If exporting to another device, save this file into the root directory\u0027s assets/database.txt before you start me again!","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"_____________________________________________________","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"#### 2. Backend - Saving and Loading of user data \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"+ ##### Basic reading and writing Capabilties \u003cbr\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"  File paths are retrieved via `$System.getProperty(Backend.USER_DIRECTORY_IDENTIFIER)`","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"  so as to circumvent differences in path syntax across different operating systems. A folder and a database.txt file is","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"  generated on behalf of users.  ","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"  1. Special characters `$~!@#$%^\u0026*()-\u003d_+[]\\{}|;\u0027:\",./\u003c\u003e?`can be submitted in certain fields. To ensure the veracity of ","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"  the data, modifications have to be performed before they are written into the database. When reading from the database, ","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"  these modifications have to be reversed accordingly.\u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"+ #### Encryption before data is written to the database.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"  Sensitive fields like `$username` and `$password` are encrypted into the database when it is written to the database and","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"  decrypted again when loaded into the program \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"+ #### Ensuring data validity\u003cbr\u003e ","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"  Intentional / unintentional edits may be performed on the data in database.txt file. Therefore checks have to be","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"  performed to verify the veracity of the data when a new session starts. These checks can be divided into 4 main categories: \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"   1. Ensuring `$name` and  `$folder name` only contain alphanumeric characters","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"  ```java","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"     if (Secret.isIllegalName(input[2]) || !SecretMaster.isLegalFolderName(input[3]))","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"  ```","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"   2. Ensuring the other fields in a particular secret are valid with respect to the context they are used.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"  ```java","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"    if (!creditCardNumber.matches(CREDIT_CARD_NUMBER_FMT)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"    if (!expiryDate.matches(EXPIRY_DATE_FMT)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"        throw new InvalidExpiryDateException();","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"    if (!isLegalCvcNumber(cvcNumber)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"        throw new InvalidCVCNumberException();","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"  ``` ","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"   3. Ensuring that there are no secrets with duplicate names","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"  ```java","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"      if (secretNames.contains(secret.getUid())) {","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"euzhengxi"},"content":"          throw new RepeatedIdException();","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"euzhengxi"},"content":"      }","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"  ```","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"   4. Final checks using the hashcode of the data \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"      A hashcode is generated for all information written to the database. Before data is loaded into the program,","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"      this hashcode will be cross referenced. This serves as the final line of defense against any manipulation of user","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"      user data in the database","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"  ```java","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"     public static String hash(String data) {","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"        int hashcode \u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"        ...","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"     }","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"  ```","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"euzhengxi"},"content":"#### 3. Logging Capabilities - Logging of appropriate user data to assist in debugging ","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"euzhengxi"},"content":"- Logging Architecture \u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"  All user input is logged","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"```java","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"---------------------------------| Session began at: 2023-04-09T23:28:12.788915800Z |-------------------------------------------------------------------| Session began at: 2023-04-09T23:29:18.053986200Z |-----------------------------------","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"euzhengxi"},"content":"        command by user:  new pass10","lastModifiedDate":"2023-04-10"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"        fields:  idk.com,  c/,","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        \u003e\u003e\u003e\u003euser cancelled operation","lastModifiedDate":"2023-04-10"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"        command by user:  exit","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"euzhengxi"},"content":"        fields:","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"euzhengxi"},"content":"        ------------","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"euzhengxi"},"content":"        | ALERT !!!|","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"        ------------","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"        Program Crashed:  unexpected exception: null","lastModifiedDate":"2023-04-10"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"        Time: 2023-04-09T23:47:28.668632600Z","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"```","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"        ...","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"euzhengxi"},"content":"  ```","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"euzhengxi"},"content":"Within the abstract method format, all relevant information are rearranged and formatted using","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"euzhengxi"},"content":"static methods based on the context of the information.","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"euzhengxi"},"content":"```java","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"euzhengxi"},"content":"    if (logArray[0].equals(\"start\")) {","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"euzhengxi"},"content":"        return SecureNUSLogFormatter.startOfSessionLog(record);","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"euzhengxi"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"euzhengxi"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":109,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"euzhengxi"},"content":"***","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"euzhengxi"},"content":"### [X] Assertions \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"euzhengxi"},"content":"Added assertions to the code to better safeguard the program against unexpected inputs and lapses in programming logic","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"``` java","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"    assert this.storage !\u003d null;","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"euzhengxi"},"content":"    assert index \u003e\u003d 0;","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"euzhengxi"},"content":"    if (index \u003e\u003d storage.size()) {","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"euzhengxi"},"content":"        throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"euzhengxi"},"content":"    } ","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"euzhengxi"},"content":"```","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"euzhengxi"},"content":"### [X] Contributions to Team Based Tasks \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"euzhengxi"},"content":"1. Wrote the junit tests for various Backend Functionalities","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"euzhengxi"},"content":"2. Authored the text-ui-tests to automate testing for the core functionalities implemented in the program","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"euzhengxi"},"content":"3. Team PR reviewed [[#48](https://github.com/AY2223S2-CS2113-T15-2/tp/pull/48)]","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"euzhengxi"},"content":"### [X] Community","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"euzhengxi"},"content":"- Contributed to forum discussions [[1](https://github.com/nus-cs2113-AY2223S2/forum/issues/45)]","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"- Reported bugs and suggestions for other teams in the class [[1](https://github.com/nus-cs2113-AY2223S2/ip/pull/20/files/567e6fcf4d4be8fb7d3f6b8b456ad72597cf7388),","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"euzhengxi"},"content":"  [2](https://github.com/nus-cs2113-AY2223S2/ip/pull/114/files/2fa55392cbbbf776812bc0878ca9b4040edc5267),","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"euzhengxi"},"content":"  [3](https://github.com/euzhengxi/ped)]","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"euzhengxi":131}},{"path":"docs/team/kairuler.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"# Khairul Aizat - Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"## Overview","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"SecureNUS is a desktop CLI app for managing and storing passwords. Its features include adding, deleting, listing, revealing, searching, saving and loading passwords, and editing password details. The app is simple and efficient to use, and users can access a menu function for command summaries and syntax.","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"- #### Code contributed","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"[RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dkairuler\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"- #### Enhancements implemented:","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"| Enhancement                       | Difficulty | Description                                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"|-----------------------------------|:----------:|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"| Revealing a password `view`       |     ★      | To maintain security when listing passwords, the actual passwords will not be revealed. To reveal a specific password, the user inputs the name of the password to view. If the password name does not match any stored password, an error message is printed.                                                        |","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"| Searching for a password `search` |     ★★     | Searches for passwords with names that contain the specified name, and optionally in the specified folder. If a folder name is provided, it searches in that specific folder, otherwise it searches in all passwords. The search results are printed out in a formatted table along with the number of matches found. |","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"| Edit a password `edit`            |    ★★★     | To edit a password, the user inputs the name of the password, and optionally the new name and new folder of the password. The user then inputs the new values of the relevant fields to be updated (e.g. password, credit card number, NUSnet ID, etc.).                                                              |                                                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"- #### Contributions to the UG:","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"None.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"- #### Contributions to the DG:","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"I contributed the Implementation (of `add`, `delete` and `list` functions) segment and appendices A, B, C, D and E (Product Scope, User Stories, Non-Functional Requirements, Glossary and Instructions for manual testing).","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"All the UML diagrams in said Implementation segment were done by me.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"- #### Contributions to team-based tasks","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"I contributed to the main storage class, `SecretMaster`.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"- #### Review/mentoring contributions:","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"[See the team\u0027s PRs that I have reviewed](https://github.com/AY2223S2-CS2113-T15-2/tp/pulls?q\u003dreviewed-by%3Akairuler)","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"                                             ","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"- #### Contributions beyond the project team:","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"[See my review of another team\u0027s Developer Guide](https://github.com/nus-cs2113-AY2223S2/tp/pull/23/files)","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"[See my review of other teams\u0027 tP product](https://github.com/kairuler/ped/issues)","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"- #### Contributions to the Developer Guide (Extracts): ","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"Refer to Implementation segment and appendices A, B, C, D and E (Product Scope, User Stories, Non-Functional Requirements, Glossary and Instructions for manual testing) of our DG.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"kairuler":39}},{"path":"docs/team/ollayf.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"# Hosea - Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"**SecureNUS**, a Command Line Interface (CLI) based password manager for students in National University of","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"Singapore (NUS) to store and refer to their passwords in a jiffy.","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"The application offers various functionalities such as creating, removing, displaying, finding, storing, and","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"retrieving passwords, as well as modifying password information.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"- **New Feature**: Adding, Utilising of 2nd level secrets","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    - These include: Crypto wallet, Credit Card, WiFi","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    - What it does: Allows the user to create more different types secrets","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    - Justification: This allows the user to create secrets with more variety that are typically used commonly in the ","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"daily life of a student","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    - Highlights: This was challenging as it forced a lot more checking on everyone\u0027s parts to ensure all the operations","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"- **New Feature**: Operation Cancel","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"  - What it does: Cancel an Operation that requires multi line of input","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"  - Justification: This allows the user to stop creating a secret mid way, for example, because they input things wrong","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"or they did not want to save this password anymore","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"  - Highlights: This was challenging as I had to make sure it worked for all operations that require multi line input.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":" However, this idea actually came up from User Acceptance Testing when I asked a friend to review the application.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":" Among many other suggestions, this was chosen as it was critical to them yet somethings that could be adapted quickly. ","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"- Code Contributed: [Reposense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dt15\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dollayf\u0026tabRepo\u003dAY2223S2-CS2113-T15-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"- Project Management: ","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"  - Managed releases v1.0 and v2.1","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"  - Tested and made ready for release","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"- Enhancement to other features:","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"  - More structure for Parsing commands,","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"  - More extensive checks for all commands before allowing the application use them","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"  - Data structures for our secrets","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"  - Creating the architecture of the application","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"  - QA Tests for all commands to ensure they work as per intended","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"  - Standardised the UI of the entire application","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"- Documentation:","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"  - User Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    - Did the first full draft of UG [(Pull Requests)](https://github.com/AY2223S2-CS2113-T15-2/tp/pull/66) ","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    - Help with final checks of UG","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"  - Developers\u0027 Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    - ","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"- Contribution to team based tasks:","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"- Setting up the GitHub team org/repo","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"1. Necessary general code enhancements ","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"2. Setting up tools e.g., GitHub, Gradle, text-ui-tests","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"3. Setting up gitflow and structure for all members","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"4. Maintaining the issue tracker","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"5. Release management","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"- Community:","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"  - PRs Reviewed: [#187](https://github.com/AY2223S2-CS2113-T15-2/tp/pull/181), [#171](https://github.com/AY2223S2-CS2113-T15-2/tp/pull/171),","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"[#54](https://github.com/AY2223S2-CS2113-T15-2/tp/pull/54) and more...","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"  - Reported Bugs (other than via telegram): [#92](https://github.com/AY2223S2-CS2113-T15-2/tp/issues/92), ","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"[#160](https://github.com/AY2223S2-CS2113-T15-2/tp/issues/160), [#84](https://github.com/AY2223S2-CS2113-T15-2/tp/issues/84) and many more...","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"  - Created the important development structures for my team including the inheritance structure of Commands and Data ","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"structures","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"- Tools: ","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"  - Ensured the working of (UI) system with scanner","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ollayf":56}},{"path":"docs/team/steven.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"stevenantya"},"content":"# Steven - Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"## Overview","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"1. Creation and Deletion of Password Fields","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"2. Different classes for different passwords","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"### Summary of Contributions","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"1.  Different password fields: Adding passwords","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"2.  Standard Password","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    -   Name (MUST BE UNIQUE check and give error for duplicates)","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    -   Username","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    -   Password","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    -   URI (e.g.): google.com","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"3.  Student ID","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"4.  NUSNet","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"5.  Delete Password (by name ONLY) ","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"stevenantya":19}},{"path":"src/main/java/seedu/securenus/Backend.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretEnumerator;","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretSearcher;","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class which represents the backend of the SecureNUS application.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Handles file input/output and secret creation and manipulation.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"public class Backend {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"    public static boolean isCorrupted \u003d false;","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"    public static boolean isDatabaseEmpty \u003d true;","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"    private static final int DECRYPTION_STARTING_INDEX \u003d 5;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    private static final String DATABASE_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    private static final String DATABASE_FILE \u003d \"database.txt\";","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"    private static final String DELIMITER \u003d \",\";","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"    private static final String ENCRYPTION_IDENTIFIER \u003d \"DKENC\";","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"    private static final String EMPTY_FIELD_IDENTIFIER \u003d \"empty\";","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"    private static final String PASSWORD_IDENTIFIER \u003d \"Password\";","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"    private static final String CREDIT_CARD_IDENTIFIER \u003d \"CreditCard\";","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"    private static final String CRYPTOWALLET_IDENTIFIER \u003d \"CryptoWallet\";","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"    private static final String NUSNETID_IDENTIFIER \u003d \"nusNetId\";","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"    private static final String STUDENTID_IDENTIFIER \u003d \"studentID\";","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"    private static final String WIFI_PASSWORD_IDENTIFIER \u003d \"wifiPassword\";","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"     * Returns data from previous session as a SecretMaster Object.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"     * If data is not available, a new file is created.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"     * @return SecretMaster","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"    public static SecretMaster initialisation() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        SecretMaster secretMaster \u003d Backend.initialiseSecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"        File database \u003d Backend.createAssetFolderAndDatabaseFile();","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"        String databasePath \u003d Backend.getDatabasePath();","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"euzhengxi"},"content":"            if (!database.createNewFile()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"euzhengxi"},"content":"                database.createNewFile();","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"            //read history if database file exists","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(databasePath));","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"                String input \u003d reader.readLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"                while (input !\u003d null \u0026\u0026 input.length() \u003e 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"                    String[] inputArray \u003d input.split(Backend.DELIMITER);","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"                    secretMaster \u003d Backend.readAndUpdate(inputArray, secretMaster);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"                    String data \u003d secretMaster.getByIndex(","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"                            secretMaster.getSecretEnumerator().size() - 1).toStringForDatabase();","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"                    boolean isCorrupted \u003d !Backend.hash(data).equals(inputArray[inputArray.length - 1]);","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"                    if (isCorrupted) {","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"                        SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"euzhengxi"},"content":"                        SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, parameters altered but still valid, \" + data);","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"euzhengxi"},"content":"                        throw new IOException();","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"                    }","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"                    input \u003d reader.readLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"                reader.close();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"euzhengxi"},"content":"                Backend.isCorrupted \u003d true;","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"                secretMaster \u003d Backend.initialiseSecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.SEVERE, \"fatal, database cannot be created\");","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"euzhengxi"},"content":"            Ui.inform(\"Database cannot be initialised! User data will not be saved\");","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"euzhengxi"},"content":"            secretMaster \u003d Backend.initialiseSecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"        if (secretMaster.listSecrets().size() !\u003d 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"euzhengxi"},"content":"            isDatabaseEmpty \u003d false;","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"        return secretMaster;","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates an asset folder to store the database file if it does not already exist,","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and returns the File object for the database file.","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The File object for the database file.","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"euzhengxi"},"content":"    public static File createAssetFolderAndDatabaseFile() {","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"euzhengxi"},"content":"        //locate assets folder / try to create assets folder if it does not exist","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"euzhengxi"},"content":"        String pathOfCurrentDirectory \u003d System.getProperty(Backend.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"euzhengxi"},"content":"        String assetsPath \u003d Paths.get(pathOfCurrentDirectory, Backend.DATABASE_FOLDER).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"euzhengxi"},"content":"        File assets \u003d new File(assetsPath);","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"        if (!assets.exists()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"            assets.mkdir();","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"euzhengxi"},"content":"        //locate database file / try to create database file if it does not exist","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"euzhengxi"},"content":"        String databasePath \u003d Paths.get(assetsPath, Backend.DATABASE_FILE).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"euzhengxi"},"content":"        File database \u003d new File(databasePath);","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"euzhengxi"},"content":"        return database;","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the full file path of the database file.","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A string representing the full file path of the database file.","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"euzhengxi"},"content":"    public static String getDatabasePath() {","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"        String pathOfCurrentDirectory \u003d System.getProperty(Backend.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"euzhengxi"},"content":"        String databasePath \u003d Paths.get(pathOfCurrentDirectory, Backend.DATABASE_FOLDER,","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"euzhengxi"},"content":"                Backend.DATABASE_FILE).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"euzhengxi"},"content":"        return databasePath;","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Initializes a new SecretMaster object with an empty ArrayList of secrets, a SecretEnumerator and a","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * SecretSearcher.","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The SecretEnumerator and SecretSearcher objects are populated with the appropriate data structures, using the","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * secretList and foldersHashTable objects.","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a new SecretMaster object with the populated SecretEnumerator and SecretSearcher objects.","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"euzhengxi"},"content":"    public static SecretMaster initialiseSecretMaster() {","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"euzhengxi"},"content":"        ArrayList\u003cSecret\u003e secretList \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"euzhengxi"},"content":"        //for secretEnumerator","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e foldersHashTable \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"euzhengxi"},"content":"                Backend.createFolderHashtable(secretList);","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"euzhengxi"},"content":"        SecretEnumerator secretEnumerator \u003d new SecretEnumerator(secretList,","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"euzhengxi"},"content":"                foldersHashTable);","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"euzhengxi"},"content":"        //for secretSearcher","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Secret\u003e nameHashtable \u003d Backend.","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"euzhengxi"},"content":"                createNameHashtable(secretList);","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e hashtableFolders \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"euzhengxi"},"content":"                Backend.createHashtableFolders(foldersHashTable);","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"euzhengxi"},"content":"        SecretSearcher secretSearcher \u003d new SecretSearcher(nameHashtable, hashtableFolders);","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"euzhengxi"},"content":"        return new SecretMaster(secretSearcher, secretEnumerator);","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"euzhengxi"},"content":"     * Returns ArrayList of Secret with the new Secret added.","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"euzhengxi"},"content":"     * @param input    String to create a Secret.","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"euzhengxi"},"content":"     * @param secretMaster Current secretMaster","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"euzhengxi"},"content":"     * @return SecretMaster","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"euzhengxi"},"content":"    public static SecretMaster readAndUpdate(String[] input, SecretMaster secretMaster) throws","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"euzhengxi"},"content":"            FolderExistsException, RepeatedIdException, IllegalSecretNameException,","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"euzhengxi"},"content":"            IllegalFolderNameException, InvalidExpiryDateException, IOException {","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"euzhengxi"},"content":"        if (Secret.isIllegalName(input[2]) || !SecretMaster.isLegalFolderName(input[3])) { //1st filter - name \u0026 folder","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":174,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, secret name/folder altered, \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":175,"author":{"gitId":"euzhengxi"},"content":"                input[2] + \" \" + input[3]);","lastModifiedDate":"2023-04-10"},{"lineNumber":176,"author":{"gitId":"euzhengxi"},"content":"            throw new IOException();","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"euzhengxi"},"content":"        if (input[0].equals(Backend.PASSWORD_IDENTIFIER)) { //no 2nd filter","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new BasicPassword(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]), Backend.decode(input[6]));","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"euzhengxi"},"content":"            secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.CREDIT_CARD_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"euzhengxi"},"content":"            if (CreditCard.isLegalCreditCardNumber(Backend.decode(input[5])) \u0026\u0026 CreditCard.isLegalCvcNumber(","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[6])) \u0026\u0026 CreditCard.isLegalExpiryDate(input[7])) { //2nd filter","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"euzhengxi"},"content":"                Secret secret \u003d new CreditCard(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"                        Backend.decode(input[5]), Backend.decode(input[6]), input[7]);","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"                secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"euzhengxi"},"content":"            } else {","lastModifiedDate":"2023-04-10"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":190,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, credit card number/cvc/expiry date altered, \" +","lastModifiedDate":"2023-04-10"},{"lineNumber":191,"author":{"gitId":"euzhengxi"},"content":"                        Backend.decode(input[5]) + \" \" + Backend.decode(input[6]) + Backend.decode(input[7]));","lastModifiedDate":"2023-04-10"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.CRYPTOWALLET_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new CryptoWallet(input[2], input[3], Backend.decode(input[4]), Backend.decode(input[5]),","lastModifiedDate":"2023-04-09"},{"lineNumber":195,"author":{"gitId":"euzhengxi"},"content":"                Backend.decode(input[6]), new ArrayList\u003cString\u003e());","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"euzhengxi"},"content":"            secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.NUSNETID_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"euzhengxi"},"content":"            if (NUSNet.isLegalId(input[4])) { //2nd filter","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"euzhengxi"},"content":"                Secret secret \u003d new NUSNet(input[2], input[3], input[4], Backend.decode(input[5]));","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"euzhengxi"},"content":"                secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"euzhengxi"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":203,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, NUSNet id altered, \" + input[4]);","lastModifiedDate":"2023-04-10"},{"lineNumber":204,"author":{"gitId":"euzhengxi"},"content":"                throw new IOException();","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.STUDENTID_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"euzhengxi"},"content":"            if (StudentID.isLegalId(input[4])) { //2nd filter","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"euzhengxi"},"content":"                Secret secret \u003d new StudentID(input[2], input[3], input[4]);","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"euzhengxi"},"content":"                secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"euzhengxi"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":212,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, Student ID altered, \" + input[4]);","lastModifiedDate":"2023-04-10"},{"lineNumber":213,"author":{"gitId":"euzhengxi"},"content":"                throw new IOException();","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":215,"author":{"gitId":"euzhengxi"},"content":"        } else if (input[0].equals(Backend.WIFI_PASSWORD_IDENTIFIER)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"euzhengxi"},"content":"            Secret secret \u003d new WifiPassword(input[2], input[3], Backend.decode(input[4]),","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"euzhengxi"},"content":"                    Backend.decode(input[5]));","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"euzhengxi"},"content":"            secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"euzhengxi"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"command, Backend Initialisation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":221,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, field identifier altered, \" + input[0]);","lastModifiedDate":"2023-04-10"},{"lineNumber":222,"author":{"gitId":"euzhengxi"},"content":"            throw new IOException();","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":224,"author":{"gitId":"euzhengxi"},"content":"        return secretMaster;","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretList the list of secrets to group by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e createFolderHashtable(ArrayList\u003cSecret\u003e secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folderHashtable \u003d new","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"euzhengxi"},"content":"                Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"euzhengxi"},"content":"        for (Secret secret : secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"euzhengxi"},"content":"            String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"euzhengxi"},"content":"            ArrayList\u003cSecret\u003e secretsInFolder \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"euzhengxi"},"content":"            if (folderHashtable.containsKey(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"euzhengxi"},"content":"                secretsInFolder \u003d folderHashtable.get(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"euzhengxi"},"content":"            secretsInFolder.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"euzhengxi"},"content":"            folderHashtable.put(folderName, secretsInFolder);","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"euzhengxi"},"content":"        return folderHashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets by their name.","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretList the list of secrets to group by name.","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by name.","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, Secret\u003e createNameHashtable(ArrayList\u003cSecret\u003e secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Secret\u003e nameHashtable \u003d new Hashtable\u003cString, Secret\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"euzhengxi"},"content":"        for (Secret secret : secretList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"euzhengxi"},"content":"            nameHashtable.put(secret.getName(), secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"euzhengxi"},"content":"        return nameHashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates and returns a hashtable of all the secrets grouped by folder and name.","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderHashtable the hashtable of secrets grouped by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Hashtable of secrets grouped by folder and name.","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"euzhengxi"},"content":"    public static Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e createHashtableFolders(","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"euzhengxi"},"content":"            Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folderHashtable) {","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"euzhengxi"},"content":"        Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e hashtableFolders \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"euzhengxi"},"content":"                new Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"euzhengxi"},"content":"        for (String folder : folderHashtable.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"euzhengxi"},"content":"            hashtableFolders.put(folder, Backend.createNameHashtable(folderHashtable.get(folder)));","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"euzhengxi"},"content":"        return hashtableFolders;","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Encodes a given field using a custom encryption method.","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be encoded.","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the encoded field.","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"euzhengxi"},"content":"    public static String encode(String field) {","lastModifiedDate":"2023-03-14"},{"lineNumber":285,"author":{"gitId":"euzhengxi"},"content":"        String encodedField \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":286,"author":{"gitId":"euzhengxi"},"content":"        for (int i \u003d 0; i \u003c field.length(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"euzhengxi"},"content":"            int asciiValue \u003d (int) (field.charAt(i) + 1);","lastModifiedDate":"2023-03-15"},{"lineNumber":288,"author":{"gitId":"euzhengxi"},"content":"            if (field.charAt(i) \u003d\u003d \u0027+\u0027) {","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"euzhengxi"},"content":"                encodedField +\u003d \"PLUS\";","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"euzhengxi"},"content":"            } else if (field.charAt(i) \u003d\u003d \u0027,\u0027) {","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"euzhengxi"},"content":"                encodedField +\u003d \"COMMA\";","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"euzhengxi"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"euzhengxi"},"content":"                encodedField +\u003d (char) asciiValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":295,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"euzhengxi"},"content":"        if (field.equals(\"\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":297,"author":{"gitId":"euzhengxi"},"content":"            encodedField +\u003d \"empty\";","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":299,"author":{"gitId":"euzhengxi"},"content":"        return Backend.ENCRYPTION_IDENTIFIER + encodedField;","lastModifiedDate":"2023-03-15"},{"lineNumber":300,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Decodes a given field that was encoded using a custom encryption method.","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be decoded.","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the decoded field.","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"euzhengxi"},"content":"    public static String decode(String field) {","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"euzhengxi"},"content":"        String modifiedField \u003d field.substring(Backend.DECRYPTION_STARTING_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"euzhengxi"},"content":"        String actualField \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"euzhengxi"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"euzhengxi"},"content":"        while (i \u003c modifiedField.length() ) {","lastModifiedDate":"2023-04-08"},{"lineNumber":313,"author":{"gitId":"euzhengxi"},"content":"            int asciiValue \u003d (int) (modifiedField.charAt(i) - 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":314,"author":{"gitId":"euzhengxi"},"content":"            Character character \u003d modifiedField.charAt(i);","lastModifiedDate":"2023-04-08"},{"lineNumber":315,"author":{"gitId":"euzhengxi"},"content":"            if (character.equals(\u0027P\u0027)","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"euzhengxi"},"content":"                    \u0026\u0026 (i + 4 \u003c\u003d modifiedField.length()) \u0026\u0026","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"euzhengxi"},"content":"                    modifiedField.substring(i, i+4).equals(\"PLUS\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"euzhengxi"},"content":"                actualField +\u003d \u0027+\u0027;","lastModifiedDate":"2023-04-08"},{"lineNumber":319,"author":{"gitId":"euzhengxi"},"content":"                i \u003d i + 4;","lastModifiedDate":"2023-04-08"},{"lineNumber":320,"author":{"gitId":"euzhengxi"},"content":"            } else if (character.equals(\u0027C\u0027) \u0026\u0026 i + 5 \u003c\u003d modifiedField.length() \u0026\u0026","lastModifiedDate":"2023-04-08"},{"lineNumber":321,"author":{"gitId":"euzhengxi"},"content":"                    modifiedField.substring(i, i+5).equals(\"COMMA\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"euzhengxi"},"content":"                actualField +\u003d \u0027,\u0027;","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"euzhengxi"},"content":"                i \u003d i + 5;","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"euzhengxi"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"euzhengxi"},"content":"                actualField +\u003d (char) asciiValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":326,"author":{"gitId":"euzhengxi"},"content":"                i \u003d i + 1;","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"euzhengxi"},"content":"        return actualField;","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":333,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses an empty field to return an empty string if it is \"empty\".","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param field the field to be parsed.","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an empty string if field is \"empty\", else returns the field.","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"euzhengxi"},"content":"    public static String parseEmptyField(String field) {","lastModifiedDate":"2023-03-18"},{"lineNumber":339,"author":{"gitId":"euzhengxi"},"content":"        return field.equals(Backend.EMPTY_FIELD_IDENTIFIER) ? \"\" : field;","lastModifiedDate":"2023-03-22"},{"lineNumber":340,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":341,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":342,"author":{"gitId":"euzhengxi"},"content":"    public static String hash(String data) {","lastModifiedDate":"2023-04-06"},{"lineNumber":343,"author":{"gitId":"euzhengxi"},"content":"        int hashcode \u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":344,"author":{"gitId":"euzhengxi"},"content":"        for (int i \u003d 0; i \u003c data.length(); i++) {","lastModifiedDate":"2023-04-06"},{"lineNumber":345,"author":{"gitId":"euzhengxi"},"content":"            hashcode +\u003d (int) (data.charAt(i));","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":347,"author":{"gitId":"euzhengxi"},"content":"        return \"\" + hashcode;","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":351,"author":{"gitId":"euzhengxi"},"content":"     * Saves changes made by the user during the session","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"euzhengxi"},"content":"     * in a .txt document.","lastModifiedDate":"2023-03-14"},{"lineNumber":353,"author":{"gitId":"euzhengxi"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"euzhengxi"},"content":"     * @param input the list of secrets provided by user.","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"euzhengxi"},"content":"    public static void updateStorage(ArrayList\u003cSecret\u003e input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":358,"author":{"gitId":"euzhengxi"},"content":"        File database \u003d Backend.createAssetFolderAndDatabaseFile();","lastModifiedDate":"2023-04-06"},{"lineNumber":359,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":360,"author":{"gitId":"euzhengxi"},"content":"            FileWriter myWriter \u003d new FileWriter(database);","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"euzhengxi"},"content":"            for (int i \u003d 0; i \u003c input.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":362,"author":{"gitId":"euzhengxi"},"content":"                Secret secret \u003d input.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":364,"author":{"gitId":"euzhengxi"},"content":"                myWriter.write(secret.toStringForDatabase() + \",\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":365,"author":{"gitId":"euzhengxi"},"content":"                        Backend.hash(secret.toStringForDatabase())+ \"\\n\");","lastModifiedDate":"2023-04-06"},{"lineNumber":366,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":367,"author":{"gitId":"euzhengxi"},"content":"            myWriter.close();","lastModifiedDate":"2023-03-14"},{"lineNumber":368,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.INFO, \"data successfully written to datbase\");","lastModifiedDate":"2023-04-10"},{"lineNumber":369,"author":{"gitId":"euzhengxi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":370,"author":{"gitId":"euzhengxi"},"content":"            Ui.inform(\"Database is not initialised! All user data will not be saved\");","lastModifiedDate":"2023-04-06"},{"lineNumber":371,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.SEVERE, \"fatal, database removed or not initialised\");","lastModifiedDate":"2023-04-10"},{"lineNumber":372,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":373,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":374,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":19,"DeepanjaliDhawan":62,"euzhengxi":293}},{"path":"src/main/java/seedu/securenus/SecureNUS.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.NullFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.OperationMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.Command;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InsufficientParamsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InvalidCommandException;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InvalidFieldException;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.ErrorMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" * SecureNUS is the main class of the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It is responsible for initiating the application, running the application and handling user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"public class SecureNUS {","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    private SecretMaster secureNUSData;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for SecureNUS class. It calls the initialisation method of Backend","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * to create a new SecretMaster object and assign it to the secureNUSData field.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException If a folder with the same name as the SecureNUS folder already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException If the SecureNUS folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    public SecureNUS() throws FolderExistsException, IllegalFolderNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        secureNUSData \u003d Backend.initialisation();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"        SecureNUSLogger.setUpLogger();","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The main method that starts the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param args Command line arguments","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException If a folder with the same name as the SecureNUS folder already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException If the SecureNUS folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException If the Secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException If the Secret is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"    public static void main(String[] args) throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"            IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        SecureNUS secureNUS \u003d new SecureNUS();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"            secureNUS.run();","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.SEVERE, \"fatal, unexpected exception: \" + e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.close();","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The main method to run the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"    public void run() {","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"        SecureNUSLogger.LOGGER.log(Level.INFO, \"start,\");","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        if (Backend.isCorrupted) {","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"            Ui.printCorruptedDataMessage();","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"        } else if (!Backend.isDatabaseEmpty) {","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"            Ui.printValidDataMessage();","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"            Ui.printNewSessionMessage();","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        while (!isExit) {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"            Command c \u003d parseCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"            if (c \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"                continue;","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"                isExit \u003d executeCommand(c);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            } catch (ExceptionMain e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"                Ui.inform(\"Unknown issue\");","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"                return;","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"            ","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        Ui.inform(OperationMessages.SAVING);","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"        Backend.updateStorage(this.secureNUSData.listSecrets());","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        Ui.inform(OperationMessages.SAVE_COMPLETE);","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        Ui.inform(OperationMessages.CLOSE);","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        Ui.close();","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"        SecureNUSLogger.LOGGER.log(Level.INFO, \"end,\");","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":100,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses the user input into a Command object.","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The parsed Command object.","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"    public Command parseCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        Ui.informUserToStartCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        String input \u003d Ui.readCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        Command command \u003d null;","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"            command \u003d Parser.parse(input, secureNUSData.getSecretNames(), secureNUSData.getFolders());","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"stevenantya"},"content":"        } catch(InvalidCommandException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.INVALID_COMMAND);","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"stevenantya"},"content":"            return null;","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"        } catch (InsufficientParamsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.INSUFFICIENT_PARAMS);","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.ILLEGAL_SECRET_NAME);","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.ILLEGAL_FOLDER_NAME);","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"        } catch (OperationCancelException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"            Ui.informOperationCancel();","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.REPEATED_ID);","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"        } catch (InvalidFieldException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.INVALID_FIELD);","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.SECRET_NOT_FOUND);","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        } catch (FolderNotFoundException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.FOLDER_NOT_FOUND);","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"        } catch (NullSecretException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.NULL_SECRET);","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        } catch (NullFolderException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"            Ui.inform(ErrorMessages.NULL_FOLDER);","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"        return command;","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes a given command on the SecureNUS application.","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command the command to be executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a boolean indicating whether the command has exited or not.","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if an error occurs while executing the command.","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"    public boolean executeCommand(Command command) throws ExceptionMain {","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"stevenantya"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"stevenantya"},"content":"                command.execute(secureNUSData);","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"stevenantya"},"content":"                return command.isExit();","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"            } catch (NonExistentFolderException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Folder Input does not exist\");","lastModifiedDate":"2023-04-06"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"            } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Make sure you follow this format: \\\"edit p/PASSWORD_NAME\\\"\");","lastModifiedDate":"2023-04-06"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"            } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Unknown Error: That folder already exists\");","lastModifiedDate":"2023-04-06"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"            } catch (OperationCancelException e) { // no issue, just cancel operation","lastModifiedDate":"2023-04-06"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"                Ui.informOperationCancel();","lastModifiedDate":"2023-04-06"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"            } catch (ExceptionMain e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"                Ui.printError(e.getMessage());","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"stevenantya"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":71,"stevenantya":39,"DeepanjaliDhawan":37,"euzhengxi":19}},{"path":"src/main/java/seedu/securenus/SecureNUSLogFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Formatter;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.LogRecord;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"public class SecureNUSLogFormatter extends Formatter{","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"    public String format(LogRecord record) {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"        String[] logArray \u003d record.getMessage().split(\",\");","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"        if (logArray[0].equals(\"start\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.startOfSessionLog(record);","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"end\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.endOfSessionLog(record);","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"command\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.commandLog(logArray);","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"input\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.inputLog(logArray);","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"info\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.infoLog(logArray);","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"error\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.errorLog(record, logArray);","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"        } else if (logArray[0].equals(\"fatal\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"            return SecureNUSLogFormatter.fatalLog(record, logArray);","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"        return \"\";","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"    public static String startOfSessionLog(LogRecord record) {","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"        String alert \u003d \"\\n\\n---------------------------------\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"                \"| Session began at: \" + record.getInstant() + \" |\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"                \"-----------------------------------\";","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"        return alert;","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"    public static String endOfSessionLog(LogRecord record) {","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"        String alert \u003d \"\\n---------------------------------\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"                \"| Session ended at: \" + record.getInstant() + \" |\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"                \"----------------------------------\";","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"        return alert;","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"    public static String commandLog(String[] inputArray) {","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"        String header \u003d \"\\n\\ncommand by user: \";","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"        String parameters \u003d \"\\nfields: \";","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"        return header + inputArray[1] + parameters;","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"    public static String inputLog(String[] inputArray) {","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"        return inputArray[1] + \", \";","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"    public static String infoLog(String[] inputArray) {","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"        return \"\\n\" + inputArray[1];","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    public static String errorLog(LogRecord record, String[] inputArray) {","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"        String errorMessage \u003d \"\\n\u003e\u003e\u003e\u003eError: \" + inputArray[1];","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"        String inputDetails \u003d \" | input: \" + inputArray[2] + \" | \";","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        String methodDetails \u003d \" method \u0026 class: \" + record.getSourceClassName() + \" - \" + record.getSourceMethodName();","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"        String continuedFields \u003d \"\\nfields (continued): \";","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"        return errorMessage + inputDetails + methodDetails + continuedFields;","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"euzhengxi"},"content":"    public static String fatalLog(LogRecord record, String[] inputArray) {","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"euzhengxi"},"content":"        String alert \u003d \"\\n------------\\n\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"                       \"| ALERT !!!|\\n\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"                       \"------------\\n\";","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"        String header \u003d \"Program Crashed: \";","lastModifiedDate":"2023-04-10"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"        String timeIdentifier \u003d \"\\nTime: \";","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"        return alert + header + inputArray[1] +timeIdentifier + record.getInstant();","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ollayf":1,"euzhengxi":72}},{"path":"src/main/java/seedu/securenus/SecureNUSLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import java.io.File;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Handler;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * SecureNUSLogger is a utility class that provides a configured logger for the","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * SecureNUS application. The logger writes log messages to a file with a custom","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * log format using the SecureNUSLogFormatter.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The logger can be used to log messages of different levels such as","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * INFO, WARNING, and SEVERE, among others.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"public class SecureNUSLogger {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"    public static final Logger LOGGER \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"euzhengxi"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"    private static final String LOGGER_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"    private static final String LOGGER_FILE \u003d \"logFiles.txt\";","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets up the logger with configurations such as log level, file handler,","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and custom log formatter. The method creates a log file in the specified","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * folder if it does not already exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"    public static void setUpLogger() {","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"euzhengxi"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"            String currentPath \u003d System.getProperty(SecureNUSLogger.USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"            String logFilesPath \u003d Paths.get(currentPath,","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"                    SecureNUSLogger.LOGGER_FOLDER, SecureNUSLogger.LOGGER_FILE).toString();","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"            File logFiles \u003d new File(logFilesPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"            if (!logFiles.createNewFile()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"                logFiles.createNewFile();","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"            FileHandler fileHandler \u003d new FileHandler(logFilesPath, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"            fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"            fileHandler.setFormatter(new SecureNUSLogFormatter());","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.addHandler(fileHandler);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"            LOGGER.log(Level.SEVERE, \"fatal, logger is not functioning\");","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Formats the given stack trace elements array into a readable string","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * representation.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param stacktrace An array of StackTraceElement objects.","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A formatted string representation of the stack trace.","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"    public static String formatStackTrace(StackTraceElement[] stacktrace) {","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        String formattedstacktrace \u003d \"\";","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"        for (StackTraceElement stackTraceElement : stacktrace) {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"            formattedstacktrace +\u003d \"\u003e\u003e\u003e \" + stackTraceElement.toString() + \"\\n\";","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"        return formattedstacktrace;","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Closes all the handlers associated with the logger. This method should","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * be called when the application is shutting down or when the logger is","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * no longer needed.","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"    public static void close() {","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        for (Handler handler : LOGGER.getHandlers()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"            handler.close();","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"            LOGGER.removeHandler(handler);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"ollayf":1,"DeepanjaliDhawan":25,"kairuler":1,"euzhengxi":50}},{"path":"src/main/java/seedu/securenus/command/AddBasicPasswordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to add a basic password.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"public class AddBasicPasswordCommand extends AddSecretCommand {","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"new\";","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"    private String username;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    private String url;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a basic password entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered this command","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the password entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the name of the folder is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    public AddBasicPasswordCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalSecretNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException, OperationCancelException, RepeatedIdException {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        this.url \u003d inquire(InquiryMessages.URL, \"URL\");","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        this.username \u003d inquire(InquiryMessages.USERNAME, \"Username\");","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        this.password \u003d inquire(InquiryMessages.PASSWORD, \"Password\");","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a basic password entry to a password manager based on an existing BasicPassword","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * object.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param basicPassword the BasicPassword object to use for constructing the command","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"stevenantya"},"content":"    public AddBasicPasswordCommand(BasicPassword basicPassword) {","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        super(basicPassword);","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        this.url \u003d basicPassword.getUrl();","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"        this.username \u003d basicPassword.getUsername();","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d basicPassword.getPassword();","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the AddBasicPasswordCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new BasicPassword object with the provided name, folderName, username, password, and url.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds the BasicPassword object to the secret storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input the username, password, and url if they are not provided in the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the BasicPassword object cannot be created or added to the storage, throws a RuntimeException.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a success message upon completion of execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The secret storage to add the BasicPassword object to.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if there is an issue adding the entry to the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        BasicPassword basicPasswordData \u003d new BasicPassword(name,folderName,username,password,url);","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(basicPasswordData);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(\"Repeated ID: Basic Password Command\");","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(\"Unknown Error: Basic Password Command\");","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(\"Unknown Error: Basic Password Command\");","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(\"Unknown Error: Basic Password Command\");","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new basic password:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"                \"name     \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"               \"folder   \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"               \"url      \u003d \" + url + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"               \"username \u003d \" + username + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"               \"password \u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns false, indicating that this command does not result in program exit.","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ollayf":36,"stevenantya":26,"DeepanjaliDhawan":42,"euzhengxi":1}},{"path":"src/main/java/seedu/securenus/command/AddCreditCardCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.ErrorMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":" * A class to add a new credit card to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from AddSecretCommand, which contains the common attributes","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and methods needed to add a secret to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"public class AddCreditCardCommand extends AddSecretCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"o/CreditCard\";","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    private String fullName;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    private String creditCardNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    private String cvcNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    private String expiryDate;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a credit card entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered this command","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the name of the folder is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the password entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    public AddCreditCardCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException, OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        fullName \u003d inquire(InquiryMessages.FULLNAME, \"Full Name\");","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        creditCardNumber \u003d inquireCreditCardNumber();","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        cvcNumber \u003d inquireCvcNumber();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        expiryDate \u003d inquireExpiryDate();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    public AddCreditCardCommand(CreditCard creditCard) throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        super(creditCard);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"        fullName \u003d creditCard.getFullName();","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"        creditCardNumber \u003d creditCard.getCreditCardNumber();","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        cvcNumber \u003d creditCard.getCvcNumber();","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        expiryDate \u003d creditCard.getExpiryDate();","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new credit card to the user\u0027s secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The user\u0027s secureNUSData object.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RuntimeException if there is a repeated id or if there is an issue with the name or folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            creditCard \u003d new CreditCard(name,folderName,fullName, creditCardNumber, cvcNumber, expiryDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        } catch (InvalidExpiryDateException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid expiry date, \" + expiryDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            Ui.printError(ErrorMessages.INVALID_EXPIRY_DATE);","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"            return;","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"        assert creditCard !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(creditCard);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"            Ui.printError(ErrorMessages.INVALID_EXPIRY_DATE);","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            Ui.printError(ErrorMessages.FOLDER_EXISTS);","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            Ui.printError(ErrorMessages.ILLEGAL_SECRET_NAME);","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"            Ui.printError(ErrorMessages.ILLEGAL_FOLDER_NAME);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new Credit Card:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"                \"Name           \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"                \"Folder         \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"                \"Full Name      \u003d \" + fullName + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"                \"Credit Card No \u003d \" + HIDDEN_FIELD + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"                \"CVC No         \u003d \" + HIDDEN_FIELD + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date    \u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter their credit card number.","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the valid credit card number entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"    public String inquireCreditCardNumber() throws OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        String creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER, \"Credit Card Number\");;","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        while(!CreditCard.isLegalCreditCardNumber(creditCardNumber)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.CREDIT_CARD_NUMBER_RETRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"            creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER, \"Credit Card Number\");","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        return creditCardNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"     * Overloaded method for unit testing purposes.","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"    public String inquireCreditCardNumber(Scanner scanner) throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"        String creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER, \"Credit Card Number\", scanner);;","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"        while(!CreditCard.isLegalCreditCardNumber(creditCardNumber)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"            System.out.println(InquiryMessages.CREDIT_CARD_NUMBER_RETRY);","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"            creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER, \"Credit Card Number\", scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"        return creditCardNumber;","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"    /*","lastModifiedDate":"2023-04-10"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter their CVC number.","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the valid CVC number entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"    public String inquireCvcNumber() throws OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"        String number \u003d inquire(InquiryMessages.CVC_NUMBER, \"CVC Number\");","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"        while(!CreditCard.isLegalCvcNumber(number)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.CVC_NUMBER_RETRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"            number \u003d inquire(InquiryMessages.CVC_NUMBER, \"CVC Number\");","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"        return number;","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"    public String inquireCvcNumber(Scanner scanner) throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"        String number \u003d inquire(InquiryMessages.CVC_NUMBER, \"CVC Number\", scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"        while(!CreditCard.isLegalCvcNumber(number)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"            System.out.println(InquiryMessages.CVC_NUMBER_RETRY);","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"            number \u003d inquire(InquiryMessages.CVC_NUMBER, \"CVC Number\", scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"kairuler"},"content":"        return number;","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter the expiry date of their credit card.","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the valid expiry date entered by the user","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"    public String inquireExpiryDate() throws OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"        String number \u003d inquire(InquiryMessages.EXPIRY_DATE, \"Expiry Date\");","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"        while(!CreditCard.isLegalExpiryDate(number)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.EXPIRY_DATE_RETRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"            number \u003d inquire(InquiryMessages.EXPIRY_DATE, \"Expiry Date\");","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"        return number;","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"kairuler"},"content":"    public String inquireExpiryDate(Scanner scanner) throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"kairuler"},"content":"        String number \u003d inquire(InquiryMessages.EXPIRY_DATE, \"Expiry Date\", scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"kairuler"},"content":"        while(!CreditCard.isLegalExpiryDate(number)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"kairuler"},"content":"            System.out.println(InquiryMessages.EXPIRY_DATE_RETRY);","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"kairuler"},"content":"            number \u003d inquire(InquiryMessages.EXPIRY_DATE, \"Expiry Date\", scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"kairuler"},"content":"        return number;","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":177,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":178,"author":{"gitId":"kairuler"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":179,"author":{"gitId":"kairuler"},"content":"        return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":180,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":90,"kairuler":44,"DeepanjaliDhawan":39,"euzhengxi":8}},{"path":"src/main/java/seedu/securenus/command/AddCryptoWalletCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the command to add a new Crypto wallet to the user\u0027s SecureNUS data.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the AddSecretCommand, which contains the common attributes","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and methods needed to add a secret to the user\u0027s SecureNUS data.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"public class AddCryptoWalletCommand extends AddSecretCommand {","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"o/Crypto\";","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    private String privateKey;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    private String seedPhrase;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a cryptocurrency wallet entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered this command","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the name of the folder is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the password entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public AddCryptoWalletCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException, OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        username \u003d inquire(InquiryMessages.USERNAME, \"Username\");","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        privateKey \u003d inquire(InquiryMessages.PRIVATE_KEY, \"Private Key\");","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        seedPhrase \u003d inquire(InquiryMessages.SEED_PHRASE, \"Seed Phrase\");","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for AddCryptoWalletCommand class.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Takes in a CryptoWallet object and extracts the necessary attributes needed to create a new CryptoWallet.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cryptoWallet The CryptoWallet object containing the necessary information to create a new CryptoWallet.","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    public AddCryptoWalletCommand(CryptoWallet cryptoWallet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        this.name \u003d cryptoWallet.getName();","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d cryptoWallet.getFolderName();","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        this.username \u003d cryptoWallet.getUsername();","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        this.privateKey \u003d cryptoWallet.getPrivateKey();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d cryptoWallet.getSeedPhrase();","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to add a cryptocurrency wallet entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the password manager to which the entry should be added","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if there is an issue adding the entry to the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d new CryptoWallet(name, folderName, username, privateKey, seedPhrase);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(cryptoWallet);","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new Student ID:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"                \"Folder     \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"                \"Username   \u003d \" + username + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"                \"Private Key\u003d \" + HIDDEN_FIELD + \"\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"                \"Seed Phrase\u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":67,"DeepanjaliDhawan":20,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/command/AddNUSNetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * A command to add a NUSNet password entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"public class AddNUSNetCommand extends AddSecretCommand {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"o/NUSNet\";","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    private String nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a NUSNet password entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered this command","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the name of the folder is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the password entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    public AddNUSNetCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException, OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        this.nusNetId \u003d inquireNusNetId();","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        this.password \u003d inquire(InquiryMessages.PASSWORD, \"Password\");;","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a NUSNet password entry to a password manager, using an existing NUSNet object.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param nusNet the existing NUSNet object to use for constructing the command","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"    public AddNUSNetCommand(NUSNet nusNet) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        super(nusNet);","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"        this.nusNetId \u003d nusNet.getNusNetId();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d nusNet.getPassword();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to add a NUSNet password entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the password manager to which the entry should be added","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if there is an issue adding the entry to the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNetIdData \u003d new NUSNet(name,folderName,nusNetId,password);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(nusNetIdData);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new NUS Net ID password:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"                \"folder     \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"                \"NUS Net ID \u003d \" + nusNetId + \"\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"                \"password   \u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user for a NUSNet ID and ensures that the ID is legal.","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the legal NUSNet ID entered by the user","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"    public String inquireNusNetId() throws OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"        String nusNetId \u003d inquire(InquiryMessages.NUSNET_ID, \"NUSNet ID\");","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        while (!NUSNet.isLegalId(nusNetId)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"            nusNetId \u003d inquire(InquiryMessages.NUSNET_ID_RETRY, \"NUSNet ID\");","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        return nusNetId;","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts a URL from the user input string.","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an empty string, as NUSNet entries do not have a URL field","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public String extractURL(String input) {","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return \"\";","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether this command is an \"exit\" command.","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as this command is not an \"exit\" command","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ollayf":33,"stevenantya":23,"DeepanjaliDhawan":52,"kairuler":1,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/command/AddSecretCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the Class to give a command to add a secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"public abstract class AddSecretCommand extends Command {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    protected String name;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    protected String folderName;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    public AddSecretCommand() {}","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a secret entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered this command","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param keyword the keyword that identifies the type of secret entry to add","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the secret entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the name of the folder is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    public AddSecretCommand(String input, HashSet\u003cString\u003e usedNames, String keyword) throws IllegalSecretNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException, RepeatedIdException {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        name \u003d extractName(input, keyword);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        checkNameAndFolderName(name, folderName, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a secret entry to a password manager, using an existing secret object.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the existing secret object to use for constructing the command","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public AddSecretCommand(Secret secret) {","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        name \u003d secret.getName();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks that the name and folder name for a new secret entry are legal and not repeated.","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the new secret entry","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name for the new secret entry","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the secret entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"    public void checkNameAndFolderName(String name, String folderName, HashSet\u003cString\u003e usedNames) throws","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException {","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"        assert folderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"euzhengxi"},"content":"        assert usedNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        if (!SecretMaster.isLegalFolderName(folderName)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"            throw new IllegalFolderNameException();","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        if (Secret.isIllegalName(name)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        if (usedNames.contains(name)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, repeated secret name, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            throw new RepeatedIdException();","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to add a new secret entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the password manager to add the new secret entry to","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if an error occurs during the execution of the command","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(name,folderName);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(secret);","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException | IllegalSecretNameException | IllegalFolderNameException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new Secret:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"                \"name     \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"                \"folder   \u003d \" + folderName + \"\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":60,"DeepanjaliDhawan":35,"euzhengxi":7}},{"path":"src/main/java/seedu/securenus/command/AddStudentIDCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the class to give a command to add a new Student ID to the SecureNUS system.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"public class AddStudentIDCommand extends AddSecretCommand {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"o/StudentID\";","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    private String studentId;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a new student ID entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string that triggered the command","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a set of names that have already been used in the password manager","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name of the secret entry is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the password manager already contains an entry with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the operation is cancelled by the user","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    public AddStudentIDCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException, OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        this.studentId \u003d inquireStudentID();","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a command for adding a new student ID entry to a password manager, using an existing student ID","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * object.","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the existing student ID object to use for constructing the command","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    public AddStudentIDCommand(StudentID studentID) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d studentID.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"stevenantya"},"content":"        this.folderName \u003d studentID.getFolderName();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"        this.studentId \u003d studentID.getStudentID();","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to add a new student ID entry to a password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the password manager to add the new student ID entry to","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if an error occurs during the execution of the command","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        StudentID studentIdData \u003d new StudentID(name,folderName,studentId);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"            secureNUSData.addSecret(studentIdData);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new Student ID:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"                \"Folder     \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"                \"Student ID \u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to enter a valid student ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the student ID entered by the user","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"    public String inquireStudentID() throws OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        String studentID \u003d inquire(InquiryMessages.STUDENT_ID, \"Student ID\");","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        while (!StudentID.isLegalId(studentID)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            studentID \u003d inquire(InquiryMessages.STUDENT_ID_RETRY, \"Student ID\");","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"        return studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return false, as it is not an exit command","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return false;","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ollayf":34,"stevenantya":23,"DeepanjaliDhawan":44,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/command/AddWifiPasswordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a command to add a WiFi Password to the password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the AddSecretCommand class.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"public class AddWifiPasswordCommand extends AddSecretCommand {","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    public static final String KEYWORD \u003d \"o/WifiPassword\";","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    private String password;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an AddWifiPasswordCommand object and initializes it with the user\u0027s input and usedNames.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to input the username and password for the Wifi Password.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames The set of names used in the password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException If the folder name is illegal.","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException If the secret name is illegal.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException If the ID of the secret is repeated.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If the user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    public AddWifiPasswordCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, RepeatedIdException, OperationCancelException {","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        super(input, usedNames, KEYWORD);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        username \u003d inquire(InquiryMessages.USERNAME, \"Username\");","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        password \u003d inquire(InquiryMessages.PASSWORD, \"Password\");","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an AddWifiPasswordCommand object and initializes it with a WifiPassword object.","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param wifiPassword The WifiPassword object.","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public AddWifiPasswordCommand(WifiPassword wifiPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        this.name \u003d wifiPassword.getName();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d wifiPassword.getFolderName();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        this.username \u003d wifiPassword.getUsername();","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        this.password \u003d wifiPassword.getPassword();","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds the WiFi Password to the password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain If an exception occurs while adding the secret to the password manager.","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws ExceptionMain {","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(name, folderName, username, password);","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            secureNUSData.addSecret(wifiPassword);","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        } catch (RepeatedIdException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalSecretNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        } catch (IllegalFolderNameException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"            throw new ExceptionMain(e.getMessage());","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"I have added a new Wifi Password:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"                \"name       \u003d \" + name + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"                \"Folder     \u003d \" + folderName + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"                \"Username   \u003d \" + username + \"\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"                \"Password   \u003d \" + HIDDEN_FIELD);","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":63,"DeepanjaliDhawan":18,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.NullFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The abstract class Command serves as a blueprint for all other command classes to inherit from. It contains two","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * abstract methods: isExit and execute, which must be implemented by any child classes.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class also provides utility methods for child classes, such as inquire, extractName, nameCheck,","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" * nameCheckWithExistence, folderCheckWithExistence, extractFolderName, query, and isEmptyEntry.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    protected static final String HIDDEN_FIELD \u003d \"*******\";","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    protected static final String CANCEL_COMMAND \u003d \"c/\";","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    private static final String EMPTY_STRING_REGEX \u003d \"[ ]*\";","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    private static final String FOLDER_DELIMITER \u003d \" f/\";","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command using the given SecretMaster object.","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object to be used in executing the command","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if there\u0027s any other exception","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the operation is cancelled","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    public abstract void execute (SecretMaster secureNUSData) throws SecretNotFoundException, ExceptionMain,","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"            NonExistentFolderException, OperationCancelException, FolderExistsException;","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        return false;","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    };","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires the user to answer a question.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"     * @param question the question to ask the user","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fieldName the field name related to the question","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the user\u0027s answer to the question","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    public String inquire(String question, String fieldName) throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"        assert question !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"euzhengxi"},"content":"        assert fieldName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        String result \u003d query(question);","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        while (isEmptyEntry(result)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"            System.out.println(String.format(InquiryMessages.TEMPLATE_EMPTY, fieldName));","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            result \u003d query(question);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        return result;","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"    public String inquire(String question, String fieldName, Scanner scanner) throws OperationCancelException {","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"        assert question !\u003d null;","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"        assert fieldName !\u003d null;","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"        String result \u003d query(question, scanner);","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"        while (isEmptyEntry(result)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"            System.out.println(String.format(InquiryMessages.TEMPLATE_EMPTY, fieldName));","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"            result \u003d query(question, scanner);","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"        return result;","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"     * Extracts the name of the secret from the input command.","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"     * @param input the input command string","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param keyword the keyword to search for in the input command string","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"     * @return the name of the secret","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"    public String extractName(String input, String keyword) {","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        String extractedName \u003d input.split(keyword + \" \")[1];","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        extractedName \u003d extractedName.split(FOLDER_DELIMITER)[0];","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        return extractedName;","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks the given name for validity and existence.","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name to check","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the name is null or empty","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    public void nameCheck(String name) throws NullSecretException, IllegalSecretNameException {","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"        if (name \u003d\u003d \"\" || name \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, secret name is empty/null, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            throw new NullSecretException();","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        if (Secret.isIllegalName(name)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * Checks the given name for validity, existence, and if it\u0027s in the usedNames HashSet.","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"    *","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @param name the name to check","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @param usedNames the HashSet of used names","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @throws NullSecretException if the name is null or empty","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @throws IllegalSecretNameException if the name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"    * @throws SecretNotFoundException if the name is in the usedNames HashSet","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"    */","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"    public void nameCheckWithExistence(String name, HashSet\u003cString\u003e usedNames) throws NullSecretException,","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"        if (name \u003d\u003d \"\" || name \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"            throw new NullSecretException();","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"        if (Secret.isIllegalName(name)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"        if (!usedNames.contains(name)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks the given folder name for validity, existence, and if it\u0027s in the folders HashSet.","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name to check","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders the HashSet of existing folders","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullFolderException if the folder name is null or empty","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder name is not in the folders HashSet","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"    public void folderCheckWithExistence(String folderName, HashSet\u003cString\u003e folders) throws NullFolderException,","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"            FolderNotFoundException, IllegalFolderNameException {","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        if (folderName \u003d\u003d \"\" || folderName \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, folder is empty/null, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"            throw new NullFolderException();","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"        if (!SecretMaster.isLegalFolderName(folderName)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"            throw new IllegalFolderNameException();","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, non existent folder name, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the input command.","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"     * @param input the input command string","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the folder name","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"euzhengxi"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"        String extractedFolderName \u003d \"unnamed\";","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"        if (input.split(FOLDER_DELIMITER).length \u003e 1) {","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d input.split(FOLDER_DELIMITER)[1];","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d extractedFolderName.split(\" \")[0];","lastModifiedDate":"2023-04-06"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Queries the user with a question and returns their response.","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param question the question to ask the user","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the user\u0027s response to the question","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels the operation","lastModifiedDate":"2023-04-09"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"    public String query(String question) throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":183,"author":{"gitId":"euzhengxi"},"content":"        assert question !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"        System.out.println(question);","lastModifiedDate":"2023-04-06"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"        String line \u003d Ui.readLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"        if (line.equals(CANCEL_COMMAND)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"info,\u003e\u003e\u003e\u003euser cancelled operation\");","lastModifiedDate":"2023-04-10"},{"lineNumber":188,"author":{"gitId":"ollayf"},"content":"            throw new OperationCancelException();","lastModifiedDate":"2023-04-06"},{"lineNumber":189,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":190,"author":{"gitId":"ollayf"},"content":"        return line;","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"    public String query(String question, Scanner scanner) throws OperationCancelException {","lastModifiedDate":"2023-04-10"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        assert question !\u003d null;","lastModifiedDate":"2023-04-10"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"        System.out.println(question);","lastModifiedDate":"2023-04-10"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"        String line \u003d Ui.readLine(scanner);","lastModifiedDate":"2023-04-10"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"        if (line.equals(CANCEL_COMMAND)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"            throw new OperationCancelException();","lastModifiedDate":"2023-04-10"},{"lineNumber":199,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"kairuler"},"content":"        return line;","lastModifiedDate":"2023-04-10"},{"lineNumber":201,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Determines if the input string is empty or null.","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string to check","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the input string is empty or null, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"ollayf"},"content":"    public boolean isEmptyEntry(String input) {","lastModifiedDate":"2023-04-06"},{"lineNumber":210,"author":{"gitId":"ollayf"},"content":"        return input.equals(\"\") ||","lastModifiedDate":"2023-04-06"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"                input.matches(EMPTY_STRING_REGEX) ||","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"ollayf"},"content":"                input \u003d\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":216,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints the current state of the secureNUSData object.","lastModifiedDate":"2023-04-09"},{"lineNumber":217,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":218,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object containing the current state","lastModifiedDate":"2023-04-09"},{"lineNumber":219,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":220,"author":{"gitId":"ollayf"},"content":"    public void printCurrentState(SecretMaster secureNUSData) {","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"ollayf"},"content":"        // used for debugging","lastModifiedDate":"2023-04-07"},{"lineNumber":222,"author":{"gitId":"ollayf"},"content":"        String printout \u003d \"Current Folders [\";","lastModifiedDate":"2023-04-07"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"        for (String foldern: secureNUSData.getFolders()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"ollayf"},"content":"            printout +\u003d \"\\n\" + foldern + \u0027,\u0027;","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"ollayf"},"content":"        printout +\u003d \"]\";","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"ollayf"},"content":"        System.out.println(printout);","lastModifiedDate":"2023-04-07"},{"lineNumber":228,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":229,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":122,"stevenantya":4,"kairuler":24,"DeepanjaliDhawan":68,"euzhengxi":11}},{"path":"src/main/java/seedu/securenus/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InsufficientParamsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to delete a secret from the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    private static final String SECRET_DELIMITER \u003d \"delete \";","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    private String[] secretNames;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new instance of DeleteCommand with the given input string.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string containing the names of secrets to be deleted","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException if no secret names are provided for deletion","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    public DeleteCommand(String input) throws InsufficientParamsException {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"        this.secretNames \u003d extractName(input);","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        if (secretNames.length \u003d\u003d 0) {","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"            throw new InsufficientParamsException();","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret to be deleted from the input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string from the user","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the name of the secret to be deleted","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"    public String[] extractName(String input) {","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        String extractedName \u003d input.split(SECRET_DELIMITER)[1].strip();","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        String[] extractedNames \u003d extractedName.split(\" \");","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        return extractedNames;","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the specified secret from the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object that stores all the secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret to be deleted is not found in the secureNUSData.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) throws SecretNotFoundException {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        String secretName;","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        for (int index \u003d 0; index \u003c secretNames.length; index +\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"            secretName \u003d secretNames[index];","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            if (Secret.isIllegalName(secretName)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"                Ui.inform(\"Invalid Secret Name: \" + secretName + \". Skipping this input\");","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"                continue;","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"            Secret deleteData \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"            boolean isValid \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"            try {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"                deleteData \u003d secureNUSData.getByName(secretName);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"                isValid \u003d true;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"            } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"                Ui.inform(\"Secret Not Found: \" + secretName + \". Skipping this input\");","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"stevenantya"},"content":"                isValid \u003d false;","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"            if (isValid \u0026\u0026 (deleteData !\u003d null)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"                try {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"                    secureNUSData.removeSecret(deleteData);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                    Ui.inform(\"Successfully deleted: \" + secretName);","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"                } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"                    Ui.printError(\"Secret Not Found: \" + secretName);","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":24,"stevenantya":31,"DeepanjaliDhawan":24,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/command/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.InquiryMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to edit a secret in the secureNUS application.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class extends the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class takes in a String input that specifies which secret to edit","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and the new values of the fields to be updated.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The EditCommand class extracts the new values of the fields from the input string using regular expressions.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The class then uses these values to edit the secret in the SecretMaster object.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    private String name;","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Represents a command to edit an existing secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input The input string containing the name of the secret to be edited.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames The set of used secret names to check if the specified secret exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException If the name of the secret to be edited is illegal.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException If the specified secret to be edited does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    public EditCommand(String input, HashSet\u003cString\u003e usedNames) throws IllegalSecretNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"            SecretNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        this.name \u003d extractName(input);","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        if (Secret.isIllegalName(name)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        } else if (!usedNames.contains(name)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, non existent secret, \" + input);","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name of the secret to be edited from user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Overrides the {@code extractName} method in the {@code Command} class.","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input user input string","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return name of the secret to be edited","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        return super.extractName(input, \"edit\");","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prompts the user to edit the fields of a given secret object and returns an array of the edited fields.","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The prompt message and input fields vary depending on the type of the secret object.","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret The secret object to be edited.","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return An array of the edited fields.","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If the user cancels the operation during the prompt.","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    public String[] inquireFields(Secret secret) throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d null;","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[3];","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquire(InquiryMessages.USERNAME_EDIT, \"Username\");","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            inquiredFields[1] \u003d inquire(InquiryMessages.PASSWORD_EDIT, \"Password\");","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            inquiredFields[2] \u003d inquire(InquiryMessages.URL_EDIT, \"URL\");","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[4];","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquire(InquiryMessages.FULLNAME_EDIT, \"Full Name\");","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"            inquiredFields[1] \u003d inquireCreditCardNumber();","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            inquiredFields[2] \u003d inquireCvcNumber();","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            inquiredFields[3] \u003d inquireExpiryDate();","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[2];","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquireNusNetId();","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"            inquiredFields[1] \u003d inquire(InquiryMessages.PASSWORD_EDIT, \"Password\");","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[1];","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquireStudentID();","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[2];","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquire(InquiryMessages.USERNAME_EDIT, \"Username\");","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"            inquiredFields[1] \u003d inquire(InquiryMessages.PASSWORD_EDIT, \"Password\");","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"            inquiredFields \u003d new String[3];","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"            inquiredFields[0] \u003d inquire(InquiryMessages.USERNAME_EDIT, \"Username\");","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"            inquiredFields[1] \u003d inquire(InquiryMessages.PRIVATE_KEY_EDIT, \"Private Key\");","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"            inquiredFields[2] \u003d inquire(InquiryMessages.SEED_PHRASE_EDIT, \"Seed Phrase\");","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"        return inquiredFields;","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires for the credit card number and verifies it is a valid number.","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The valid credit card number entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"    public String inquireCreditCardNumber() throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        String creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER_EDIT, \"Credit Card Number\");","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"        while (!CreditCard.isLegalCreditCardNumber(creditCardNumber)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.CREDIT_CARD_NUMBER_RETRY);","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"            creditCardNumber \u003d inquire(InquiryMessages.CREDIT_CARD_NUMBER_EDIT, \"Credit Card Number\");","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"        return creditCardNumber;","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires for the CVC number and verifies it is a valid number.","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The valid CVC number entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"    public String inquireCvcNumber() throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        String number \u003d inquire(InquiryMessages.CVC_NUMBER_EDIT, \"CVC Number\");","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        while (!CreditCard.isLegalCvcNumber(number)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.CVC_NUMBER_RETRY);","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"            number \u003d inquire(InquiryMessages.CVC_NUMBER_EDIT, \"CVC Number\");","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"        return number;","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires for the expiry date and verifies it is a valid date.","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The valid expiry date entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"    public String inquireExpiryDate() throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"        String number \u003d inquire(InquiryMessages.EXPIRY_DATE_EDIT, \"Expiry Date\");","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        while (!CreditCard.isLegalExpiryDate(number)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"            System.out.println(InquiryMessages.EXPIRY_DATE_RETRY);","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"            number \u003d inquire(InquiryMessages.EXPIRY_DATE_EDIT, \"Expiry Date\");","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"        return number;","lastModifiedDate":"2023-04-06"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires for the NUSNet ID and verifies it is a valid ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The valid NUSNet ID entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"    public String inquireNusNetId() throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"        String nusNetId \u003d inquire(InquiryMessages.NUSNET_ID_EDIT, \"NUSNet ID\");","lastModifiedDate":"2023-04-06"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"        while (!NUSNet.isLegalId(nusNetId)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"            nusNetId \u003d inquire(InquiryMessages.NUSNET_ID_RETRY, \"NUSNet ID\");","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"        return nusNetId;","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Inquires for the student ID and verifies it is a valid ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The valid student ID entered by the user.","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException If user cancels the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"    public String inquireStudentID() throws OperationCancelException {","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"        String studentID \u003d inquire(InquiryMessages.STUDENT_ID_EDIT, \"Student ID\");","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"        while (!StudentID.isLegalId(studentID)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"            studentID \u003d inquire(InquiryMessages.STUDENT_ID_RETRY, \"Student ID\");","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"        return studentID;","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the edit command on the provided {@code SecureNUSData} object.","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Edits the {@code Secret} object of the given {@code name}.","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Requests for fields to edit with {@code inquireFields}.","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the {@code SecureNUSData} object on which to execute the command","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the {@code Secret} object is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the operation is cancelled","lastModifiedDate":"2023-04-09"},{"lineNumber":189,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws SecretNotFoundException, OperationCancelException,","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"            FolderExistsException {","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        Secret secret;","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"        secret \u003d secureNUSData.getByName(name);","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"        String name \u003d secret.getName();","lastModifiedDate":"2023-04-06"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"        String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-04-06"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d inquireFields(secret);","lastModifiedDate":"2023-04-06"},{"lineNumber":199,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":200,"author":{"gitId":"euzhengxi"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":201,"author":{"gitId":"euzhengxi"},"content":"        assert folderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":202,"author":{"gitId":"euzhengxi"},"content":"        assert inquiredFields !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":203,"author":{"gitId":"kairuler"},"content":"        secureNUSData.editSecret(secret, name, folderName, inquiredFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":204,"author":{"gitId":"kairuler"},"content":"        if (folderName.equals(\"unnamed\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"Secret named: \\\"\" + name +\"\\\" has been edited!\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"kairuler"},"content":"                    \"Check it out using the \u0027search\u0027 or \u0027list\u0027 function!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":207,"author":{"gitId":"kairuler"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":208,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"Secret named: \\\"\" + name +\"\\\" of folder: \\\"\" + folderName + \"\\\" has been edited.\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":209,"author":{"gitId":"kairuler"},"content":"                    \"Check it out using the \u0027search\u0027 or \u0027list\u0027 function!\");","lastModifiedDate":"2023-04-06"},{"lineNumber":210,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-09"},{"lineNumber":212,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":91,"kairuler":44,"DeepanjaliDhawan":69,"euzhengxi":10}},{"path":"src/main/java/seedu/securenus/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to exit the password manager","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates an instance of ExitCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the exit command by doing nothing.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The secret master data to execute the command on","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns true to indicate that this command is an exit command.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"ollayf":2,"stevenantya":13,"DeepanjaliDhawan":19}},{"path":"src/main/java/seedu/securenus/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.NullFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * The ListCommand class represents the command to list all secrets in a specific folder or all secrets if no folder","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * is specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    private static final String FOLDER_DELIMITER \u003d \" f/\";","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    private String folderName;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A class representing the \"list\" command, which lists all secrets in a given folder or all folders.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string containing the folder name or \"list\" keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders the set of existing folder names","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the specified folder does not exist","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the specified folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullFolderException if the folder name is null","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    public ListCommand(String input, HashSet\u003cString\u003e folders) throws FolderNotFoundException,","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"            // if you want to display all secrets in all folders","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"            folderName \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"            // specifically for given secret, hence it cannot be null anymore","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"stevenantya"},"content":"            this.folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"            if (folderName \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"                throw new FolderNotFoundException();","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"            folderCheckWithExistence(folderName, folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the input does not contain the folder name, returns null.","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the extracted folder name or null if not found","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        String extractedFolderName \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        if (input.split(FOLDER_DELIMITER).length \u003e 1) {","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d input.split(FOLDER_DELIMITER)[1];","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d extractedFolderName.split(\" \")[0];","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Masks a string password by replacing its characters with asterisks.","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the string password to be masked.","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the masked password string.","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"    String maskStringPassword(String password) {","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return \"********\";","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Masks an integer password by converting it to a string of asterisks with the same length as the integer password.","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the integer password to be masked.","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the masked password string.","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public String maskIntPasswordAsString(int password) {","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return String.format(\"%0\" + String.valueOf(password).length() + \"d\", 0).replaceAll(\"0\", \"*\");","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type and details of the given secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the secret to get the type and details of.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return return the type and details of the secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public String getSecretTypeInfo(Secret secret) {","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"            BasicPassword basicPassword \u003d (BasicPassword) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Basic Password\" + \"\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"                   \"Name: \" + basicPassword.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"                   \"Folder: \" + basicPassword.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"                   \"Username: \" + basicPassword.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"                   \"URL: \" + basicPassword.getUrl() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"                   \"Password: \" + maskStringPassword(basicPassword.getPassword()) + \"\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"            CreditCard creditCard \u003d (CreditCard) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Credit Card\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + creditCard.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + creditCard.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Full Name: \" + creditCard.getFullName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Credit Card Number: \" + maskStringPassword(creditCard.getCreditCardNumber()) + \"\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"                    \"CVC Number: \" + maskStringPassword(creditCard.getCvcNumber()) + \"\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Expiry Date: \" + maskStringPassword(creditCard.getExpiryDate())+ \"\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"            CryptoWallet cryptoWallet \u003d (CryptoWallet) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: CryptoCurrency Wallet\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + cryptoWallet.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + cryptoWallet.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Username: \" + cryptoWallet.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Private Key: \" + maskStringPassword(cryptoWallet.getPrivateKey()) + \"\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Seed Phrase: \" + maskStringPassword(cryptoWallet.getSeedPhrase())+ \"\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"kairuler"},"content":"            NUSNet nusNet \u003d (NUSNet) secret;","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: NUSNet ID\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"                    \"Name: \" + nusNet.getName() + \"\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"                    \"Folder: \" + nusNet.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"NUSNet ID: \" + nusNet.getNusNetId() + \"\\n\" +","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password: \" + maskStringPassword(nusNet.getPassword()) + \"\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    ","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"            StudentID studentID \u003d (StudentID) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Student ID\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + studentID.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + studentID.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"                    \"Student ID: \" + maskStringPassword(studentID.getStudentID())+ \"\\n\";","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"            WifiPassword wifiPassword \u003d (WifiPassword) secret;","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Type of Secret: Wifi Password\" + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Name: \" + wifiPassword.getName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Folder: \" + wifiPassword.getFolderName() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Username: \" + wifiPassword.getUsername() + \"\\n\" +","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password: \" + maskStringPassword(wifiPassword.getPassword())+ \"\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"            return \"Secret\";","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the \u0027list\u0027 command to display a list of secrets stored in the secret master.","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If a folder name is specified, it only displays secrets within that folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object that stores the secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"stevenantya"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"stevenantya"},"content":"        ArrayList\u003cSecret\u003e secrets;","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"stevenantya"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"            if (folderName \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"stevenantya"},"content":"                secrets \u003d secureNUSData.listSecrets();","lastModifiedDate":"2023-03-21"},{"lineNumber":170,"author":{"gitId":"stevenantya"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":171,"author":{"gitId":"stevenantya"},"content":"                secrets \u003d secureNUSData.listSecrets(folderName);","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"stevenantya"},"content":"            if (secrets.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"                if (folderName \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"                    Ui.inform(\"You have no secrets stored yet.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"                } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"                    // should not reach here since these checks are done above","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"                    Ui.inform(\"There are no secrets in this folder: \" + folderName);","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"stevenantya"},"content":"                return;","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"            Ui.printLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":183,"author":{"gitId":"stevenantya"},"content":"            System.out.println(\"List of secrets:\");","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"            int counter \u003d 1;","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"stevenantya"},"content":"            for (Secret secret : secrets) {","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"DeepanjaliDhawan"},"content":"                String secretTypeInfo \u003d getSecretTypeInfo(secret);","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"DeepanjaliDhawan"},"content":"                System.out.println(counter + \". \" + secretTypeInfo);","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"                counter +\u003d 1;","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"ollayf"},"content":"            Ui.printLine();","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"stevenantya"},"content":"        } catch (NonExistentFolderException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"            Ui.printError(\"Folder \" + folderName + \" does not exist.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":46,"stevenantya":33,"DeepanjaliDhawan":111,"kairuler":3,"euzhengxi":2}},{"path":"src/main/java/seedu/securenus/command/MenuCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class that displays the list of all available commands in a menu format.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class MenuCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Displays the list of all available commands in a menu format.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public void displayMenu() {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"        Ui.inform(\"SecureNUS Command Menu:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"                \"1. Add a general password: new SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"                \"\\tAdd Credit Card details: \" +","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"                \"new o/CreditCard SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"                \"\\tAdd details for a Crypto Wallet: \" +","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"                \"new o/Crypto SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"                \"\\tAdd NUSNet ID and Password (e*******): \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"                \"new o/NUSNet SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"                \"\\tAdd NUS StudentID (A*******E): \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"                \"new o/StudentID SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"                \"\\tAdd a password for Wifi: \" +","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"                \"new o/WifiPassword SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"                \"2. Delete the unwanted secrets: delete SECRET_NAME_1 [SECRET_NAME_2] [SECRET...]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"                \"3. List all the secrets: list [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"                \"4. View secrets: view SECRET_NAME\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"                \"5. Search for secrets: search SECRET_NAME_LIKE [f/FOLDER]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"                \"6. Export the secrets to assets/database.txt file: save\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"                \"7. Edit a secrets: edit SECRET_NAME\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"                \"8. Menu list to refer for commands: menu\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"                \"9. Exit from SecureNUS (will automatically save this session): exit\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"                \"10. To cancel the current operation (e.g. mid adding/ editing password): c/\"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"        );","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the menu command, which displays the list of all available commands.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"        displayMenu();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"ollayf":24,"DeepanjaliDhawan":22}},{"path":"src/main/java/seedu/securenus/command/SaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.OperationMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"euzhengxi"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":" * Class that allows users to save whatever output keyed in so far","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the command to save the list of secrets to the storage.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData The instance of SecretMaster class that stores the list of secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"euzhengxi"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        Ui.inform(OperationMessages.SAVING);","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"        Backend.updateStorage(secureNUSData.listSecrets());","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        Ui.inform(OperationMessages.SAVE_COMPLETE);","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ollayf":7,"DeepanjaliDhawan":3,"euzhengxi":15}},{"path":"src/main/java/seedu/securenus/command/SearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to search for a secret by name in the SecretMaster.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Command class.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    private static final String FOLDER_DELIMITER \u003d \" f/\";","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    private String name;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    private String folderName;","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the search command.","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string entered by the user","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders the set of existing folder names","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    public SearchCommand(String input,","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"                         HashSet\u003cString\u003e folders) throws IllegalFolderNameException, IllegalSecretNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            FolderNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        name \u003d extractName(input, \"search\");","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        folderName \u003d extractFolderName(input);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        checkNameAndFolderName(name, folderName, folders);","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the given name and folder name are legal and exist in the set of folders.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the secret to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders the set of folder names to check against","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder does not exist in the set of folders","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    public void checkNameAndFolderName(String name, String folderName,","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"                                       HashSet\u003cString\u003e folders) throws","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, FolderNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"        assert folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        if (folderName !\u003d null \u0026\u0026 !SecretMaster.isLegalFolderName(folderName)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            throw new IllegalFolderNameException();","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        if (Secret.isIllegalName(name)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        if (folderName !\u003d null \u0026\u0026 !folders.contains(folderName)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, folder name not found, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the folder name from the input string if it exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the user input string","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the extracted folder name or null if it does not exist in the input string","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"    public String extractFolderName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"        String extractedFolderName \u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        if (input.split(FOLDER_DELIMITER).length \u003e 1) {","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d input.split(FOLDER_DELIMITER)[1];","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            extractedFolderName \u003d extractedFolderName.split(FOLDER_DELIMITER)[0];","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        return extractedFolderName;","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes a search for secrets in a specified folder or all folders with a given name.","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Outputs a formatted table of the search results.","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secureNUSData the SecretMaster object containing the secrets to be searched","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if a specified folder does not exist","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    public void execute(SecretMaster secureNUSData) throws NonExistentFolderException {","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"        assert secureNUSData !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cSecret\u003e secrets;","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        if (this.folderName !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"            // search a specific folder","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"            secrets \u003d secureNUSData.listSecrets(this.folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"            // search all passwords","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"            secrets \u003d secureNUSData.listSecrets();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"euzhengxi"},"content":"        assert secrets !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"        String tableHeader \u003d String.format(\"|%1$5s|%2$25s|%3$19s|\\n\",","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"                centerString(5, \"NO.\"),","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"                centerString(25, \"NAME\"),","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"                centerString(19, \"FOLDER\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"        Ui.printLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"        for (Secret secret : secrets) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"            if (secret.getName().contains(this.name)) { // case-sensitive search","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"                ++count;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"                String name \u003d secret.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"                String folder \u003d secret.getFolderName();","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"                if (name.length() \u003e 25) { // trim if exceeds table width","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"                    name \u003d name.substring(0, 25);","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"                if (folder.length() \u003e 19) {","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"                    folder \u003d folder.substring(0, 19);","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"                }","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"                output.append(String.format(\"|%1$5s|%2$25s|%3$19s|\\n\",","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"                        centerString(5, String.valueOf(count)),","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"                        centerString(25, name),","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"                        centerString(19, folder)));","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"No secrets found with the name provided.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"Found \" + count + \" matches!\\n\" + tableHeader +","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"                    output.substring(0, output.length() - 1)); // substring is for removing last newline char","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Centers a string within a specified width.","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param width the width to center the string within","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param s the string to center","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the centered string","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"    public String centerString(int width, String s) {","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"        return String.format(\"%-\" + width + \"s\",","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"                String.format(\"%\" + (s.length() + (width - s.length()) / 2) + \"s\", s));","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":41,"kairuler":59,"DeepanjaliDhawan":41,"euzhengxi":7}},{"path":"src/main/java/seedu/securenus/command/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a class to give a command to view a specific secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private String passwordName;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a ViewCommand object with the given input and set of used secret names.","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string containing the password name to be viewed","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames the set of names of secrets that have already been created","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the password name extracted from the input is null","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the password name extracted from the input is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    public ViewCommand(String input, HashSet\u003cString\u003e usedNames) throws NullSecretException,","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"        this.passwordName \u003d extractName(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        nameCheck(passwordName);","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        if (!usedNames.contains(passwordName)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Extracts the name from the given input string, with the specified keyword.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the input string to extract the name from","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the extracted name from the input string","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the input string is null","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalArgumentException if the specified keyword is null or empty","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    public String extractName(String input) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        return super.extractName(input, \"view\");","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Executes the \"view\" command with the specified secureNUSData object.","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param secureNUSData the secureNUSData object to execute the command on","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the secureNUSData object is null","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"    public void execute(SecretMaster secureNUSData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        Secret passwordSecret;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"            passwordSecret \u003d secureNUSData.getByName(this.passwordName);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"euzhengxi"},"content":"            assert passwordSecret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"            Ui.inform(passwordSecret.getRevealStr());","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"        } catch (SecretNotFoundException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"There are no passwords that matches that name!\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"                    \"Make sure you follow this format: \\\"view PASSWORD_NAME\\\"\");","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, secret not found, \" + this.passwordName);","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":16,"kairuler":20,"DeepanjaliDhawan":28,"euzhengxi":5}},{"path":"src/main/java/seedu/securenus/exceptions/ExceptionMain.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * ExceptionMain is a custom exception that extends the Exception class.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It is used for handling exceptions that occur during the main execution of the program.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"public class ExceptionMain extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs an ExceptionMain with the specified detail message.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    public ExceptionMain(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"        super(message);","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":1,"stevenantya":7,"DeepanjaliDhawan":9}},{"path":"src/main/java/seedu/securenus/exceptions/IllegalNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the name provided is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class IllegalNameException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/InsufficientParamsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when there are insufficient parameters provided for a command.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InsufficientParamsException extends Exception {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an invalid command is encountered.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":1,"stevenantya":3,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/InvalidFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an invalid field is encountered.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidFieldException extends Exception {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/NullFolderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a null folder is encountered.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class NullFolderException extends Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/OperationCancelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an operation is canceled in the middle of a command.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class OperationCancelException extends Exception {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/RepeatedIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an object with a repeated id is added to the system.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class RepeatedIdException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/UnknownException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an unknown exception occurs.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class UnknownException extends Exception {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public UnknownException(String message) {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"        super(message);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":7,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/FolderExistsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when trying to create a folder that already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"public class FolderExistsException extends Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":3,"DeepanjaliDhawan":4,"euzhengxi":1}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/FolderNotEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class FolderNotEmptyException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/FolderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder is not found or no folder is created.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class FolderNotFoundException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/IllegalFolderNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the folder name is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class IllegalFolderNameException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/IllegalSecretNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the name of the secret is illegal.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class IllegalSecretNameException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/InvalidCreditCardNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when an invalid credit card number is detected during validation","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidCreditCardNumberException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/InvalidCvcNumberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":" * Exception thrown when an invalid CVC number is detected during validation","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidCvcNumberException extends Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ollayf":4,"euzhengxi":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/InvalidExpiryDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the expiry date in the Credit Card is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class InvalidExpiryDateException extends Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/InvalidURLException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when the URL inputted by the user is of incorrect format","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"public class InvalidURLException extends Exception {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":1,"stevenantya":4,"DeepanjaliDhawan":2}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/NonExistentFolderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a user attempts to access a folder that does not exist","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class NonExistentFolderException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/NullSecretException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a null secret is encountered.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class NullSecretException extends Exception {","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/exceptions/secrets/SecretNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.exceptions.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Exception thrown when a secret with the given name cannot be found in the secret master.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class SecretNotFoundException extends Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":4,"DeepanjaliDhawan":3}},{"path":"src/main/java/seedu/securenus/messages/ErrorMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.messages;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Contains error messages for various exceptions and errors.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class ErrorMessages {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public static final String INVALID_COMMAND \u003d \"Invalid Command: Type \u0027menu\u0027 command to\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"            \" see the list of usable commands\";","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    public static final String INVALID_EXPIRY_DATE \u003d \"Invalid Expiry Date: Provide something of the format: MM/YY\";","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    public static final String REPEATED_ID \u003d \"RepeatedId: This name has been used before. Use a different name\";","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    public static final String ILLEGAL_FOLDER_NAME \u003d","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"            \"Illegal Folder Name: Please use only alphanumeric numbers and \u0027_\u0027\";","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"    public static final String ILLEGAL_SECRET_NAME \u003d","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"            \"Illegal Secret Name: Please use only alphanumeric numbers and \u0027_\u0027\";","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    public static final String FOLDER_EXISTS \u003d \"Folder Exists: This should not happen, please contact administrator \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            \"if you see this\";","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    public static final String INSUFFICIENT_PARAMS \u003d \"Insufficient Parameters: Add the required parameters for this \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"            \"command!\\nPlease use the \u0027menu\u0027 command if you are uncertain\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    public static final String INVALID_FIELD \u003d \"The input field {o/Field} does not exist! Try one that exists \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            \"from our menu.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    public static final String SECRET_NOT_FOUND \u003d \"The input Secret does not exist\";","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public static final String FOLDER_NOT_FOUND \u003d \"The input Folder does not exist\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    public static final String NULL_SECRET \u003d \"No Secret provided. Make sure to include the name of the secret you \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"            \"want to do this operation on\";","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    public static final String NULL_FOLDER \u003d \"Folder provided is Null input. Make sure to include the name of the \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            \"folder you want to do this operation on\";","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":21,"DeepanjaliDhawan":3,"kairuler":4}},{"path":"src/main/java/seedu/securenus/messages/InquiryMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.messages;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":" *  The Inquiries class contains constants representing different inquiry messages.","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":" *  These messages are used to prompt the user for information.","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"public class InquiryMessages {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"     *  The inquiry message for the user\u0027s full name.","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    public static final String TEMPLATE_EMPTY \u003d \"Your %s cannot be empty!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    public static final String FULLNAME \u003d \"Please enter your Full Name:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    public static final String FULLNAME_EDIT \u003d \"Enter the new Full Name:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"     * The inquiry message for the credit card number.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    public static final String CREDIT_CARD_NUMBER \u003d \"Please enter your Credit Card Number: (e.g. 1234 5678 9012 3456)\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    public static final String CREDIT_CARD_NUMBER_EDIT \u003d \"Enter your new Credit Card Number: \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            \"(e.g. 1234 5678 9012 3456)\";","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    public static final String CREDIT_CARD_NUMBER_RETRY \u003d \"Entry failed! Credit Card Number must be of the correct \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"            \"format \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"            \"(e.g. 1234 5678 9098 7612)\";","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"     * The inquiry message for the CVC number.","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    public static final String CVC_NUMBER \u003d \"Please enter your CVC Number:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    public static final String CVC_NUMBER_EDIT \u003d \"Enter the new CVC Number:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    public static final String CVC_NUMBER_RETRY \u003d \"Entry failed! CVC Number must be of the correct format \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"            \"(e.g. 123)\";","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"     * The inquiry message for the expiry date.","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    public static final String EXPIRY_DATE \u003d \"Please enter your Expiry Date:(MM/YY)\";","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    public static final String EXPIRY_DATE_EDIT \u003d \"Enter the new Expiry Date:(MM/YY)\";","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public static final String EXPIRY_DATE_RETRY \u003d \"Entry failed! Expiry Date must be of the correct format: (MM/YY)\";","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    public static final String USERNAME \u003d \"Please enter your username:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    public static final String USERNAME_EDIT \u003d \"Enter the new username:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    public static final String PASSWORD \u003d \"Please enter your password:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    public static final String PASSWORD_EDIT \u003d \"Enter the new password:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    public static final String URL \u003d \"Please enter the URL:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    public static final String URL_EDIT \u003d \"Enter the new URL:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    public static final String NUSNET_ID \u003d \"Please enter your NUS Net ID:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    public static final String NUSNET_ID_EDIT \u003d \"Enter the new NUS Net ID:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    public static final String NUSNET_ID_RETRY \u003d \"Entry failed! NUSNet ID must be of the correct NUS format \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"            \"(e.g. e0771234)\";","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    public static final String STUDENT_ID \u003d \"Please enter your Student ID:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    public static final String STUDENT_ID_EDIT \u003d \"Enter the new Student ID:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    public static final String STUDENT_ID_RETRY \u003d \"Entry failed! Student ID must be of the correct NUS format \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"            \"(e.g. A9876543R)\";","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    public static final String PRIVATE_KEY \u003d \"Please enter your Private Key:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    public static final String PRIVATE_KEY_EDIT \u003d \"Enter the new Private Key:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    public static final String SEED_PHRASE \u003d \"Please enter your Seed Phrase:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    public static final String SEED_PHRASE_EDIT \u003d \"Enter the new Seed Phrase:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":57}},{"path":"src/main/java/seedu/securenus/messages/OperationMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.messages;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Contains operation messages for the application.","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"public class OperationMessages {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"            \"     .--------.\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"            \"    / .------. \\\\\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"            \"   / /        \\\\ \\\\\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"            \"   | |        | |\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"            \"  _| |________| |_\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"            \".\u0027 |_|        |_| \u0027.\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"            \"\u0027._____ ____ _____.\u0027\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"            \"|     .\u0027____\u0027.     |\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"            \"\u0027.__.\u0027.\u0027    \u0027.\u0027.__.\u0027\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"            \"\u0027.__  | NUS  |  __.\u0027\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"            \"|   \u0027.\u0027.____.\u0027.\u0027   |\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"            \"\u0027.____\u0027.____.\u0027____.\u0027\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"            \"\u0027.________________.\u0027\\n\\n\";","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    public static final String INITIALISE \u003d","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"            LOGO +","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"            \"Welcome to secureNUS v2.1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"            \"Try out some of these commands:\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"            \"Adding a password      : new SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"            \"Adding a NUSNet ID     : new o/NUSNet SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"            \"Adding a Student ID    : new o/StudentID SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"            \"Adding a Credit Card   : new o/CreditCard SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"            \"Adding a Wifi Password : new o/WifiPassword SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            \"Adding a Crypto Wallet : new o/Crypto SECRET_NAME [f/FOLDER_NAME]\\n\" +","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"            \"Viewing all commands   : menu\\n\";","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    public static final String SAVING \u003d \"Saving secrets to storage, please do not close application...\";","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"    public static final String SAVE_COMPLETE \u003d \"Save complete. All secrets saved into assets/database.txt.\\nIf \" +","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            \"exporting to another device, save this file into the root directory\u0027s assets/database.txt before you \" +","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            \"start me again!\";","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public static final String CLOSE \u003d \"Thank you for using me. I hope you enjoyed the time!\";","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    public static final String CANCEL_OPERATION \u003d \"Operation Cancelled.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":36,"DeepanjaliDhawan":3,"euzhengxi":1}},{"path":"src/main/java/seedu/securenus/secrets/BasicPassword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * BasicPassword class represents a basic password entry that contains a username,","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":" * password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"stevenantya"},"content":"public class BasicPassword extends Secret{","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"BasicPassword\";","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"    private String username;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"stevenantya"},"content":"    private String url;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a BasicPassword object with the specified name, username, password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name name of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username username of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password password of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url URL of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    public BasicPassword(String name, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"                         String password, String url) {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        this.url \u003d url;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a BasicPassword object with the specified name, folder name, username, password, and URL.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name name of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName name of the folder that the basic password entry is stored in","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username username of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password password of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url URL of the basic password entry","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    public BasicPassword(String name, String folderName, String username,","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"                            String password, String url)  {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"        this.url \u003d url;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the type of the object","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password for basic password entry.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the password for basic password.","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the URL for basic password entry.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return URL for the basic password entry","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"    public String getUrl() {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"        return url;","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string representation of the BasicPassword object for the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return formatted string representation of the BasicPassword object for the database","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"Password,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"            \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.password) +","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"               \",\" + Backend.encode(this.url);","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the BasicPassword object for revealing the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return string representation of the BasicPassword object for revealing the password","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"stevenantya"},"content":"                        \"Url: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"stevenantya"},"content":"                        \"Username: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"                        \"Password: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"stevenantya"},"content":"                getName(), url, username, password);","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username associated with the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the username of the password","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"        return username;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the username of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the username is null","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"euzhengxi"},"content":"        assert username !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the password of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the password is null","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"        assert password !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the URL of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url the URL to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the URL is null","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    public void setUrl(String url) {","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"euzhengxi"},"content":"        assert url !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"        this.url \u003d url;","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":17,"stevenantya":30,"DeepanjaliDhawan":74,"kairuler":11,"euzhengxi":11}},{"path":"src/main/java/seedu/securenus/secrets/CreditCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCvcNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a credit card entry in the user\u0027s secrets list.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Stores the credit card\u0027s name, full name, credit card number, CVC number and expiry date.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Credit card numbers are expected to be a string of 16 digits, while expiry dates are expected to be in the format","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"public class CreditCard extends Secret {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"CreditCard\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    private static final String EXPIRY_DATE_FMT \u003d \"[0-1][0-9]/[0-9][0-9]\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    private static final String CREDIT_CARD_NUMBER_FMT \u003d \"\\\\d{4} \\\\d{4} \\\\d{4} \\\\d{4}\";","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    private static final String CVC_NUMBER_FMT \u003d \"\\\\d{3}\";","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    private String fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    private String creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    private String cvcNumber;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"    private String expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for a CreditCard object.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName Full name of the credit card owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber 16-digit credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber 3-digit CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException If the expiry date is not in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException If the credit card number is not a string of 16 digits.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public CreditCard(String name, String fullName,","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"                      String creditCardNumber,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"                      String cvcNumber, String expiryDate) throws","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"            InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        if (!creditCardNumber.matches(CREDIT_CARD_NUMBER_FMT)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, credit card number format is illegal, \" + expiryDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        if (!expiryDate.matches(EXPIRY_DATE_FMT)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error,credit card expiry date format is illegal, \" + expiryDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for a CreditCard object in a specific folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName Name of the folder containing the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName Full name of the credit card owner.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber 16-digit credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber 3-digit CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException If the expiry date is not in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"    public CreditCard(String name, String folderName,","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"                      String fullName, String creditCardNumber,","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                      String cvcNumber, String expiryDate) throws InvalidExpiryDateException {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"        if (!isLegalExpiryDate(expiryDate)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"    public static CreditCard addCreditCard(String name, String folderName, String","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"            fullName, String creditCardNumber, String cvcNumber, String expiryDate) throws","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"euzhengxi"},"content":"            InvalidExpiryDateException, InvalidCreditCardNumberException, InvalidCvcNumberException {","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        if (!creditCardNumber.matches(CREDIT_CARD_NUMBER_FMT)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"            throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"euzhengxi"},"content":"        if (!expiryDate.matches(EXPIRY_DATE_FMT)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"euzhengxi"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"        if (!isLegalCvcNumber(cvcNumber)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"euzhengxi"},"content":"            throw new InvalidCvcNumberException();","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"euzhengxi"},"content":"        return new CreditCard(name, folderName, fullName, creditCardNumber,","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"euzhengxi"},"content":"                cvcNumber, expiryDate);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the provided expiry date is legal.","lastModifiedDate":"2023-04-09"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate the expiry date to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the expiry date is legal, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the expiry date is null","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalExpiryDate(String expiryDate) {","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"        assert expiryDate !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        if (!expiryDate.matches(EXPIRY_DATE_FMT)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error,credit card expiry date format is illegal, \" + expiryDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"        String[] monthAndYear \u003d expiryDate.split(\"/\");","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"ollayf"},"content":"        int month \u003d Integer.parseInt(monthAndYear[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"        int year \u003d Integer.parseInt(monthAndYear[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"euzhengxi"},"content":"        if (month \u003c 1 || month \u003e 12 || year \u003c 1) {","lastModifiedDate":"2023-04-10"},{"lineNumber":122,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, credit card expiry date is illegal, \" + expiryDate);","lastModifiedDate":"2023-04-10"},{"lineNumber":123,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"        return month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12 \u0026\u0026 year \u003e\u003d 1;","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the provided credit card number is legal.","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber the credit card number to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the credit card number is legal, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the credit card number is null","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalCreditCardNumber(String creditCardNumber) {","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"euzhengxi"},"content":"        assert creditCardNumber !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"euzhengxi"},"content":"        if (!creditCardNumber.matches(CREDIT_CARD_NUMBER_FMT)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":136,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, credit card number is illegal, \" + creditCardNumber);","lastModifiedDate":"2023-04-10"},{"lineNumber":137,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        return creditCardNumber.matches(CREDIT_CARD_NUMBER_FMT);","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the provided CVC number is legal.","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param number the CVC number to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the CVC number is legal, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the CVC number is null","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalCvcNumber(String number) {","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"euzhengxi"},"content":"        assert number !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"euzhengxi"},"content":"        if (!number.matches(CVC_NUMBER_FMT)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":151,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, cvc is illegal, \" + number);","lastModifiedDate":"2023-04-10"},{"lineNumber":152,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"        return number.matches(CVC_NUMBER_FMT);","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the expiry date of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Expiry date of the credit card in the format \"MM/YY\".","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"ollayf"},"content":"    public String getExpiryDate() {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"ollayf"},"content":"        return expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the expiry date of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param expiryDate the expiry date to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the expiry date is null","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"kairuler"},"content":"    public void setExpiryDate(String expiryDate) throws InvalidExpiryDateException {","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"        assert expiryDate !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"        if (!isLegalExpiryDate(expiryDate)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"kairuler"},"content":"            throw new InvalidExpiryDateException();","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the full name associated with the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the full name associated with the credit card","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"ollayf"},"content":"    public String getFullName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"ollayf"},"content":"        return fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the full name of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":191,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param fullName the full name to be set","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the full name is null","lastModifiedDate":"2023-04-09"},{"lineNumber":194,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"ollayf"},"content":"    public void setFullName(String fullName) {","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"euzhengxi"},"content":"        assert fullName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":197,"author":{"gitId":"ollayf"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Gets the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the credit card number.","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"ollayf"},"content":"    public String getCreditCardNumber() {","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"ollayf"},"content":"        return creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the credit card number of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":211,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param creditCardNumber the credit card number to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":213,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if the credit card number is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":214,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the credit card number is null","lastModifiedDate":"2023-04-09"},{"lineNumber":215,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"ollayf"},"content":"    public void setCreditCardNumber(String creditCardNumber) throws InvalidCreditCardNumberException {","lastModifiedDate":"2023-04-07"},{"lineNumber":217,"author":{"gitId":"euzhengxi"},"content":"        assert creditCardNumber !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"ollayf"},"content":"        if (!isLegalCreditCardNumber(creditCardNumber)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":219,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCreditCardNumberException();","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":221,"author":{"gitId":"ollayf"},"content":"        this.creditCardNumber \u003d creditCardNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the CVC number of the credit card.","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the CVC number","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"ollayf"},"content":"    public String getCvcNumber() {","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"ollayf"},"content":"        return cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the CVC number of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":235,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param cvcNumber the CVC number to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCvcNumberException if the CVC number is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":238,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullPointerException if the CVC number is null","lastModifiedDate":"2023-04-09"},{"lineNumber":239,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"ollayf"},"content":"    public void setCvcNumber(String cvcNumber) throws InvalidCvcNumberException {","lastModifiedDate":"2023-04-07"},{"lineNumber":241,"author":{"gitId":"euzhengxi"},"content":"        assert cvcNumber !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"ollayf"},"content":"        if (!isLegalCvcNumber(cvcNumber)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":243,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCvcNumberException();","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"ollayf"},"content":"        this.cvcNumber \u003d cvcNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":248,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the credit card, including its credit card number,","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * CVC number, and expiry date.","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the credit card","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":255,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":256,"author":{"gitId":"ollayf"},"content":"        return String.format(","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"ollayf"},"content":"                \"Name: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"ollayf"},"content":"                \"Full Name: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"ollayf"},"content":"                \"Credit Card Number: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: %s\\n\" +","lastModifiedDate":"2023-04-04"},{"lineNumber":261,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: %s\", getName(), getFullName(), creditCardNumber, cvcNumber,","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"ollayf"},"content":"                expiryDate);","lastModifiedDate":"2023-03-21"},{"lineNumber":263,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the object that can be stored in the database.","lastModifiedDate":"2023-04-09"},{"lineNumber":267,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the object that can be stored in the database","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":270,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":272,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":273,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"CreditCard,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":274,"author":{"gitId":"euzhengxi"},"content":"                \",\" + Backend.encode(this.fullName) + \",\" + Backend.encode(this.creditCardNumber) + \",\" +","lastModifiedDate":"2023-04-09"},{"lineNumber":275,"author":{"gitId":"euzhengxi"},"content":"                Backend.encode(\"\" + this.cvcNumber) + \",\" + this.expiryDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":276,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-22"},{"lineNumber":277,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":278,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":117,"DeepanjaliDhawan":110,"kairuler":4,"euzhengxi":47}},{"path":"src/main/java/seedu/securenus/secrets/CryptoWallet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a Crypto Wallet secret that stores information","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * about a cryptocurrency wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"public class CryptoWallet extends Secret {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"CryptoWallet\";","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Username associated with the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"    private String privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    private String seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    private ArrayList\u003cString\u003e urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for CryptoWallet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name of the crypto wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username The username associated with the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey The private key of the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase The seed phrase of the wallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    public CryptoWallet(String name, String username,","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"                        String privateKey, String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new CryptoWallet object with specified name, folder name, username, private key, and seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name of the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey the private key associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase the seed phrase associated with the crypto wallet","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    public CryptoWallet(String name, String folderName, String username,","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"                        String privateKey, String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a CryptoWallet object with the specified name, folder name, username, private key, seed phrase,","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and URLs.","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the CryptoWallet object","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder that the CryptoWallet object belongs to","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username associated with the CryptoWallet object","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey the private key associated with the CryptoWallet object","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase the seed phrase associated with the CryptoWallet object","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param urls the list of URLs associated with the CryptoWallet object","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"    public CryptoWallet(String name, String folderName, String username,","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"                        String privateKey, String seedPhrase, ArrayList\u003cString\u003e urls) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        this.urls \u003d urls;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type of the object.","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the type of the object","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the username.","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        return username;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the username associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username A String representing the new username to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the private key associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the private key.","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"    public String getPrivateKey() {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"        return privateKey;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the private key of the CryptoWallet.","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param privateKey the private key to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"    public void setPrivateKey(String privateKey) {","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"        this.privateKey \u003d privateKey;","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the seed phrase associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A String representing the seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"    public String getSeedPhrase() {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        return seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the seed phrase associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param seedPhrase A String representing the new seed phrase to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"    public void setSeedPhrase(String seedPhrase) {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"        this.seedPhrase \u003d seedPhrase;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return An ArrayList of String objects representing the urls.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cString\u003e getUrls() {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        return urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param urls An ArrayList of String objects representing the new urls to be set.","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"    public void setUrls(ArrayList\u003cString\u003e urls) {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"        this.urls \u003d urls;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new url to the list of urls associated with the CryptoWallet.","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param url A String representing the new url to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"    public void addUrl(String url) {","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"euzhengxi"},"content":"        assert this.urls !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"        urls.add(url);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string representation of the secret\u0027s seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a formatted string representation of the secret\u0027s seed phrase.","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"                \"Seed Phrase: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"                \"Private Key: %s\", getName(), seedPhrase, privateKey);","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the object that can be stored in the database.","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the object that can be stored in the database","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"CryptoWallet,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"                \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.privateKey) + \",\" +","lastModifiedDate":"2023-03-22"},{"lineNumber":190,"author":{"gitId":"euzhengxi"},"content":"                Backend.encode(\"\" + this.seedPhrase);","lastModifiedDate":"2023-04-09"},{"lineNumber":191,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-04-09"},{"lineNumber":192,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":70,"DeepanjaliDhawan":99,"kairuler":4,"euzhengxi":20}},{"path":"src/main/java/seedu/securenus/secrets/NUSNet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents a NUSNet secret that stores the user\u0027s NUSNet ID and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"stevenantya"},"content":"public class NUSNet extends Secret{","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"NUSNet\";","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    private static final String ALLOWED_ID_REGEX \u003d \"(e|E)\\\\d{7}\";","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    private String nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    private String password;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for creating a NUSNet secret with a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName Name of the folder that the NUSNet account belongs to.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param nusNetId NUSNet ID of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password Password of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    public NUSNet(String name, String folderName, String nusNetId, String password) {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for creating a NUSNet secret without a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name Name of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param nusNetId NUSNet ID of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password Password of the account.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"    public NUSNet(String name, String nusNetId, String password) {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        super(name, \"unnamed\");","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalId(String nusNetId) {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        if (!nusNetId.matches(ALLOWED_ID_REGEX)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, NUSNet ID is illegal, \" + nusNetId);","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        return nusNetId.matches(ALLOWED_ID_REGEX);","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password of the NUSNet account","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The password of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"        return password;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"    public void setNusNetId(String nusNetId) {","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        this.nusNetId \u003d nusNetId;","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the NUSNet ID of the NUSNet account","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The NUSNet ID of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"    public String getNusNetId() {","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"        return nusNetId;","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string that represents the NUSNet secret in a form that can be stored in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The formatted string.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"        String formattedString \u003d  \"nusNetId,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"stevenantya"},"content":"                \",\" + this.nusNetId + \",\" + Backend.encode(this.password);","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"stevenantya"},"content":"        return formattedString;","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string that reveals the name, NUSNet ID and password of the NUSNet account.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The string that reveals the NUSNet secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"stevenantya"},"content":"                        \"NUSNet ID: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"stevenantya"},"content":"                        \"Password: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"stevenantya"},"content":"                getName(), nusNetId, password);","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":13,"stevenantya":35,"DeepanjaliDhawan":44,"kairuler":10,"euzhengxi":6}},{"path":"src/main/java/seedu/securenus/secrets/Secret.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Represents the basic \"Password-like\" class, which is intended to be the parent class of all future password classes.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class provides the basic attributes and methods required to store and retrieve password-like information.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"public class Secret {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"Secret\";","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A regex pattern for matching illegal characters in password names.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    private static final String ILLEGAL_CHARS_PATTERN \u003d \"^[a-zA-Z0-9_]*$\";","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The folder name of the password. By default, it is set to \"unnamed\".","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    private String folderName \u003d \"unnamed\";","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    private String uid \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new password with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    public Secret(String name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        // Assumes that name is not illegal before creation","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"stevenantya"},"content":"        uid \u003d name; // current just a duplicated, can be changed later","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  Constructs a new password with the given name and folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param name The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @param folderName The folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    public Secret(String name, String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        // Assumes that name is not illegal before creation","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        uid \u003d name; // current just a duplicated, can be changed later","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the given name contains any illegal characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name The name to be checked.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return if the name contains any illegal characters, false otherwise.","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"    public static boolean isIllegalName(String name) {","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, secret name is empty, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        } else if (!name.matches(ILLEGAL_CHARS_PATTERN)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid characters in secret, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        return name.equals(\"\") || !name.matches(ILLEGAL_CHARS_PATTERN);","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The unique identifier of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    public String getUid() {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        return uid;","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"    public String getName() {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        return name;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Edits the name of the password to the given new name and updates the unique identifier accordingly.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param newName The new name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    public void setName(String newName) {","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"stevenantya"},"content":"        uid \u003d newName;","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"        name \u003d newName;","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    public String getFolderName() {","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        return folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the folder name of the password to the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The new folder name of the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"ollayf"},"content":"    public void setFolderName(String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the password, formatted for storage in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return A string representation of the password, formatted for storage in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"stevenantya"},"content":"        return this.uid + \",\" + this.name + \",\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"stevenantya"},"content":"            this.folderName;","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an empty string as there is no information to reveal in this Secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return An empty string","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"        return \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":50,"DeepanjaliDhawan":70,"stevenantya":13,"euzhengxi":9}},{"path":"src/main/java/seedu/securenus/secrets/StudentID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class represents a student ID secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It inherits from the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class StudentID extends Secret {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"StudentID\";","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    private static final String ACCEPTED_ID_REGEX \u003d \"A[0-9]{7}[A-Z]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"stevenantya"},"content":"    private String studentID;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new StudentID object with the specified name and student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    public StudentID(String name, String studentID) {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        super(name);","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new StudentID object with the specified name, folder name, and student ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the folder name of the student ID secret","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    public StudentID(String name, String folderName, String studentID) {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type of the secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the type of the secret","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if the given student ID is legal","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentId the student ID to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the student ID is legal, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalId(String studentId) {","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"        if (!studentId.matches(ACCEPTED_ID_REGEX)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, Student ID is illegal, \" + studentId);","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        return studentId.matches(ACCEPTED_ID_REGEX);","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the student ID number.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the student ID number","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    public String getStudentID() {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"        return studentID;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the StudentID object for storing in the database.","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the StudentID object","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        String formattedString \u003d  \"studentID,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"            \",\" + this.studentID;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        return formattedString;","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the StudentID object.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the StudentID object","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"        return String.format(\"Name: %s\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"                        \"StudentID: %s\",","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"stevenantya"},"content":"                getName(), studentID);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the student ID of the StudentID object.","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param studentID the student ID to be set","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"    public void setStudentID(String studentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"        this.studentID \u003d studentID;","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":10,"stevenantya":27,"DeepanjaliDhawan":53,"kairuler":4,"euzhengxi":7}},{"path":"src/main/java/seedu/securenus/secrets/WifiPassword.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.Backend;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class to represent a Wi-Fi password and its associated information.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"public class WifiPassword extends Secret{","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"    public static final String TYPE \u003d \"WifiPassword\";","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    private String username;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    private String password;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new Wi-Fi password object with the specified name, username (optional), and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username (optional) used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    public WifiPassword(String name, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"                        String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        super(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        // username can be null","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new Wi-Fi password object with the specified name, folder name, username (optional), and password.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name the name of the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder containing the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    public WifiPassword(String name, String folderName, String username,","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"                         String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        super(name, folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the type of the secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the type of the secret","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    public String getType() {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        return TYPE;","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"    public String getUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        return username;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param username the username used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"    public void setUsername(String username) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        this.username \u003d username;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removes the username used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"    public void removeUsername() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        username \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the password used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    public String getPassword() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        return password;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the password used to connect to the Wi-Fi network.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param password the password used to connect to the Wi-Fi network","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"    public void setPassword(String password) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        this.password \u003d password;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a string representation of the Wi-Fi password object, including the password.","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a string representation of the Wi-Fi password object, including the password","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"    public String getRevealStr() {","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        return String.format(\"Name: %s\\n\"+","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"                \"Username: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"                \"Password: %s\", getName(), username, password);","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a formatted string representation of the Wi-Fi password object for database storage.","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a formatted string representation of the Wi-Fi password object for database storage","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"euzhengxi"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"    public String toStringForDatabase() {","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"        String formattedString \u003d  \"wifiPassword,\" + super.toStringForDatabase() +","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"euzhengxi"},"content":"                \",\" + Backend.encode(this.username) + \",\" + Backend.encode(this.password);","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"euzhengxi"},"content":"        return formattedString;","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":56,"DeepanjaliDhawan":54,"euzhengxi":8}},{"path":"src/main/java/seedu/securenus/storage/SecretEnumerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotEmptyException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Class that manages the storage and retrieval of secrets and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"public class SecretEnumerator {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"euzhengxi"},"content":"    private final ArrayList\u003cSecret\u003e storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Hashtable that stores secrets organized by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretEnumerator class.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    public SecretEnumerator() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        storage \u003d new ArrayList\u003cSecret\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        folders \u003d new Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretEnumerator class that takes in existing storage and folder data.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param storage ArrayList of Secret objects to be added to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders Hashtable of Secret objects organized by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"euzhengxi"},"content":"    public SecretEnumerator(ArrayList\u003cSecret\u003e storage, Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e folders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder in the Hashtable of folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be created.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists in the Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        if (folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, folder already exists, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"            throw new FolderExistsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        folders.put(folderName,","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"                new ArrayList\u003cSecret\u003e());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes a folder from the Hashtable of folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be deleted.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder does not exist in the Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotEmptyException if the folder is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    public void deleteFolder(String folderName) throws FolderNotFoundException, FolderNotEmptyException {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        if (!folders.get(folderName).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotEmptyException();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        folders.remove(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the Secret object located at the specified index in the storage list.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index the index of the Secret object to retrieve","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the Secret object at the specified index","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ArrayIndexOutOfBoundsException if the index is greater than or equal to the size of the storage list","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"    public Secret get(int index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        if (index \u003e\u003d storage.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        return storage.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves a Secret object from the storage ArrayList based on its index in the ArrayList.","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index the index of the Secret object to be retrieved","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder where the Secret object is stored","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the Secret object at the specified index in the specified folder","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ArrayIndexOutOfBoundsException if the specified index is out of bounds of the specified folder","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"    public Secret get(int index, String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"euzhengxi"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders.get(folderName) !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e tempStorage \u003d folders.get(folderName);","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        if (index \u003e\u003d tempStorage.size()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        return tempStorage.get(index);","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an ArrayList containing all the secrets stored in the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an ArrayList of all secrets stored in the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e getList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        return storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns an ArrayList containing all the secrets stored in the specified folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the folder does not exist, returns null.","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return an ArrayList of secrets stored in the specified folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e getList(String folderName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        return folders.get(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new secret to the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Throws FolderExistsException if the folder name already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret The secret to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder name already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"    public void add(Secret secret) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":151,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"        storage.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"        // creates a folder if it doesn\u0027t already exist","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(secret.getFolderName())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"            createFolder(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the given secret from the storage, including from its corresponding folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * If the folder becomes empty after the deletion, it will also be removed from the folders list.","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the secret to be deleted","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"    public void delete(Secret secret) {","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"        storage.remove(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).remove(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"        // delete folder if it is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"        if (folders.get(secret.getFolderName()).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"            folders.remove(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns the number of secrets stored in the container.","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the size of the container","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"euzhengxi"},"content":"    public int size() {","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":185,"author":{"gitId":"euzhengxi"},"content":"        return this.storage.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a HashSet of all the folder names currently in the container.","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a HashSet containing all folder names","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getFolders() {","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"euzhengxi"},"content":"        HashSet\u003cString\u003e folderHashset \u003d new HashSet();","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"euzhengxi"},"content":"        for (String name : this.folders.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"euzhengxi"},"content":"            folderHashset.add(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"euzhengxi"},"content":"        return folderHashset;","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a folder with the given name exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder to check","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the folder exists, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"ollayf"},"content":"    public boolean folderExists(String folderName) {","lastModifiedDate":"2023-04-07"},{"lineNumber":209,"author":{"gitId":"ollayf"},"content":"        return folders.containsKey(folderName);","lastModifiedDate":"2023-04-07"},{"lineNumber":210,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":83,"DeepanjaliDhawan":84,"euzhengxi":44}},{"path":"src/main/java/seedu/securenus/storage/SecretMaster.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCvcNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Master class that manages the storage and retrieval of secrets and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"public class SecretMaster {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    public static final String ALLOWED_NAMES_REGEX \u003d \"^[a-zA-Z0-9_]*$\"; // only alphanumeric allowed","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    public static final String DEFAULT_FOLDER \u003d \"unnamed\";","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private SecretSearcher secretSearcher;","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private SecretEnumerator secretEnumerator;","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    private HashSet\u003cString\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private HashSet\u003cString\u003e secretNames;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructs a new SecretMaster object with an empty set of folders and secret names, and","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Initializes the SecretSearcher and SecretEnumerator objects.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    public SecretMaster() {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        secretSearcher \u003d new SecretSearcher();","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        secretEnumerator \u003d new SecretEnumerator();","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        folders \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        secretNames \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Constructor for the SecretMaster class that takes in existing SecretSearcher and SecretEnumerator objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretSearcher SecretSearcher object containing existing secret data.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretEnumerator SecretEnumerator object containing existing secret data.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    public SecretMaster(SecretSearcher secretSearcher, SecretEnumerator secretEnumerator) {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"        this.secretSearcher \u003d secretSearcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        this.secretEnumerator \u003d secretEnumerator;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d secretEnumerator.getFolders();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        this.secretNames \u003d secretSearcher.getNames();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a given name is a legal name conforming to the standards.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param name String name to check.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return boolean indicating whether the name is legal.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    public static boolean isLegalFolderName(String name) {","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"euzhengxi"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"euzhengxi"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, folder name is empty, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        } else if (!name.matches(ALLOWED_NAMES_REGEX)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, special characters in folder name, \" + name);","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        return !name.equals(\"\") \u0026\u0026 name.matches(ALLOWED_NAMES_REGEX);","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the HashSet of folder names.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return HashSet of folder names.","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getFolders() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        return folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the SecretSearcher object.","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return SecretSearcher object.","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    public SecretSearcher getSecretSearcher() {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        return secretSearcher;","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the SecretEnumerator object.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *  @return SecretEnumerator object.","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    public SecretEnumerator getSecretEnumerator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the HashSet of secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return HashSet of secret names.","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getSecretNames() {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        return secretNames;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to be created.","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException, IllegalFolderNameException {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        if (!isLegalFolderName(folderName)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"            throw new IllegalFolderNameException();","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"            folders.add(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"            secretEnumerator.createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            secretSearcher.createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object at the given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index int index of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object at the given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"    public Secret getByIndex(int index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"euzhengxi"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.get(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object at the given index within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param index int index of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folder String name of the folder to retrieve the Secret from.","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object at the given index within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"ollayf"},"content":"    public Secret getByIndex(int index, String folder) {","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"euzhengxi"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":162,"author":{"gitId":"euzhengxi"},"content":"        assert folder.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.get(index, folder);","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secrets.","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e listSecrets() {","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.getList();","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves an ArrayList of all Secrets within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName String name of the folder to retrieve Secrets from.","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return ArrayList of all Secrets within the given folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"ollayf"},"content":"    public ArrayList\u003cSecret\u003e listSecrets(String folderName) throws NonExistentFolderException {","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"euzhengxi"},"content":"        assert folderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":186,"author":{"gitId":"euzhengxi"},"content":"        assert folderName.length() \u003e\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":187,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":188,"author":{"gitId":"ollayf"},"content":"        if (!folders.contains(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, non existent folder, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":190,"author":{"gitId":"ollayf"},"content":"            throw new NonExistentFolderException();","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.getList(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretName String name of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return Secret object with the given name.","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the Secret does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"kairuler"},"content":"    public Secret getByName(String secretName) throws SecretNotFoundException {","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"euzhengxi"},"content":"        assert secretName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":204,"author":{"gitId":"euzhengxi"},"content":"        assert secretName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":207,"author":{"gitId":"kairuler"},"content":"        if (!secretNames.contains(secretName)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, non existent secret name, \" + secretName);","lastModifiedDate":"2023-04-10"},{"lineNumber":209,"author":{"gitId":"kairuler"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"ollayf"},"content":"        return secretSearcher.get(secretName);","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a new Secret to the storage system.","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret Secret object to be added.","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder specified in the Secret already exists.","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the Secret has a repeated ID.","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the Secret name is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name in the Secret is not a legal name.","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"ollayf"},"content":"    public void addSecret(Secret secret) throws FolderExistsException, RepeatedIdException,","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, IllegalFolderNameException {","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":226,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":227,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":228,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":229,"author":{"gitId":"ollayf"},"content":"        if (!isLegalFolderName(secret.getName())) {","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"ollayf"},"content":"            throw new IllegalSecretNameException();","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"ollayf"},"content":"        if (secretNames.contains(secret.getUid())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, repeated ID, \" + secret.getUid());","lastModifiedDate":"2023-04-10"},{"lineNumber":234,"author":{"gitId":"ollayf"},"content":"            throw new RepeatedIdException();","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"ollayf"},"content":"        String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"ollayf"},"content":"        if (folderName !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"ollayf"},"content":"            createFolder(folderName);","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"ollayf"},"content":"        secretNames.add(secret.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"ollayf"},"content":"        secretEnumerator.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Edits a secret by changing its name, folder name, and/or inquired fields.","lastModifiedDate":"2023-04-09"},{"lineNumber":248,"author":{"gitId":"kairuler"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the secret to be edited","lastModifiedDate":"2023-04-09"},{"lineNumber":250,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param newName the new name of the secret (null to keep the old name)","lastModifiedDate":"2023-04-09"},{"lineNumber":251,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param newFolderName the new folder name of the secret (null to keep the old folder name)","lastModifiedDate":"2023-04-09"},{"lineNumber":252,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param inquiredFields an array of strings containing the new values for the inquired field","lastModifiedDate":"2023-04-09"},{"lineNumber":253,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                       (null to keep the old values)","lastModifiedDate":"2023-04-09"},{"lineNumber":254,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the new folder name already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":255,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"kairuler"},"content":"    public void editSecret(Secret secret, String newName, String newFolderName,","lastModifiedDate":"2023-04-04"},{"lineNumber":257,"author":{"gitId":"kairuler"},"content":"                           String[] inquiredFields) throws FolderExistsException {","lastModifiedDate":"2023-04-04"},{"lineNumber":258,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"euzhengxi"},"content":"        assert newName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"euzhengxi"},"content":"        assert newFolderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"euzhengxi"},"content":"        assert inquiredFields !\u003d null; //must it be more than 0?","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"euzhengxi"},"content":"        assert newName.length() \u003e 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"kairuler"},"content":"        secretNames.remove(secret.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"kairuler"},"content":"        secretSearcher.delete(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"kairuler"},"content":"        secretEnumerator.delete(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":272,"author":{"gitId":"kairuler"},"content":"        if (newName !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":273,"author":{"gitId":"kairuler"},"content":"            secret.setName(newName);","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":275,"author":{"gitId":"kairuler"},"content":"        if (newFolderName !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":276,"author":{"gitId":"kairuler"},"content":"            secret.setFolderName(newFolderName);","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":278,"author":{"gitId":"kairuler"},"content":"        if (secret instanceof BasicPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":279,"author":{"gitId":"kairuler"},"content":"            ((BasicPassword) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"kairuler"},"content":"            ((BasicPassword) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":281,"author":{"gitId":"kairuler"},"content":"            ((BasicPassword) secret).setUrl(inquiredFields[2]);","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CreditCard) {","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"kairuler"},"content":"            try {","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setFullName(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":285,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setCreditCardNumber(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"ollayf"},"content":"                ((CreditCard) secret).setCvcNumber(inquiredFields[2]);","lastModifiedDate":"2023-04-05"},{"lineNumber":287,"author":{"gitId":"kairuler"},"content":"                ((CreditCard) secret).setExpiryDate(inquiredFields[3]);","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"kairuler"},"content":"            } catch (InvalidCreditCardNumberException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":289,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid credit card number, \" + inquiredFields[1]);","lastModifiedDate":"2023-04-10"},{"lineNumber":290,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Invalid Credit Card Number! Must be 16 digits long\");","lastModifiedDate":"2023-04-07"},{"lineNumber":291,"author":{"gitId":"kairuler"},"content":"            } catch (InvalidExpiryDateException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":292,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid expiry date, \" + inquiredFields[3]);","lastModifiedDate":"2023-04-10"},{"lineNumber":293,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Invalid Expiry Date! Must be in the format \\\"MM/YY\\\"\");","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"ollayf"},"content":"            } catch (InvalidCvcNumberException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"euzhengxi"},"content":"                SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid cvc number, \" + inquiredFields[2]);","lastModifiedDate":"2023-04-10"},{"lineNumber":296,"author":{"gitId":"ollayf"},"content":"                Ui.printError(\"Invalid CVC Number! Must be in the correct format (e.g. 123):\");","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":298,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof NUSNet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":299,"author":{"gitId":"kairuler"},"content":"            ((NUSNet) secret).setNusNetId(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":300,"author":{"gitId":"kairuler"},"content":"            ((NUSNet) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":301,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof StudentID) {","lastModifiedDate":"2023-04-04"},{"lineNumber":302,"author":{"gitId":"kairuler"},"content":"            ((StudentID) secret).setStudentID(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":303,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof WifiPassword) {","lastModifiedDate":"2023-04-04"},{"lineNumber":304,"author":{"gitId":"kairuler"},"content":"            ((WifiPassword) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":305,"author":{"gitId":"kairuler"},"content":"            ((WifiPassword) secret).setPassword(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"kairuler"},"content":"        } else if (secret instanceof CryptoWallet) {","lastModifiedDate":"2023-04-04"},{"lineNumber":307,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setUsername(inquiredFields[0]);","lastModifiedDate":"2023-04-04"},{"lineNumber":308,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setPrivateKey(inquiredFields[1]);","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"kairuler"},"content":"            ((CryptoWallet) secret).setSeedPhrase(inquiredFields[2]);","lastModifiedDate":"2023-04-04"},{"lineNumber":310,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":311,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":312,"author":{"gitId":"kairuler"},"content":"        secretNames.add(secret.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"kairuler"},"content":"        secretSearcher.add(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"kairuler"},"content":"        secretEnumerator.add(secret);","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removes a Secret from the storage system.","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret Secret object to be removed.","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the Secret does not exist.","lastModifiedDate":"2023-03-28"},{"lineNumber":323,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"ollayf"},"content":"    public void removeSecret(Secret secret) throws SecretNotFoundException {","lastModifiedDate":"2023-03-03"},{"lineNumber":325,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":326,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretNames !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":327,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretEnumerator !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":328,"author":{"gitId":"euzhengxi"},"content":"        assert this.secretSearcher !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":329,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":330,"author":{"gitId":"ollayf"},"content":"        if (!secretNames.contains(secret.getUid())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, secret does not exists, \" + secret.getUid());","lastModifiedDate":"2023-04-10"},{"lineNumber":332,"author":{"gitId":"ollayf"},"content":"            throw new SecretNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":333,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":334,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":335,"author":{"gitId":"ollayf"},"content":"        secretNames.remove(secret.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":336,"author":{"gitId":"ollayf"},"content":"        secretEnumerator.delete(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":337,"author":{"gitId":"ollayf"},"content":"        secretSearcher.delete(secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":338,"author":{"gitId":"ollayf"},"content":"        String folderName \u003d secret.getFolderName();","lastModifiedDate":"2023-04-07"},{"lineNumber":339,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":340,"author":{"gitId":"ollayf"},"content":"        if (!folderContainsSecrets(folderName)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":341,"author":{"gitId":"ollayf"},"content":"            folders.remove(folderName);","lastModifiedDate":"2023-04-07"},{"lineNumber":342,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":343,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":344,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":345,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":346,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if a folder with the specified name contains any secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":347,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":348,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName the name of the folder to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":349,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return true if the folder contains secrets, false otherwise","lastModifiedDate":"2023-04-09"},{"lineNumber":350,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":351,"author":{"gitId":"ollayf"},"content":"    public boolean folderContainsSecrets(String folderName) {","lastModifiedDate":"2023-04-07"},{"lineNumber":352,"author":{"gitId":"ollayf"},"content":"        return secretEnumerator.folderExists(folderName);","lastModifiedDate":"2023-04-07"},{"lineNumber":353,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":354,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":134,"kairuler":51,"DeepanjaliDhawan":109,"stevenantya":1,"euzhengxi":59}},{"path":"src/main/java/seedu/securenus/storage/SecretSearcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotEmptyException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"euzhengxi"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * A class that stores and retrieves Secret objects by their unique identifier (UID) using a hash table.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * It also provides the ability to group secrets by folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"public class SecretSearcher {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A hash table that stores all Secret objects by their unique identifier (UID).","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, Secret\u003e storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * A hash table that stores secrets grouped by folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Each folder name maps to another hash table that stores Secret objects by their UID.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This allows for efficient retrieval of secrets based on both their UID and folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"    private final Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new instance of the SecretSearcher class with an empty storage and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    public SecretSearcher() {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        storage \u003d new Hashtable\u003cString, Secret\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        folders \u003d new Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new instance of the SecretSearcher class with the given storage and folders.","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param storage A hash table containing Secret objects to be stored in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders A hash table containing folders and their respective Secret objects to be stored in the","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *                search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"    public SecretSearcher(Hashtable\u003cString, Secret\u003e storage, Hashtable\u003cString, Hashtable\u003cString, Secret\u003e\u003e folders) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"        this.folders \u003d folders;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Retrieves the Secret object with the given UID from the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secretId The UID of the Secret object to retrieve.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return The Secret object with the given UID, or null if no Secret object with that UID exists in the","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *         search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    public Secret get(String secretId) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"euzhengxi"},"content":"        assert secretId !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        return storage.get(secretId);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Creates a new folder in the search index with the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The name of the folder to create.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the given name already exists in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    public void createFolder(String folderName) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"        assert folderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        if (folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, folder already exists, \" + folderName);","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            throw new FolderExistsException();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        folders.put(folderName,","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"                new Hashtable\u003cString, Secret\u003e());","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes a folder from the search index with the given folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folderName The name of the folder to delete.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if a folder with the given name does not exist in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotEmptyException if the folder to be deleted is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"    public void deleteFolder(String folderName) throws FolderNotFoundException, FolderNotEmptyException {","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"        assert folderName !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(folderName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"        if (!folders.get(folderName).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"            throw new FolderNotEmptyException();","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        folders.remove(folderName);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Adds a Secret object to the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret The Secret object to add to the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder specified by the Secret object does not exist in the search index.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"    public void add(Secret secret) throws FolderExistsException {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"        storage.put(secret.getUid(), secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        if (!folders.containsKey(secret.getFolderName())) {","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            createFolder(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).put(secret.getUid(), secret);","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Deletes the given Secret object from the storage and the folders Hashtable.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param secret the Secret object to delete","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    public void delete(Secret secret) {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"euzhengxi"},"content":"        assert secret !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"euzhengxi"},"content":"        assert this.folders !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        storage.remove(secret.getUid());","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"        folders.get(secret.getFolderName()).remove(secret.getUid());","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"        // delete folder if it is empty","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"        if (folders.get(secret.getFolderName()).isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"            folders.remove(secret.getFolderName());","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Returns a HashSet containing all the secret names in the storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a HashSet of strings containing all the secret names in the storage","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"    public HashSet\u003cString\u003e getNames() {","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"euzhengxi"},"content":"        assert this.storage !\u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":143,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"euzhengxi"},"content":"        HashSet\u003cString\u003e nameHashset \u003d new HashSet();","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"euzhengxi"},"content":"        for (String name : this.storage.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"euzhengxi"},"content":"            nameHashset.add(name);","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"euzhengxi"},"content":"        return nameHashset;","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ollayf":55,"DeepanjaliDhawan":61,"euzhengxi":34}},{"path":"src/main/java/seedu/securenus/ui/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddBasicPasswordCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddCreditCardCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddCryptoWalletCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddNUSNetCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddStudentIDCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.AddWifiPasswordCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.Command;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.DeleteCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.EditCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.ExitCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.ListCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.MenuCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.SearchCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.SaveCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.command.ViewCommand;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InsufficientParamsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InvalidCommandException;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InvalidFieldException;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.NullFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":" * Parses user commands and returns the corresponding command object.","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"public class Parser {","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses the user input command and returns the corresponding Command object.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"     *","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command the user input command string","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a HashSet containing all the used secret names","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param folders a HashSet containing all the folder names","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the corresponding Command object","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCommandException if the command is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException if there are insufficient parameters for the command","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user cancels an operation","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is a repeated ID for the student ID command","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidFieldException if the field to edit is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if the folder is not found","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the secret is null","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullFolderException if the folder is null","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    public static Command parse(String command, HashSet\u003cString\u003e usedNames, HashSet\u003cString\u003e folders) throws","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"            InvalidCommandException,","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            InsufficientParamsException, IllegalFolderNameException, IllegalSecretNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"            OperationCancelException, RepeatedIdException, InvalidFieldException, SecretNotFoundException,","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"            FolderNotFoundException, NullSecretException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        if (command.startsWith(\"new\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"            return parseAdd(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            checkCommand(command, \"delete\", 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"list\") || command.startsWith(\"list \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            return new ListCommand(command, folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"search\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"            checkCommand(command, \"search\", 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            return new SearchCommand(command, folders);","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"view\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"            checkCommand(command, \"view\", 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            return new ViewCommand(command, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"edit\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"            checkCommand(command, \"edit\", 2);","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            return new EditCommand(command, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"menu\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            return new MenuCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        } else if (command.equals(\"save\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"euzhengxi"},"content":"            return new SaveCommand();","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        }else if (command.equals(\"exit\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            // represents accidental wrong input","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid command, \" + command);","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses the \"add\" command and returns the corresponding Command object.","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command the \"add\" command to be parsed","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a HashSet containing the names of all existing secrets to ensure uniqueness","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the corresponding Command object","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException if the user input is insufficient","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the operation is cancelled","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is already a secret with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidFieldException if the field values are invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"    public static Command parseAdd(String command, HashSet\u003cString\u003e usedNames) throws InsufficientParamsException,","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException, IllegalSecretNameException, OperationCancelException, RepeatedIdException,","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"            InvalidFieldException {","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        if (command.startsWith(\"new o/\")) {","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"            return parseAddSpecial(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \") \u0026\u0026 command.split(\" \").length \u003e 1) {","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"            return new AddBasicPasswordCommand(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, invalid command to add secret \"","lastModifiedDate":"2023-04-10"},{"lineNumber":114,"author":{"gitId":"euzhengxi"},"content":"                + command);","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"            throw new InsufficientParamsException();","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Parses the \"add\" command for special secret types and returns the corresponding Command object.","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command the \"add\" command to be parsed","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param usedNames a HashSet containing the names of all existing secrets to ensure uniqueness","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the corresponding Command object","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the operation is cancelled","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is already a secret with the same ID","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidFieldException if the field values are invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException if the user input is insufficient","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"    public static Command parseAddSpecial(String command, HashSet\u003cString\u003e usedNames) throws OperationCancelException,","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"            IllegalFolderNameException, IllegalSecretNameException, RepeatedIdException, InvalidFieldException,","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"            InsufficientParamsException {","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"        if (command.split(\" \").length \u003c 3) {","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, insufficient secret fields, \" + command);","lastModifiedDate":"2023-04-10"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            throw new InsufficientParamsException();","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"        if (command.startsWith(\"new \" + AddCreditCardCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"            return new AddCreditCardCommand(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \" + AddCryptoWalletCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"            return new AddCryptoWalletCommand(command, usedNames); // Have to change to AddCryptoWalletCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \" + AddNUSNetCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"            return new AddNUSNetCommand(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \" + AddStudentIDCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"            return new AddStudentIDCommand(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \" + AddWifiPasswordCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"            return new AddWifiPasswordCommand(command, usedNames); // Have to change to AddWifiPasswordCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        } else if (command.startsWith(\"new \" + AddCreditCardCommand.KEYWORD + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"            return new AddCreditCardCommand(command, usedNames);","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.WARNING, \"error, attempt to add invalid secret, \" + command);","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"ollayf"},"content":"            throw new InvalidFieldException();","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a given command has the correct format, starting with a specific keyword followed by the minimum","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * required","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * number of parameters.","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param command the command to be checked","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param commandInitializer the specific keyword that the command must start with","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param minParams the minimum number of parameters required for the command","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException if the command has insufficient parameters","lastModifiedDate":"2023-04-09"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCommandException if the command does not start with the specified keyword","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"ollayf"},"content":"    public static void checkCommand(String command, String commandInitializer, int minParams) throws","lastModifiedDate":"2023-04-07"},{"lineNumber":169,"author":{"gitId":"ollayf"},"content":"            InsufficientParamsException, InvalidCommandException {","lastModifiedDate":"2023-04-07"},{"lineNumber":170,"author":{"gitId":"ollayf"},"content":"        if (command.equals(commandInitializer)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"            throw new InsufficientParamsException();","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"        if (!command.startsWith(commandInitializer + \" \")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"ollayf"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"ollayf"},"content":"        if (command.split(\" \").length \u003c minParams) {","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"ollayf"},"content":"            throw new InsufficientParamsException();","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":118,"DeepanjaliDhawan":54,"euzhengxi":8}},{"path":"src/main/java/seedu/securenus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"import seedu.securenus.SecureNUSLogger;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.messages.OperationMessages;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Ui class to handle all user interface printing.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class Ui {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    public static final String DUPLICATE_WHITESPACE_FMT \u003d \"\\\\s+\";","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Greets the user upon start up of the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"    public static void greetUser() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        System.out.println(OperationMessages.INITIALISE);","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a warning message to inform the user that the data stored in the application is corrupted.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"    public static void printCorruptedDataMessage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"    ____________\");","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"    | ALERT !! |\");","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"    ------------\");","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"Data stored is corrupted. Manual editing from the database.txt is not allowed!\");","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"1. Enter \u0027save\u0027 or continue this session to discard all previous data   OR\");","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"2. Press Ctrl + C to exit the application and \" +","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"                \"manually revert the data in database.txt back to it\u0027s last saved state\");","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"euzhengxi"},"content":"        System.out.println();","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a message to inform the user that their data from the previous session has been successfully loaded.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"euzhengxi"},"content":"    public static void printValidDataMessage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"---------------------------------------------------\");","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"| User data from previous session has been loaded |\");","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"---------------------------------------------------\");","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"euzhengxi"},"content":"        System.out.println();","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"euzhengxi"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a message to inform the user that a new session has started.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"euzhengxi"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"euzhengxi"},"content":"    public static void printNewSessionMessage() {","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"| A new session has started |\");","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"euzhengxi"},"content":"        System.out.println(\"-----------------------------\");","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"euzhengxi"},"content":"        System.out.println();","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a horizontal line to separate UI elements.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"    public static void printLine() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"stevenantya"},"content":"        System.out.print(\"_____________________________________________________\\n\");","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints an informative message surrounded by two lines of dashes.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param message the informative message to be printed","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"    public static void inform(String message) {","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        printLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        System.out.println(message);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        printLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Reads the user\u0027s command from the console.","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return String containing user\u0027s command.","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"stevenantya"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.INFO, \"command, \" + removeExtraWhiteSpaces(line));","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"            return removeExtraWhiteSpaces(line);","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"        return \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"    public static String readCommand(Scanner in) {","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"            return removeExtraWhiteSpaces(line);","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"        return \"\";","lastModifiedDate":"2023-04-10"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Reads a line of input from the user through the console.","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return a String containing the line of input entered by the user, or an empty String if no input is available","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"    public static String readLine() {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"euzhengxi"},"content":"            SecureNUSLogger.LOGGER.log(Level.INFO, \"input, \" + line);","lastModifiedDate":"2023-04-10"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"            return line;","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        return \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"    public static String readLine(Scanner in) {","lastModifiedDate":"2023-04-10"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"        while (in.hasNextLine()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"            return line;","lastModifiedDate":"2023-04-10"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"        return \"\";","lastModifiedDate":"2023-04-10"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removing the trailing backslashes","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This is commonly used when preparing strings for use in regular expressions or when saving to a file.","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param input the string to remove backslashes from","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the input string with all backslashes removed","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"    public static String removeBackSlashes(String input) {","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"        return input.replaceAll(\"\\\\\\\\\", \"\\\\\\\\\\\\\\\\\");","lastModifiedDate":"2023-04-10"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Removes any extra white spaces from the given string, such as consecutive duplicate spaces and leading/trailing","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * spaces.","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param line the input string to remove extra white spaces from","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @return the modified string with extra white spaces removed","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"    public static String removeExtraWhiteSpaces(String line) {","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"        // remove duplicate whitespaces","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"        line \u003d line.replaceAll(DUPLICATE_WHITESPACE_FMT, \" \");","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"        return line.trim(); // remove leading and trailing whitespaces","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints a message to inform the user to enter a command.","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"    public static void informUserToStartCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"        System.out.print(\"Enter Command:\");","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints error message to console.","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"stevenantya"},"content":"    public static void printError(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"ollayf"},"content":"        System.out.println(\"Oops! Error encountered: \"+ message);","lastModifiedDate":"2023-04-06"},{"lineNumber":159,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Prints out a message to the console to inform the user that an operation has been cancelled.","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"ollayf"},"content":"    public static void informOperationCancel () {","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"ollayf"},"content":"        System.out.println(OperationMessages.CANCEL_OPERATION);","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Closes the scanner used for user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"ollayf"},"content":"    public static void close() {","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"ollayf"},"content":"        in.close();","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ollayf":47,"stevenantya":20,"DeepanjaliDhawan":57,"kairuler":18,"euzhengxi":32}},{"path":"src/test/java/seedu/securenus/BackendTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.ui.Ui;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import java.io.File;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"euzhengxi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for Backend.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"euzhengxi"},"content":"public class BackendTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"euzhengxi"},"content":"    private static final Logger LOGGER \u003d SecureNUSLogger.LOGGER;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    private static final String DATABASE_FILE \u003d \"testDatabase.txt\";","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    private static final String DATABASE_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private static final String DELIMITER \u003d \",\";","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"     * Tests the reading of user data (all possible password fields) from the database","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    public void readAndUpdateSecretsArrayListSecrets() {","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"            SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"            String[] basicPasswordArray \u003d {\"Password\", \"password1\", \"password1\",","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"                \"unnamed\", \"DKENCvtfsobnf2\", \"DKENCqbttxpse2\", \"gg.com\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"            String[] nusnetIdArray \u003d {\"nusNetId\", \"nusnet1\", \"nusnet1\",","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"                \"folder1\", \"e0987654\", \"DKENCqbttxpse\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"            String[] studentIdArray \u003d {\"studentID\", \"usr1\", \"usr1\", \"folder1\", \"A0987654X\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"            String[] creditCardArray \u003d {\"CreditCard\", \"usr2\", \"usr2\", \"folder1\", \"DKENCgvmmpnqf\",","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"                \"DKENC1111!1111!1111!1111\", \"DKENC234\", \"03/26\",};","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"            String[] cryptoWalletArray \u003d {\"CryptoWallet\", \"usr3\", \"usr3\", \"folder1\",","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"                \"DKENCvtfsobnf2\", \"DKENCqbttxpse2\", \"DKENCqbttxpse2\", \"idk.com\", \"129\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"            String[] wifiPasswordArray \u003d {\"wifiPassword\", \"usr4\", \"usr4\", \"folder1\",","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"                \"DKENCvtfsobnf2\", \"DKENCqbttxpse2\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(basicPasswordArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(nusnetIdArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(studentIdArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(creditCardArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(cryptoWalletArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"            Backend.readAndUpdate(wifiPasswordArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            ArrayList\u003cSecret\u003e secretList \u003d secretMaster.getSecretEnumerator().getList();","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(0).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"                    \"Password,password1,password1,unnamed,DKENCvtfsobnf2,DKENCqbttxpse2,DKENCm\");","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(1).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"                    \"nusNetId,nusnet1,nusnet1,folder1,e0987654,DKENCqbttxpse\");","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(2).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"                    \"studentID,usr1,usr1,folder1,A0987654X\");","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(3).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"                    \"CreditCard,usr2,usr2,folder1,DKENCgvmmpnqf,DKENC1111!1111!1111!1111,DKENC234,03/26\");","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(4).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"                    \"CryptoWallet,usr3,usr3,folder1,DKENCvtfsobnf2,DKENCqbttxpse2,DKENCqbttxpse2\");","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"            assertEquals(secretList.get(5).toStringForDatabase(),","lastModifiedDate":"2023-04-10"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"                    \"wifiPassword,usr4,usr4,folder1,DKENCvtfsobnf2,DKENCqbttxpse2\");","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"            LOGGER.log(Level.WARNING, e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"     * Tests the encoding and decoding of special characters.","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"    public void encodeAndDecodeSpecialCharactersTrue() {","lastModifiedDate":"2023-04-10"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        assertEquals(","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"                Backend.decode(Backend.encode(\"~!@#$%^\u0026*()_+{}|:\u003c\u003e?,./;\u0027[]\\\\\")), \"~!@#$%^\u0026*()_+{}|:\u003c\u003e?,./;\u0027[]\\\\\");","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"euzhengxi"},"content":"    public void encodeAndDecodeAlphanumericTrue() {","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"        assertEquals(","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"euzhengxi"},"content":"                Backend.decode(Backend.encode(\"1234567890QWERTYUIOPASDFGHJK\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"euzhengxi"},"content":"                        \"LZXCVBNMqwertyuiopasdfghjklzxcvbnm\")),","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"euzhengxi"},"content":"                \"1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm\");","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"euzhengxi"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"     * Tests the parsing of empty fields.","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"euzhengxi"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"    public void parseEmptyField_emptyEmpty() {","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"        assertEquals(Backend.parseEmptyField(\"empty\"), \"\");","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"        assertNotEquals(Backend.parseEmptyField(\"Empty\"), \"\");","lastModifiedDate":"2023-04-10"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"    public void hashHashedDataTrue() {","lastModifiedDate":"2023-04-10"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"        String[] basicPasswordArray \u003d {\"Password\", \"password1\", \"password1\",","lastModifiedDate":"2023-04-10"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"            \"folder1\", \"DKENCvts2\", \"DKENCqbtt2\", \"idk.com\", \"5847\"};","lastModifiedDate":"2023-04-10"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-10"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"            secretMaster \u003d Backend.readAndUpdate(basicPasswordArray, secretMaster);","lastModifiedDate":"2023-04-10"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"            ArrayList\u003cSecret\u003e secretList \u003d secretMaster.getSecretEnumerator().getList();","lastModifiedDate":"2023-04-10"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"            String data \u003d secretList.get(secretList.size() - 1).toStringForDatabase();","lastModifiedDate":"2023-04-10"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"            boolean isCorrupted \u003d !Backend.hash(data).equals(basicPasswordArray[basicPasswordArray.length - 1]);","lastModifiedDate":"2023-04-10"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"            assertFalse(isCorrupted);","lastModifiedDate":"2023-04-10"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"            LOGGER.log(Level.WARNING, e.getMessage());","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"    void updateStorage_updatesDatabaseFileWithNewSecret() {","lastModifiedDate":"2023-04-10"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"        // Set up","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cSecret\u003e secrets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"        Secret testBasicPassword \u003d new BasicPassword(\"TestPassword\", \"testusername\", \"testpassword\", \"website.com\");","lastModifiedDate":"2023-04-10"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"        secrets.add(testBasicPassword);","lastModifiedDate":"2023-04-10"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"        String pathOfCurrentDirectory \u003d System.getProperty(USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-04-10"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"        String databasePath \u003d pathOfCurrentDirectory + File.separator","lastModifiedDate":"2023-04-10"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"                + DATABASE_FOLDER + File.separator + DATABASE_FILE;","lastModifiedDate":"2023-04-10"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"        File database \u003d new File(databasePath);","lastModifiedDate":"2023-04-10"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"        if (database.exists()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"            database.delete();","lastModifiedDate":"2023-04-10"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":131,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"            database.createNewFile();","lastModifiedDate":"2023-04-10"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-10"},{"lineNumber":135,"author":{"gitId":"euzhengxi"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"euzhengxi"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"kairuler"},"content":"        // Execution","lastModifiedDate":"2023-04-10"},{"lineNumber":138,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"            FileWriter myWriter \u003d new FileWriter(database);","lastModifiedDate":"2023-04-10"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"            for (int i \u003d 0; i \u003c secrets.size(); i++) {","lastModifiedDate":"2023-04-10"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"                Secret secret \u003d secrets.get(i);","lastModifiedDate":"2023-04-10"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":143,"author":{"gitId":"kairuler"},"content":"                myWriter.write(secret.toStringForDatabase() + \",\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"                        Backend.hash(secret.toStringForDatabase()) + \"\\n\");","lastModifiedDate":"2023-04-10"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"            }","lastModifiedDate":"2023-04-10"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"            myWriter.close();","lastModifiedDate":"2023-04-10"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"            Ui.inform(\"Database is not initialised! All user data will not be saved\");","lastModifiedDate":"2023-04-10"},{"lineNumber":149,"author":{"gitId":"kairuler"},"content":"            LOGGER.log(Level.SEVERE, SecureNUSLogger.formatStackTrace(e.getStackTrace()));","lastModifiedDate":"2023-04-10"},{"lineNumber":150,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":151,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":152,"author":{"gitId":"kairuler"},"content":"        // Assertion","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"kairuler"},"content":"        String expected \u003d testBasicPassword.toStringForDatabase() + \",\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":154,"author":{"gitId":"kairuler"},"content":"                Backend.hash(testBasicPassword.toStringForDatabase());","lastModifiedDate":"2023-04-10"},{"lineNumber":155,"author":{"gitId":"kairuler"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2023-04-10"},{"lineNumber":156,"author":{"gitId":"kairuler"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(database))) {","lastModifiedDate":"2023-04-10"},{"lineNumber":157,"author":{"gitId":"kairuler"},"content":"            actual \u003d reader.readLine();","lastModifiedDate":"2023-04-10"},{"lineNumber":158,"author":{"gitId":"kairuler"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":159,"author":{"gitId":"kairuler"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-04-10"},{"lineNumber":160,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":161,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-04-10"},{"lineNumber":162,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":163,"author":{"gitId":"euzhengxi"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":1,"kairuler":132,"DeepanjaliDhawan":10,"euzhengxi":20}},{"path":"src/test/java/seedu/securenus/SecureNUSLogFormatterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import java.time.Instant;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import java.util.logging.LogRecord;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"class SecureNUSLogFormatterTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"    public void format() {","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        SecureNUSLogFormatter formatter \u003d new SecureNUSLogFormatter();","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"        LogRecord record \u003d new LogRecord(Level.INFO, \"This is a test message\");","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"        record.setInstant(Instant.parse(\"2022-01-01T00:00:00Z\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"        record.setSourceClassName(\"TestClass\");","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"        record.setSourceMethodName(\"testMethod\");","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"        String actual \u003d formatter.format(record);","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"euzhengxi"},"content":"        assertEquals(\"\", actual);","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":23,"euzhengxi":1}},{"path":"src/test/java/seedu/securenus/SecureNUSLoggerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import java.io.File;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"class SecureNUSLoggerTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"    private static final String USER_DIRECTORY_IDENTIFIER \u003d \"user.dir\";","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"    private static final String LOGGER_FOLDER \u003d \"assets\";","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"    private static final  String LOGGER_FILE \u003d \"logFilesTest.txt\";","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    private Logger logger;","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"    private FileHandler fileHandler;","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"        logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"        String currentPath \u003d System.getProperty(USER_DIRECTORY_IDENTIFIER);","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"        String logFilesPath \u003d Paths.get(currentPath, LOGGER_FOLDER, LOGGER_FILE).toString();","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"        File logFiles \u003d new File(logFilesPath);","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        if (!logFiles.exists()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"            logFiles.createNewFile();","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"        fileHandler \u003d new FileHandler(logFilesPath, true);","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        fileHandler.setLevel(Level.WARNING);","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        fileHandler.setFormatter(new SecureNUSLogFormatter());","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"        logger.addHandler(fileHandler);","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    void setUpLogger() {","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"        assertNotNull(logger.getHandlers());","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        assertEquals(1, logger.getHandlers().length);","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"        assertEquals(fileHandler, logger.getHandlers()[0]);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    void formatStackTrace() {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        StackTraceElement[] stackTrace \u003d Thread.currentThread().getStackTrace();","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"        String actualOutput \u003d SecureNUSLogger.formatStackTrace(stackTrace);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"        String expectedOutput \u003d \"\";","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        for (StackTraceElement stackTraceElement : stackTrace) {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"            expectedOutput +\u003d \"\u003e\u003e\u003e \" + stackTraceElement.toString() + \"\\n\";","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"    void close() {","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        SecureNUSLogger.close();","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"        assertEquals(0, logger.getHandlers().length);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":68}},{"path":"src/test/java/seedu/securenus/SecureNUSTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.Command;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.storage.SecretEnumerator;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.storage.SecretSearcher;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.ui.Parser;","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.messages.ErrorMessages;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for SecureNUS.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"public class SecureNUSTest {","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private SecureNUS secureNUS;","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    private SecretMaster secureNUSData;","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    public void setUp() throws FolderExistsException, IllegalFolderNameException {","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"        secureNUS \u003d new SecureNUS();","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"        Secret testBasicPassword \u003d new BasicPassword(\"TestPassword\", \"testusername\", \"testpassword\", \"website.com\");","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"        ArrayList\u003cSecret\u003e secrets \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        secrets.add(testBasicPassword);","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e foldersHashTable \u003d new Hashtable\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"        foldersHashTable.put(\"Passwords\", secrets);","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        SecretEnumerator secretEnumerator \u003d new SecretEnumerator(secrets, foldersHashTable);","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"        SecretSearcher secretSearcher \u003d new SecretSearcher(new Hashtable\u003c\u003e(),","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"                Backend.createHashtableFolders(foldersHashTable));","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"        secureNUSData \u003d new SecretMaster(secretSearcher, secretEnumerator);","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    @AfterAll","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"    public static void reset() {","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        System.setIn(System.in);","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"    public void executeCommand_exitCommand_successful() throws Exception {","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        String commandString \u003d \"exit\";","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"        Command exitCommand \u003d Parser.parse(commandString, secureNUSData.getSecretNames(), secureNUSData.getFolders());","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"        assertTrue(secureNUS.executeCommand(exitCommand));","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"    public void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        String userInput \u003d \"invalid command\";","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(userInput.getBytes());","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"        secureNUS.parseCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"Enter Command:_____________________________________________________\\n\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"                ErrorMessages.INVALID_COMMAND +","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"                \"_____________________________________________________\\n\";","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected.replaceAll(\"(\\\\r|\\\\n)\", \"\"),","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"                output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"    /*","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"    public void parseCommand_insufficientParams_exceptionThrown() {","lastModifiedDate":"2023-04-10"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"        String userInput \u003d \"delete\";","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(userInput.getBytes());","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"        secureNUS.parseCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"Enter Command:_____________________________________________________\\n\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"                ErrorMessages.INSUFFICIENT_PARAMS +","lastModifiedDate":"2023-04-10"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"                \"_____________________________________________________\\n\";","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected.replaceAll(\"(\\\\r|\\\\n)\", \"\"),","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"                output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"    public void parseCommand_illegalSecretName_exceptionThrown() {","lastModifiedDate":"2023-04-10"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"        String userInput \u003d \"view $\";","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream inputStream \u003d new ByteArrayInputStream(userInput.getBytes());","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"        System.setIn(inputStream);","lastModifiedDate":"2023-04-10"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"        secureNUS.parseCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"Enter Command:_____________________________________________________\\n\" +","lastModifiedDate":"2023-04-10"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"                ErrorMessages.ILLEGAL_SECRET_NAME +","lastModifiedDate":"2023-04-10"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"                \"_____________________________________________________\\n\";","lastModifiedDate":"2023-04-10"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected.replaceAll(\"(\\\\r|\\\\n)\", \"\"),","lastModifiedDate":"2023-04-10"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"                output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-10"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"    */","lastModifiedDate":"2023-04-10"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"ollayf":12,"kairuler":96,"DeepanjaliDhawan":1}},{"path":"src/test/java/seedu/securenus/command/AddBasicPasswordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"class AddBasicPasswordCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        AddBasicPasswordCommand addBasicPassword \u003d new AddBasicPasswordCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        assertFalse(addBasicPassword.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":16}},{"path":"src/test/java/seedu/securenus/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for AddCommand.","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests adding a student ID to a folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret is not found in the secret list.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if a general exception is caught.","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user decides to cancel the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the same name already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist in the folder list.","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    public void studentIDTest() throws SecretNotFoundException, ExceptionMain,","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"            OperationCancelException, FolderExistsException, NonExistentFolderException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        Command addStudentId \u003d new AddStudentIDCommand(studentID);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"        addStudentId.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID2Name\",sm.getByName(\"StudentID2Name\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests adding a NUSNet account to a folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret is not found in the secret list.","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if a general exception is caught.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user decides to cancel the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the same name already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist in the folder list.","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    public void nusNet() throws SecretNotFoundException, ExceptionMain, OperationCancelException,","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            FolderExistsException, NonExistentFolderException {","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNetName2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"stevenantya"},"content":"        Command addNusNet \u003d new AddNUSNetCommand(nusNet);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"stevenantya"},"content":"        addNusNet.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNetName2\", sm.getByName(\"NUSNetName2\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests adding a basic password to a folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret is not found in the secret list.","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain if a general exception is caught.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException if the user decides to cancel the operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the same name already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if the folder does not exist in the folder list.","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"    void basicPassword() throws","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"            SecretNotFoundException, ExceptionMain, OperationCancelException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"            NonExistentFolderException {","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"stevenantya"},"content":"        Command addBasicPassword \u003d new AddBasicPasswordCommand(basicPassword);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"        addBasicPassword.execute(sm);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", sm.getByName(\"basicPassword1\").getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"    void creditCard() throws OperationCancelException, SecretNotFoundException, ExceptionMain,","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"            FolderExistsException, NonExistentFolderException, InvalidExpiryDateException {","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"        CreditCard creditCard \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"                new CreditCard(\"cc1\", \"FolderName\",\"Tom James\", \"1234 1234 1234 1234\", \"123\", \"10/99\");","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"        Command addCreditCard \u003d new AddCreditCardCommand(creditCard);","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"        addCreditCard.execute(sm);","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"cc1\", sm.getByName(\"cc1\").getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"    public void cryptoWallet() throws ExceptionMain, SecretNotFoundException, OperationCancelException,","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"            FolderExistsException, NonExistentFolderException {","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"        CryptoWallet cryptoWallet \u003d new CryptoWallet(\"cw1\", \"FolderName\", \"test_user\",","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"                \"test_private_key\", \"test_seed_phrase\");","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"        Command addCryptoWalletCommand \u003d new AddCryptoWalletCommand(cryptoWallet);","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"        addCryptoWalletCommand.execute(sm);","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"cw1\", sm.getByName(\"cw1\").getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"    public void wifiPassword() throws ExceptionMain, SecretNotFoundException, OperationCancelException,","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"            FolderExistsException, NonExistentFolderException {","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wp1\", \"FolderName\", \"username\", \"password\");","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"        Command addWifiPasswordCommand \u003d new AddWifiPasswordCommand(wifiPassword);","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"        addWifiPasswordCommand.execute(sm);","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"wp1\", sm.getByName(\"wp1\").getName());","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ollayf":15,"kairuler":45,"stevenantya":29,"DeepanjaliDhawan":29}},{"path":"src/test/java/seedu/securenus/command/AddCreditCardCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"class AddCreditCardCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"    private final AddCreditCardCommand addCreditCard;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"            CreditCard creditCard \u003d","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"                    new CreditCard(\"cc1\", \"FolderName\", \"Tom James\", \"1234 1234 1234 1234\", \"123\", \"10/99\");","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"            addCreditCard \u003d new AddCreditCardCommand(creditCard);","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"        } catch (InvalidExpiryDateException | OperationCancelException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    void inquireCreditCardNumber_retryThenSuccess() throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"1234 1234 1234 123\" + System.lineSeparator() + \"1234 1234 1234 1234\";","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"1234 1234 1234 1234\";","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"        String actual \u003d addCreditCard.inquireCreditCardNumber(scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    void inquireCvcNumber_retryThenSuccess() throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"1234\" + System.lineSeparator() + \"123\";","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"123\";","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        String actual \u003d addCreditCard.inquireCvcNumber(scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    void inquireExpiryDate_retryThenSuccess() throws OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"100/100\" + System.lineSeparator() + \"10/99\";","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"10/99\";","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"        String actual \u003d addCreditCard.inquireExpiryDate(scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"    void isExit() throws InvalidExpiryDateException, OperationCancelException {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"        AddCreditCardCommand addCreditCard \u003d new AddCreditCardCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"                new CreditCard(\"cc1\", \"FolderName\",\"Tom James\", \"1234 1234 1234 1234\", \"123\", \"10/99\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"        assertFalse(addCreditCard.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":66}},{"path":"src/test/java/seedu/securenus/command/AddCryptoWalletCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"class AddCryptoWalletCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        AddCryptoWalletCommand addCryptoWallet \u003d new AddCryptoWalletCommand(new CryptoWallet(\"cw1\",","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"                \"FolderName\", \"test_user\",","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"                \"test_private_key\", \"test_seed_phrase\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"        assertFalse(addCryptoWallet.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":17}},{"path":"src/test/java/seedu/securenus/command/AddNUSNetCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"class AddNUSNetCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"    void extractURL() {","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"        AddNUSNetCommand addNUSNet \u003d new AddNUSNetCommand(new NUSNet(\"Name\",\"FolderName\",\"e0987654\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        String input \u003d \" \";","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"\", addNUSNet.extractURL(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"        AddNUSNetCommand addNUSNet \u003d new AddNUSNetCommand(new NUSNet(\"Name\",\"FolderName\",\"e0987654\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"        assertFalse(addNUSNet.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":23}},{"path":"src/test/java/seedu/securenus/command/AddSecretCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"class AddSecretCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        AddSecretCommand addSecret \u003d new AddBasicPasswordCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        assertFalse(addSecret.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":16}},{"path":"src/test/java/seedu/securenus/command/AddStudentIDCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"class AddStudentIDCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        AddStudentIDCommand addStudentID \u003d new AddStudentIDCommand(new StudentID(\"Name\",\"A098765X\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"        assertFalse(addStudentID.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":15}},{"path":"src/test/java/seedu/securenus/command/AddWifiPasswordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"class AddWifiPasswordCommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"    void isExit() {","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"        AddWifiPasswordCommand addWifiPassword \u003d new AddWifiPasswordCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"                new WifiPassword(\"Name\", \"UserName\", \"Password\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"        assertFalse(addWifiPassword.isExit());","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":16}},{"path":"src/test/java/seedu/securenus/command/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"class CommandTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    void nameCheckWithExistence() {","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"        Command command \u003d (new AddBasicPasswordCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\")));","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"        String[] illegalNames \u003d {\"Illegal Name!*\u0026@^*^%@$\", null, \"NonExistentName\"};","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        assertThrows(IllegalSecretNameException.class, () -\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"                command.nameCheckWithExistence(illegalNames[0], usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"        assertThrows(NullSecretException.class, () -\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"                command.nameCheckWithExistence(illegalNames[1], usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"                command.nameCheckWithExistence(illegalNames[2], usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    void printCurrentState() throws IllegalFolderNameException, FolderExistsException {","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        Command command \u003d (new AddBasicPasswordCommand(","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\")));","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        SecretMaster secureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"        secureNUSData.createFolder(\"FolderName\");","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"        command.printCurrentState(secureNUSData);","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"Current Folders [\\nFolderName,]\\n\".replaceAll(\"(\\\\r|\\\\n)\", \"\");","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        String actual \u003d output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\");","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":56}},{"path":"src/test/java/seedu/securenus/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.ExceptionMain;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.InsufficientParamsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for DeleteCommand.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets up the output stream before each test.","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    public void setStream() {","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests deleting Student ID from the folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException   If the secret is not found.","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws ExceptionMain             If an error occurs while executing the command.","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException       If the URL of NUSNet is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InsufficientParamsException If there are insufficient parameters for the command.","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws OperationCancelException  If the operation is cancelled.","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException     If the folder already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException If the folder does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    public void studentIDTestFolder() throws SecretNotFoundException, ExceptionMain, InvalidURLException,","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"            InsufficientParamsException, OperationCancelException, FolderExistsException, NonExistentFolderException {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        SecretMaster sm \u003d new SecretMaster();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"stevenantya"},"content":"        Command addStudentId \u003d new AddStudentIDCommand(studentID);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"        addStudentId.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"StudentID2Name\",sm.getByName(\"StudentID2Name\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNetName2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"stevenantya"},"content":"        Command addNusNet \u003d new AddNUSNetCommand(nusNet);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"        addNusNet.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"NUSNetName2\", sm.getByName(\"NUSNetName2\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"stevenantya"},"content":"        Command addBasicPassword \u003d new AddBasicPasswordCommand(basicPassword);","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"        addBasicPassword.execute(sm);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"basicPassword1\", sm.getByName(\"basicPassword1\").getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        Command deleteStudentID \u003d new DeleteCommand(\"delete StudentID2Name NUSNetName2 basicPassword1\");","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"stevenantya"},"content":"        deleteStudentID.execute(sm);","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"stevenantya"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"stevenantya"},"content":"                sm.getByName(\"StudentID2Name\");","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"stevenantya"},"content":"                sm.getByName(\"NUSNetName2\");","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e {","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"                sm.getByName(\"basicPassword1\");","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"stevenantya"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"stevenantya"},"content":"        );","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ollayf":30,"stevenantya":28,"kairuler":10,"DeepanjaliDhawan":19}},{"path":"src/test/java/seedu/securenus/command/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for EditCommand.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"class EditCommandTest{","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"    private static final String SECRET_NAME \u003d \"password\";","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    private static final String EDIT_COMMAND_INPUT \u003d \"edit password\";","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    private static final String CREDIT_CARD_NUMBER \u003d \"1234 5678 1234 5678\";","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"    private static final String CVC_NUMBER \u003d \"123\";","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    private static final String EXPIRY_DATE \u003d \"12/22\";","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    private static final String NUSNET_ID \u003d \"e0123456\";","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    private static final String STUDENT_ID \u003d \"A1234567Z\";","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"    private static final String USERNAME \u003d \"testuser\";","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    private static final String PASSWORD \u003d \"testpassword\";","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"    private static final String URL \u003d \"testurl\";","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"    private static final String FULL_NAME \u003d \"Test User\";","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    private static final String PRIVATE_KEY \u003d \"testprivatekey\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    private static final String SEED_PHRASE \u003d \"testseedphrase\";","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    private SecretMaster secretMaster;","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"    private HashSet\u003cString\u003e usedNames;","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"    private EditCommand editCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets up the output stream for testing.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    public void setStream() {","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets up the necessary objects for testing.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"    void setUp() {","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"        usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"        usedNames.add(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the constructor with valid input name.","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"    void constructor_validInputName() {","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"        assertDoesNotThrow(() -\u003e editCommand \u003d new EditCommand(EDIT_COMMAND_INPUT, usedNames));","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"        assertEquals(SECRET_NAME, editCommand.extractName(EDIT_COMMAND_INPUT));","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the constructor with illegal input name.","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"    void constructor_illegalInputName() {","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"        assertThrows(IllegalSecretNameException.class, () -\u003e new EditCommand(\"edit /\", usedNames));","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the constructor with non-existent secret name.","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"    void constructor_nonExistentSecretName() {","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"        assertThrows(SecretNotFoundException.class, () -\u003e new EditCommand(\"edit nonexistent\", usedNames));","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests execution of editing a basic password secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"    void execute_basicPassword() throws SecretNotFoundException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new BasicPassword(SECRET_NAME, USERNAME, PASSWORD, URL));","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d {\"NEW_USERNAME\", \"NEW_PASSWORD\", \"NEW_URL\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"        BasicPassword secret \u003d (BasicPassword) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getUsername(), secret.getPassword(), secret.getUrl()};","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests execution of editing a credit card secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"    void execute_creditCard() throws SecretNotFoundException, FolderExistsException, InvalidExpiryDateException,","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"            InvalidCreditCardNumberException, IllegalFolderNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new CreditCard(SECRET_NAME, FULL_NAME, CREDIT_CARD_NUMBER, CVC_NUMBER, EXPIRY_DATE));","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d new String[]{\"NEW_FULLNAME\", \"1111 2222 3333 4444\", \"999\", \"12/24\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"        CreditCard secret \u003d (CreditCard) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getFullName(), secret.getCreditCardNumber(),","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"                secret.getCvcNumber(), secret.getExpiryDate()};","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This JUnit test method tests the functionality of the editSecret() method for secrets of type NUSNet.","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * It adds a new NUSNet secret to the SecretMaster, then creates a new array of field values to replace the","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * original values.","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The method then retrieves the secret from SecretMaster, uses the editSecret() method to update its field values,","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and finally, checks if the actual field values match the expected ones.","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret being edited cannot be found in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder being moved to already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the new folder name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the new secret ID is already being used by another secret in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the new secret name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"    void execute_nusNet() throws SecretNotFoundException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new NUSNet(SECRET_NAME, NUSNET_ID, PASSWORD));","lastModifiedDate":"2023-04-06"},{"lineNumber":142,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d {\"e0987364\", \"NEW_PASSWORD\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":143,"author":{"gitId":"kairuler"},"content":"        NUSNet secret \u003d (NUSNet) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":144,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":145,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getNusNetId(), secret.getPassword()};","lastModifiedDate":"2023-04-06"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This JUnit test method tests the functionality of the editSecret() method for secrets of type StudentID.","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * It adds a new StudentID secret to the SecretMaster, then creates a new array of field values to replace the","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * original values.","lastModifiedDate":"2023-04-09"},{"lineNumber":153,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The method then retrieves the secret from SecretMaster, uses the editSecret() method to update its field value,","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and finally, checks if the actual field value matches the expected one.","lastModifiedDate":"2023-04-09"},{"lineNumber":155,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":156,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret being edited cannot be found in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder being moved to already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the new folder name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":159,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the new secret ID is already being used by another secret in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":160,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the new secret name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":161,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":162,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":163,"author":{"gitId":"kairuler"},"content":"    void execute_studentID() throws SecretNotFoundException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":164,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":165,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new StudentID(SECRET_NAME, STUDENT_ID));","lastModifiedDate":"2023-04-06"},{"lineNumber":166,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d {\"A0987654X\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"kairuler"},"content":"        StudentID secret \u003d (StudentID) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":168,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":169,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getStudentID()};","lastModifiedDate":"2023-04-06"},{"lineNumber":170,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":171,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":172,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This JUnit test method tests the functionality of the editSecret() method for secrets of type WifiPassword.","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * It adds a new WifiPassword secret to the SecretMaster, then creates a new array of field values to replace the","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * original values.","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The method then retrieves the secret from SecretMaster, uses the editSecret() method to update its field values,","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and finally, checks if the actual field values match the expected ones.","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret being edited cannot be found in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":181,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder being moved to already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":182,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the new folder name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the new secret ID is already being used by another secret in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":184,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the new secret name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":185,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":186,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":187,"author":{"gitId":"kairuler"},"content":"    void execute_wifiPassword() throws SecretNotFoundException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":188,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":189,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new WifiPassword(SECRET_NAME, USERNAME, PASSWORD));","lastModifiedDate":"2023-04-06"},{"lineNumber":190,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d {\"NEW_USERNAME\", \"NEW_PASSWORD\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"kairuler"},"content":"        WifiPassword secret \u003d (WifiPassword) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":192,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getUsername(), secret.getPassword()};","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":195,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":197,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":198,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This JUnit test method tests the functionality of the editSecret() method for secrets of type CryptoWallet.","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * It adds a new CryptoWallet secret to the SecretMaster, then creates a new array of field values to replace the","lastModifiedDate":"2023-04-09"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * original values.","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The method then retrieves the secret from SecretMaster, uses the editSecret() method to update its field values,","lastModifiedDate":"2023-04-09"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and finally, checks if the actual field values match the expected ones.","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret being edited cannot be found in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder being moved to already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the new folder name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the new secret ID is already being used by another secret in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the new secret name contains invalid characters","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":210,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":211,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"kairuler"},"content":"    void execute_cryptoWallet() throws SecretNotFoundException, FolderExistsException,","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(new CryptoWallet(SECRET_NAME, USERNAME, PRIVATE_KEY, SEED_PHRASE));","lastModifiedDate":"2023-04-06"},{"lineNumber":215,"author":{"gitId":"kairuler"},"content":"        String[] newFields \u003d {\"NEW_USERNAME\", \"NEW_PRIVATE_KEY\", \"NEW_SEED_PHRASE\"};","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"kairuler"},"content":"        CryptoWallet secret \u003d (CryptoWallet) secretMaster.getByName(SECRET_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":217,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, secret.getName(), secret.getFolderName(), newFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"kairuler"},"content":"        String[] actualFields \u003d {secret.getUsername(), secret.getPrivateKey(), secret.getSeedPhrase()};","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"kairuler"},"content":"        assertArrayEquals(newFields, actualFields);","lastModifiedDate":"2023-04-06"},{"lineNumber":220,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":221,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":222,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":223,"author":{"gitId":"kairuler"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":224,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This JUnit test method tests the functionality of the isExit() method in the EditCommand class.","lastModifiedDate":"2023-04-09"},{"lineNumber":225,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * It creates a new EditCommand object with the specified command input and used names,","lastModifiedDate":"2023-04-09"},{"lineNumber":226,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and then checks if the isExit() method returns false.","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name specified in the command input is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret specified in the command input cannot be found in SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"kairuler"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":231,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":232,"author":{"gitId":"kairuler"},"content":"    void isExit() throws IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":233,"author":{"gitId":"kairuler"},"content":"        EditCommand editCommand \u003d new EditCommand(EDIT_COMMAND_INPUT, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"kairuler"},"content":"        assertFalse(editCommand.isExit());","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ollayf":24,"kairuler":130,"DeepanjaliDhawan":82}},{"path":"src/test/java/seedu/securenus/command/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.NullFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the ListCommand class.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets the output stream to the outputStreamCaptor before each test case is run.","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    public void setStream() {","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isExit method when there is no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"    void isExit_noFolder() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        folders.add(\"unnamed\");","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertFalse(listCommand.isExit());","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isExit method when there is a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"    void isExit_withFolder() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        folders.add(\"Folder123\");","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list f/Folder123\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertFalse(listCommand.isExit());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extractFolderName method when there is no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"    void getList_noFolder() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        folders.add(\"unnamed\");","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        assertEquals(listCommand.extractFolderName(\"list\"), null);","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extractFolderName method when there is a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    void getList_withFolder() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"        folders.add(\"Folder123\");","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list f/Folder123\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        assertEquals(listCommand.extractFolderName(\"list f/Folder123\"), \"Folder123\");","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the maskStringPassword method.","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    void testMaskStringPassword() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        folders.add(\"unnamed\");","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"        String maskedPassword \u003d listCommand.maskStringPassword(\"password\");","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertEquals(\"********\", maskedPassword);","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the maskIntPasswordAsString method.","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"    void testMaskIntPasswordAsString() throws FolderNotFoundException, IllegalFolderNameException, NullFolderException {","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        folders.add(\"unnamed\");","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        ListCommand listCommand \u003d new ListCommand(\"list\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"DeepanjaliDhawan"},"content":"        String masked1234 \u003d listCommand.maskIntPasswordAsString(1234);","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"DeepanjaliDhawan"},"content":"        String masked5678 \u003d listCommand.maskIntPasswordAsString(5678);","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertEquals(\"****\", masked1234);","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"        assertEquals(\"****\", masked5678);","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the ListCommand method for different secret types.","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"    void testSecretTypes() {","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"DeepanjaliDhawan"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new BasicPassword(\"BasicPassword1\", \"Username1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\", \"Url1.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new CreditCard(\"CreditCard1\", \"John Doe\",","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"                    \"1234 5678 1234 5678\", \"123\", \"12/25\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new CryptoWallet(\"CryptoWallet1\", \"Folder1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"DeepsD\", \"PrivateKey1\", \"SeedPhrase1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new NUSNet(\"NUSNet1\", \"NUSNetId1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new StudentID(\"StudentID1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"StudentID1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"DeepanjaliDhawan"},"content":"            secretMaster.addSecret(new WifiPassword(\"WifiPassword1\", \"Username1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"DeepanjaliDhawan"},"content":"                    \"Password1\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"            HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"            folders.add(\"unnamed\");","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"            ListCommand listCommand \u003d new ListCommand(\"list\", folders);","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"            listCommand.execute(secretMaster);","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"        } catch (FolderExistsException | IllegalFolderNameException | IllegalSecretNameException | RepeatedIdException |","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"ollayf"},"content":"                 InvalidCreditCardNumberException | InvalidExpiryDateException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ollayf"},"content":"        } catch (FolderNotFoundException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"ollayf"},"content":"        } catch (NullFolderException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ollayf"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"DeepanjaliDhawan"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":66,"DeepanjaliDhawan":86}},{"path":"src/test/java/seedu/securenus/command/SearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"euzhengxi"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NonExistentFolderException;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"// import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for the SearchCommand class.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"class SearchCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPassword1;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"        mockBasicPassword1 \u003d new BasicPassword(\"Facebook\", \"Tom123\", \"password123\", \"facebook.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPassword2;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        mockBasicPassword2 \u003d new BasicPassword(\"Instagram\", \"Tom123\", \"password123\", \"instagram.com\");","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPasswordWithFolder1;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        mockBasicPasswordWithFolder1 \u003d new BasicPassword(\"Facebook\", \"Socials\", \"Tom123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"                \"password123\", \"fb.com\");","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"    private final Secret mockBasicPasswordWithFolder2;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        mockBasicPasswordWithFolder2 \u003d new BasicPassword(\"Instagram\", \"Socials\", \"Tom123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"                \"password123\", \"ig.com\");","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Sets up the output stream to capture console output during testing.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of name only.","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is a repeated id","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if folder exists","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if folder cannot be found","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"    void extractName_nameOnly() throws IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"            FolderExistsException, FolderNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        mockSecureNUSData.addSecret(mockBasicPassword1);","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        SearchCommand searchCommandNameOnly \u003d new SearchCommand(\"search Facebook\", mockSecureNUSData.getFolders());","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"euzhengxi"},"content":"        Assertions.assertEquals(searchCommandNameOnly.extractName(\"search Facebook\", \"search\"), \"Facebook\");","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of name from input.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * The test case checks for extraction of name and folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is a repeated id","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if folder exists","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if folder cannot be found","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"    void extractName_nameAndFolder() throws IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"            FolderExistsException, FolderNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        mockSecureNUSData.addSecret(mockBasicPasswordWithFolder1);","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        SearchCommand searchCommand \u003d new SearchCommand(\"search Face f/Socials\",","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"                mockSecureNUSData.getFolders());","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"        assertEquals(searchCommand.extractName(\"search Face f/Socials\", \"search\"), \"Face\");","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the execution of search command with a name and folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is a repeated id","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if folder exists","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NonExistentFolderException if folder does not exist","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderNotFoundException if folder cannot be found","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"    public void execute_nameAndFolder() throws IllegalFolderNameException,","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            RepeatedIdException, IllegalSecretNameException, FolderExistsException, NonExistentFolderException,","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"            FolderNotFoundException {","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"        SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPasswordWithFolder1);","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPasswordWithFolder2);","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"        SearchCommand command \u003d new SearchCommand(\"search Facebook f/Socials\", mockSecureNUSData.getFolders());","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"        command.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"_____________________________________________________\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"                        \"_____________________________________________________\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"                        \"Found 1 matches!\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"                        \"| NO. |          NAME           |      FOLDER       |\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"                        \"|  1  |        Facebook         |      Socials      |\\n\" +","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"                        \"_____________________________________________________\\n\",","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"ollayf"},"content":"                output.toString().replace(\"\\r\",\"\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"ollayf":31,"kairuler":54,"DeepanjaliDhawan":36,"euzhengxi":2}},{"path":"src/test/java/seedu/securenus/command/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.NullSecretException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.SecretNotFoundException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.storage.SecretMaster;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the ViewCommand class.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"class ViewCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_NAME \u003d \"testName\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_USERNAME \u003d \"testUsername\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_PASSWORD \u003d \"testPassword\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_URL \u003d \"testURL.com\";","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_REVEAL_STR \u003d String.format(\"__________________________________\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"            \"___________________\\n\" + \"Name: %s\\n\" + \"Url: %s\\n\" + \"Username: %s\\n\" + \"Password: %s\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"            \"_____________________________________________________\", TEST_NAME, TEST_URL, TEST_USERNAME, TEST_PASSWORD);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    private static final String TEST_NAME_NOT_FOUND \u003d \"_____________________________________________________\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"            \"There are no passwords that matches that name!Make sure you follow this format: \\\"view PASSWORD_NAME\\\"\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"            \"_____________________________________________________\";","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    private final SecretMaster mockSecureNUSData \u003d new SecretMaster();","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Mock data and streams for testing.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"DeepanjaliDhawan"},"content":"    private final Secret mockBasicPassword; {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        mockBasicPassword \u003d new BasicPassword(TEST_NAME, TEST_USERNAME, TEST_PASSWORD, TEST_URL);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Set up streams for testing.","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the extraction of password name from user input.","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws SecretNotFoundException if the secret does not exist.","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the secret is null.","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"    void extractName() throws SecretNotFoundException, NullSecretException, IllegalSecretNameException {","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        usedNames.add(TEST_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view \" + TEST_NAME, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(TEST_NAME, viewCommand.extractName(\"view \" + TEST_NAME));","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the inquirePassword method.","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"    void inquirePassword() {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the execution of the command with matching secret name.","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if folder name is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if a secret with the same name or ID already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if secret name is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if folder already exists.","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the secret is null.","lastModifiedDate":"2023-04-09"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"    void execute_matchingName() throws IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException,","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"            FolderExistsException, NullSecretException, SecretNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"        mockSecureNUSData.addSecret(mockBasicPassword);","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view \" + TEST_NAME, mockSecureNUSData.getSecretNames());","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"        viewCommand.execute(mockSecureNUSData);","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"        assertEquals(TEST_REVEAL_STR.replaceAll(\"(\\\\r|\\\\n)\", \"\"), output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the execution of the command with non-matching secret name.","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the secret is null.","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if secret name is invalid.","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"    public void execute_nonMatchingName() throws NullSecretException, IllegalSecretNameException,","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"            SecretNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        usedNames.add(TEST_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view \" + TEST_NAME, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"        viewCommand.execute(mockSecureNUSData);","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"        assertEquals(TEST_NAME_NOT_FOUND.replaceAll(\"(\\\\r|\\\\n)\", \"\"), output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method tests if the isExit() method of the ViewCommand class works correctly","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * by checking that it does not return true when the command is \"view\" followed by a test name.","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws NullSecretException if the secret name is null","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name does not follow the required format","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"    void isExit() throws NullSecretException, IllegalSecretNameException, SecretNotFoundException {","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        usedNames.add(TEST_NAME);","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"view \" + TEST_NAME, usedNames);","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"        assertFalse(viewCommand.isExit());","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ollayf":22,"kairuler":64,"DeepanjaliDhawan":43}},{"path":"src/test/java/seedu/securenus/secrets/BasicPasswordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit Test for the constructor of the BasicPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"stevenantya"},"content":"public class BasicPasswordTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of basic password without folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if URL format is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"    public void basicPasswordNoFolder() throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", basicPassword.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", basicPassword.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicUsername\", basicPassword.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 112\", basicPassword.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"google.com\", basicPassword.getUrl());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of basic password with folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if URL format is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    public void basicPasswordFolder() throws InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        BasicPassword basicPassword \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"                new BasicPassword(\"basicPassword1\", \"FolderName\", \"basicUsername\", \"Lorem Ipsum 112\", \"google.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicPassword1\", basicPassword.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"FolderName\", basicPassword.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"basicUsername\", basicPassword.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 112\", basicPassword.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"google.com\", basicPassword.getUrl());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":2,"stevenantya":30,"DeepanjaliDhawan":10}},{"path":"src/test/java/seedu/securenus/secrets/CreditCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the CreditCard class.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"class CreditCardTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test without creation of folder","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date is of incorrect format","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException when an invalid credit card number is detected during validation","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"    void noFolderCreationTest () throws InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", creditCard.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"John Doe Lim Guang\", creditCard.getFullName());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"1234 5678 9012 3456\", creditCard.getCreditCardNumber());","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"12/23\", creditCard.getExpiryDate());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test with creation of folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    void withFolderCreationTest () throws InvalidExpiryDateException {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234 1567 8901 23456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", creditCard.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"John Doe Lim Guang\", creditCard.getFullName());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"1234 1567 8901 23456\", creditCard.getCreditCardNumber());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"creditCard1\", creditCard.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"12/23\", creditCard.getExpiryDate());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test legal dates.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    void legalDatesTest() throws InvalidExpiryDateException {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"                    \"22/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"                    \"12/43\");","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"                    \"123/23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"                    \"12/53\");","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"                    \"12/g\");","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"                    \"kfc\");","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidExpiryDateException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234r567890123456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"1234 1567 8901 23456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        assertThrows(InvalidCreditCardNumberException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"            new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"                    \"John Doe Lim Guang\", \"rtyuiohgfghjkjhgffghuytres\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"                    \"@#/$%\");","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"ollayf"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"ollayf"},"content":"        );","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test the getRevealStr method of the CreditCard class","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if the credit card number is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() throws InvalidExpiryDateException, InvalidCreditCardNumberException {","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard \u003d new CreditCard(\"creditCard1\", \"folder1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: creditCard1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"                \"Full Name: John Doe Lim Guang\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"ollayf"},"content":"                \"Credit Card Number: 1234 5678 9012 3456\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: 123\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: 12/23\", creditCard.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"ollayf"},"content":"        CreditCard creditCard2 \u003d new CreditCard(\"creditCard1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"ollayf"},"content":"                \"John Doe Lim Guang\", \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"                \"12/23\");","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: creditCard1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":137,"author":{"gitId":"ollayf"},"content":"                \"Full Name: John Doe Lim Guang\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":138,"author":{"gitId":"ollayf"},"content":"                \"Credit Card Number: 1234 5678 9012 3456\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":139,"author":{"gitId":"ollayf"},"content":"                \"CVC Number: 123\\n\" +","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"ollayf"},"content":"                \"Expiry Date: 12/23\", creditCard2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":120,"DeepanjaliDhawan":22}},{"path":"src/test/java/seedu/securenus/secrets/CryptoWalletTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the CryptoWallet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"class CryptoWalletTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of a CryptoWallet with no folder specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    void noFolderCryptoWalletCreationTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests creation of a CryptoWallet with a folder specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"    void withFolderCryptoWalletCreationTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hbhh jh jhy tgjm ktr de sed fe sf\", cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet1\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests editing of CryptoWallet details.","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"    void editingDetails() {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setSeedPhrase(\"fdfghj rewfs weqf weqf weqr fwer weqrgfdvsg thr fdc sda\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setFolderName(\"folder2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setName(\"cryptoWallet2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cString\u003e urls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(new ArrayList\u003cString\u003e(), cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http.guefhwbqhyhwuijrf.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http.guefhwbqhydbdfdf.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.setUrls(urls);","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(urls, cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        // adding urls","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"        cryptoWallet.addUrl(\"http://newsite.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        urls.add(\"http://newsite.com\");","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertEquals(urls, cryptoWallet.getUrls());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        assertEquals(3, cryptoWallet.getUrls().size());","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder2\", cryptoWallet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"234567uygfde45tghjioiuytre3\", cryptoWallet.getPrivateKey());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"hoseang\", cryptoWallet.getUsername());","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"fdfghj rewfs weqf weqf weqr fwer weqrgfdvsg thr fdc sda\",","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"                cryptoWallet.getSeedPhrase());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet2\", cryptoWallet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"cryptoWallet2\", cryptoWallet.getUid());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test code to verify the RevealOutput method","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"folder1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: cryptoWallet1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ollayf"},"content":"                \"Seed Phrase: hbhh jh jhy tgjm ktr de sed fe sf\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ollayf"},"content":"                \"Private Key: 234567uygfde45tghjioiuytre3\", cryptoWallet.getRevealStr());","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ollayf"},"content":"        CryptoWallet cryptoWallet2 \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ollayf"},"content":"                new CryptoWallet(\"cryptoWallet1\", \"hoseang\",","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"ollayf"},"content":"                        \"234567uygfde45tghjioiuytre3\", \"hbhh jh jhy tgjm ktr de sed fe sf\");","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: cryptoWallet1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ollayf"},"content":"                \"Seed Phrase: hbhh jh jhy tgjm ktr de sed fe sf\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ollayf"},"content":"                \"Private Key: 234567uygfde45tghjioiuytre3\", cryptoWallet2.getRevealStr());","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":79,"DeepanjaliDhawan":15}},{"path":"src/test/java/seedu/securenus/secrets/NUSNetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test for NUSNet class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class NUSNetTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test NUSNet creation without folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    public void nusNetNoFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNet Name\", \"e088888@u.nus.edu\",\"aSecurePassword2\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNet Name\", nusNet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", nusNet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"e088888@u.nus.edu\", nusNet.getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"aSecurePassword2\", nusNet.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test NUSNet creation with folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"    public void nusNetFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        NUSNet nusNet \u003d new NUSNet(\"NUSNet Name 2\", \"FolderName\", \"e081888@u.nus.edu\", \"Lorem Ipsum 12\");","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"NUSNet Name 2\", nusNet.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"FolderName\", nusNet.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"        assertEquals(\"e081888@u.nus.edu\", nusNet.getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"Lorem Ipsum 12\", nusNet.getPassword());","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a given string is a valid NUSNET ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    public void nusNetLegalIds() {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertTrue(NUSNet.isLegalId(\"e1234567\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertTrue(NUSNet.isLegalId(\"e0987654\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertTrue(NUSNet.isLegalId(\"E1234567\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertFalse(NUSNet.isLegalId(\"Aoiuyte\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertFalse(NUSNet.isLegalId(\"a8765439c\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertFalse(NUSNet.isLegalId(\"a876543uc\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        assertFalse(NUSNet.isLegalId(\"S8765439S\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":14,"stevenantya":21,"DeepanjaliDhawan":13,"kairuler":2}},{"path":"src/test/java/seedu/securenus/secrets/SecretTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the Secret class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"class SecretTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the isIllegalName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the method returns true for all weird characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    void isIllegalName_checkWeirdChars() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        String[] names \u003d {\"$\", \"#\", \"!\", \"@\", \"%\", \"^\",","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"            \"\u0026\", \"*\", \"(\", \")\", \"~\", \"`\", \"-\", \"+\", \"\u003d\"};","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        for (String name: names) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"            assertEquals(true, Secret.isIllegalName(name));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, Secret.isIllegalName(\"Garena Login\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getUid() and getName() methods.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if both methods return the same value.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"    void getUidAndName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getFolderName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the correct folder name is returned.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"    void getFolder() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the editName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the name and uid are changed correctly.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"    void setName() {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"        secret.setName(\"newName\");","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newName\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newName\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the setFolderName() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the folder name is changed correctly.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"    void setFolderName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        secret.setFolderName(\"newFolder\");","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"name\", secret.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"newFolder\", secret.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for the getRevealStr() method.","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * This method checks if the reveal string is empty for a newly created secret.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"name\", \"folder\");","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"\", secret.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"name\");","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"\", secret2.getRevealStr());","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":57,"DeepanjaliDhawan":27}},{"path":"src/test/java/seedu/securenus/secrets/StudentIDTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"stevenantya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"stevenantya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"stevenantya"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test for StudentID class in seedu.duke.secrets package.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"stevenantya"},"content":"public class StudentIDTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for creating a StudentID object with no folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestNoFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID Name\",\"A021313J\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID Name\", studentID.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"unnamed\", studentID.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"A021313J\", studentID.getStudentID());","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for creating a StudentID object with a folder name.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"stevenantya"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"stevenantya"},"content":"    public void studentIDTestFolder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"stevenantya"},"content":"        StudentID studentID \u003d new StudentID(\"StudentID2 Name\", \"StudentsOfNUS\", \"A021313G\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentID2 Name\", studentID.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"StudentsOfNUS\", studentID.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"stevenantya"},"content":"        assertEquals(\"A021313G\", studentID.getStudentID());","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"stevenantya"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"stevenantya"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks if a given string is a valid Student ID.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"    public void legalIdsCheck() {","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertTrue(StudentID.isLegalId(\"A0241234R\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertTrue(StudentID.isLegalId(\"A1234567B\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertTrue(StudentID.isLegalId(\"A8765439C\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertFalse(StudentID.isLegalId(\"Af412f34R\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertFalse(StudentID.isLegalId(\"a8765439c\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertFalse(StudentID.isLegalId(\"a876543uc\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertFalse(StudentID.isLegalId(\"S8765439S\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"stevenantya"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":13,"stevenantya":21,"DeepanjaliDhawan":13}},{"path":"src/test/java/seedu/securenus/secrets/WifiPasswordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.secrets;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for the WifiPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"class WifiPasswordTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the creation of a WifiPassword object without a folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"    void noFolderWifiPasswordCreationTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"admin\", \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"admin\", wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", wifiPassword.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"        wifiPassword.removeUsername();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"ollayf"},"content":"        // for no username","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", null, \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword2.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"unnamed\", wifiPassword2.getFolderName());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        wifiPassword2.setPassword(\"P@ssw0rd2\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"P@ssw0rd2\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the creation of a WifiPassword object with a folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"    void withFolderWifiPasswordCreationTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"folder1\", \"admin\",","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"                \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"admin\", wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", wifiPassword.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        wifiPassword.removeUsername();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        // for no username","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", \"folder1\", null,","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"                \"Password\");","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"        assertEquals(null, wifiPassword2.getUsername());","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Password\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"wifi1\", wifiPassword2.getUid());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"folder1\", wifiPassword2.getFolderName().toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        wifiPassword2.setPassword(\"P@ssw0rd2\");","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"P@ssw0rd2\", wifiPassword2.getPassword());","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the getRevealStr() method of the WifiPassword class.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"    void testRevealOutput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword \u003d new WifiPassword(\"wifi1\", \"folder1\", \"admin\",","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"                \"P@ssword1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: wifi1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"                \"Username: admin\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"                \"Password: P@ssword1\", wifiPassword.getRevealStr());","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        WifiPassword wifiPassword2 \u003d new WifiPassword(\"wifi1\", \"admin\",","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"                \"P@ssword1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        assertEquals(\"Name: wifi1\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"                \"Username: admin\\n\" +","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"                \"Password: P@ssword1\", wifiPassword2.getRevealStr());","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":66,"DeepanjaliDhawan":14}},{"path":"src/test/java/seedu/securenus/storage/SecretEnumeratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import java.util.Hashtable;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit test class for SecretEnumerator class.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":" * This class tests the behavior of the class when the list of secrets and the hashtable of secrets are empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * Specifically, it tests the getter methods when there is nothing to get, adding a secret to the list,","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" * and getting the list and elements from the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"class SecretEnumeratorTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests empty getters, adding secrets and retrieving them from the SecretEnumerator.","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Checks for ArrayIndexOutOfBoundsException for empty enumerator, proper addition of secrets","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * and retrieval of secrets from the enumerator.","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder with the same name already exists","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    void emptyGetters() throws FolderExistsException {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e list2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e list3 \u003d new Hashtable\u003cString, ArrayList\u003cSecret\u003e\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        SecretEnumerator enumerator \u003d new SecretEnumerator(list2, list3);","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"        assertEquals(new ArrayList\u003c\u003e(), enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"            enumerator.get(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        assertThrows(ArrayIndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"            enumerator.get(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        Secret secret \u003d new Secret(\"secret1\", \"folder1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"secret1\", \"folder1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        Secret secret3 \u003d new Secret(\"secret3\", \"folder3\");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        enumerator.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        ArrayList\u003cSecret\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"        list.add(secret);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"        assertEquals(secret, enumerator.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ollayf"},"content":"        assertNotEquals(secret2, enumerator.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList(\"folder1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"ollayf"},"content":"        enumerator.add(secret3);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList(\"folder1\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"ollayf"},"content":"        list.add(secret3);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ollayf"},"content":"        assertEquals(list, enumerator.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"ollayf":41,"DeepanjaliDhawan":14}},{"path":"src/test/java/seedu/securenus/storage/SecretMasterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.Secret;","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit tests for the SecretMaster class in the storage package.","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"class SecretMasterTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the isLegalName method in the SecretMaster class.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"    void isLegalName() throws IllegalFolderNameException, FolderExistsException {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalFolderName(\"gyujnuygvjkm\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalFolderName(\"hfjewqsdierjdfhnreqwewqfvsvd\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        assertEquals(true, secretMaster.isLegalFolderName(\"fvdwhjejsdkjfk879809\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalFolderName(\"jhgfhdwv \"));","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalFolderName(\"jkfewrjfv90r93f47   \"));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"        assertEquals(false, secretMaster.isLegalFolderName(\"jkfewrjfv90r93f47^\u0026IO(*\u0026^\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the createFolder method in the SecretMaster class.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the id of a secret is repeated","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ollayf"},"content":"    void createFolder() throws IllegalFolderNameException, FolderExistsException, RepeatedIdException,","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, IllegalFolderNameException, IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ollayf"},"content":"        HashSet\u003cString\u003e set \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ollayf"},"content":"        set.add(\"unnamed\");","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ollayf"},"content":"        assertEquals(new HashSet\u003cString\u003e(), secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ollayf"},"content":"        assertThrows(IllegalFolderNameException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ollayf"},"content":"            secretMaster.createFolder(\"\\\"jkfewrjfv90r93f47^\u0026IO(*\u0026^\");","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ollayf"},"content":"        assertThrows(IllegalFolderNameException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ollayf"},"content":"            secretMaster.createFolder(\"jhfe \");","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ollayf"},"content":"        assertEquals(new HashSet\u003cString\u003e(), secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ollayf"},"content":"        Secret secret1 \u003d new Secret(\"blimp\");","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(secret1);","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ollayf"},"content":"        assertEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ollayf"},"content":"        Secret secret2 \u003d new Secret(\"blimp\", \"folder1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ollayf"},"content":"        Secret secret3 \u003d new Secret(\"blimp2\", \"folder1\");","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"ollayf"},"content":"        set.add(secret2.getFolderName());","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ollayf"},"content":"        System.out.println(set);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ollayf"},"content":"        assertNotEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"ollayf"},"content":"        assertThrows(RepeatedIdException.class, () -\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"ollayf"},"content":"            secretMaster.addSecret(secret2);","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ollayf"},"content":"        });","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(secret3);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ollayf"},"content":"        assertEquals(set, secretMaster.getFolders());","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the addSecret methods of the SecretMaster class for all secret types.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder already exists with the same name","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if an invalid expiry date is provided for a secret","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if an illegal folder name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if a secret with the same ID already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if an illegal secret name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if an invalid credit card number is provided for a credit card secret","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if an invalid URL is provided for a basic password secret","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ollayf"},"content":"    void addAllSecrets() throws FolderExistsException, InvalidExpiryDateException, IllegalFolderNameException,","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ollayf"},"content":"            RepeatedIdException, IllegalSecretNameException, InvalidCreditCardNumberException,","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"ollayf"},"content":"            InvalidExpiryDateException, InvalidCreditCardNumberException, InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"basic1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new CreditCard(\"credit1\", \"HJ HJ UI\",","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"ollayf"},"content":"                \"1234 5678 9012 3456\", \"123\",","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"ollayf"},"content":"                \"12/23\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"DeepanjaliDhawan"},"content":"        secretMaster.addSecret(new CryptoWallet(\"crypto1\", \"hjhbj\",","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"fdertyuiytyui876ytfgyuit5rt\",","lastModifiedDate":"2023-04-09"},{"lineNumber":106,"author":{"gitId":"ollayf"},"content":"                \"hb jnjkm kjijh ijhui hjhb iujh uhbgv gfcd\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"DeepanjaliDhawan"},"content":"        secretMaster.addSecret(new NUSNet(\"nusnet1\", \"folder1\", \"e0987654\",","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"oitfghjmjh\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new StudentID(\"hi\", \"T0987490A\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new WifiPassword(\"wifi1\", \"username1\", \"password1\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Test for adding secrets with special characters in their names to SecretMaster.","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if an invalid URL is provided for a basic password secret","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if an illegal folder name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if a secret with the same ID already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if an illegal secret name is used","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if a folder already exists with the same name","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"ollayf"},"content":"    void addSecretsWithCharacter() throws InvalidURLException, IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"ollayf"},"content":"            IllegalSecretNameException, FolderExistsException {","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"ollayf"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"ollayf"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword2_\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"DeepanjaliDhawan"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword2\", \"Folder9\", \"username1\",","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"Password1\",","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"DeepanjaliDhawan"},"content":"        secretMaster.addSecret(new BasicPassword(\"BasicPassword4\", \"Folder9_\", \"username1\",","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"Password1\",","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":139,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests for editing a BasicPassword object.","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists in the {@code SecretMaster}","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if the secret ID already exists in the {@code SecretMaster}","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if the URL is not valid","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"kairuler"},"content":"    public void editBasicPassword() throws FolderExistsException, IllegalFolderNameException, RepeatedIdException,","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, InvalidURLException {","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"DeepanjaliDhawan"},"content":"        BasicPassword secret \u003d new BasicPassword(\"secret1\", \"folder1\", \"username1\",","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"DeepanjaliDhawan"},"content":"                \"password1\", \"https://example.com\");","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"newusername\", \"newpassword\", \"https://example.com\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], secret.getUsername());","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], secret.getPassword());","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[2], ((BasicPassword) secret).getUrl());","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":167,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the {@code editSecret} method in the {@code SecretMaster} class to ensure that editing a credit card","lastModifiedDate":"2023-04-09"},{"lineNumber":168,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * secret","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * correctly updates its fields.","lastModifiedDate":"2023-04-09"},{"lineNumber":170,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if there is already a folder with the same name","lastModifiedDate":"2023-04-09"},{"lineNumber":172,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the expiry date provided is in an invalid format","lastModifiedDate":"2023-04-09"},{"lineNumber":173,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name provided is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":174,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is already a secret with the same name and folder name","lastModifiedDate":"2023-04-09"},{"lineNumber":175,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name provided is illegal","lastModifiedDate":"2023-04-09"},{"lineNumber":176,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":177,"author":{"gitId":"DeepanjaliDhawan"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":178,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"kairuler"},"content":"    public void editCreditCard() throws FolderExistsException, InvalidExpiryDateException,","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"kairuler"},"content":"            IllegalFolderNameException, RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"ollayf"},"content":"        CreditCard secret \u003d new CreditCard(\"secret1\", \"folder1\", \"John Doe\",","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"ollayf"},"content":"                \"1234567890123456\", \"123\", \"12/23\");","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":187,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"Jane Doe\", \"1234 5678 9012 3456\", \"456\", \"12/24\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":192,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":193,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], ((CreditCard) secret).getFullName());","lastModifiedDate":"2023-04-04"},{"lineNumber":194,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], ((CreditCard) secret).getCreditCardNumber());","lastModifiedDate":"2023-04-04"},{"lineNumber":195,"author":{"gitId":"ollayf"},"content":"        assertEquals(inquiredFields[2], ((CreditCard) secret).getCvcNumber());","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[3], ((CreditCard) secret).getExpiryDate());","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":198,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":199,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":200,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests for the {@code editSecret()} method in {@code SecretMaster} class for {@code NUSNet} secrets.","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests if the method can successfully edit the details of a {@code NUSNet} secret.","lastModifiedDate":"2023-04-09"},{"lineNumber":202,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException If the folder already exists in the storage.","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException If the folder name contains illegal characters.","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException If there is already a secret with the same name and folder name.","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException If the secret name contains illegal characters.","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"kairuler"},"content":"    public void editNUSNet() throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"kairuler"},"content":"        NUSNet secret \u003d new NUSNet(\"secret1\", \"folder1\", \"e0123456\", \"password1\");","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"e0012345\", \"password2\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":219,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":220,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":221,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[0], ((NUSNet) secret).getNusNetId());","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"kairuler"},"content":"        assertEquals(inquiredFields[1], ((NUSNet) secret).getPassword());","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the {@code editSecret()} method of {@code SecretMaster} class when editing a {@code StudentID} object.","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if there is a duplicate folder name","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalFolderNameException if the folder name is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws RepeatedIdException if there is a duplicate ID for a secret","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws IllegalSecretNameException if the secret name is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":234,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"kairuler"},"content":"    public void editStudentID() throws FolderExistsException, IllegalFolderNameException,","lastModifiedDate":"2023-04-04"},{"lineNumber":236,"author":{"gitId":"kairuler"},"content":"            RepeatedIdException, IllegalSecretNameException {","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"kairuler"},"content":"        SecretMaster secretMaster \u003d new SecretMaster();","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"kairuler"},"content":"        StudentID secret \u003d new StudentID(\"secret1\", \"folder1\", \"e0123456\");","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"kairuler"},"content":"        secretMaster.addSecret(secret);","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":241,"author":{"gitId":"kairuler"},"content":"        String newName \u003d \"secret2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":242,"author":{"gitId":"kairuler"},"content":"        String newFolderName \u003d \"folder2\";","lastModifiedDate":"2023-04-04"},{"lineNumber":243,"author":{"gitId":"kairuler"},"content":"        String[] inquiredFields \u003d {\"e0012345\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":244,"author":{"gitId":"kairuler"},"content":"        secretMaster.editSecret(secret, newName, newFolderName, inquiredFields);","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":246,"author":{"gitId":"kairuler"},"content":"        assertEquals(newName, secret.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":247,"author":{"gitId":"kairuler"},"content":"        assertEquals(newFolderName, secret.getFolderName());","lastModifiedDate":"2023-04-04"},{"lineNumber":248,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":249,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":96,"DeepanjaliDhawan":83,"kairuler":70}},{"path":"src/test/java/seedu/securenus/storage/SecretSearcherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"package seedu.securenus.storage;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.FolderExistsException;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidCreditCardNumberException;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidExpiryDateException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.exceptions.secrets.InvalidURLException;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.BasicPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CreditCard;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.CryptoWallet;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.StudentID;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.WifiPassword;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"import seedu.securenus.secrets.NUSNet;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"DeepanjaliDhawan"},"content":" * JUnit Test for the SecretSearcher() Class","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"DeepanjaliDhawan"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"class SecretSearcherTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"DeepanjaliDhawan"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * Tests the add() method of the SecretSearcher class, specifically to check if all types of secrets can be added","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * without exceptions being thrown.","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"DeepanjaliDhawan"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws FolderExistsException if the folder already exists in the SecretMaster","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidExpiryDateException if the credit card expiry date format is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidCreditCardNumberException if the credit card number is not in the correct format","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"DeepanjaliDhawan"},"content":"     * @throws InvalidURLException if the URL is invalid","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"DeepanjaliDhawan"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ollayf"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ollayf"},"content":"    void addAllPasswords() throws FolderExistsException, InvalidExpiryDateException, InvalidCreditCardNumberException,","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"            InvalidURLException {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"        SecretSearcher secretSearcher \u003d new SecretSearcher();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new BasicPassword(\"basic1\", \"username1\", \"Password1\",","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"ollayf"},"content":"                \"http.com\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new CreditCard(\"credit1\", \"HJ HJ UI\", \"1234 5678 9012 3456\",","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ollayf"},"content":"                \"123\",","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ollayf"},"content":"                \"12/23\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new CryptoWallet(\"crypto1\", \"hjhbj\", \"fdertyuiytyui876ytfgyuit5rt\",","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ollayf"},"content":"                \"hb jnjkm kjijh ijhui hjhb iujh uhbgv gfcd\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new NUSNet(\"nusnet1\", \"folder1\", \"e0987654\",","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ollayf"},"content":"                \"oitfghjmjh\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new StudentID(\"hi\", \"T0987490A\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ollayf"},"content":"        secretSearcher.add(new WifiPassword(\"wifi1\", \"username1\", \"password1\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"ollayf"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"ollayf"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ollayf":32,"DeepanjaliDhawan":12}},{"path":"src/test/java/seedu/securenus/ui/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.ui;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.Command;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.EditCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.ExitCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.ListCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.MenuCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.SaveCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.SearchCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.command.ViewCommand;","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.InsufficientParamsException;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.InvalidCommandException;","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.InvalidFieldException;","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.OperationCancelException;","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.RepeatedIdException;","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.IllegalFolderNameException;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.exceptions.secrets.IllegalSecretNameException;","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"class ParserTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"    void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"    @AfterEach","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"    void tearDown() {","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"    public void parse_validInput_returnsCommand() {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"        usedNames.add(\"password\");","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"        Command command;","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"list\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof ListCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"search password\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof SearchCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"view password\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof ViewCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"edit password\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof EditCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"menu\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof MenuCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"save\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof SaveCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"            command \u003d Parser.parse(\"exit\", usedNames, folders);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"            assertNotNull(command);","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"            assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"            fail(\"Exception thrown when not expected: \" + e.getMessage());","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"kairuler"},"content":"    public void parse_invalidInput_throwsException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e folders \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"kairuler"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parse(\"invalid\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parse(\"new\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parse(\"delete\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parse(\"search\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parse(\"view\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parse(\"edit\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"kairuler"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.parse(\"add\", usedNames, folders));","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"kairuler"},"content":"    public void parseAdd_invalidCommand_throwInsufficientParamsException() {","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"kairuler"},"content":"        String command \u003d \"new\";","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parseAdd(command, usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"kairuler"},"content":"    public void parseAdd_duplicateSecret_throwRepeatedIdException() throws IllegalFolderNameException,","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"kairuler"},"content":"            IllegalSecretNameException, InsufficientParamsException, OperationCancelException,","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"kairuler"},"content":"            InvalidFieldException, RepeatedIdException {","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"kairuler"},"content":"        usedNames.add(\"password1\");","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"kairuler"},"content":"        String command \u003d \"new password1\";","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"kairuler"},"content":"        assertThrows(RepeatedIdException.class, () -\u003e Parser.parseAdd(command, usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"kairuler"},"content":"    public void parseAddSpecial_insufficientParamsExceptionThrown() {","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"kairuler"},"content":"        String command \u003d \"new o/CreditCard\";","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.parseAddSpecial(command, usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"kairuler"},"content":"    public void parseAddSpecial_invalidFieldExceptionThrown() {","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"kairuler"},"content":"        HashSet\u003cString\u003e usedNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"kairuler"},"content":"        String command \u003d \"new o/InvalidField name\";","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"kairuler"},"content":"        assertThrows(InvalidFieldException.class, () -\u003e Parser.parseAddSpecial(command, usedNames));","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"kairuler"},"content":"    public void checkCommand_validCommand() throws InvalidCommandException, InsufficientParamsException {","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"kairuler"},"content":"        String[] validCommands \u003d {\"delete password\", \"edit password\", \"search password\", \"view password\"};","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"kairuler"},"content":"        String[] validCommandInitializers \u003d {\"delete\", \"edit\", \"search\", \"view\"};","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"kairuler"},"content":"        for (int i \u003d 0; i \u003c validCommands.length; ++i) {","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"kairuler"},"content":"            int finalI \u003d i;","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"kairuler"},"content":"            assertDoesNotThrow(() -\u003e Parser.checkCommand(validCommands[finalI], validCommandInitializers[finalI], 2));","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"kairuler"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"kairuler"},"content":"    public void checkCommand_invalidCommand() {","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.checkCommand(\"edit\", \"edit\", 1));","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"kairuler"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Parser.checkCommand(\"invalid\", \"edit\", 2));","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"kairuler"},"content":"        assertThrows(InsufficientParamsException.class, () -\u003e Parser.checkCommand(\"edit password\", \"edit\", 3));","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":141,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":141}},{"path":"src/test/java/seedu/securenus/ui/UiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kairuler"},"content":"package seedu.securenus.ui;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"kairuler"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"kairuler"},"content":"import seedu.securenus.messages.OperationMessages;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"kairuler"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"kairuler"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"kairuler"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"kairuler"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"kairuler"},"content":"class UiTest {","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"kairuler"},"content":"    private final ByteArrayOutputStream output \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"kairuler"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"kairuler"},"content":"    public void setUp() {","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"kairuler"},"content":"        System.setOut(new PrintStream(output));","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"kairuler"},"content":"    void greetUser() {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"kairuler"},"content":"        Ui.greetUser();","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"kairuler"},"content":"        assertEquals(OperationMessages.INITIALISE.replaceAll(\"(\\\\r|\\\\n)\", \"\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"kairuler"},"content":"                output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"kairuler"},"content":"    void readCommand() {","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"new name\";","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"kairuler"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"kairuler"},"content":"        String actual \u003d Ui.readCommand(scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"kairuler"},"content":"        assertEquals(input.replaceAll(\"(\\\\r|\\\\n)\", \"\"), actual.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"kairuler"},"content":"    void readLine() {","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"test\";","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"kairuler"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"kairuler"},"content":"        String actual \u003d Ui.readLine(scanner);","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"kairuler"},"content":"        assertEquals(input.replaceAll(\"(\\\\r|\\\\n)\", \"\"), actual.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"kairuler"},"content":"    void removeExtraWhiteSpaces() {","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"   test       \";","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"test\";","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected, Ui.removeExtraWhiteSpaces(input));","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"kairuler"},"content":"    void printError() {","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"kairuler"},"content":"        String input \u003d \"test\";","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"kairuler"},"content":"        String expected \u003d \"Oops! Error encountered: test\";","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"kairuler"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"kairuler"},"content":"        System.setIn(in);","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"kairuler"},"content":"        Ui.printError(input);","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"kairuler"},"content":"        assertEquals(expected.replaceAll(\"(\\\\r|\\\\n)\", \"\"), output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"kairuler"},"content":"    void informOperationCancel() {","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"kairuler"},"content":"        Ui.informOperationCancel();","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"kairuler"},"content":"        assertEquals(OperationMessages.CANCEL_OPERATION.replaceAll(\"(\\\\r|\\\\n)\", \"\"),","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"kairuler"},"content":"                output.toString().replaceAll(\"(\\\\r|\\\\n)\", \"\"));","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"kairuler"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"kairuler"},"content":"    @Test","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"kairuler"},"content":"    @Order(7)","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"kairuler"},"content":"    void close() {","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"kairuler"},"content":"        assertDoesNotThrow(() -\u003e Ui.close());","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"kairuler"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"kairuler"},"content":"}","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"kairuler":80}},{"path":"text-ui-test/runjar.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"java -jar ../ip.jar \u003c input_JAR.txt \u003e ACTUAL_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"# convert to UNIX format","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"cp EXPECTED_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"# compare the output to the expected output","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"diff ACTUAL_JAR.TXT EXPECTED-UNIX_JAR.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":15}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"java -ea -jar %jarloc% \u003c text-ui-test\\input.txt \u003e text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"ollayf":1,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"java -ea -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"DeepanjaliDhawan"},"content":"# Remove trailing whitespaces","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"DeepanjaliDhawan"},"content":"sed -i \u0027s/[[:blank:]]*$//\u0027 EXPECTED.TXT","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"DeepanjaliDhawan"},"content":"sed -i \u0027s/[[:blank:]]*$//\u0027 ACTUAL.TXT","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"ollayf"},"content":"    rm assets/database.txt","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"ollayf"},"content":"    rm assets/database.txt","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ollayf":5,"DeepanjaliDhawan":3,"-":23}},{"path":"text-ui-test/runtest_mac.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"ollayf"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"ollayf"},"content":"# change to script directory","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ollayf"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"ollayf"},"content":"cd ..","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ollayf"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"ollayf"},"content":"cd text-ui-test","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"ollayf"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ollayf"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"ollayf"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"ollayf"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ollayf"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"ollayf"},"content":"then","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"ollayf"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"ollayf"},"content":"    exit 0","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"ollayf"},"content":"else","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ollayf"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"ollayf"},"content":"    exit 1","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ollayf"},"content":"fi","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"ollayf":22}}]
