[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    mainClass \u003d \"com.clanki.Clanki\"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    archiveBaseName \u003d \"clanki\"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joulev":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"| Display                                                                                     | Name         | GitHub Profile                            | Portfolio                             |","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"| :------------------------------------------------------------------------------------------ | :----------- | :---------------------------------------- | :------------------------------------ |","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/16986946?v\u003d4\u0026s\u003d100)                             | Kong Dehao   | [GitHub](https://github.com/kdh3799)      | [Portfolio](docs/team/kongdehao.md)   |","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/44609036?v\u003d4\u0026s\u003d100)                             | Vu Van Dung  | [GitHub](https://github.com/joulev)       | [Portfolio](https://joulev.dev)       |","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/88227764?v\u003d4\u0026s\u003d100)                             | Song Zijin   | [GitHub](https://github.com/SongZijin)    | [Portfolio](docs/team/songzijin.md)   |","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/72350236?v\u003d4\u0026s\u003d100)                             | Moses Lee    | [GitHub](https://github.com/moseslee9012) | [Portfolio](docs/team/moseslee.md)    |","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"| \u003cimg src\u003d\"https://avatars.githubusercontent.com/u/88180884\" width\u003d\"100px\" height\u003d\"100px\" /\u003e | Javienne Yeo | [GitHub](https://github.com/javienneyeo)  | [Portfolio](docs/team/javienneyeo.md) |","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"joulev":7,"-":2}},{"path":"docs/team/moseslee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"# Moses Lee - Project Portfolio Page","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"moseslee9012":1,"-":5}},{"path":"src/main/java/com/clanki/Clanki.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import com.clanki.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import com.clanki.storage.StorageFile;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"public class Clanki {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    private StorageFile storageFile;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    public Clanki() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"            storageFile \u003d new StorageFile();","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"            this.flashcardList \u003d new FlashcardList(storageFile.load());","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        } catch (InvalidStorageFilePathException | StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"        new Clanki().run();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"    public void run() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        while (true) {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"            String inputText \u003d ui.getUserCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"            Command command \u003d Parser.parseCommand(inputText);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"            command.execute(flashcardList, ui);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"            try {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"                storageFile.save(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"            } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"            if (command instanceof ByeCommand) {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                return;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":28,"kdh3799":4,"joulev":15}},{"path":"src/main/java/com/clanki/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":" * A type of command that will instruct to add a new element into the ArrayList","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":" * of flashcards.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"AddCommand\");","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    String questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    String answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"    public AddCommand(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"        assert !questionText.isEmpty() : \"question text should not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        assert !answerText.isEmpty() : \"answer text should not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * For testing purposes only.","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        return \"Question to add: \" + questionText + \" Answer: \" + answerText;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        logger.log(Level.INFO, \"Start to add new flashcard to list of flashcards.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"        logger.log(Level.INFO, \"Start to print when flashcard successfully added.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"        display.printSuccessfulAddMessage(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":29,"joulev":11}},{"path":"src/main/java/com/clanki/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"        display.printByeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"joulev":11}},{"path":"src/main/java/com/clanki/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * Represents a command that is instructed for the program to conduct. A Command","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" * Object specifies what the type of command is with its subclasses.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    public abstract void execute(FlashcardList flashcardList, Ui display);","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":9,"joulev":3}},{"path":"src/main/java/com/clanki/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"    int index;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"moseslee9012"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"moseslee9012"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"moseslee9012"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"moseslee9012"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"moseslee9012"},"content":"        flashcardList.deleteFlashcard(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"moseslee9012"},"content":"        display.printSuccessfulDelete();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"moseslee9012"},"content":"        System.out.println(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"moseslee9012"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"moseslee9012":17,"joulev":2}},{"path":"src/main/java/com/clanki/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kdh3799"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kdh3799"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kdh3799"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"kdh3799"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"kdh3799"},"content":"public class ReviewCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"kdh3799"},"content":"    private static void reviewCurrentFlashcard(Ui display, Flashcard flashcard) {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"kdh3799"},"content":"        boolean isCurrentCardPassed \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"kdh3799"},"content":"        display.printlnSeveralStrings(\"Let\u0027s see the next flashcard!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"kdh3799"},"content":"        while (!isCurrentCardPassed) {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"kdh3799"},"content":"            display.printlnSeveralStrings(\"Question for the current flashcard is:\", flashcard.getQuestion());","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"kdh3799"},"content":"            display.printlnSeveralStrings(\"Are you ready to view the answer?\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"kdh3799"},"content":"            display.getUserCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"kdh3799"},"content":"            display.printlnSeveralStrings(flashcard.getAnswer(), \"Have you got this correct?\");","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"kdh3799"},"content":"            String answerIfCorrect \u003d display.getUserCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"kdh3799"},"content":"            if (answerIfCorrect.equals(\"yes\") || answerIfCorrect.equals(\"y\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"kdh3799"},"content":"                display.printlnSeveralStrings(\"Great, you got it right!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"kdh3799"},"content":"                flashcard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"kdh3799"},"content":"                isCurrentCardPassed \u003d true;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"kdh3799"},"content":"            } else if (answerIfCorrect.equals(\"n\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"kdh3799"},"content":"                display.printlnSeveralStrings(\"No worries, we will try it next time.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"kdh3799"},"content":"                flashcard.updateDueDateAfterIncorrectAnswer();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"kdh3799"},"content":"                isCurrentCardPassed \u003d true;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kdh3799"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"                display.printInvalidInput();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"kdh3799"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"kdh3799"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"kdh3799"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"kdh3799"},"content":"        ArrayList\u003cFlashcard\u003e fullFlashcardList \u003d flashcardList.getFlashCards();","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"kdh3799"},"content":"        for (int i \u003d 0; i \u003c fullFlashcardList.size(); i++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"kdh3799"},"content":"            Flashcard flashcard \u003d fullFlashcardList.get(i);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"kdh3799"},"content":"            if (flashcard.isDueBeforeToday()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"kdh3799"},"content":"                reviewCurrentFlashcard(display, flashcard);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"kdh3799"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"kdh3799"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"kdh3799"},"content":"        display.printlnSeveralStrings(\"Congrats! You have reviewed all the flashcards due today!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"kdh3799"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kdh3799":45}},{"path":"src/main/java/com/clanki/commands/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"        display.printInvalidInput();","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"kdh3799":1,"joulev":11}},{"path":"src/main/java/com/clanki/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"    String query;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"    ArrayList\u003cFlashcard\u003e matchingFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    public UpdateCommand(String query) {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"        super();","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"    public void printFlashCard(Flashcard flashcard) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Q: \" + flashcard.getQuestion());","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"A: \" + flashcard.getAnswer());","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"    public void printFlashCards(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"[\" + (i + 1) + \"]\");","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"            printFlashCard(flashcards.get(i));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"    public void findFlashcard(ArrayList\u003cFlashcard\u003e flashcards, String query) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"            Flashcard currentFlashcard \u003d flashcards.get(i);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"            if (currentFlashcard.getQuestion().contains(query)","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"                    || currentFlashcard.getAnswer().contains(query)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"                matchingFlashcards.add(currentFlashcard);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"    public int implementUpdate(ArrayList\u003cFlashcard\u003e flashcards, String userText) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"        String[] userTexts \u003d userText.split(\" \", 3);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"        int indexInMatchList \u003d Integer.parseInt(userTexts[0]) - 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"        Flashcard flashcardToChange \u003d matchingFlashcards.get(indexInMatchList);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"        int index \u003d flashcards.indexOf(flashcardToChange);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"        if (userTexts[1].contains(\"q\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"            flashcards.get(index).setQuestion(userTexts[2]);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"        if (userTexts[1].contains(\"a\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"            flashcards.get(index).setAnswer(userTexts[2]);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"        return index;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"javienneyeo"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashCards();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"javienneyeo"},"content":"        findFlashcard(flashcards, query);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        System.out.println(","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"                \"Found \" + matchingFlashcards.size() + \" cards with the query \\\"\" + query + \"\\\":\");","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"javienneyeo"},"content":"        printFlashCards(matchingFlashcards);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Which flashcard do you want to update?\");","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"javienneyeo"},"content":"        String userText \u003d display.getUserCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"javienneyeo"},"content":"        int index \u003d implementUpdate(flashcards, userText);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Understood. The card has been updated to\");","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"javienneyeo"},"content":"        printFlashCard(flashcards.get(index));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joulev":6,"javienneyeo":61}},{"path":"src/main/java/com/clanki/exceptions/EmptyFlashcardAnswerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"public class EmptyFlashcardAnswerException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"joulev":4}},{"path":"src/main/java/com/clanki/exceptions/EmptyFlashcardQuestionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"public class EmptyFlashcardQuestionException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"joulev":4}},{"path":"src/main/java/com/clanki/exceptions/InvalidAddFlashcardInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"public class InvalidAddFlashcardInputException extends Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":3,"joulev":1}},{"path":"src/main/java/com/clanki/exceptions/InvalidStorageFilePathException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"public class InvalidStorageFilePathException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"     * Copied from:","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"    public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":12}},{"path":"src/main/java/com/clanki/exceptions/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":" * Signals that some error has occured while trying to convert and read/write data between the application","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":" * and the storage file.","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * Copied from:","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"public class StorageOperationException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":14}},{"path":"src/main/java/com/clanki/objects/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"public class Flashcard {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"    private static final double SPACED_REPETITION_FACTOR \u003d 1.5;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"    private String questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"    private String answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    private int currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public Flashcard(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"kdh3799"},"content":"    public Flashcard(String questionText, String answerText, LocalDate dueDate, int currentPeriodInDays) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    public String getQuestion() {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"        return questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    public void setQuestion(String questionText) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"    public String getAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        return answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"    public void setAnswer(String answerText) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        return dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"    public int getCurrentPeriodInDays() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        return currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        return this.dueDate.isEqual(LocalDate.now());","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"kdh3799"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"kdh3799"},"content":"     * this function checks if the flashcard is due or overdue","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"kdh3799"},"content":"     * Sometimes the user may not clear all flashcards on time, so we may have cards overdue","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"kdh3799"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"kdh3799"},"content":"     * @return true if the card is due or overdue","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"kdh3799"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"kdh3799"},"content":"    public boolean isDueBeforeToday() {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"kdh3799"},"content":"        return !LocalDate.now().isBefore(this.getDueDate());","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"     * Reset \u003ccode\u003edueDate\u003c/code\u003e and \u003ccode\u003ecurrentPeriodInDays\u003c/code\u003e as if the","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     * card was just created.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    public void updateDueDateAfterIncorrectAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * Update \u003ccode\u003edueDate\u003c/code\u003e and \u003ccode\u003ecurrentPeriodInDays\u003c/code\u003e according to","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     * the spaced repetition algorithm. Which is very simple, to be honest, but it","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"     * does the job.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    public void updateDueDateAfterCorrectAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"        if (this.currentPeriodInDays \u003d\u003d 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"            this.currentPeriodInDays \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"            double newPeriod \u003d this.currentPeriodInDays * SPACED_REPETITION_FACTOR;","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"            this.currentPeriodInDays \u003d (int) Math.ceil(newPeriod);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d this.dueDate.plusDays(this.currentPeriodInDays);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":16,"kdh3799":11,"joulev":60}},{"path":"src/main/java/com/clanki/objects/FlashcardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"public class FlashcardList {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"    private final ArrayList\u003cFlashcard\u003e flashcards;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"    public FlashcardList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"        this.flashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    public FlashcardList(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"        this.flashcards \u003d flashcards;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    public void addNewFlashcard(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        Flashcard newFlashcard \u003d new Flashcard(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"        flashcards.add(newFlashcard);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"moseslee9012"},"content":"    public void deleteFlashcard(int index) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"moseslee9012"},"content":"        flashcards.remove(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"kdh3799"},"content":"    public ArrayList\u003cFlashcard\u003e getFlashCards() {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"kdh3799"},"content":"        return flashcards;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":19,"kdh3799":4,"moseslee9012":5,"joulev":1}},{"path":"src/main/java/com/clanki/parser/ParsedInput.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"class Option {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"    private static final String BODY_SEPARATOR \u003d \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"    private String value;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public Option(String optionString) {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        String[] parts \u003d optionString.split(BODY_SEPARATOR, 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        name \u003d parts[0].trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        value \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public String getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        return name;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        return value;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"public class ParsedInput {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    private static final String OPTION_INDICATOR \u003d \"/\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    private static final String OPTION_SEPARATOR \u003d \" \" + OPTION_INDICATOR;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    private String command;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    private String body;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    private Option[] options;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    public ParsedInput(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        // Assuming input \u003d \"command blah blah /opt1 hello /opt2 world blah bleh\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        // After trimming:","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        // parts \u003d [\"command blah blah\", \"opt1 hello\", \"opt2 world blah bleh\"]","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        String[] parts \u003d input.split(OPTION_SEPARATOR);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        options \u003d new Option[parts.length - 1];","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"            Option option \u003d new Option(parts[i].trim());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                command \u003d option.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"                body \u003d option.getValue();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"                options[i - 1] \u003d option;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        return command;","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    public String getBody() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        return body;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"     * Returns the value of the option with the given name.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"     * Example: \"command blah blah /opt1 hello /opt2 world blah bleh\" then","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"     * getOptionByName(\"opt2\") returns \"world blah bleh\" and getOptionByName(\"foo\")","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"     * returns null.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"     * @param name The name of the option.","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"     * @return The (trimmed) value of the option, or null if the option does not","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"     *         exist. Be careful that the option can be an empty string. If an","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"     *         option is specified multiple times, the last one will be returned.","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"    public String getOptionByName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        for (int i \u003d options.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"            if (options[i].getName().equals(name)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"                return options[i].getValue();","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"        return null;","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"joulev":80}},{"path":"src/main/java/com/clanki/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.commands.DeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"import com.clanki.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.UnknownCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.UpdateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardAnswerException;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardQuestionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.InvalidAddFlashcardInputException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"public class Parser {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    private static final String QUESTION_OPTION_IDENTIFIER \u003d \"q\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    private static final String ANSWER_OPTION_IDENTIFIER \u003d \"a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    private static Logger logger \u003d Logger.getLogger(\"Parser\");","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"            return parseCommandStrict(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        } catch (InvalidAddFlashcardInputException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"            System.out.println(","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"                    \"The input is in an incorrect format, please follow the format in user guide\");","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"        } catch (EmptyFlashcardQuestionException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"            System.out.println(\"The question of this card is empty, please enter one.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        } catch (EmptyFlashcardAnswerException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"            System.out.println(\"The answer for this flashcard is empty, please enter one.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    public static Command parseCommandStrict(String userInput)","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"            throws InvalidAddFlashcardInputException, EmptyFlashcardQuestionException,","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            EmptyFlashcardAnswerException {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        String command \u003d parsedInput.getCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"        assert !command.isEmpty() : \"The command string must not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        switch (command) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        case \"add\":","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"            return getAddCommand(parsedInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"kdh3799"},"content":"        case \"review\":","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"            return getReviewCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"        case \"update\":","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"            return getUpdateCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        case \"del\":","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"            return getDeleteCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        case \"bye\":","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            return getByeCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"            return new UnknownCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"     * Constructs an AddCommand from the input of the user, if the input is of an","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"     * incorrect format, a respective exception will be thrown.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"     * @param parsedInput The input collected by Ui from the user, after being","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"     *                    parsed with the ParsedInput class.","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"SongZijin"},"content":"     * @return An AddCommand with the question and answer text extracted from user input","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"     * @throws InvalidAddFlashcardInputException If the start indicators cannot be","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     *                                           found.","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"     * @throws EmptyFlashcardQuestionException   If the string is empty after","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"     *                                           QUESTION_OPTION_IDENTIFIER.","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"     * @throws EmptyFlashcardAnswerException     If the string is empty after","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"     *                                           ANSWER_OPTION_IDENTIFIER.","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"    public static AddCommand getAddCommand(ParsedInput parsedInput)","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"SongZijin"},"content":"            throws InvalidAddFlashcardInputException, EmptyFlashcardQuestionException,","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"SongZijin"},"content":"            EmptyFlashcardAnswerException {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"SongZijin"},"content":"        logger.log(Level.INFO, \"Start to parse input to obtain question text.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"        String questionText \u003d parsedInput.getOptionByName(QUESTION_OPTION_IDENTIFIER);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"SongZijin"},"content":"        logger.log(Level.INFO, \"Start to parse input to obtain answer text.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"        String answerText \u003d parsedInput.getOptionByName(ANSWER_OPTION_IDENTIFIER);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"        if (questionText \u003d\u003d null || answerText \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"SongZijin"},"content":"            throw new InvalidAddFlashcardInputException();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"SongZijin"},"content":"        if (questionText.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"SongZijin"},"content":"            logger.log(Level.INFO, \"No input at question text detected.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"SongZijin"},"content":"            throw new EmptyFlashcardQuestionException();","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"SongZijin"},"content":"        if (answerText.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"            logger.log(Level.INFO, \"No input at answer text detected.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"SongZijin"},"content":"            throw new EmptyFlashcardAnswerException();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"SongZijin"},"content":"        return new AddCommand(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"    public static ReviewCommand getReviewCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"        return new ReviewCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"    public static UpdateCommand getUpdateCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"        return new UpdateCommand(parsedInput.getBody());","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"    public static DeleteCommand getDeleteCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"        int index \u003d Integer.parseInt(parsedInput.getBody());","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"    public static ByeCommand getByeCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"joulev"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":41,"moseslee9012":1,"kdh3799":2,"joulev":63,"javienneyeo":2}},{"path":"src/main/java/com/clanki/storage/FlashcardListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":" * This class modifies the list of flashcards from stored text into an ArrayList in FlashcardList.","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":" * Many portions of the code in this class are modified from the link below: (addressbook-level2)","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookDecoder.java","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"public class FlashcardListDecoder {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"    public static final Pattern FLASHCARD_ARGS_FORMAT \u003d // \u0027/\u0027 forward slashes are reserved for delimiter prefixes","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"            Pattern.compile(\"q/(?\u003cquestion\u003e[^/]+)\" + \" a/(?\u003canswer\u003e[^/]+)\"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"                    + \" d/(?\u003cdueDate\u003e[^/]+)\"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"                    + \" p/(?\u003ccurrentPeriod\u003e[^/]+)\");","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"     * Decodes {@code encodedFlashcardList} into an {@code ArrayList\u003cFlashcard\u003e} containing the decoded flashcards.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"     * @throws StorageOperationException if the {@code encodedFlashcardList} is in an invalid format.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    public static ArrayList\u003cFlashcard\u003e decodeFlashcardList(List\u003cString\u003e encodedFlashcardList)","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"            throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        final ArrayList\u003cFlashcard\u003e decodedFlashcard \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        for (String encodedFlashcard : encodedFlashcardList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"            decodedFlashcard.add(decodeFlashcardFromString(encodedFlashcard));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        return decodedFlashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"     * Decodes {@code encodedFlashcard} into a {@code Flashcard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"     * @throws StorageOperationException if {@code encodedFlashcard} is in an invalid format.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"    private static Flashcard decodeFlashcardFromString(String encodedFlashcard)","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"            throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        final Matcher matcher \u003d FLASHCARD_ARGS_FORMAT.matcher(encodedFlashcard);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"            throw new StorageOperationException(\"Encoded person in invalid format. Unable to decode.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"        return new Flashcard(matcher.group(\"question\"), matcher.group(\"answer\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"                LocalDate.parse(matcher.group(\"dueDate\")),","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"                Integer.parseInt(matcher.group(\"currentPeriod\"))","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"        );","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":57}},{"path":"src/main/java/com/clanki/storage/FlashcardListEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":" * This class modifies the list of flashcards from FlashcardList into a storable format.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":" * Many portions of the code in this class are modified from the link below: (addressbook-level2)","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookEncoder.java","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"public class FlashcardListEncoder {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"     * Encodes all the {@code Flashcards} in the {@code toSave} into a list of decodable and readable","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"     * string presentation for storage.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"    public static List\u003cString\u003e encodeAddressBook(FlashcardList toSave) {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"        final List\u003cString\u003e encodedFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        toSave.getFlashCards().forEach(flashcard -\u003e encodedFlashcards.add(encodeFlashcardToString(flashcard)));","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        return encodedFlashcards;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"     * Encodes the {@code flashcard} into a decodable and readable string representation.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    private static String encodeFlashcardToString(Flashcard flashcard) {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"        final StringBuilder encodedFlashcardBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(\"q/\").append(flashcard.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(\" a/\").append(flashcard.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(\" d/\").append(flashcard.getDueDate().toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(\" p/\").append(flashcard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"        return encodedFlashcardBuilder.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":40}},{"path":"src/main/java/com/clanki/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":" * This class manages the storing of FlashcardList and the recovering of stored","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":" * data each time the application first start up.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":" * Many portions of the code in this class are modified from the link below: (addressbook-level2)","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"public class StorageFile {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"     * Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"flashcardList.txt\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    public final Path path;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"    public StorageFile() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    public StorageFile(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"     * Saves the {@code addressBook} data to the storage file.","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"    public void save(FlashcardList flashcardList) throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"            List\u003cString\u003e encodedAddressBook \u003d FlashcardListEncoder.encodeAddressBook(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"SongZijin"},"content":"            Files.write(path, encodedAddressBook);","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"SongZijin"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"SongZijin"},"content":"     * Loads the {@code AddressBook} data from this storage file, and then returns it.","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"SongZijin"},"content":"     * Returns an empty {@code AddressBook} if the file does not exist, or is not a regular file.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"SongZijin"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"SongZijin"},"content":"    public ArrayList\u003cFlashcard\u003e load() throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"SongZijin"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"SongZijin"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"SongZijin"},"content":"            return FlashcardListDecoder.decodeFlashcardList(Files.readAllLines(path));","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"SongZijin"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"SongZijin"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"SongZijin"},"content":"            // other errors","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"SongZijin"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"SongZijin"},"content":"    public String getPath() {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"SongZijin"},"content":"        return path.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":97}},{"path":"src/main/java/com/clanki/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" * Parts of the code below are copied and adapted from TextUi.java of","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":" * addressbook-level2, link of original code:","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"public class Ui {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    private final Scanner in;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    // private final PrintStream out;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    public Ui() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        // this.out \u003d out;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     * Prompts for the command and reads the text entered by the user. Ignores","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"     * empty, pure whitespace, and comment lines. Echos the command back to the","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     * user.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"     * @return command (full line) entered by the user","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    public void printSuccessfulAddMessage(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        System.out.println(\"A new card is now added:\");","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Question: \" + questionText);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Answer: \" + answerText);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    public void printByeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Bye. Don\u0027t forget to come back later to study!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"Welcome to Clanki! Time to start studying!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"    public void printInvalidInput() {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"The input is in an incorrect format.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"moseslee9012"},"content":"    public void printSuccessfulDelete() {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"moseslee9012"},"content":"        System.out.print(\"Got it. Deleted the flashcard at index \");","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"kdh3799"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"     * reused from Kong Dehao ip for general printing to console","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"kdh3799"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"kdh3799"},"content":"     * @param message multiple strings to be shown to user","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"kdh3799"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"kdh3799"},"content":"    public void printlnSeveralStrings(String... message) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"kdh3799"},"content":"        for (String m : message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"kdh3799"},"content":"            System.out.println(m);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"kdh3799"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":35,"kdh3799":10,"moseslee9012":4,"joulev":19}},{"path":"src/test/java/com/clanki/objects/FlashcardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"class FlashcardTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public void constructNewFlashcard_correctlyFormattedInputs_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard \u003d new Flashcard(\"QUESTION\", \"ANSWER\");","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"        assertEquals(\"QUESTION\", testCard.getQuestion());","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        assertEquals(\"ANSWER\", testCard.getAnswer());","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now(), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        assertEquals(0, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"        assertEquals(true, testCard.isDueToday());","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    public void updateFlashcard_incorrectAnswer_shouldResetDatesToToday() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        Flashcard testCard \u003d new Flashcard(\"QUESTION\", \"ANSWER\", LocalDate.now(), 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterIncorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now(), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        assertEquals(0, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    public void updateFlashcard_correctAnswer_shouldUpdateDates() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        Flashcard testCard \u003d new Flashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(1), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        assertEquals(1, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q2\", \"a2\", LocalDate.now(), 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(2), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        assertEquals(2, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q3\", \"a3\", LocalDate.now(), 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(3), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        assertEquals(3, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q4\", \"a4\", LocalDate.now(), 45);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(68), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        assertEquals(68, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":10,"joulev":41}},{"path":"src/test/java/com/clanki/parser/ParsedInputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"class ParsedInputTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public void getCommand_emptyInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public void getCommand_oneWordInput_oneWord() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command\");","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    public void getCommand_multipleWordsInput_firstWord() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    public void getCommand_withSlash_hasTheSlash() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command/blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command/blah\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    public void getBody_emptyInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    public void getBody_oneWordInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command\");","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    public void getBody_multipleWordsInput_allWords() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        assertEquals(\"blah blah\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithoutBody_beNull() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command             /blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithBody_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command       a b      /blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        assertEquals(\"a b\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithBodyAndTrailingSpaces_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command       a b      /blah blah    \");","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"        assertEquals(\"a b\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    public void getOptionByName_normalScenarios_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"                \"command   /opt1   blah   /opt2   /opt3   bleh     \");","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        assertEquals(\"blah\", parsedInput.getOptionByName(\"opt1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getOptionByName(\"opt2\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"        assertEquals(\"bleh\", parsedInput.getOptionByName(\"opt3\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"        assertEquals(null, parsedInput.getOptionByName(\"opt4\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"    public void getOptionByName_sameOptionMultipleTimes_selectLast() {","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"                \"command   /opt1   blah   /opt2   /opt3   bleh   /opt1   bleh     \");","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        assertEquals(\"bleh\", parsedInput.getOptionByName(\"opt1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"joulev":84}},{"path":"src/test/java/com/clanki/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"import com.clanki.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.UnknownCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.UpdateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardAnswerException;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardQuestionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.InvalidAddFlashcardInputException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"class ParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    public void parserAddCommand_correctlyFormattedInput_successful() {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"add /q Question /a Answer\");","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        Command expectedCommand \u003d new AddCommand(\"Question\", \"Answer\");","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        assertEquals(expectedCommand.toString(), parsedCommand.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    public void parserAddCommand_answerBeforeQuestion_successful() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"add /a Answer /q Question\");","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        Command expectedCommand \u003d new AddCommand(\"Question\", \"Answer\");","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        assertEquals(expectedCommand.toString(), parsedCommand.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    public void parserAddCommand_incorrectFormattedInput_invalidInputException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"        assertThrows(InvalidAddFlashcardInputException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add Question /a Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"        assertThrows(InvalidAddFlashcardInputException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q Question /w Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    public void parserAddCommand_partOfInputMissing_emptyInputPartException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        assertThrows(EmptyFlashcardAnswerException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q Question /a \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        assertThrows(EmptyFlashcardQuestionException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q  /a Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"    public void parserByeCommand_byeCommand_successful() {","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof ByeCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"        parsedCommand \u003d Parser.parseCommand(\"bye whatever\");","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof ByeCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"kdh3799"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"kdh3799"},"content":"    public void parserReviewCommand_reviewCommand_successful() {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"review\");","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"kdh3799"},"content":"        assertTrue(parsedCommand instanceof ReviewCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"    public void parserUnknownCommand_unknownCommand_successful() {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"unknown\");","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof UnknownCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"javienneyeo"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"javienneyeo"},"content":"    public void parserUpdateCommand_updateCommand_successful() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"update Question\");","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"javienneyeo"},"content":"        assertTrue(parsedCommand instanceof UpdateCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":31,"kdh3799":5,"joulev":34,"javienneyeo":6}},{"path":"src/test/java/com/clanki/storage/FlashcardListDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListDecoder.decodeFlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListEncoder.encodeAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"class FlashcardListDecoderTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"    void decodeFlashcardList_correctInput_correctOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e storedString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q/q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q/q2 a/a2 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"            ArrayList\u003cFlashcard\u003e decodedFlashcardList \u003d decodeFlashcardList(storedString);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"            Flashcard testCard1 \u003d decodedFlashcardList.get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"q1\", testCard1.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"a1\", testCard1.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"            assertEquals(LocalDate.now(), testCard1.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"            assertEquals(0, testCard1.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"            Flashcard testCard2 \u003d decodedFlashcardList.get(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"q2\", testCard2.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"a2\", testCard2.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"            assertEquals(LocalDate.now(), testCard2.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"            assertEquals(0, testCard2.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    void decodeAddressBook_encodeInput_decodeOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q2\", \"a2\");","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeAddressBook(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"            ArrayList\u003cFlashcard\u003e decodedFlashcardList \u003d decodeFlashcardList(encodedResult);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"            Flashcard testCard1 \u003d decodedFlashcardList.get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"q1\", testCard1.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"a1\", testCard1.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"            assertEquals(LocalDate.now(), testCard1.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"            assertEquals(0, testCard1.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"            Flashcard testCard2 \u003d decodedFlashcardList.get(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"q2\", testCard2.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"            assertEquals(\"a2\", testCard2.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"            assertEquals(LocalDate.now(), testCard2.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"            assertEquals(0, testCard2.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"SongZijin"},"content":"    void decodeAddressBook_invalidInput_exception() {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e storedString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"SongZijin"},"content":"        assertThrows(StorageOperationException.class,","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"SongZijin"},"content":"                () -\u003e decodeFlashcardList(storedString));","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":74}},{"path":"src/test/java/com/clanki/storage/FlashcardListEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListEncoder.encodeAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"class FlashcardListEncoderTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    void encodeAddressBook_correctInput_correctOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q2\", \"a2\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeAddressBook(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        String line1 \u003d \"q/q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        String line2 \u003d \"q/q2 a/a2 d/\" + LocalDate.now().toString() + \" p/0\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        assertEquals(line1, encodedResult.get(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        assertEquals(line2, encodedResult.get(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    void encodeAddressBook_emptyInput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeAddressBook(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        assertTrue(encodedResult.isEmpty());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":35}}]
