[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    mainClass \u003d \"com.clanki.Clanki\"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    archiveBaseName \u003d \"clanki\"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"joulev":3,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"# About Us","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"| Display                                                                                     | Name         | GitHub Profile                            | Portfolio                        |","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"| :------------------------------------------------------------------------------------------ | :----------- | :---------------------------------------- | :------------------------------- |","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/16986946?v\u003d4\u0026s\u003d100)                             | Kong Dehao   | [GitHub](https://github.com/kdh3799)      | [Portfolio](./team/kongdehao)    |","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/44609036?v\u003d4\u0026s\u003d100)                             | Vu Van Dung  | [GitHub](https://github.com/joulev)       | [Portfolio](./team/joulev)       |","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"| \u003cimg src\u003d\"./otherImages%2FZijinProfile.jpg\" width\u003d\"100px\" height\u003d\"100px\" /\u003e                 | Song Zijin   | [GitHub](https://github.com/SongZijin)    | [Portfolio](./team/songzijin)    |","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"| ![](https://avatars.githubusercontent.com/u/72350236?v\u003d4\u0026s\u003d100)                             | Moses Lee    | [GitHub](https://github.com/moseslee9012) | [Portfolio](./team/moseslee9012) |","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"| \u003cimg src\u003d\"https://avatars.githubusercontent.com/u/88180884\" width\u003d\"100px\" height\u003d\"100px\" /\u003e | Javienne Yeo | [GitHub](https://github.com/javienneyeo)  | [Portfolio](./team/javienneyeo)  |","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"joulev":8,"-":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kdh3799"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"kdh3799"},"content":"- [Developer Guide](#developer-guide)","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"  - [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"  - [Design \u0026 implementation](#design--implementation)","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"kdh3799"},"content":"    - [Add Flashcard Feature](#add-flashcard-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"kdh3799"},"content":"    - [Delete Flashcard Feature](#delete-flashcard-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"kdh3799"},"content":"    - [Update Flashcard Feature](#update-flashcard-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"kdh3799"},"content":"    - [Review Flashcard Feature](#review-flashcard-feature)","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"kdh3799"},"content":"    - [Parser](#parser)","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"kdh3799"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"kdh3799"},"content":"    - [Target user profile](#target-user-profile)","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"kdh3799"},"content":"    - [Value proposition](#value-proposition)","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"kdh3799"},"content":"  - [User Stories](#user-stories)","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"kdh3799"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"kdh3799"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"kdh3799"},"content":"  - [Instructions for manual testing](#instructions-for-manual-testing)","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"kdh3799"},"content":"\u003c!-- TOC --\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"- [addressbook-level2](https://github.com/se-edu/addressbook-level2)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"- [Song Zijin\u0027s IP](https://github.com/SongZijin/ip)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"## Design \u0026 Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"### Add Flashcard Feature","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"The image below shows a partial class diagram involving only the relevant","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"classes when an AddCommand is created and executed:","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"![AddFlashcardClassDiagram.png](umlDiagrams%2FAddFlashcardClassDiagram.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"The current add flashcard allows the user to add a flashcard to the list of","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"flashcards, it is implemented through the following steps:","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"Step 1: The input of user is collected by `getUserCommand()` inside class `Ui`.","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"Step 2: The input string will be converted into a `Command` object by being","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"passed through `parseCommand(String userInput)` inside `Parser`.","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"In this case, an `AddCommand` will be created and returned, as shown in the","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"object diagram below:","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"![AddFlashcardObjectDiagram.png](umlDiagrams%2FAddFlashcardObjectDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"Step 3: The `execute()` function of `AddCommand` will run, calling","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"`addNewFlashcard(questionText, answerText)` of class `FlashcardList` to create","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"and add the new flashcard to the list.","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"Then it will also call `printSuccessfulAddMessage(questionText, answerText)` of","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"class `Ui` to display text indicating the successful adding function to the","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"user.","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"At this point, the adding process is completed and the program is ready to take","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"another command.","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"moseslee9012"},"content":"The following sequence diagram show how the add operation works:","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"![AddFlashcardSequence.png](umlDiagrams%2FAddFlashcardSequence.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"Through using `AddCommand` class, which extends `Command` class it increases the","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"level of abstraction as the code can now perform the various commands on a class","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"level.","lastModifiedDate":"2023-04-10"},{"lineNumber":69,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"Moreover, since the creating of new `Flashcard` of object and adding of the","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"newly created flashcard are both done in the same class as where the flashcards","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"are stored, this reduces coupling in the program as the `AddCommand` will not","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"have access to the inner structure of `FlashcardList`, which stores the list of","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"SongZijin"},"content":"- Alternative 1: Have the add command function directly in `FlashcardList`","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"SongZijin"},"content":"  - Pros: Easy to implement","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"  - Cons: Will require another function in another program to differentiate it","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"    from other commands","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"- Alternative 2: Have the constructor of `Flashcard` include adding the card to","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"  list of flashcards","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"  - Pros: Simplifies code","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"  - Cons: Will cause trouble when temporary flashcard (that need not be stored)","lastModifiedDate":"2023-04-10"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"    are created","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":91,"author":{"gitId":"moseslee9012"},"content":"### Delete Flashcard Feature","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"The figure below shows a simple class diagram for the Delete Command.","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"moseslee9012"},"content":"![DeleteFlashcardClassDiagram](umlDiagrams%2FDeleteFlashcardClassDiagram.png)","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"joulev"},"content":"The current delete flashcard allows the user to remove a flashcard from the list","lastModifiedDate":"2023-04-10"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"of flashcards, it is implemented through the following steps:","lastModifiedDate":"2023-04-10"},{"lineNumber":101,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"moseslee9012"},"content":"Step 1: The input of user is collected by `getUserCommand()` inside class `Ui`.","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"Step 2: The input string will be converted into a `Command` object by being","lastModifiedDate":"2023-04-10"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"passed through `parseCommand(String userInput)` inside `Parser`.","lastModifiedDate":"2023-04-10"},{"lineNumber":106,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"moseslee9012"},"content":"In this case, a `DeleteCommnad` will be created and returned.","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"joulev"},"content":"Step 3: The `execute()` function of `DeleteCommand` will run, creating a copy of","lastModifiedDate":"2023-04-10"},{"lineNumber":110,"author":{"gitId":"joulev"},"content":"the list of flashcards. Then `findFlashcards(flashcards, query)` is called to","lastModifiedDate":"2023-04-10"},{"lineNumber":111,"author":{"gitId":"joulev"},"content":"find the flashcards with questions matching the query, before calling","lastModifiedDate":"2023-04-10"},{"lineNumber":112,"author":{"gitId":"joulev"},"content":"`printFlashcardList(matchingFlashcards)` to display the found flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":113,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"joulev"},"content":"User input is taken to get the index of the flashcard to be removed.","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"joulev"},"content":"`deleteFlashcard` is called from class `flashcardList` to remove the flashcard","lastModifiedDate":"2023-04-10"},{"lineNumber":116,"author":{"gitId":"joulev"},"content":"from the original list of flashcards. Finally `printSuccessfulDelete` is called","lastModifiedDate":"2023-04-10"},{"lineNumber":117,"author":{"gitId":"joulev"},"content":"from class `Ui` to indicate a successful removal of the flashcard.","lastModifiedDate":"2023-04-10"},{"lineNumber":118,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"joulev"},"content":"The deletion process is now completed and the program will await another","lastModifiedDate":"2023-04-10"},{"lineNumber":120,"author":{"gitId":"joulev"},"content":"command.","lastModifiedDate":"2023-04-10"},{"lineNumber":121,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"joulev"},"content":"An overview of how the Delete operation works is shown with the following","lastModifiedDate":"2023-04-10"},{"lineNumber":123,"author":{"gitId":"joulev"},"content":"sequence diagram ![DeleteFlashcard.png](umlDiagrams%2FDeleteFlashcard.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":124,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":126,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"joulev"},"content":"Through using `DeleteCommand` class, which extends `Command` class it increases","lastModifiedDate":"2023-04-10"},{"lineNumber":128,"author":{"gitId":"joulev"},"content":"the level of abstraction as the code can now perform the various commands on a","lastModifiedDate":"2023-04-10"},{"lineNumber":129,"author":{"gitId":"joulev"},"content":"class level.","lastModifiedDate":"2023-04-10"},{"lineNumber":130,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"joulev"},"content":"In order to minimise the time for users to search for the flashcard to delete,","lastModifiedDate":"2023-04-10"},{"lineNumber":132,"author":{"gitId":"joulev"},"content":"they are able to first search for a sub-list of flashcards with matching","lastModifiedDate":"2023-04-10"},{"lineNumber":133,"author":{"gitId":"joulev"},"content":"questions as the query. This method makes the deletion process simple even if","lastModifiedDate":"2023-04-10"},{"lineNumber":134,"author":{"gitId":"joulev"},"content":"the user does not remember the index of the flashcard.","lastModifiedDate":"2023-04-10"},{"lineNumber":135,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":137,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"moseslee9012"},"content":"- Alternative 1: Delete flashcard by index from the start","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":140,"author":{"gitId":"moseslee9012"},"content":"  - Pros: Easy to implement and simplifies code","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"joulev"},"content":"  - Cons: Cumbersome to delete if user forgets the flashcard\u0027s index and has to","lastModifiedDate":"2023-04-10"},{"lineNumber":142,"author":{"gitId":"joulev"},"content":"    search through the whole list of flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":143,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"javienneyeo"},"content":"### Update Flashcard Feature","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":147,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"joulev"},"content":"The current update flashcard feature allows users search for a specific","lastModifiedDate":"2023-04-10"},{"lineNumber":149,"author":{"gitId":"joulev"},"content":"flashcard and update the contents of this flashcard. It is implemented through","lastModifiedDate":"2023-04-10"},{"lineNumber":150,"author":{"gitId":"joulev"},"content":"the following steps:","lastModifiedDate":"2023-04-10"},{"lineNumber":151,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"joulev"},"content":"Step 1: The input of user is collected by `getUserCommand()` inside class `Ui`.","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"joulev"},"content":"Step 2: The input string will be converted into a `Command` object by being","lastModifiedDate":"2023-04-10"},{"lineNumber":155,"author":{"gitId":"joulev"},"content":"passed through `parseCommand(String userInput)` inside `Parser`.","lastModifiedDate":"2023-04-10"},{"lineNumber":156,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"javienneyeo"},"content":"In this case, an `UpdateCommand` will be created and returned.","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"joulev"},"content":"Step 3: The `execute()` function of `UpdateCommand` will run, creating an","lastModifiedDate":"2023-04-10"},{"lineNumber":160,"author":{"gitId":"joulev"},"content":"ArrayList of flashcards. Then `findFlashcard(flashcards, query)` is called to","lastModifiedDate":"2023-04-10"},{"lineNumber":161,"author":{"gitId":"joulev"},"content":"find flashcards that contain questions or answers that match `query`, after","lastModifiedDate":"2023-04-10"},{"lineNumber":162,"author":{"gitId":"joulev"},"content":"which it will call `printFlashCards(matchingFlashcards)` in `UpdateCommand`","lastModifiedDate":"2023-04-10"},{"lineNumber":163,"author":{"gitId":"joulev"},"content":"class to display the flashcards found.","lastModifiedDate":"2023-04-10"},{"lineNumber":164,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":165,"author":{"gitId":"joulev"},"content":"The index of the flashcard to be updated is taken from the user input, which is","lastModifiedDate":"2023-04-10"},{"lineNumber":166,"author":{"gitId":"joulev"},"content":"collected by `getUserCommand()`. `implementUpdate(flashcards, userText)` is then","lastModifiedDate":"2023-04-10"},{"lineNumber":167,"author":{"gitId":"joulev"},"content":"called to update the question or answer of the flashcard. Finally,","lastModifiedDate":"2023-04-10"},{"lineNumber":168,"author":{"gitId":"joulev"},"content":"`printFlashCard(flashcards.get(index))` will be called which prints the","lastModifiedDate":"2023-04-10"},{"lineNumber":169,"author":{"gitId":"joulev"},"content":"flashcard that was updated with its new content.","lastModifiedDate":"2023-04-10"},{"lineNumber":170,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"joulev"},"content":"At this point, the update flashcard process is completed and the program is read","lastModifiedDate":"2023-04-10"},{"lineNumber":172,"author":{"gitId":"joulev"},"content":"to take another command.","lastModifiedDate":"2023-04-10"},{"lineNumber":173,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"joulev"},"content":"An overview of how the Update command works is shown with the following sequence","lastModifiedDate":"2023-04-10"},{"lineNumber":175,"author":{"gitId":"joulev"},"content":"diagram ![UpdateFlashcard.png](umlDiagrams%2FUpdateFlashcard.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":176,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":178,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"joulev"},"content":"Implementing the update flashcard in an `UpdateCommand` class makes it easier","lastModifiedDate":"2023-04-10"},{"lineNumber":180,"author":{"gitId":"joulev"},"content":"during the debugging process related to update flashcard feature alone as most","lastModifiedDate":"2023-04-10"},{"lineNumber":181,"author":{"gitId":"joulev"},"content":"of the methods and attributes are within this `UpdateCommand` class.","lastModifiedDate":"2023-04-10"},{"lineNumber":182,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":184,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"joulev"},"content":"- Alternative 1: Instead of creating a new arrayList `matchingFlashcards` that","lastModifiedDate":"2023-04-10"},{"lineNumber":186,"author":{"gitId":"joulev"},"content":"  store flashcards containing the `query` and then printing the list of","lastModifiedDate":"2023-04-10"},{"lineNumber":187,"author":{"gitId":"joulev"},"content":"  flashcards, directly print the flashcards when there is a match with the query","lastModifiedDate":"2023-04-10"},{"lineNumber":188,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"javienneyeo"},"content":"  - Pros: Easier to implement","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"joulev"},"content":"  - Cons: Harder to track the total number of flashcards that has `query` and","lastModifiedDate":"2023-04-10"},{"lineNumber":191,"author":{"gitId":"joulev"},"content":"    will need to have another way to track the index of the matching flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":192,"author":{"gitId":"joulev"},"content":"    it will also be more confusing as the index of the user input is not aligned","lastModifiedDate":"2023-04-10"},{"lineNumber":193,"author":{"gitId":"joulev"},"content":"    with the index of the arrayList that contains all the flashcards","lastModifiedDate":"2023-04-10"},{"lineNumber":194,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"kdh3799"},"content":"### Review Flashcard Feature","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":198,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"joulev"},"content":"The current review flashcard allows the user to review all the flashcards that","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"joulev"},"content":"are due today or before, it is implemented through the following steps:","lastModifiedDate":"2023-04-10"},{"lineNumber":201,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"joulev"},"content":"Step 1: The input of user is collected by `getUserCommand()` inside class `Ui`.","lastModifiedDate":"2023-04-10"},{"lineNumber":203,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"joulev"},"content":"Step 2: The input string will be converted into a `Command` object by being","lastModifiedDate":"2023-04-10"},{"lineNumber":205,"author":{"gitId":"joulev"},"content":"passed through `parseCommand(String userInput)` inside `Paser`.","lastModifiedDate":"2023-04-10"},{"lineNumber":206,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"kdh3799"},"content":"In this case, an `ReviewCommand` will be created and returned.","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"joulev"},"content":"Step 3: The `execute()` function of `ReviewCommand` will run, calling","lastModifiedDate":"2023-04-10"},{"lineNumber":210,"author":{"gitId":"joulev"},"content":"`getFlashCards()` of class `FlashcardList` to get the list of the flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":211,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":212,"author":{"gitId":"joulev"},"content":"Then it will iterate through the `FlashcardList` and call the function","lastModifiedDate":"2023-04-10"},{"lineNumber":213,"author":{"gitId":"joulev"},"content":"`isDueBeforeToday()` of class `Flashcard` to check if the flashcard is due by","lastModifiedDate":"2023-04-10"},{"lineNumber":214,"author":{"gitId":"joulev"},"content":"today.","lastModifiedDate":"2023-04-10"},{"lineNumber":215,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":216,"author":{"gitId":"joulev"},"content":"If the flashcard is due by today,","lastModifiedDate":"2023-04-10"},{"lineNumber":217,"author":{"gitId":"joulev"},"content":"`reviewCurrentFlashcard(Ui display, Flashcard flashcard)` of class","lastModifiedDate":"2023-04-10"},{"lineNumber":218,"author":{"gitId":"joulev"},"content":"`ReviewCommand` will be called to review the card.","lastModifiedDate":"2023-04-10"},{"lineNumber":219,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":220,"author":{"gitId":"joulev"},"content":"First, the `Ui` will display the question of the current card by calling the","lastModifiedDate":"2023-04-10"},{"lineNumber":221,"author":{"gitId":"joulev"},"content":"`getQuestion()` method of class `Flashcard`, and ask user if user is ready to","lastModifiedDate":"2023-04-10"},{"lineNumber":222,"author":{"gitId":"joulev"},"content":"view the answer. After user enters any keyboard input, the answer of the current","lastModifiedDate":"2023-04-10"},{"lineNumber":223,"author":{"gitId":"joulev"},"content":"card will be shown by calling the `getAnswer()` method of class `Flashcard`, and","lastModifiedDate":"2023-04-10"},{"lineNumber":224,"author":{"gitId":"joulev"},"content":"`Ui` will ask the user if he/she has got the card correct. If the user inputs","lastModifiedDate":"2023-04-10"},{"lineNumber":225,"author":{"gitId":"joulev"},"content":"\"y\", then the current `Flashcard` is considered to be cleared and","lastModifiedDate":"2023-04-10"},{"lineNumber":226,"author":{"gitId":"joulev"},"content":"`updateDueDateAfterCorrectAnswer()` of `Flashcard` will be called to update its","lastModifiedDate":"2023-04-10"},{"lineNumber":227,"author":{"gitId":"joulev"},"content":"`dueDate`. Then Clanki will let user review the next `Flashcard`. If the user","lastModifiedDate":"2023-04-10"},{"lineNumber":228,"author":{"gitId":"joulev"},"content":"inputs \"n\", then the card is considered to be not cleared and","lastModifiedDate":"2023-04-10"},{"lineNumber":229,"author":{"gitId":"joulev"},"content":"`updateDueDateAfterIncorrectAnswer()` will be called to update its `dueDate`.","lastModifiedDate":"2023-04-10"},{"lineNumber":230,"author":{"gitId":"joulev"},"content":"Then Clanki will let user review the next `Flashcard`. This process will repeat","lastModifiedDate":"2023-04-10"},{"lineNumber":231,"author":{"gitId":"joulev"},"content":"until all the `Flashcards` in the `FlashcardList` are iterated.","lastModifiedDate":"2023-04-10"},{"lineNumber":232,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":233,"author":{"gitId":"joulev"},"content":"After the whole `FlashcardList` has been iterated through, a message","lastModifiedDate":"2023-04-10"},{"lineNumber":234,"author":{"gitId":"joulev"},"content":"congratulating the user that he/she has completed the reviewing task will be","lastModifiedDate":"2023-04-10"},{"lineNumber":235,"author":{"gitId":"joulev"},"content":"displayed.","lastModifiedDate":"2023-04-10"},{"lineNumber":236,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":237,"author":{"gitId":"joulev"},"content":"At this point, the reviewing process is completed and the program is ready to","lastModifiedDate":"2023-04-10"},{"lineNumber":238,"author":{"gitId":"joulev"},"content":"take another command.","lastModifiedDate":"2023-04-10"},{"lineNumber":239,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"kdh3799"},"content":"The following sequence diagram show how the review operation work:","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"kdh3799"},"content":"![ReviewFlashcard-0.png](umlDiagrams%2FReviewFlashcard-1.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":244,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"joulev"},"content":"Through using `ReivewCommand` class, which extends `Command` class it increases","lastModifiedDate":"2023-04-10"},{"lineNumber":246,"author":{"gitId":"joulev"},"content":"the level of abstraction as the code can now perform the various commands on a","lastModifiedDate":"2023-04-10"},{"lineNumber":247,"author":{"gitId":"joulev"},"content":"class level.","lastModifiedDate":"2023-04-10"},{"lineNumber":248,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"joulev"},"content":"Moreover, `ReviewCommand` only has access to the public methods of","lastModifiedDate":"2023-04-10"},{"lineNumber":250,"author":{"gitId":"joulev"},"content":"`FlashcardList` and `Flashcard`, this reduces coupling in the program as the","lastModifiedDate":"2023-04-10"},{"lineNumber":251,"author":{"gitId":"joulev"},"content":"`ReviewCommand` will not have access to the inner structure of `FlashcardList`","lastModifiedDate":"2023-04-10"},{"lineNumber":252,"author":{"gitId":"joulev"},"content":"and `Flashcard`.","lastModifiedDate":"2023-04-10"},{"lineNumber":253,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":255,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"kdh3799"},"content":"- Alternative 1: Have the review command function directly in `FlashcardList`","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":258,"author":{"gitId":"kdh3799"},"content":"  - Pros: Easy to implement","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"joulev"},"content":"  - Cons: Will require another function in another program to differentiate it","lastModifiedDate":"2023-04-10"},{"lineNumber":260,"author":{"gitId":"joulev"},"content":"    from other commands","lastModifiedDate":"2023-04-10"},{"lineNumber":261,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":262,"author":{"gitId":"joulev"},"content":"- Alternative 2: After entering the `ReviewCommand`, go back to `Clanki.run()`","lastModifiedDate":"2023-04-10"},{"lineNumber":263,"author":{"gitId":"joulev"},"content":"  and take further commands for review process","lastModifiedDate":"2023-04-10"},{"lineNumber":264,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":265,"author":{"gitId":"kdh3799"},"content":"  - Pros: Simplifies code in `ReviewCommand`","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"kdh3799"},"content":"  - Cons: Will have to pass around a lot of parameters and variables","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"kdh3799"},"content":"### Parser","lastModifiedDate":"2023-04-06"},{"lineNumber":269,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":270,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":271,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":272,"author":{"gitId":"joulev"},"content":"The parser mostly relies on the `ParsedInput` class, which can parse any user","lastModifiedDate":"2023-04-10"},{"lineNumber":273,"author":{"gitId":"joulev"},"content":"provided string input in the format of Windows command prompt commands","lastModifiedDate":"2023-04-10"},{"lineNumber":274,"author":{"gitId":"joulev"},"content":"(`command body /opt-key opt-value`).","lastModifiedDate":"2023-04-10"},{"lineNumber":275,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":276,"author":{"gitId":"kdh3799"},"content":"##### `ParsedInput`","lastModifiedDate":"2023-04-06"},{"lineNumber":277,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":278,"author":{"gitId":"joulev"},"content":"Initiated with a string `input`, it splits the input to sections that are of","lastModifiedDate":"2023-04-10"},{"lineNumber":279,"author":{"gitId":"joulev"},"content":"use. From there it splits each section further to a \"title\" (denoted with `\u003d`","lastModifiedDate":"2023-04-10"},{"lineNumber":280,"author":{"gitId":"joulev"},"content":"below) and a \"body\" (denoted with `-` below) part.","lastModifiedDate":"2023-04-10"},{"lineNumber":281,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":282,"author":{"gitId":"kdh3799"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":283,"author":{"gitId":"kdh3799"},"content":"command blah blah /opt1 hello /opt2 world blah bleh","lastModifiedDate":"2023-04-06"},{"lineNumber":284,"author":{"gitId":"kdh3799"},"content":"|    Part 1     |  | Part 2 |  |      Part 3      |","lastModifiedDate":"2023-04-06"},{"lineNumber":285,"author":{"gitId":"kdh3799"},"content":"|\u003d\u003d\u003d\u003d\u003d| |-------|  |\u003d\u003d| |---|  |\u003d\u003d| |-------------|","lastModifiedDate":"2023-04-06"},{"lineNumber":286,"author":{"gitId":"kdh3799"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":287,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":288,"author":{"gitId":"joulev"},"content":"Then these small subparts are grouped together to a format where the command","lastModifiedDate":"2023-04-10"},{"lineNumber":289,"author":{"gitId":"joulev"},"content":"part of the command, the body part and the options can be retrieved","lastModifiedDate":"2023-04-10"},{"lineNumber":290,"author":{"gitId":"joulev"},"content":"programmatically.","lastModifiedDate":"2023-04-10"},{"lineNumber":291,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":292,"author":{"gitId":"joulev"},"content":"The command and body can be read with `getCommand()` and `getBody()`","lastModifiedDate":"2023-04-10"},{"lineNumber":293,"author":{"gitId":"joulev"},"content":"respectively. `getCommand()` is guaranteed to be non-null.","lastModifiedDate":"2023-04-10"},{"lineNumber":294,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":295,"author":{"gitId":"joulev"},"content":"The options can be read with `getOptionByName(optionKeyName)`. The reason we","lastModifiedDate":"2023-04-10"},{"lineNumber":296,"author":{"gitId":"joulev"},"content":"don\u0027t have specific `getDate` or `getQuestion` command is because we don\u0027t know","lastModifiedDate":"2023-04-10"},{"lineNumber":297,"author":{"gitId":"joulev"},"content":"what the user will input and what options we will require for each command. So","lastModifiedDate":"2023-04-10"},{"lineNumber":298,"author":{"gitId":"joulev"},"content":"depending on the command, we retrieve the option accordingly with e.g.","lastModifiedDate":"2023-04-10"},{"lineNumber":299,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":300,"author":{"gitId":"kdh3799"},"content":"```java","lastModifiedDate":"2023-04-06"},{"lineNumber":301,"author":{"gitId":"kdh3799"},"content":"\"command blah blah /opt1 hello /opt2 world blah bleh\"","lastModifiedDate":"2023-04-06"},{"lineNumber":302,"author":{"gitId":"kdh3799"},"content":"        getOptionByName(\"opt2\") // -\u003e \"world blah bleh\"","lastModifiedDate":"2023-04-06"},{"lineNumber":303,"author":{"gitId":"kdh3799"},"content":"        getOptionByName(\"opt3\") // -\u003e null","lastModifiedDate":"2023-04-06"},{"lineNumber":304,"author":{"gitId":"kdh3799"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":305,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":306,"author":{"gitId":"kdh3799"},"content":"##### `Parser`","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":308,"author":{"gitId":"joulev"},"content":"This is now just a matter of wrapping `ParsedInput` with suitable error handling","lastModifiedDate":"2023-04-10"},{"lineNumber":309,"author":{"gitId":"joulev"},"content":"and logic such that each command will be used to initiated a corresponding","lastModifiedDate":"2023-04-10"},{"lineNumber":310,"author":{"gitId":"joulev"},"content":"command class (e.g. `AddCommand`), while errors are handled gracefully.","lastModifiedDate":"2023-04-10"},{"lineNumber":311,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":312,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":313,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"joulev"},"content":"We need an intuitive, safe and declarative way to parse the user input.","lastModifiedDate":"2023-04-10"},{"lineNumber":315,"author":{"gitId":"joulev"},"content":"Alternative implementations that can only parse specific commands with specific","lastModifiedDate":"2023-04-10"},{"lineNumber":316,"author":{"gitId":"joulev"},"content":"options are more imperative, less readable, less maintainable and overall just a","lastModifiedDate":"2023-04-10"},{"lineNumber":317,"author":{"gitId":"joulev"},"content":"pain to handle. That\u0027s why the two classes are here.","lastModifiedDate":"2023-04-10"},{"lineNumber":318,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":320,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":321,"author":{"gitId":"kdh3799"},"content":"No.","lastModifiedDate":"2023-04-06"},{"lineNumber":322,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":323,"author":{"gitId":"SongZijin"},"content":"### Storage Feature","lastModifiedDate":"2023-04-09"},{"lineNumber":324,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":325,"author":{"gitId":"joulev"},"content":"#### Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":326,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":327,"author":{"gitId":"joulev"},"content":"The current storage feature triggers after every execution of command, updating","lastModifiedDate":"2023-04-10"},{"lineNumber":328,"author":{"gitId":"joulev"},"content":"the flashcardList.txt file to be the came as what is stored in the","lastModifiedDate":"2023-04-10"},{"lineNumber":329,"author":{"gitId":"joulev"},"content":"`FlashcardList` object.","lastModifiedDate":"2023-04-10"},{"lineNumber":330,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":331,"author":{"gitId":"SongZijin"},"content":"The entire feature consist of 3 parts, as shown in the class diagram below:","lastModifiedDate":"2023-04-09"},{"lineNumber":332,"author":{"gitId":"SongZijin"},"content":"![StorageClassDiagm.png](umlDiagrams%2FStorageClassDiagm.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":333,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":334,"author":{"gitId":"joulev"},"content":"1. `FlashcardListEncoder`: takes the list of flashcards from `FlashcardList` and","lastModifiedDate":"2023-04-10"},{"lineNumber":335,"author":{"gitId":"joulev"},"content":"   convert them to a list of strings, with heading to indicate the start of the","lastModifiedDate":"2023-04-10"},{"lineNumber":336,"author":{"gitId":"joulev"},"content":"   question, answer and deadline portion of a flashcard.","lastModifiedDate":"2023-04-10"},{"lineNumber":337,"author":{"gitId":"joulev"},"content":"2. `FlashcardListDecoder`: takes a list of string in specific format (as defined","lastModifiedDate":"2023-04-10"},{"lineNumber":338,"author":{"gitId":"joulev"},"content":"   by `FLASHCARD_ARGS_FORMAT`) and decodes the string into an arrayList of","lastModifiedDate":"2023-04-10"},{"lineNumber":339,"author":{"gitId":"joulev"},"content":"   flashcards, discarding any string of incorrect format.","lastModifiedDate":"2023-04-10"},{"lineNumber":340,"author":{"gitId":"joulev"},"content":"3. `StorageFile`: uses the encoder or decoder to save or load the current state","lastModifiedDate":"2023-04-10"},{"lineNumber":341,"author":{"gitId":"joulev"},"content":"   into or from a text file.","lastModifiedDate":"2023-04-10"},{"lineNumber":342,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":343,"author":{"gitId":"SongZijin"},"content":"The following sequence diagram show how the add operation works:","lastModifiedDate":"2023-04-09"},{"lineNumber":344,"author":{"gitId":"SongZijin"},"content":"![StorageSequenceDiagram.png](umlDiagrams%2FStorageSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":345,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":346,"author":{"gitId":"joulev"},"content":"#### Reason for Current Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":347,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":348,"author":{"gitId":"joulev"},"content":"By separating the decoder and encoder as separate classes, it allows the code","lastModifiedDate":"2023-04-10"},{"lineNumber":349,"author":{"gitId":"joulev"},"content":"for the storage system to be more readable by others, allowing them to identify","lastModifiedDate":"2023-04-10"},{"lineNumber":350,"author":{"gitId":"joulev"},"content":"and find the chunk of code for each function more easily, and possibly reuse the","lastModifiedDate":"2023-04-10"},{"lineNumber":351,"author":{"gitId":"SongZijin"},"content":"functions if they deem necessary in future versions.","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":353,"author":{"gitId":"joulev"},"content":"#### Alternative Implementation","lastModifiedDate":"2023-04-10"},{"lineNumber":354,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":355,"author":{"gitId":"SongZijin"},"content":"- Alternative 1: Have all functions in one `Storage` class","lastModifiedDate":"2023-04-09"},{"lineNumber":356,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":357,"author":{"gitId":"SongZijin"},"content":"  - Pros: Exceptions can be handled in the same place","lastModifiedDate":"2023-04-09"},{"lineNumber":358,"author":{"gitId":"SongZijin"},"content":"  - Cons: Will cause the code be less organised and readable","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"joulev"},"content":"## Product Scope","lastModifiedDate":"2023-04-10"},{"lineNumber":361,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":362,"author":{"gitId":"joulev"},"content":"### Target User Profile","lastModifiedDate":"2023-04-10"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":364,"author":{"gitId":"joulev"},"content":"Students learning subjects that require a lot of memorisation (history, a new","lastModifiedDate":"2023-04-10"},{"lineNumber":365,"author":{"gitId":"joulev"},"content":"language, etc.)","lastModifiedDate":"2023-04-10"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":367,"author":{"gitId":"joulev"},"content":"### Value Proposition","lastModifiedDate":"2023-04-10"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":369,"author":{"gitId":"joulev"},"content":"This application help users to better remember key points in their upcomming","lastModifiedDate":"2023-04-10"},{"lineNumber":370,"author":{"gitId":"joulev"},"content":"tests by providing them a platform to read through and practice answering those","lastModifiedDate":"2023-04-10"},{"lineNumber":371,"author":{"gitId":"joulev"},"content":"key learning points.","lastModifiedDate":"2023-04-10"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":375,"author":{"gitId":"-"},"content":"| Version | As a ...                | I want to ...                                                                   | So that I can ...                                                                                   |","lastModifiedDate":"2020-05-24"},{"lineNumber":376,"author":{"gitId":"joulev"},"content":"| ------- | ----------------------- | ------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2023-04-10"},{"lineNumber":377,"author":{"gitId":"SongZijin"},"content":"| v1.0    | user                    | add a card to my flashcard collection                                           | study it later on                                                                                   |","lastModifiedDate":"2023-04-09"},{"lineNumber":378,"author":{"gitId":"SongZijin"},"content":"| v1.0    | user                    | delete any of my cards                                                          | prevent getting asked to review that card later when I am confident I have truly memorised the card |","lastModifiedDate":"2023-04-09"},{"lineNumber":379,"author":{"gitId":"SongZijin"},"content":"| v1.0    | user                    | review the cards that are due today                                             | remember them better                                                                                |","lastModifiedDate":"2023-04-09"},{"lineNumber":380,"author":{"gitId":"SongZijin"},"content":"| v1.0    | user                    | make changes to the q/a any cards I want                                        | keep the info there always updated with what I want myself to memorise                              |","lastModifiedDate":"2023-04-09"},{"lineNumber":381,"author":{"gitId":"SongZijin"},"content":"| v1.0    | user seeking efficiency | review the cards at an appropriate pace that is most efficient for memorisation | not waste time reviewing when I still remember the cards well                                       |","lastModifiedDate":"2023-04-09"},{"lineNumber":382,"author":{"gitId":"SongZijin"},"content":"| v2.0    | new user                | see usage instructions                                                          | refer to them when I forget how to use the application                                              |","lastModifiedDate":"2023-04-09"},{"lineNumber":383,"author":{"gitId":"SongZijin"},"content":"| v2.0    | busy user               | store the cards somewhere                                                       | revisit them next time I open the app                                                               |","lastModifiedDate":"2023-04-09"},{"lineNumber":384,"author":{"gitId":"SongZijin"},"content":"| v2.0    | organised user          | view a list of all currently stored flashcards                                  | know what are the things I need to remember                                                         |","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"SongZijin":52,"kdh3799":70,"moseslee9012":24,"joulev":207,"-":14,"javienneyeo":17}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"# Clanki","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"Clanki is a command-line interface (CLI) application for managing flashcards. It","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"allows users to create, manage and study flashcards to assist them with","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"memorisation by using a technique called","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"[spaced repetition](https://en.wikipedia.org/wiki/Spaced_repetition).","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"- [User Guide](./UserGuide)","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"- [Developer Guide](./DeveloperGuide)","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"- [About Us](./AboutUs)","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"joulev":8,"-":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"# User Guide","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"Clanki is a command-line interface (CLI) application for managing flashcards. It","lastModifiedDate":"2023-04-01"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"allows users to create, manage and study flashcards to assist them with","lastModifiedDate":"2023-04-01"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"memorisation by using a technique called","lastModifiedDate":"2023-04-01"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"[spaced repetition](https://en.wikipedia.org/wiki/Spaced_repetition).","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"## Quick start","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"1. Ensure you have Java 11 or above installed.","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"2. Download the latest version of Clanki from","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"   [here](https://github.com/AY2223S2-CS2113-T15-4/tp/releases).","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"3. Copy the file to the folder you want to use as the home folder for Clanki.","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"   use the `java -jar clanki.jar` command to run the application. You should be","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"   greeted with `Welcome to Clanki! Time to start studying!` after a few","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"   seconds.","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"5. Type the command in the command box and press Enter to execute it. Some","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"   example commands you can try:","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"   - `add /q what is the worst fruit? /a durian`: Add a flashcard with Question:","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"     What is the worst fruit? and Answer: Durian to the list of flashcards.","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"   - `review`: Go through the flashcards that are due today.","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"   - `bye`: Exit the app.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"## Features","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"\u003e Square brackets indicate optional sections of the syntax.","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"### Adding a flashcard","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"add /q QUESTION /a ANSWER","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"- `QUESTION` will be displayed when reviewing. For how the reviewing process","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"  works, see \"Review flashcards\" section below.","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"- Since a slash character (`/`) can be interpreted as a command option, both","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"  `QUESTION` and `ANSWER` must not include (`/`). (In some of the times, `/`","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"  might still work normally, that\u0027s just you being lucky.)","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"  - We might fix this in a future version. A far, far future version that might","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"    never come...","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"- `/q QUESTION` and `/a ANSWER` can be arranged in any order.","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"- The first letter of `QUESTION` and `ANSWER` are automatically capitalised.","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"- If any options are duplicated, all but the last one are ignored.","lastModifiedDate":"2023-04-01"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"- The question and answer can include non-Latin characters such as Chinese","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"  characters. However, your terminal might have trouble displaying it. If you","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"  need such characters, find a terminal that supports it. A relatively modern","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"  terminal (more modern than cmd.exe) should do, or buy a Mac since the default","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"  Mac terminal does support it.","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"#### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"add /q What is the worst fruit? /a Durian","lastModifiedDate":"2023-04-10"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"You have added the following card:","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"Q: What is the worst fruit?","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"add /a 果物 /q What is the Japanese word for \"fruit\"?","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"You have added the following card:","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"Q: What is the Japanese word for \"fruit\"?","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"A: 果物","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-04-10"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"### Review flashcards","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"review","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"- Flashcards that are due on the day will be displayed one after another, queued","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"  in a secret order.","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"- When the user has recalled the answer for a card, or has given up on doing so,","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"  they can then press \u003ckbd\u003eEnter\u003c/kbd\u003e.","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"- The app will then show the answer and ask the user if they got it right. They","lastModifiedDate":"2023-04-01"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"  can then type `y`/`n` to indicate that they remembered the answer correctly,","lastModifiedDate":"2023-04-01"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"  or they couldn\u0027t remember the correct answer, respectively.","lastModifiedDate":"2023-04-01"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"joulev"},"content":"  - If `y` is indicated, the card is then set to a new due date in the future.","lastModifiedDate":"2023-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"joulev"},"content":"  - Otherwise, the card is pushed back to the today\u0027s queue for reviewing later,","lastModifiedDate":"2023-04-01"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"    until the user can get it correct. When the user has got it correct, the new","lastModifiedDate":"2023-04-01"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"    date is set to a future date according to a top-secret","lastModifiedDate":"2023-04-10"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"    [Spaced repetition](https://en.wikipedia.org/wiki/Spaced_repetition)","lastModifiedDate":"2023-04-10"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"    schedule that you can try to figure out if you want to explore mysteries.","lastModifiedDate":"2023-04-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"- Then the review session continues with the next card in the queue.","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"joulev"},"content":"#### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":110,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"joulev"},"content":"\u003e review","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"joulev"},"content":"There are 2 cards available for review today.","lastModifiedDate":"2023-04-10"},{"lineNumber":113,"author":{"gitId":"joulev"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"joulev"},"content":"Q: What is the worst fruit? (ENTER to view answer)","lastModifiedDate":"2023-04-10"},{"lineNumber":115,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"joulev"},"content":"Did you get it right? (y/n) n","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"joulev"},"content":"No worries, we will try again later today.","lastModifiedDate":"2023-04-10"},{"lineNumber":118,"author":{"gitId":"joulev"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"joulev"},"content":"Q: What is the Japanese word for \"fruit\"? (ENTER to view answer)","lastModifiedDate":"2023-04-10"},{"lineNumber":120,"author":{"gitId":"joulev"},"content":"A: 果物","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"joulev"},"content":"Did you get it right? (y/n) y","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"joulev"},"content":"Great, you got it right!","lastModifiedDate":"2023-04-10"},{"lineNumber":123,"author":{"gitId":"joulev"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"joulev"},"content":"Q: What is the worst fruit? (ENTER to view answer)","lastModifiedDate":"2023-04-10"},{"lineNumber":125,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"joulev"},"content":"Did you get it right? (y/n) y","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"joulev"},"content":"Great, you got it right!","lastModifiedDate":"2023-04-10"},{"lineNumber":128,"author":{"gitId":"joulev"},"content":"---","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"joulev"},"content":"Congrats! You have reviewed all the flashcards due today!","lastModifiedDate":"2023-04-10"},{"lineNumber":130,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":132,"author":{"gitId":"joulev"},"content":"### Update flashcards","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":134,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"javienneyeo"},"content":"update QUERY","lastModifiedDate":"2023-04-06"},{"lineNumber":136,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"joulev"},"content":"- `QUERY` is part of the card\u0027s question or answer. It is not case sensitive.","lastModifiedDate":"2023-04-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"joulev"},"content":"- A list of cards that contain this query will be listed, with an index assigned","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"joulev"},"content":"  to each.","lastModifiedDate":"2023-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":143,"author":{"gitId":"joulev"},"content":"- The user can then type the index of the card they wish to update with the","lastModifiedDate":"2023-04-01"},{"lineNumber":144,"author":{"gitId":"joulev"},"content":"  following syntax","lastModifiedDate":"2023-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"joulev"},"content":"  ```","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"joulev"},"content":"  INDEX [/q NEW_QUESTION] [/a NEW_ANSWER]","lastModifiedDate":"2023-04-10"},{"lineNumber":148,"author":{"gitId":"javienneyeo"},"content":"  ```","lastModifiedDate":"2023-04-06"},{"lineNumber":149,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"joulev"},"content":"- At least one of `/q` and `/a` must be provided.","lastModifiedDate":"2023-04-10"},{"lineNumber":151,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":152,"author":{"gitId":"joulev"},"content":"- Format of `NEW_QUESTION` and `NEW_ANSWER` is the same as in the `add` command","lastModifiedDate":"2023-04-10"},{"lineNumber":153,"author":{"gitId":"joulev"},"content":"  above.","lastModifiedDate":"2023-04-10"},{"lineNumber":154,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":155,"author":{"gitId":"joulev"},"content":"#### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":157,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"joulev"},"content":"update fruit","lastModifiedDate":"2023-04-10"},{"lineNumber":159,"author":{"gitId":"joulev"},"content":"Found 2 card(s) with query \"fruit\":","lastModifiedDate":"2023-04-10"},{"lineNumber":160,"author":{"gitId":"javienneyeo"},"content":"[1]","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"javienneyeo"},"content":"Q: What is the worst fruit?","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"javienneyeo"},"content":"[2]","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"javienneyeo"},"content":"Q: What is the Japanese word for \"fruit\"?","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"joulev"},"content":"A: 果物","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"joulev"},"content":"Which one do you want to update?","lastModifiedDate":"2023-04-10"},{"lineNumber":167,"author":{"gitId":"joulev"},"content":"1 /q What is the best fruit?","lastModifiedDate":"2023-04-10"},{"lineNumber":168,"author":{"gitId":"joulev"},"content":"Understood. The card has been updated to","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"joulev"},"content":"Q: What is the best fruit?","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"javienneyeo"},"content":"### Delete a flashcard","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"joulev"},"content":"delete QUERY","lastModifiedDate":"2023-04-10"},{"lineNumber":177,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"joulev"},"content":"- `QUERY` can be part of the card\u0027s question or answer.","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"joulev"},"content":"- A list of cards that contain this query will be listed, with an index assigned","lastModifiedDate":"2023-04-01"},{"lineNumber":182,"author":{"gitId":"joulev"},"content":"  to each.","lastModifiedDate":"2023-04-01"},{"lineNumber":183,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"joulev"},"content":"- The user can then type the index of the card they wish to delete. The card","lastModifiedDate":"2023-04-01"},{"lineNumber":185,"author":{"gitId":"joulev"},"content":"  with that index (on that list) is then deleted.","lastModifiedDate":"2023-04-01"},{"lineNumber":186,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"joulev"},"content":"#### Example","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"joulev"},"content":"delete fruit","lastModifiedDate":"2023-04-10"},{"lineNumber":191,"author":{"gitId":"joulev"},"content":"Found 2 card(s) with query \"fruit\":","lastModifiedDate":"2023-04-10"},{"lineNumber":192,"author":{"gitId":"joulev"},"content":"[1]","lastModifiedDate":"2023-04-10"},{"lineNumber":193,"author":{"gitId":"joulev"},"content":"Q: What is the best fruit?","lastModifiedDate":"2023-04-10"},{"lineNumber":194,"author":{"gitId":"joulev"},"content":"A: Durian","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"joulev"},"content":"[2]","lastModifiedDate":"2023-04-10"},{"lineNumber":196,"author":{"gitId":"joulev"},"content":"Q: What is the Japanese word for \"fruit\"?","lastModifiedDate":"2023-04-10"},{"lineNumber":197,"author":{"gitId":"joulev"},"content":"A: 果物","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"moseslee9012"},"content":"Which one do you want to delete?","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"joulev"},"content":"2","lastModifiedDate":"2023-04-10"},{"lineNumber":200,"author":{"gitId":"moseslee9012"},"content":"Got it. Deleted the flashcard at index 2","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"joulev"},"content":"```","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"javienneyeo"},"content":"### Delete all flashcards in the list","lastModifiedDate":"2023-04-06"},{"lineNumber":204,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":205,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":206,"author":{"gitId":"javienneyeo"},"content":"clear","lastModifiedDate":"2023-04-06"},{"lineNumber":207,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":208,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":209,"author":{"gitId":"joulev"},"content":"Delete all the flashcards in the list.","lastModifiedDate":"2023-04-10"},{"lineNumber":210,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":211,"author":{"gitId":"javienneyeo"},"content":"#### Example","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"joulev"},"content":"clear","lastModifiedDate":"2023-04-10"},{"lineNumber":215,"author":{"gitId":"javienneyeo"},"content":"All flashcards have been deleted.","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"javienneyeo"},"content":"Your list of flashcards is now empty.","lastModifiedDate":"2023-04-06"},{"lineNumber":217,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"joulev"},"content":"### List all flashcards","lastModifiedDate":"2023-04-10"},{"lineNumber":220,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":221,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":222,"author":{"gitId":"javienneyeo"},"content":"list all","lastModifiedDate":"2023-04-06"},{"lineNumber":223,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":224,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":225,"author":{"gitId":"joulev"},"content":"Display the questions and answers for all the flashcards in the list that have","lastModifiedDate":"2023-04-10"},{"lineNumber":226,"author":{"gitId":"joulev"},"content":"been added by the user, regardless of the date.","lastModifiedDate":"2023-04-10"},{"lineNumber":227,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":228,"author":{"gitId":"javienneyeo"},"content":"#### Example","lastModifiedDate":"2023-04-06"},{"lineNumber":229,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":230,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":231,"author":{"gitId":"joulev"},"content":"list all","lastModifiedDate":"2023-04-10"},{"lineNumber":232,"author":{"gitId":"javienneyeo"},"content":"Here is your list of flashcards:","lastModifiedDate":"2023-04-06"},{"lineNumber":233,"author":{"gitId":"javienneyeo"},"content":"[1]","lastModifiedDate":"2023-04-06"},{"lineNumber":234,"author":{"gitId":"javienneyeo"},"content":"Q: What is the biggest animal in the world","lastModifiedDate":"2023-04-06"},{"lineNumber":235,"author":{"gitId":"javienneyeo"},"content":"A: Antartic blue whale","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"javienneyeo"},"content":"[2]","lastModifiedDate":"2023-04-06"},{"lineNumber":237,"author":{"gitId":"javienneyeo"},"content":"Q: What are the best food for health","lastModifiedDate":"2023-04-06"},{"lineNumber":238,"author":{"gitId":"javienneyeo"},"content":"A: Lemons","lastModifiedDate":"2023-04-06"},{"lineNumber":239,"author":{"gitId":"javienneyeo"},"content":"[3]","lastModifiedDate":"2023-04-06"},{"lineNumber":240,"author":{"gitId":"javienneyeo"},"content":"Q: What colour is the sun","lastModifiedDate":"2023-04-06"},{"lineNumber":241,"author":{"gitId":"javienneyeo"},"content":"A: Red","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":243,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":244,"author":{"gitId":"joulev"},"content":"### List flashcards with specific due date","lastModifiedDate":"2023-04-10"},{"lineNumber":245,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":247,"author":{"gitId":"javienneyeo"},"content":"list DUE_DATE","lastModifiedDate":"2023-04-06"},{"lineNumber":248,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"joulev"},"content":"Display the questions and answers for all the flashcards in the list that has","lastModifiedDate":"2023-04-10"},{"lineNumber":251,"author":{"gitId":"joulev"},"content":"the due date specified by the user","lastModifiedDate":"2023-04-10"},{"lineNumber":252,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"javienneyeo"},"content":"- `DUE_DATE` has to be in the format `yyyy-mm-dd`","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"joulev"},"content":"list 2023-04-15","lastModifiedDate":"2023-04-10"},{"lineNumber":257,"author":{"gitId":"joulev"},"content":"Here is your list of flashcards:","lastModifiedDate":"2023-04-10"},{"lineNumber":258,"author":{"gitId":"javienneyeo"},"content":"[1]","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"javienneyeo"},"content":"Q: What is the biggest animal in the world","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"javienneyeo"},"content":"A: Antartic blue whale","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"javienneyeo"},"content":"[2]","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"javienneyeo"},"content":"Q: What are the best food for health","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"javienneyeo"},"content":"A: Lemons","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"javienneyeo"},"content":"[3]","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"javienneyeo"},"content":"Q: What colour is the sun","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"javienneyeo"},"content":"A: Red","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":269,"author":{"gitId":"SongZijin"},"content":"### Help menu","lastModifiedDate":"2023-04-03"},{"lineNumber":270,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":271,"author":{"gitId":"SongZijin"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":272,"author":{"gitId":"SongZijin"},"content":"help","lastModifiedDate":"2023-04-03"},{"lineNumber":273,"author":{"gitId":"SongZijin"},"content":"```","lastModifiedDate":"2023-04-03"},{"lineNumber":274,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":275,"author":{"gitId":"SongZijin"},"content":"Display the list of possible commands the user can input.","lastModifiedDate":"2023-04-03"},{"lineNumber":276,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":277,"author":{"gitId":"SongZijin"},"content":"#### Example","lastModifiedDate":"2023-04-03"},{"lineNumber":278,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":279,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":280,"author":{"gitId":"joulev"},"content":"help","lastModifiedDate":"2023-04-10"},{"lineNumber":281,"author":{"gitId":"javienneyeo"},"content":"The following are the commands you can use:","lastModifiedDate":"2023-04-07"},{"lineNumber":282,"author":{"gitId":"joulev"},"content":"add     Adds a flashcard to the current list of flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":283,"author":{"gitId":"javienneyeo"},"content":"        Parameters: add /q QUESTION /a ANSWER","lastModifiedDate":"2023-04-07"},{"lineNumber":284,"author":{"gitId":"javienneyeo"},"content":"        Example: add /q What is the worst fruit? /a Durian","lastModifiedDate":"2023-04-07"},{"lineNumber":285,"author":{"gitId":"joulev"},"content":"update  Changes the content of flashcard\u0027s question or answer.","lastModifiedDate":"2023-04-10"},{"lineNumber":286,"author":{"gitId":"joulev"},"content":"        Parameters: update QUERY","lastModifiedDate":"2023-04-10"},{"lineNumber":287,"author":{"gitId":"javienneyeo"},"content":"        Example: update fruit","lastModifiedDate":"2023-04-07"},{"lineNumber":288,"author":{"gitId":"javienneyeo"},"content":"        Which flashcard do you want to update? 1 /q What is the best fruit?","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"joulev"},"content":"delete  Removes a flashcard with specified string.","lastModifiedDate":"2023-04-10"},{"lineNumber":290,"author":{"gitId":"joulev"},"content":"        Parameters: delete QUERY","lastModifiedDate":"2023-04-10"},{"lineNumber":291,"author":{"gitId":"javienneyeo"},"content":"        Example: delete fruit","lastModifiedDate":"2023-04-07"},{"lineNumber":292,"author":{"gitId":"joulev"},"content":"review  Go through all flashcards that are due today.","lastModifiedDate":"2023-04-10"},{"lineNumber":293,"author":{"gitId":"joulev"},"content":"list    Lists out the questions and answers in the list of flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":294,"author":{"gitId":"javienneyeo"},"content":"        Parameters: list all (lists all flashcards)","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"javienneyeo"},"content":"        Parameters: list DUE_DATE (list all flashcards with that specified due date)","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"javienneyeo"},"content":"        Example: list 2023-05-04","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"joulev"},"content":"clear   Deletes all the flashcards in the list.","lastModifiedDate":"2023-04-10"},{"lineNumber":298,"author":{"gitId":"joulev"},"content":"bye     Exit the program.","lastModifiedDate":"2023-04-10"},{"lineNumber":299,"author":{"gitId":"javienneyeo"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":300,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":301,"author":{"gitId":"SongZijin"},"content":"### Exit program","lastModifiedDate":"2023-03-25"},{"lineNumber":302,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":303,"author":{"gitId":"SongZijin"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":304,"author":{"gitId":"SongZijin"},"content":"bye","lastModifiedDate":"2023-03-25"},{"lineNumber":305,"author":{"gitId":"SongZijin"},"content":"```","lastModifiedDate":"2023-03-25"},{"lineNumber":306,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":307,"author":{"gitId":"joulev"},"content":"Exit the program. Bye.","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"SongZijin":25,"moseslee9012":3,"joulev":188,"-":16,"javienneyeo":75}},{"path":"docs/team/javienneyeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"# Javienne Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"## Overview of Product","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"- Clanki is a study tool to help students with content heavy subjects with a lot of memorization required. It is","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"  able to add the questions and answers into flashcards, allowing users to review them when ready.","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"- **New feature:** Added the ability to update the question, answer or due date of a flashcard","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"    - What it does: The feature prints out a list of flashcards that contains the query in its question, ","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"      answer or due date. The feature than allows the user to choose which flashcard to update and how they ","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"      want it to be updated. The user is able to change the question, answer or due date part of the flashcard.","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    - Justification: This feature is required for users to make any changes to the flashcard. Without ","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"      this feature, the user would have to delete the flashcard and add a new flashcard in the event the ","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"      user wants to change the question, answer or due date.","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    - Highlights: Reduces the number of flashcards the user has to look through to find the specific flashcard ","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"      he/she wants to update as the feature prints out the list of flashcards that have that matching query. ","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"      In addition, the feature searches for the query in the question, answer and due date. JUnit test codes are ","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"      also written for this feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"- **New feature:** Added the ability to list out the flashcards the user has added","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"    - What it does: This feature allows the user to print out all flashcards that the user currently has or ","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"      print out all the flashcards that is due on a certain date","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"    - Justification: This allows the user to have a broad overview of all the flashcards that he/she has ","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"      added to the list. This is to allow the user to check for whether they have added duplicates into the ","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"      list or to check whether the contents of the flashcards are all correct before reviewing them.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"    - Highlights: The user is able to view all the flashcards that are due on a certain day by entering ","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"      this date as an input. This is to allow the user to view all the flashcards with that due date to ","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"      revise before reviewing it using the review feature. JUnit test codes are also written for this feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"- **New feature:** Added the ability to delete all flashcards in the current list of flashcards. ","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"    - What it does: Allows the user to remove all flashcards that have been added in the list to create a new ","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"      list of flashcards","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"    - Justification: In the event the user has many flashcards in his/her list and wants to delete all of ","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"      it to start a new list, the user is able to use this function and would not need to delete the ","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"      flashcards one-by-one. It also allows the user to start a new list of flashcard with just one command.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"- **Code contributed:**","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"  [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dt15\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003djavienneyeo\u0026tabRepo\u003dAY2223S2-CS2113-T15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"- **Contributions to UG:**","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"    - Added section under `list flashcard` function","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"    - Added section under `clear` function","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"    - Edited parts of the section under `Update` function","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"  ","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"- **Contributions to DG:**","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"    - Added implementation details for the `update` function.","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"javienneyeo":53}},{"path":"docs/team/joulev.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"# Vu Van Dung\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"## Project: Clanki","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"Clanki is a command line application one can use to store and update flashcards","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"to help them remember the relevant concepts. The user can interact with it by","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"typing code into their terminal.","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"Given below are my contribution to the project.","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"- **New feature:** Parser","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"  - What it does: allows the app to intuitively and safely parse user input","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"  - Justification: without it, imperative and specific implementation of the","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    parser for each command might be necessary, which will just be a grand","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    invitation for bugs","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"  - Highlights: thanks to this feature, all places in the app where user input","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    is parsed can be handled declaratively. Since we take a lot of user inputs,","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    this is crucial for the app","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"- **New feature:** Set up the ground work","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"  - What it does: not a user-facing feature, but this sets up Gradle, tests and","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    an overall file structure along with crucial classes (`Flashcard`,","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    `FlashcardList`, `FlashcardQueue`) that are used in all other places in the","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    app","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"  - Justification: make development of the app easier","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"- **Major contribution:** Improve other features by other members","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"  - What it does: other members\u0027 code might be inconsistent, might be","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"    reinventing the wheels, might have hidden bugs, or overall just might be","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    bad; I fixed them to a level I\u0027m at least not depressed when looking at the","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    code.","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"- **Code contributed:**","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"  [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003djoulev\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djoulev\u0026tabRepo\u003dAY2223S2-CS2113-T15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"- **Contributions to UG:**","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"  - Enhanced the user guide for all sections to make them more accurate and","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"    closer to the actual behaviour and output of the app","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"  - Added input restrictions (if any) to the UG","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"- **Contributions to DG:**","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"  - Added details for the parser","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"- Other contributions:","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"  - (Forced to) lead the project. I am basically the one who decided the","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    timeline and did most of the admin stuff","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"  - Triaged incoming issues, opened tickets and assigned them to relevant","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    personnels","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"  - Reviewed pull requests","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"joulev":57}},{"path":"docs/team/kongdehao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"TODO","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"joulev":1}},{"path":"docs/team/moseslee9012.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"# Lee Zhi Zhong Moses - Project Portfolio Page","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"moseslee9012"},"content":"## Overview: Project Clanki","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"moseslee9012"},"content":"Clanki is a command line application to store flashcards used for","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"moseslee9012"},"content":"memorising information and concepts. The user can interact with","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"the app by typing commands into their terminal.","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"moseslee9012"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"moseslee9012"},"content":"**New feature:** Added `delete` function to remove flashcards","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"moseslee9012"},"content":"- What it does: The `delete` allows users to remove a specified","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"moseslee9012"},"content":"  flashcard from the existing list. Typing \"delete\" will show the full","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"moseslee9012"},"content":"  list of existing flashcards, and prompts the user for the index of","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"moseslee9012"},"content":"  the flashcard to be deleted. The user can include a query, or keyword,","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"moseslee9012"},"content":"  to find the relevant questions and narrow down the search list.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"moseslee9012"},"content":"- Justification: This feature greatly improves the product as users can","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"moseslee9012"},"content":"  easily remove the unnecessary flashcards and study only what is relevant.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"moseslee9012"},"content":"- Highlights: This feature helps reduce the clutter of flashcards, either","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"moseslee9012"},"content":"  from obsolete flashcards or cards that were added erroneously.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"moseslee9012"},"content":"**Code contributed:**","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"moseslee9012"},"content":"[Reposense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dmoseslee9012\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"moseslee9012"},"content":"**Contributions to UG:**","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"moseslee9012"},"content":"- Added section for \"Delete Flashcards\"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"moseslee9012"},"content":"**Contributions to DG:**","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"moseslee9012"},"content":"- Added implementation details and UML diagrams for","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"moseslee9012"},"content":"  `delete` command","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"moseslee9012"},"content":"**Contributions to team-based tasks**","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"moseslee9012"},"content":"- Helped refine details and correct small mistakes in the UG","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"moseslee9012"},"content":"  and DG","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"moseslee9012":38}},{"path":"docs/team/songzijin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"# Song Zijin\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"## Project: Clanki","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"Clanki is a command line application one can use to store and update flashcards to help","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"them remember the relevant concepts. The user can interact with it by typing code into","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"their terminal.","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"Given below are my contribution to the project.","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"- **New feature:** Added ability to add a new command","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    - What it does: allows the user to add a new flashcard with the specified question and answer text.","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    - Justification: This feature is one of the basic building block of the entire program, without it, no","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"      other command on modifying the flashcards can work.","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    - Highlights: Since it is the initial step, building this feature included setting the groundwork in other basic","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"      classes, such as creating the abstract Command class for other commands to use and FlashcardList class to","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"      handle the flashcards that are created. JUnit test codes are also written for this feature.","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    - Credits: idea for the entire structure are reused from Song Zijin\u0027s individual project","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"      (link [here](https://github.com/SongZijin/ip)), with many inspiration from","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"      [addressbook-level2](https://github.com/se-edu/addressbook-level2).","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"- **New feature:** Added ability to save current state of all flashcards and load the state upon application start","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"    - What it does: allows the user to store the previously recorded flashcards,","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"      so that they can come back to review it in another day.","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    - Justification: This feature improves the product significantly, as the user can close the application","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"      and come back in another day to review the flashcards they wish to learn.","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    - Highlights: The entire function consist of 3 parts, the encoder, decoder and a class that link the other two","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"      together. The feature is also flexible when the stored data is corrupted, with the incorrectly formatted line","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"      automatically deleted instead of crushing the whole program.","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"    - Credits: the code is improved on the storage code from","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"      [addressbook-level2](https://github.com/se-edu/addressbook-level2).","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"- **New feature:** Added a help menu","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"moseslee9012"},"content":"    - What it does: provides the user some information about what are the commands they can use for this application.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"    - Justification: This feature improves the product, as the user is now able to use the product independently,","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"      without the need to look up any user guide of the product.","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"- **Code contributed:**","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"  [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dSongZijin\u0026tabRepo\u003dAY2223S2-CS2113-T15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"- **Contributions to UG:**","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"    - Added section under Quick Start.","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"    - Provided initial draft to `add` function.","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    - Added documentation for `bye` and `help` functions.","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"- **Contributions to DG:**","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    - Added implementation details for the `add` function.","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"    - Added implementation details for storage function.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    - Added user stories","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"- Other contributions:","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"    - Reviewed pull requests, such as [#53](https://github.com/AY2223S2-CS2113-T15-4/tp/pull/53)","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    - Posted issues, such as [#61](https://github.com/AY2223S2-CS2113-T15-4/tp/issues/61)","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"SongZijin":51,"moseslee9012":1}},{"path":"docs/umlDiagrams/AddFlashcard.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"@startuml","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"participant \"\u003c\u003cClass\u003e\u003e :Clanki\" as Main","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"participant \":Add Command\" as AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"participant \":Flashcard List\" as FlashcardList","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"activate Main","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"Main -\u003e Ui : User input","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"activate Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"Ui -\u003e Main : userInput : String","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"deactivate Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"Main -\u003e Parser : parseInput(userInput)","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"activate Parser","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"create AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"Parser -\u003e AddCommand : AddCommand(question, answer)","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"activate AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"AddCommand --\u003e Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"Parser -\u003e Main : command : AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"deactivate Parser","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"Main -\u003e AddCommand : execute()","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"activate AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"AddCommand -\u003e FlashcardList : addNewFlashcard(question, answer)","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"activate FlashcardList","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"FlashcardList --\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"deactivate FlashcardList","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"AddCommand -\u003e Ui : printSuccessfulAddMessage(question, answer)","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"activate Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"Ui --\u003e AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"deactivate Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"AddCommand --\u003e Main","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"destroy AddCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"@enduml","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":52}},{"path":"docs/umlDiagrams/AddFlashcardClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"@startuml","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"abstract Command","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"Command : execute(flashcardList: FlashcardList, display: Ui) : void","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"class AddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"AddCommand : execute(flashcardList: FlashcardList, display: Ui) : void","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"class Ui","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"Ui : printSuccessfulAddMessage() : void","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"class FlashcardList","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"FlashcardList : addNewFlashcard(questionText : String, answerText : String) : void","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"class Flashcard","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"class Parser","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"Parser : parseCommands (userInput : String) : Command","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"Command \u003c|-- AddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"AddCommand ..\u003e Ui : calls \u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"AddCommand ..\u003e FlashcardList : calls \u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"Parser ..\u003e AddCommand : creates \u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"FlashcardList --\u003e \"*\" Flashcard","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"@enduml","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"SongZijin":20}},{"path":"docs/umlDiagrams/AddFlashcardObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"object \":Parser\" as Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"object \"command :AddCommand\" as AddCommand {","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"    questionText :String","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"    answerText :String","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"Parser -\u003e AddCommand : creates \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"SongZijin":9}},{"path":"docs/umlDiagrams/DeleteFlashcard.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"moseslee9012"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"moseslee9012"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"moseslee9012"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"moseslee9012"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"moseslee9012"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"moseslee9012"},"content":"participant \"\u003c\u003cClass\u003e\u003e :Clanki\" as Main","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"moseslee9012"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"moseslee9012"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"moseslee9012"},"content":"participant \":Delete Command\" as DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"moseslee9012"},"content":"participant \":Flashcard List\" as FlashcardList","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"moseslee9012"},"content":"activate Main","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"moseslee9012"},"content":"Main -\u003e Ui : User input","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"moseslee9012"},"content":"activate Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"moseslee9012"},"content":"Ui -\u003e Main : userInput : String","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"moseslee9012"},"content":"deactivate Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"moseslee9012"},"content":"Main -\u003e Parser : parseInput(userInput)","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"moseslee9012"},"content":"activate Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"moseslee9012"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"moseslee9012"},"content":"Parser -\u003e DeleteCommand :DeleteCommand(query)","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"moseslee9012"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand -\u003e Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"moseslee9012"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"moseslee9012"},"content":"Parser -\u003e Main : command : DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"moseslee9012"},"content":"deactivate Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"moseslee9012"},"content":"Main -\u003e DeleteCommand : execute()","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"moseslee9012"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand -\u003e FlashcardList : getFlashcards()","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"moseslee9012"},"content":"activate FlashcardList","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"moseslee9012"},"content":"FlashcardList -\u003e DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"moseslee9012"},"content":"deactivate FlashcardList","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand -\u003e Ui : printSuccessfulDelete(index)","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"moseslee9012"},"content":"activate Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"moseslee9012"},"content":"Ui -\u003e Main : Display Message","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"moseslee9012"},"content":"Ui -\u003e DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"moseslee9012"},"content":"deactivate Ui","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand -\u003e Main","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"moseslee9012"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"moseslee9012"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"moseslee9012":57}},{"path":"docs/umlDiagrams/DeleteFlashcardClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"moseslee9012"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"moseslee9012"},"content":"abstract Command","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"moseslee9012"},"content":"Command : execute(flashcardList: FlashcardList, display: Ui) : void","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"moseslee9012"},"content":"class DeleteCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand : execute(flashcardList: FlashcardList, display: Ui) : void","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"moseslee9012"},"content":"class Ui","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"moseslee9012"},"content":"Ui : printSuccessfulDeleteMessage() : void","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"moseslee9012"},"content":"class FlashcardList","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"moseslee9012"},"content":"FlashcardList : deleteFlashcard(index : int) : void","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"moseslee9012"},"content":"class Flashcard","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"moseslee9012"},"content":"class Parser","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"moseslee9012"},"content":"Parser : parseCommands (userInput : String) : Command","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"moseslee9012"},"content":"Command \u003c|-- DeleteCommand","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand ..\u003e Ui : calls \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"moseslee9012"},"content":"DeleteCommand ..\u003e FlashcardList : calls \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"moseslee9012"},"content":"Parser ..\u003e DeleteCommand : creates \u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"moseslee9012"},"content":"FlashcardList --\u003e \"*\" Flashcard","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"moseslee9012"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"moseslee9012":22}},{"path":"docs/umlDiagrams/ReviewFlashcard.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kdh3799"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"kdh3799"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"kdh3799"},"content":"participant \"\u003c\u003cClass\u003e\u003e :Clanki\" as Main","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"kdh3799"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"participant \":Review Command\" as ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"kdh3799"},"content":"participant \":Flashcard List\" as FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"kdh3799"},"content":"participant \":Flashcard\" as Flashcard","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"kdh3799"},"content":"participant \":FlashcardQueue\" as FlashcardQueue","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"kdh3799"},"content":"activate Main","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"kdh3799"},"content":"Main -\u003e Ui : User input","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"kdh3799"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"kdh3799"},"content":"Ui -\u003e Main : userInput : String","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"kdh3799"},"content":"Main -\u003e Parser : parseInput(userInput)","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"kdh3799"},"content":"activate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"kdh3799"},"content":"create ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"kdh3799"},"content":"Parser -\u003e ReviewCommand : ReviewCommand()","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"kdh3799"},"content":"activate ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"kdh3799"},"content":"ReviewCommand --\u003e Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"kdh3799"},"content":"deactivate ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"Parser --\u003e Main : command : ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"deactivate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"kdh3799"},"content":"Main -\u003e ReviewCommand : execute()","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"kdh3799"},"content":"activate ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"kdh3799"},"content":"ReviewCommand -\u003e FlashcardList : getFlashCards()","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"kdh3799"},"content":"activate FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"kdh3799"},"content":"create FlashcardQueue","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"kdh3799"},"content":"FlashcardList -\u003e FlashcardQueue : FlashcardQueue()","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"kdh3799"},"content":"activate FlashcardQueue","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"kdh3799"},"content":"FlashcardQueue --\u003e FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"kdh3799"},"content":"FlashcardList --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"kdh3799"},"content":"deactivate FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"kdh3799"},"content":"alt flashcardQueue.isEmpty()","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"kdh3799"},"content":"    ReviewCommand -\u003e Ui : printlnSeveralStrings(\"There are no cards available for review today.\")","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"kdh3799"},"content":"    Ui -\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"kdh3799"},"content":"else","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"kdh3799"},"content":"    ReviewCommand -\u003e Ui : printlnSeveralStrings(\"There are %d cards available for review today.\", flashcardQueue.size())","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"kdh3799"},"content":"    Ui -\u003e FlashcardQueue : size()","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"kdh3799"},"content":"    FlashcardQueue --\u003e Ui : String","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"kdh3799"},"content":"    loop while (!flashcardQueue.isEmpty())","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"kdh3799"},"content":"        ReviewCommand -\u003e FlashcardQueue : popFlashcard()","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"kdh3799"},"content":"        FlashcardQueue --\u003e ReviewCommand : Flashcard","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"kdh3799"},"content":"        activate Flashcard","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"kdh3799"},"content":"        ReviewCommand -\u003e Flashcard : getQuestion()","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"kdh3799"},"content":"        Flashcard --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"kdh3799"},"content":"        ReviewCommand -\u003e Ui : getUserCommand()","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"kdh3799"},"content":"        Ui --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"kdh3799"},"content":"        ReviewCommand -\u003e Flashcard : getAnswer()","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"kdh3799"},"content":"        Flashcard --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"kdh3799"},"content":"        ReviewCommand -\u003e Ui : getUserCommand()","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"kdh3799"},"content":"        Ui --\u003e ReviewCommand : answerIfCorrect : String","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"kdh3799"},"content":"        alt answerIfCorrect.equals(\"y\")","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e Ui :printlnSeveralStrings(\"Great, you got it right!\")","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"kdh3799"},"content":"            Ui --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e Flashcard : updateDueDateAfterCorrectAnswer()","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"kdh3799"},"content":"            Flashcard --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"kdh3799"},"content":"        else answerIfCorrect.equals(\"n\")","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e Ui : printlnSeveralStrings(\"No worries, we will try again later today.\")","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"kdh3799"},"content":"            Ui --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e Flashcard : updateDueDateAfterIncorrectAnswer()","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"kdh3799"},"content":"            Flashcard --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e FlashcardQueue : pushFlashcard(currentFlashcard)","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"kdh3799"},"content":"            FlashcardQueue -\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"kdh3799"},"content":"        else","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"kdh3799"},"content":"            ReviewCommand -\u003e Ui : printInvalidInput()","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"kdh3799"},"content":"            Ui --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"kdh3799"},"content":"        end","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"kdh3799"},"content":"        deactivate Flashcard","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"kdh3799"},"content":"    end","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"kdh3799"},"content":"    destroy FlashcardQueue","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"kdh3799"},"content":"end","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"kdh3799"},"content":"ReviewCommand -\u003e Ui : printlnSeveralStrings(\"Congrats! You have reviewed all the flashcards due today!\")","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"kdh3799"},"content":"Ui --\u003e ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"kdh3799"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"kdh3799"},"content":"ReviewCommand -\u003e Main","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"kdh3799"},"content":"deactivate ReviewCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"kdh3799"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"kdh3799":92}},{"path":"docs/umlDiagrams/StorageClassDiagm.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"class StorageFile {","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":" + path : Path","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":" + StorageFile()","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":" + save( flashcardList : FlashcardList) : void","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":" + load() : ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"class FlashcardEncoder {","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" + {static} encodeFlashcardList( toSave : FlashcardList ) : List\u003cString\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":" - {static} encodeFlashcardToString( flashcard : Flashcard) : String","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"class FlashcardDecoder {","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":" + {static} decodeFlashcardList( encodedFlashcardList : List\u003cString\u003e) : ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":" - {static} decodeFlashcardFromString ( encodedFlashcard : String) : Flashcard","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"class Clanki {","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":" - storageFile : StorageFile","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":" + Clanki()","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":" + {static} main (args : String[]) : void","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":" + run() : void","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"Clanki *--\u003e \"1\" StorageFile : controls \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"StorageFile --\u003e FlashcardDecoder : uses \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"StorageFile --\u003e FlashcardEncoder : uses \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"SongZijin":27}},{"path":"docs/umlDiagrams/StorageSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"participant \"\u003c\u003cClass\u003e\u003e :Clanki\" as Main","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"participant \"storageFile :StorageFile\" as Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"participant \"\u003c\u003cClass\u003e\u003e :FlashcardListDecoder\" as Decoder","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"participant \"\u003c\u003cClass\u003e\u003e :FlashcardListEncoder\" as Encoder","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"activate Main","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"create Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"Main -\u003e Storage : StorageFile()","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"activate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"Storage --\u003e Main","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"deactivate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"Main -\u003e Storage : load()","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"activate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"Storage -\u003e Decoder : decodeFlashcardList(Files.readAllLines(path) :List\u003cString\u003e)","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"activate Decoder","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"loop for all String in List\u003cString\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    Decoder -\u003e Decoder : decodeFlashcardFromString(encodedFlashcard :String)","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"    activate Decoder","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"    opt String does not match pattern","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        Decoder -\u003e Decoder :  :StorageOperationException(ENCODED_FLASHCARD_IN_INVALID_FORMAT_UNABLE_TO_DECODE);","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        end","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    Decoder -\u003e Decoder :  :Flashcard","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    deactivate Decoder","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"Decoder -\u003e Storage : flashcards : ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"deactivate Decoder","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"Storage -\u003e Main : flashcards : ArrayList\u003cFlashcard\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"deactivate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"Main -\u003e Main : run()","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"activate Main","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"loop  command instanceof ByeCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    \u003c- Main : getUserCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"    -\u003e Main : inputText :String","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    \u003c- Main : parseCommand(inputText)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"    -\u003e Main : command :Command","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"    \u003c- Main : execute()","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    --\u003e Main","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"    Main -\u003e Storage : save()","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"    activate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    Storage -\u003e Encoder : encodeFlashcardList(flashcardList :FlashcardList)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"    activate Encoder","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    loop for all Flashcard in ArrayList\u003cFlashcard\u003e from flashcardlist","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        Encoder -\u003e Encoder : decodeFlashcardFromString(encodedFlashcard :String)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"        activate Encoder","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"        Encoder -\u003e Encoder : :String","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"        deactivate Encoder","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"    end","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    Encoder -\u003e Storage : encodedFlashcardList :FlashcardList","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"    deactivate Encoder","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    Storage --\u003e Main","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"    deactivate Storage","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"Main --\u003e Main","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"deactivate Main","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"SongZijin":65}},{"path":"docs/umlDiagrams/UpdateFlashcard.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"participant \"\u003c\u003cClass\u003e\u003e :Clanki\" as Main","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"participant \":Ui\" as Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"participant \":Update Command\" as UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"participant \":FlashcardList\" as FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"activate Main","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"Main -\u003e Ui : User input","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"Ui -\u003e Main : userInput : String","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"Main -\u003e Parser : parseInput(userInput)","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"activate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"create UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"Parser -\u003e UpdateCommand : UpdateCommand(query)","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"activate UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"javienneyeo"},"content":"UpdateCommand -\u003e Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"javienneyeo"},"content":"deactivate UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"Parser -\u003e Main : command : UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"deactivate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"Main -\u003e UpdateCommand: execute()","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"activate UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"javienneyeo"},"content":"UpdateCommand -\u003e FlashcardList : getFlashcards()","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"activate FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"FlashcardList -\u003e UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"deactivate FlashcardList","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"UpdateCommand -\u003e Ui : User input","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"javienneyeo"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"Ui -\u003e UpdateCommand : userText : String","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"UpdateCommand-\u003e Main","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"deactivate UpdateCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"javienneyeo":48}},{"path":"src/main/java/com/clanki/Clanki.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import com.clanki.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import com.clanki.storage.StorageFile;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"public class Clanki {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    private Ui ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    private FlashcardList flashcardList;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    private StorageFile storageFile;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    public Clanki() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"            this.storageFile \u003d new StorageFile();","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"            this.flashcardList \u003d new FlashcardList(storageFile.load());","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        } catch (InvalidStorageFilePathException | StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"kdh3799"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"        new Clanki().run();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * Function that loop the process of getting an user input, processing the input","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * and execute the command, until a ByeCommand is inputted.","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"    public void run() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        ui.printSeparationLine();","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        while (true) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"            String inputText \u003d ui.getUserCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"            Command command \u003d Parser.parseCommand(inputText);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"            command.execute(flashcardList, ui);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"            try {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"                storageFile.save(flashcardList);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"            } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            if (command instanceof ByeCommand) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"                return;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"            ui.printSeparationLine();","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":29,"kdh3799":4,"joulev":20}},{"path":"src/main/java/com/clanki/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * A type of command that will instruct to add a new element into the ArrayList","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" * of flashcards.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    String questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    String answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    public AddCommand(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"        assert !questionText.isEmpty() : \"question text should not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"        this.questionText \u003d questionText.substring(0, 1).toUpperCase() + questionText.substring(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"        assert !answerText.isEmpty() : \"answer text should not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        this.answerText \u003d answerText.substring(0, 1).toUpperCase() + answerText.substring(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * For testing purposes only.","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        return \"Question to add: \" + questionText + \" Answer: \" + answerText;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        display.printSuccessfulAddMessage(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":23,"joulev":11}},{"path":"src/main/java/com/clanki/commands/ByeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * A type of command that will indicate that the program is ready to close.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        display.printByeMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"SongZijin":3,"joulev":11}},{"path":"src/main/java/com/clanki/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * The type of command when the user wishes to clear all stored flashcards.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"        flashcardList.deleteAllFlashcards();","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"        display.printClearMessage();","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"SongZijin":4,"javienneyeo":12}},{"path":"src/main/java/com/clanki/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * Represents a command that is instructed for the program to conduct. A Command","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" * Object specifies what the type of command is with its subclasses.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    public abstract void execute(FlashcardList flashcardList, Ui display);","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":9,"joulev":3}},{"path":"src/main/java/com/clanki/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"moseslee9012"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"moseslee9012"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * A command that removes an element from the ArrayList of flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"moseslee9012"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    ArrayList\u003cFlashcard\u003e matchingFlashcards;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"moseslee9012"},"content":"    String query;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"moseslee9012"},"content":"    public DeleteCommand(String query) {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        this.matchingFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"moseslee9012"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        matchingFlashcards \u003d flashcardList.queryFlashcards(query);","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        if (matchingFlashcards.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"            System.out.printf(\"Sorry! No flashcards matching \\\"%s\\\" was found. Please try again.\\n\",","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"                    query);","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"            return;","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"moseslee9012"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        System.out.printf(\"Found %d card(s) with query \\\"%s\\\":\\n\", matchingFlashcards.size(),","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"                query);","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        display.printFlashCards(matchingFlashcards);","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Which one do you want to delete?\");","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        while (index \u003d\u003d -1) {","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            try {","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"                index \u003d Integer.parseInt(display.getUserCommand());","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"                if (index \u003c 1 || index \u003e matchingFlashcards.size()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"                    index \u003d -1;","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"                    throw new Exception();","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                }","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"                System.out.println(\"Please enter a valid index value.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"moseslee9012"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"moseslee9012"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"moseslee9012"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashCards();","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"        int actualIndex \u003d flashcards.indexOf(matchingFlashcards.get(index - 1));","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"        flashcardList.deleteFlashcard(actualIndex);","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"moseslee9012"},"content":"        display.printSuccessfulDelete(index);","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"moseslee9012"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"moseslee9012":25,"joulev":29}},{"path":"src/main/java/com/clanki/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * A type of command that indicate that user want to display help menu.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"        display.printHelpMessage();","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"SongZijin":14}},{"path":"src/main/java/com/clanki/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"    String input;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"javienneyeo"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":"        super();","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"javienneyeo"},"content":"    private LocalDate convertDate(String dueDate) throws DateTimeParseException {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"javienneyeo"},"content":"        return LocalDate.parse(dueDate);","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    private void printFlashcards(ArrayList\u003cFlashcard\u003e flashcards, Ui display) {","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        if (flashcards.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"            System.out.println(\"Your list of flashcards is empty.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"            return;","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Here is your list of flashcards:\");","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"javienneyeo"},"content":"        display.printFlashCards(flashcards);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    public void printFlashcardsOnDate(ArrayList\u003cFlashcard\u003e flashcards, LocalDate date, Ui display) {","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        ArrayList\u003cFlashcard\u003e flashcardsOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"            Flashcard currentFlashcard \u003d flashcards.get(i);","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"            if (currentFlashcard.getDueDate().equals(date)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"                flashcardsOnDate.add(currentFlashcard);","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        printFlashcards(flashcardsOnDate, display);","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"javienneyeo"},"content":"        ArrayList\u003cFlashcard\u003e flashcards \u003d flashcardList.getFlashCards();","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"javienneyeo"},"content":"        if (input.equals(\"all\")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            printFlashcards(flashcards, display);","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"            return;","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"javienneyeo"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            LocalDate dueDate \u003d convertDate(input);","lastModifiedDate":"2023-04-10"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"            printFlashcardsOnDate(flashcards, dueDate, display);","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"            System.out.println(\"Please enter the date in the format: yyyy-mm-dd\");","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"joulev":21,"javienneyeo":37}},{"path":"src/main/java/com/clanki/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kdh3799"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"kdh3799"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"kdh3799"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardQueue;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"kdh3799"},"content":"public class ReviewCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        FlashcardQueue flashcardQueue \u003d new FlashcardQueue(flashcardList.getFlashCards());","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        if (flashcardQueue.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"            display.printlnSeveralStrings(\"There are no cards available for review today.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        display.printlnSeveralStrings(String","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"                .format(\"There are %d cards available for review today.\", flashcardQueue.size()));","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"        while (!flashcardQueue.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"            display.printlnSeveralStrings(\"---\");","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"            Flashcard currentFlashcard \u003d flashcardQueue.popFlashcard();","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"            System.out.printf(\"Q: %s (ENTER to view answer)\", currentFlashcard.getQuestion());","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"kdh3799"},"content":"            display.getUserCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"            display.printlnSeveralStrings(String.format(\"A: %s\", currentFlashcard.getAnswer()));","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"            String answerIfCorrect;","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"            System.out.print(\"Did you get it right? (y/n) \");","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"            while (true) {","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"                answerIfCorrect \u003d display.getUserCommand().toLowerCase();","lastModifiedDate":"2023-04-01"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"                if (answerIfCorrect.equals(\"y\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"                    display.printlnSeveralStrings(\"Great, you got it right!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"                    currentFlashcard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"kdh3799"},"content":"                } else if (answerIfCorrect.equals(\"n\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"                    display.printlnSeveralStrings(\"No worries, we will try again later today.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"                    currentFlashcard.updateDueDateAfterIncorrectAnswer();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"                    flashcardQueue.pushFlashcard(currentFlashcard);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"                    break;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"kdh3799"},"content":"                } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"                    System.out.print(\"Please enter \u0027y\u0027 or \u0027n\u0027: (y/n) \");","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"                }","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"kdh3799"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"kdh3799"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        display.printlnSeveralStrings(\"---\",","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                \"Congrats! You have reviewed all the flashcards due today!\");","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"kdh3799"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"kdh3799":15,"joulev":30}},{"path":"src/main/java/com/clanki/commands/UnknownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * The type of command that indicates user have keyed in an invalid input.","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        display.printInvalidInput();","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"SongZijin":3,"joulev":11}},{"path":"src/main/java/com/clanki/commands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.exceptions.UpdatedContentIsEmptyException;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import com.clanki.parser.ParsedInput;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * The UpdateCommand class represents a command that updates an existing","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" * flashcard in the flashcard list. The command allows users to change the","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":" * question, answer or date of the flashcard.","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"javienneyeo"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    private static final String QUESTION_OPTION_IDENTIFIER \u003d \"q\";","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    private static final String ANSWER_OPTION_IDENTIFIER \u003d \"a\";","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    ArrayList\u003cFlashcard\u003e matchingFlashcards;","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"javienneyeo"},"content":"    String query;","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    public UpdateCommand(String query) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        this.matchingFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        this.query \u003d query;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     * Prompts the user for input and updates the specified flashcard based on the","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * user\u0027s input.","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"javienneyeo"},"content":"     * @param flashcards the list of flashcards to update","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * @param display    the Ui object for displaying messages to the user","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    private void runUpdateFlashcard(Ui display) {","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        while (!isDone) {","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"            try {","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"                ParsedInput input \u003d new ParsedInput(display.getUserCommand());","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"                int index \u003d Integer.parseInt(input.getCommand());","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"                if (index \u003c 1 || index \u003e matchingFlashcards.size()) {","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"                    throw new Exception();","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"                Flashcard currentFlashcard \u003d matchingFlashcards.get(index - 1);","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"                String questionText \u003d input.getOptionByName(QUESTION_OPTION_IDENTIFIER);","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"                String answerText \u003d input.getOptionByName(ANSWER_OPTION_IDENTIFIER);","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"                if (questionText \u003d\u003d null \u0026\u0026 answerText \u003d\u003d null) {","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"                    throw new UpdatedContentIsEmptyException();","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"                if (questionText !\u003d null) {","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"                    currentFlashcard.setQuestion(questionText);","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"                if (answerText !\u003d null) {","lastModifiedDate":"2023-04-10"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"                    currentFlashcard.setAnswer(answerText);","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"javienneyeo"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"                display.printSuccessfulUpdateMessage(currentFlashcard);","lastModifiedDate":"2023-04-10"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"                isDone \u003d true;","lastModifiedDate":"2023-04-10"},{"lineNumber":64,"author":{"gitId":"javienneyeo"},"content":"            } catch (UpdatedContentIsEmptyException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"                System.out.println(\"Please enter the changes to be modified.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"                System.out.println(\"Please enter a valid index value.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":68,"author":{"gitId":"javienneyeo"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"javienneyeo"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"javienneyeo"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"        matchingFlashcards \u003d flashcardList.queryFlashcards(query);","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"        if (matchingFlashcards.size() \u003d\u003d 0) {","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"            System.out.printf(\"Sorry! No flashcards matching \\\"%s\\\" was found. Please try again.\",","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"                    query);","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"            return;","lastModifiedDate":"2023-04-10"},{"lineNumber":80,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        System.out.printf(\"Found %d card(s) with query \\\"%s\\\":\\n\", matchingFlashcards.size(),","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"                query);","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"        display.printFlashCards(matchingFlashcards);","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Which one do you want to update?\");","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"        runUpdateFlashcard(display);","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joulev":54,"javienneyeo":35}},{"path":"src/main/java/com/clanki/commands/VoidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.commands;","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.ui.Ui;","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":" * The type of command that indicate an invalid input, with the display of why","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":" * the input is invalid already handled elsewhere.","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"public class VoidCommand extends Command {","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    @Override","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public void execute(FlashcardList flashcardList, Ui display) {","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"        return;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"SongZijin":12,"joulev":3}},{"path":"src/main/java/com/clanki/exceptions/EmptyFlashcardAnswerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"public class EmptyFlashcardAnswerException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"joulev":4}},{"path":"src/main/java/com/clanki/exceptions/EmptyFlashcardQuestionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"public class EmptyFlashcardQuestionException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"joulev":4}},{"path":"src/main/java/com/clanki/exceptions/InputIsEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"public class InputIsEmptyException extends Exception {","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"javienneyeo":4}},{"path":"src/main/java/com/clanki/exceptions/InvalidAddFlashcardInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"public class InvalidAddFlashcardInputException extends Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":3,"joulev":1}},{"path":"src/main/java/com/clanki/exceptions/InvalidStorageFilePathException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"public class InvalidStorageFilePathException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"     * Signals that the given file path does not fulfill the storage filepath","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"     * constraints. Copied from:","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"     * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"    public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":10,"joulev":2}},{"path":"src/main/java/com/clanki/exceptions/NoQueryInInputException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"public class NoQueryInInputException extends Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"javienneyeo":4}},{"path":"src/main/java/com/clanki/exceptions/StorageOperationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":" * Signals that some error has occured while trying to convert and read/write","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":" * data between the application and the storage file. Copied from:","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"public class StorageOperationException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"    public StorageOperationException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":11,"joulev":2}},{"path":"src/main/java/com/clanki/exceptions/UpdatedContentIsEmptyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"javienneyeo"},"content":"package com.clanki.exceptions;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"public class UpdatedContentIsEmptyException extends Exception {","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"javienneyeo":4}},{"path":"src/main/java/com/clanki/objects/Flashcard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"public class Flashcard {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"    private static final double SPACED_REPETITION_FACTOR \u003d 1.5;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"    private String questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"    private String answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    private int currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public Flashcard(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public Flashcard(String questionText, String answerText, LocalDate dueDate,","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"            int currentPeriodInDays) {","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    public String getQuestion() {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"        return questionText;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    public void setQuestion(String questionText) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        this.questionText \u003d questionText;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    public String getAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"        return answerText;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    public void setAnswer(String answerText) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        this.answerText \u003d answerText;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        return dueDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"javienneyeo"},"content":"    public void setDueDate(LocalDate dueDate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"javienneyeo"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    public int getCurrentPeriodInDays() {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"        return currentPeriodInDays;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"    public boolean isDueToday() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"        return this.dueDate.isEqual(LocalDate.now());","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"kdh3799"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"     * This function checks if the flashcard is due or overdue Sometimes the user","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"     * may not clear all flashcards on time, so we may have cards overdue","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"kdh3799"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"kdh3799"},"content":"     * @return true if the card is due or overdue","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"kdh3799"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"kdh3799"},"content":"    public boolean isDueBeforeToday() {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"kdh3799"},"content":"        return !LocalDate.now().isBefore(this.getDueDate());","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"     * Reset \u003ccode\u003edueDate\u003c/code\u003e and \u003ccode\u003ecurrentPeriodInDays\u003c/code\u003e as if the","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"     * card was just created.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"    public void updateDueDateAfterIncorrectAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"        this.currentPeriodInDays \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"     * Update \u003ccode\u003edueDate\u003c/code\u003e and \u003ccode\u003ecurrentPeriodInDays\u003c/code\u003e according to","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"     * the spaced repetition algorithm. Which is very simple, to be honest, but it","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"     * does the job.","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    public void updateDueDateAfterCorrectAnswer() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"        if (this.currentPeriodInDays \u003d\u003d 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"            this.currentPeriodInDays \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"            double newPeriod \u003d this.currentPeriodInDays * SPACED_REPETITION_FACTOR;","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"            this.currentPeriodInDays \u003d (int) Math.ceil(newPeriod);","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"        this.dueDate \u003d this.dueDate.plusDays(this.currentPeriodInDays);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":16,"kdh3799":8,"joulev":64,"javienneyeo":4}},{"path":"src/main/java/com/clanki/objects/FlashcardList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"public class FlashcardList {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"kdh3799"},"content":"    private final ArrayList\u003cFlashcard\u003e flashcards;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"    public FlashcardList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"        this.flashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public FlashcardList(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"        this.flashcards \u003d flashcards;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"     * Adds a new flashcard into the list.","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"     * @param questionText Question text of the new flashcard.","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"     * @param answerText   Answer text of the new flashcard.","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"    public void addNewFlashcard(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        Flashcard newFlashcard \u003d new Flashcard(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        flashcards.add(newFlashcard);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"kdh3799"},"content":"    public ArrayList\u003cFlashcard\u003e getFlashCards() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"kdh3799"},"content":"        return flashcards;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     * Query for flashcards in the current deck that matches the query inside","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * questions and answers (case-insensitive).","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"    public ArrayList\u003cFlashcard\u003e queryFlashcards(String query) {","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        ArrayList\u003cFlashcard\u003e matchingFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        String queryLowerCase \u003d query.toLowerCase();","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-04-10"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"            Flashcard currentFlashcard \u003d flashcards.get(i);","lastModifiedDate":"2023-04-10"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"            if (currentFlashcard.getQuestion().toLowerCase().contains(queryLowerCase)","lastModifiedDate":"2023-04-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"                    || currentFlashcard.getAnswer().toLowerCase().contains(queryLowerCase)) {","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"                matchingFlashcards.add(currentFlashcard);","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"        return matchingFlashcards;","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"    public void deleteFlashcard(int index) {","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        flashcards.remove(index);","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":52,"author":{"gitId":"javienneyeo"},"content":"    public void deleteAllFlashcards() {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"        flashcards.clear();","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":24,"kdh3799":4,"moseslee9012":1,"joulev":22,"javienneyeo":4}},{"path":"src/main/java/com/clanki/objects/FlashcardQueue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import java.util.Queue;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"public class FlashcardQueue {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    private final Queue\u003cFlashcard\u003e flashcards;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"    public FlashcardQueue(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        this.flashcards \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        for (Flashcard flashcard : flashcards) {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"            if (flashcard.isDueBeforeToday()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"                this.flashcards.add(flashcard);","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public void pushFlashcard(Flashcard flashcard) {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        flashcards.add(flashcard);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"    public Flashcard popFlashcard() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        return flashcards.poll();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        return flashcards.isEmpty();","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"    public int size() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        return flashcards.size();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joulev":34}},{"path":"src/main/java/com/clanki/parser/ParsedInput.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"class Option {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"    private static final String BODY_SEPARATOR \u003d \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"    private String value;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public Option(String optionString) {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        String[] parts \u003d optionString.split(BODY_SEPARATOR, 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        name \u003d parts[0].trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"        value \u003d parts.length \u003e 1 ? parts[1].trim() : \"\";","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public String getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        return name;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"        return value;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"public class ParsedInput {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"    private static final String OPTION_INDICATOR \u003d \"/\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    private static final String OPTION_SEPARATOR \u003d \" \" + OPTION_INDICATOR;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"    private String command;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    private String body;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    private Option[] options;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    public ParsedInput(String input) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        // Assuming input \u003d \"command blah blah /opt1 hello /opt2 world blah bleh\"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        // After trimming:","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        // parts \u003d [\"command blah blah\", \"opt1 hello\", \"opt2 world blah bleh\"]","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        String[] parts \u003d input.split(OPTION_SEPARATOR);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        options \u003d new Option[parts.length - 1];","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"            Option option \u003d new Option(parts[i].trim());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"            if (i \u003d\u003d 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                command \u003d option.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"                body \u003d option.getValue();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"                options[i - 1] \u003d option;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    public String getCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"        assert command !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        return command;","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    public String getBody() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        return body;","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"     * Returns the value of the option with the given name.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"     * Example: \"command blah blah /opt1 hello /opt2 world blah bleh\" then","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"     * getOptionByName(\"opt2\") returns \"world blah bleh\" and getOptionByName(\"foo\")","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"     * returns null.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"     * ","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"     * @param name The name of the option.","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"     * @return The (trimmed) value of the option, or null if the option does not","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"     *         exist. Be careful that the option can be an empty string. If an","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"     *         option is specified multiple times, the last one will be returned.","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"    public String getOptionByName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        for (int i \u003d options.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"            if (options[i].getName().equals(name)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"                return options[i].getValue();","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"        return null;","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"joulev":80}},{"path":"src/main/java/com/clanki/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.ClearCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.commands.DeleteCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import com.clanki.commands.HelpCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.ListCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"kdh3799"},"content":"import com.clanki.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.UnknownCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.UpdateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"import com.clanki.commands.VoidCommand;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardAnswerException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardQuestionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.exceptions.InputIsEmptyException;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.InvalidAddFlashcardInputException;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.exceptions.NoQueryInInputException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"public class Parser {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    private static final String QUESTION_OPTION_IDENTIFIER \u003d \"q\";","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    private static final String ANSWER_OPTION_IDENTIFIER \u003d \"a\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    public static Command parseCommand(String userInput) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"            return parseCommandStrict(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"        } catch (InvalidAddFlashcardInputException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"            System.out.println(","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"                    \"The input is in an incorrect format, please follow the format in user guide\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        } catch (EmptyFlashcardQuestionException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"            System.out.println(\"The question of this card is empty, please enter one.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        } catch (EmptyFlashcardAnswerException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"            System.out.println(\"The answer for this flashcard is empty, please enter one.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"javienneyeo"},"content":"        } catch (NoQueryInInputException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"Please enter a query to be searched in the list of flashcards.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"javienneyeo"},"content":"        } catch (InputIsEmptyException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"Please enter the command in the format shown in the user guide\");","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"        return new VoidCommand();","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    public static Command parseCommandStrict(String userInput)","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"            throws InvalidAddFlashcardInputException, EmptyFlashcardQuestionException,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"javienneyeo"},"content":"            EmptyFlashcardAnswerException, NoQueryInInputException, InputIsEmptyException {","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(userInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        String command \u003d parsedInput.getCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        assert !command.isEmpty() : \"The command string must not be empty\";","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        switch (command) {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        case \"add\":","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"            return getAddCommand(parsedInput);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"kdh3799"},"content":"        case \"review\":","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"            return getReviewCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"javienneyeo"},"content":"        case \"update\":","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"            return getUpdateCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"moseslee9012"},"content":"        case \"delete\":","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"            return getDeleteCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"        case \"bye\":","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"            return getByeCommand(parsedInput);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"        case \"help\":","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"            return getHelpCommand(parsedInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"javienneyeo"},"content":"        case \"list\":","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"javienneyeo"},"content":"            return getListCommand(parsedInput);","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"javienneyeo"},"content":"        case \"clear\":","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"            return getClearCommand(parsedInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"        default:","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"            return getUnknownCommand(parsedInput);","lastModifiedDate":"2023-04-10"},{"lineNumber":67,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"     * Constructs an AddCommand from the input of the user, if the input is of an","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"     * incorrect format, a respective exception will be thrown.","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * @param parsedInput The input collected by Ui from the user, after being","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     *                    parsed with the ParsedInput class.","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"     * @return An AddCommand with the question and answer text extracted from user","lastModifiedDate":"2023-04-10"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"     *         input","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"     * @throws InvalidAddFlashcardInputException If the start indicators cannot be","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"     *                                           found.","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"     * @throws EmptyFlashcardQuestionException   If the string is empty after","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"     *                                           QUESTION_OPTION_IDENTIFIER.","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"     * @throws EmptyFlashcardAnswerException     If the string is empty after","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"     *                                           ANSWER_OPTION_IDENTIFIER.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"    public static AddCommand getAddCommand(ParsedInput parsedInput)","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"SongZijin"},"content":"            throws InvalidAddFlashcardInputException, EmptyFlashcardQuestionException,","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"            EmptyFlashcardAnswerException {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"        String questionText \u003d parsedInput.getOptionByName(QUESTION_OPTION_IDENTIFIER);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"        String answerText \u003d parsedInput.getOptionByName(ANSWER_OPTION_IDENTIFIER);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"        if (questionText \u003d\u003d null || answerText \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"SongZijin"},"content":"            throw new InvalidAddFlashcardInputException();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"SongZijin"},"content":"        if (questionText.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"SongZijin"},"content":"            throw new EmptyFlashcardQuestionException();","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"SongZijin"},"content":"        if (answerText.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"SongZijin"},"content":"            throw new EmptyFlashcardAnswerException();","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"SongZijin"},"content":"        return new AddCommand(questionText, answerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"joulev"},"content":"    public static ReviewCommand getReviewCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"joulev"},"content":"        return new ReviewCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"joulev"},"content":"    public static UpdateCommand getUpdateCommand(ParsedInput parsedInput)","lastModifiedDate":"2023-04-10"},{"lineNumber":107,"author":{"gitId":"joulev"},"content":"            throws NoQueryInInputException {","lastModifiedDate":"2023-04-10"},{"lineNumber":108,"author":{"gitId":"javienneyeo"},"content":"        String query \u003d parsedInput.getBody();","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"javienneyeo"},"content":"        if (query.isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"javienneyeo"},"content":"            throw new NoQueryInInputException();","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"joulev"},"content":"        return new UpdateCommand(parsedInput.getBody());","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"joulev"},"content":"    public static DeleteCommand getDeleteCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"javienneyeo"},"content":"        return new DeleteCommand(parsedInput.getBody());","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"javienneyeo"},"content":"    public static ListCommand getListCommand(ParsedInput parsedInput) throws InputIsEmptyException {","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"javienneyeo"},"content":"        String date \u003d parsedInput.getBody();","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"javienneyeo"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"javienneyeo"},"content":"            throw new InputIsEmptyException();","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"javienneyeo"},"content":"        return new ListCommand(parsedInput.getBody());","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"joulev"},"content":"    public static ByeCommand getByeCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"joulev"},"content":"        return new ByeCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"joulev"},"content":"    public static HelpCommand getHelpCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-04-10"},{"lineNumber":132,"author":{"gitId":"joulev"},"content":"        return new HelpCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":133,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"joulev"},"content":"    public static ClearCommand getClearCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-04-10"},{"lineNumber":136,"author":{"gitId":"joulev"},"content":"        return new ClearCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":137,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"joulev"},"content":"    public static UnknownCommand getUnknownCommand(ParsedInput parsedInput) {","lastModifiedDate":"2023-04-10"},{"lineNumber":140,"author":{"gitId":"joulev"},"content":"        return new UnknownCommand();","lastModifiedDate":"2023-04-10"},{"lineNumber":141,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":35,"moseslee9012":2,"kdh3799":2,"joulev":70,"javienneyeo":33}},{"path":"src/main/java/com/clanki/storage/FlashcardListDecoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":" * This class modifies the list of flashcards from stored text into an ArrayList","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":" * in FlashcardList. Many portions of the code in this class are modified from","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":" * the link below: (addressbook-level2)","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookDecoder.java","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"public class FlashcardListDecoder {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    // \u0027/\u0027 forward slashes are reserved for delimiter prefixes","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    public static final Pattern FLASHCARD_ARGS_FORMAT \u003d Pattern.compile(\"q/(?\u003cquestion\u003e[^/]+)\"","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"            + \" a/(?\u003canswer\u003e[^/]+)\" + \" d/(?\u003cdueDate\u003e[^/]+)\" + \" p/(?\u003ccurrentPeriod\u003e[^/]+)\");","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"    public static final String GROUP_QUESTION \u003d \"question\";","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    public static final String GROUP_ANSWER \u003d \"answer\";","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"    public static final String GROUP_DUE_DATE \u003d \"dueDate\";","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    public static final String GROUP_CURRENT_PERIOD \u003d \"currentPeriod\";","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"     * Decodes {@code encodedFlashcardList} into an {@code ArrayList\u003cFlashcard\u003e}","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"     * containing the decoded flashcards.","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     * @throws StorageOperationException if the {@code encodedFlashcardList} is in","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"     *                                   an invalid format.","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"    public static ArrayList\u003cFlashcard\u003e decodeFlashcardList(List\u003cString\u003e encodedFlashcardList) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        final ArrayList\u003cFlashcard\u003e decodedFlashcard \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"        for (String encodedFlashcard : encodedFlashcardList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"            try {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"                decodedFlashcard.add(decodeFlashcardFromString(encodedFlashcard));","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"            } catch (StorageOperationException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"                System.out.println(\"A flashcard is formatted incorrectly, they will be deleted.\");","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"        return decodedFlashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"     * Decodes {@code encodedFlashcard} into a {@code Flashcard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"     * @throws StorageOperationException if {@code encodedFlashcard} is in an","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"     *                                   invalid format.","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    private static Flashcard decodeFlashcardFromString(String encodedFlashcard)","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"            throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"        final Matcher matcher \u003d FLASHCARD_ARGS_FORMAT.matcher(encodedFlashcard);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"                    \"Encoded flashcard in invalid format. Unable to decode.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"        return new Flashcard(matcher.group(GROUP_QUESTION), matcher.group(GROUP_ANSWER),","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"                LocalDate.parse(matcher.group(GROUP_DUE_DATE)),","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"                Integer.parseInt(matcher.group(GROUP_CURRENT_PERIOD)));","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":48,"joulev":15}},{"path":"src/main/java/com/clanki/storage/FlashcardListEncoder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * This class modifies the list of flashcards from FlashcardList into a storable","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":" * format. Many portions of the code in this class are modified from the link","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * below: (addressbook-level2)","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/AddressBookEncoder.java","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"public class FlashcardListEncoder {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    public static final String QUESTION_APPEND \u003d \"q/\";","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    public static final String ANSWER_APPEND \u003d \" a/\";","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"    public static final String DUE_DATE_APPEND \u003d \" d/\";","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"    public static final String PERIOD_APPEND \u003d \" p/\";","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"     * Encodes all the {@code Flashcards} in the {@code toSave} into a list of","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"     * decodable and readable string presentation for storage.","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    public static List\u003cString\u003e encodeFlashcardList(FlashcardList toSave) {","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"        final List\u003cString\u003e encodedFlashcards \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"        toSave.getFlashCards()","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"                .forEach(flashcard -\u003e encodedFlashcards.add(encodeFlashcardToString(flashcard)));","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"        return encodedFlashcards;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"     * Encodes the {@code flashcard} into a decodable and readable string","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"     * representation.","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    private static String encodeFlashcardToString(Flashcard flashcard) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"        final StringBuilder encodedFlashcardBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(QUESTION_APPEND).append(flashcard.getQuestion());","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(ANSWER_APPEND).append(flashcard.getAnswer());","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(DUE_DATE_APPEND).append(flashcard.getDueDate().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        encodedFlashcardBuilder.append(PERIOD_APPEND).append(flashcard.getCurrentPeriodInDays());","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"        return encodedFlashcardBuilder.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":37,"joulev":9}},{"path":"src/main/java/com/clanki/storage/StorageFile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.exceptions.StorageOperationException;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":" * This class manages the storing of FlashcardList and the recovering of stored","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":" * data each time the application first start up. Many portions of the code in","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":" * this class are modified from the link below: (addressbook-level2)","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/storage/StorageFile.java","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"public class StorageFile {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"     * Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"flashcardList.txt\";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"    public static final String FILE_END_STRING \u003d \".txt\";","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    public final Path path;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"    public StorageFile() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    public StorageFile(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"     * Returns true if the given path is acceptable as a storage file. The file path","lastModifiedDate":"2023-04-10"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"     * is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-04-10"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"        return filePath.toString().endsWith(FILE_END_STRING);","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"     * Saves the {@code addressBook} data to the storage file.","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"     * @throws StorageOperationException if there were errors converting and/or","lastModifiedDate":"2023-04-10"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"     *                                   storing data to file.","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"    public void save(FlashcardList flashcardList) throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"            List\u003cString\u003e encodedFlashcardList \u003d FlashcardListEncoder","lastModifiedDate":"2023-04-10"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"                    .encodeFlashcardList(flashcardList);","lastModifiedDate":"2023-04-10"},{"lineNumber":66,"author":{"gitId":"SongZijin"},"content":"            Files.write(path, encodedFlashcardList);","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"SongZijin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"SongZijin"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"     * Loads the {@code AddressBook} data from this storage file, and then returns","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"     * it. Returns an empty {@code AddressBook} if the file does not exist, or is","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"     * not a regular file.","lastModifiedDate":"2023-04-10"},{"lineNumber":76,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"     * @throws StorageOperationException if there were errors reading and/or","lastModifiedDate":"2023-04-10"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"     *                                   converting data from file.","lastModifiedDate":"2023-04-10"},{"lineNumber":79,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"SongZijin"},"content":"    public ArrayList\u003cFlashcard\u003e load() throws StorageOperationException {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"SongZijin"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"SongZijin"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"SongZijin"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"SongZijin"},"content":"            return FlashcardListDecoder.decodeFlashcardList(Files.readAllLines(path));","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"SongZijin"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"SongZijin"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"SongZijin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"SongZijin"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"SongZijin"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":79,"joulev":13}},{"path":"src/main/java/com/clanki/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.ui;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"javienneyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":" * Parts of the code below are copied and adapted from TextUi.java of","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":" * addressbook-level2, link of original code:","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":" * https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/ui/TextUi.java.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"public class Ui {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"    private final Scanner in;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    public Ui() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"        this(System.in);","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"        return in.nextLine();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"     * Display messages to inform user that a flashcard have been successfully","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"     * added.","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"     * @param questionText The question of the new flashcard.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"     * @param answerText   The answer of the new flashcard.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"    public void printSuccessfulAddMessage(String questionText, String answerText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"You have added the following card:\");","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"Q: \" + questionText);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"A: \" + answerText);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    public void printByeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        System.out.println(\"Bye. Don\u0027t forget to come back later to study!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"Welcome to Clanki! Time to start studying!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"     * Display message to inform user that their input is of a wrong format.","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"    public void printInvalidInput() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"        System.out.println(\"The input is in an incorrect format.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"                + \"You can view our user guide or type help to see the correct formats for commands.\\n\");","lastModifiedDate":"2023-04-10"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"kdh3799"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"moseslee9012"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"moseslee9012"},"content":"     * Prints out a message to indicate a successful deletion of a flashcard","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"moseslee9012"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"moseslee9012"},"content":"     * @param index the index of the flashcard at the point of deletion","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"moseslee9012"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"moseslee9012"},"content":"    public void printSuccessfulDelete(int index) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"moseslee9012"},"content":"        System.out.println(\"Got it. Deleted the flashcard at index \" + index);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"kdh3799"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"     * reused from Kong Dehao ip for general printing to console","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"kdh3799"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"kdh3799"},"content":"     * @param message multiple strings to be shown to user","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"kdh3799"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"kdh3799"},"content":"    public void printlnSeveralStrings(String... message) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"kdh3799"},"content":"        for (String m : message) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"kdh3799"},"content":"            System.out.println(m);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"kdh3799"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"SongZijin"},"content":"     * Display all the current valid commands the user can key in.","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"SongZijin"},"content":"    public void printHelpMessage() {","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        System.out.println(\"The following are the commands you can use:\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"                + \"add     Adds a flashcard to the current list of flashcards.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"                + \"        Parameters: add /q QUESTION /a ANSWER\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":85,"author":{"gitId":"joulev"},"content":"                + \"        Example: add /q What is the worst fruit? /a Durian\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":86,"author":{"gitId":"joulev"},"content":"                + \"update  Changes the content of flashcard\u0027s question or answer.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":87,"author":{"gitId":"joulev"},"content":"                + \"        Parameters: update QUERY\\n\" + \"        Example: update fruit\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":88,"author":{"gitId":"joulev"},"content":"                + \"        Which flashcard do you want to update? 1 /q What is the best fruit?\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":89,"author":{"gitId":"joulev"},"content":"                + \"delete  Removes a flashcard with specified string.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":90,"author":{"gitId":"joulev"},"content":"                + \"        Parameters: delete QUERY\\n\" + \"        Example: delete fruit\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":91,"author":{"gitId":"joulev"},"content":"                + \"review  Go through all flashcards that are due today.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":92,"author":{"gitId":"joulev"},"content":"                + \"list    Lists out the questions and answers in the list of flashcards.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":93,"author":{"gitId":"joulev"},"content":"                + \"        Parameters: list all (lists all flashcards)\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":94,"author":{"gitId":"joulev"},"content":"                + \"        Parameters: list DUE_DATE (list all flashcards with that specified due date)\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":95,"author":{"gitId":"joulev"},"content":"                + \"        Example: list 2023-05-04\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":96,"author":{"gitId":"joulev"},"content":"                + \"clear   Deletes all the flashcards in the list.\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":97,"author":{"gitId":"joulev"},"content":"                + \"bye     Exit the program.\");","lastModifiedDate":"2023-04-10"},{"lineNumber":98,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"SongZijin"},"content":"    public void printSeparationLine() {","lastModifiedDate":"2023-04-03"},{"lineNumber":101,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"javienneyeo"},"content":"     * Prints the question and answer of a single flashcard to the console.","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"javienneyeo"},"content":"     * @Param flashcard the flashcard to be print","lastModifiedDate":"2023-04-06"},{"lineNumber":108,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":109,"author":{"gitId":"javienneyeo"},"content":"    public void printFlashCard(Flashcard flashcard) {","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Q: \" + flashcard.getQuestion());","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"A: \" + flashcard.getAnswer());","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"javienneyeo"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"javienneyeo"},"content":"     * Prints the questions and answers of a list of flashcards to the console.","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"javienneyeo"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"javienneyeo"},"content":"     * @param flashcards the list of flashcards to be printed","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"javienneyeo"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"javienneyeo"},"content":"    public void printFlashCards(ArrayList\u003cFlashcard\u003e flashcards) {","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"javienneyeo"},"content":"        for (int i \u003d 0; i \u003c flashcards.size(); i++) {","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"javienneyeo"},"content":"            System.out.println(\"[\" + (i + 1) + \"]\");","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"javienneyeo"},"content":"            printFlashCard(flashcards.get(i));","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"javienneyeo"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"javienneyeo"},"content":"    public void printSuccessfulUpdateMessage(Flashcard updatedFlashcard) {","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"javienneyeo"},"content":"        System.out.println(\"Understood. The card has been updated to\");","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"javienneyeo"},"content":"        printFlashCard(updatedFlashcard);","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"SongZijin"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"SongZijin"},"content":"     * Display that the contents of list have been successfully cleared.","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"SongZijin"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"SongZijin"},"content":"    public void printClearMessage() {","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"All flashcards have been deleted.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"SongZijin"},"content":"        System.out.println(\"Your list of flashcards is now empty.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":138,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":56,"kdh3799":10,"moseslee9012":9,"joulev":32,"javienneyeo":31}},{"path":"src/test/java/com/clanki/objects/FlashcardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"package com.clanki.objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"class FlashcardTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"    public void constructNewFlashcard_correctlyFormattedInputs_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard \u003d new Flashcard(\"QUESTION\", \"ANSWER\");","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"        assertEquals(\"QUESTION\", testCard.getQuestion());","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"        assertEquals(\"ANSWER\", testCard.getAnswer());","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now(), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        assertEquals(0, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"        assertEquals(true, testCard.isDueToday());","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"    public void updateFlashcard_incorrectAnswer_shouldResetDatesToToday() {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        Flashcard testCard \u003d new Flashcard(\"QUESTION\", \"ANSWER\", LocalDate.now(), 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterIncorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now(), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"        assertEquals(0, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    public void updateFlashcard_correctAnswer_shouldUpdateDates() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"        Flashcard testCard \u003d new Flashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(1), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        assertEquals(1, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q2\", \"a2\", LocalDate.now(), 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(2), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"        assertEquals(2, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q3\", \"a3\", LocalDate.now(), 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(3), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"        assertEquals(3, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        testCard \u003d new Flashcard(\"q4\", \"a4\", LocalDate.now(), 45);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        testCard.updateDueDateAfterCorrectAnswer();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"        assertEquals(LocalDate.now().plusDays(68), testCard.getDueDate());","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"        assertEquals(68, testCard.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":10,"joulev":41}},{"path":"src/test/java/com/clanki/parser/ParsedInputTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"joulev"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"joulev"},"content":"class ParsedInputTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"joulev"},"content":"    public void getCommand_emptyInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"    public void getCommand_oneWordInput_oneWord() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command\");","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"joulev"},"content":"    public void getCommand_multipleWordsInput_firstWord() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"joulev"},"content":"    public void getCommand_withSlash_hasTheSlash() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command/blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"joulev"},"content":"        assertEquals(\"command/blah\", parsedInput.getCommand());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"joulev"},"content":"    public void getBody_emptyInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"\");","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"joulev"},"content":"    public void getBody_oneWordInput_emptyString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command\");","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"    public void getBody_multipleWordsInput_allWords() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"joulev"},"content":"        assertEquals(\"blah blah\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithoutBody_beNull() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command             /blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithBody_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command       a b      /blah blah\");","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        assertEquals(\"a b\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"    public void getBody_optionsWithBodyAndTrailingSpaces_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(\"command       a b      /blah blah    \");","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"joulev"},"content":"        assertEquals(\"a b\", parsedInput.getBody());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"    public void getOptionByName_normalScenarios_beCorrect() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"                \"command   /opt1   blah   /opt2   /opt3   bleh     \");","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        assertEquals(\"blah\", parsedInput.getOptionByName(\"opt1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        assertEquals(\"\", parsedInput.getOptionByName(\"opt2\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"        assertEquals(\"bleh\", parsedInput.getOptionByName(\"opt3\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"joulev"},"content":"        assertEquals(null, parsedInput.getOptionByName(\"opt4\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"joulev"},"content":"    public void getOptionByName_sameOptionMultipleTimes_selectLast() {","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"joulev"},"content":"        ParsedInput parsedInput \u003d new ParsedInput(","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"joulev"},"content":"                \"command   /opt1   blah   /opt2   /opt3   bleh   /opt1   bleh     \");","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"joulev"},"content":"        assertEquals(\"bleh\", parsedInput.getOptionByName(\"opt1\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"joulev"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"joulev":84}},{"path":"src/test/java/com/clanki/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joulev"},"content":"package com.clanki.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.AddCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.ByeCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"moseslee9012"},"content":"import com.clanki.commands.DeleteCommand;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.ListCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"kdh3799"},"content":"import com.clanki.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joulev"},"content":"import com.clanki.commands.UnknownCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"javienneyeo"},"content":"import com.clanki.commands.UpdateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardAnswerException;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.EmptyFlashcardQuestionException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"joulev"},"content":"import com.clanki.exceptions.InvalidAddFlashcardInputException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joulev"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"class ParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joulev"},"content":"    public void parserAddCommand_correctlyFormattedInput_successful() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"add /q Question /a Answer\");","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"        Command expectedCommand \u003d new AddCommand(\"Question\", \"Answer\");","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"        assertEquals(expectedCommand.toString(), parsedCommand.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"        Command parsedCommandNonCap \u003d Parser.parseCommand(\"add /q question /a answer\");","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"        Command expectedCommandCap \u003d new AddCommand(\"Question\", \"Answer\");","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        assertEquals(expectedCommandCap.toString(), parsedCommandNonCap.toString());","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"joulev"},"content":"    public void parserAddCommand_answerBeforeQuestion_successful() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"add /a Answer /q Question\");","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"        Command expectedCommand \u003d new AddCommand(\"Question\", \"Answer\");","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"        assertEquals(expectedCommand.toString(), parsedCommand.toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"    public void parserAddCommand_incorrectFormattedInput_invalidInputException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        assertThrows(InvalidAddFlashcardInputException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add Question /a Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"        assertThrows(InvalidAddFlashcardInputException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q Question /w Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"    public void parserAddCommand_partOfInputMissing_emptyInputPartException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"        assertThrows(EmptyFlashcardAnswerException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q Question /a \"));","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"        assertThrows(EmptyFlashcardQuestionException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"joulev"},"content":"                () -\u003e Parser.parseCommandStrict(\"add /q  /a Answer\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"joulev"},"content":"    public void parserByeCommand_byeCommand_successful() {","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"bye\");","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof ByeCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"joulev"},"content":"        parsedCommand \u003d Parser.parseCommand(\"bye whatever\");","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof ByeCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"kdh3799"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"kdh3799"},"content":"    public void parserReviewCommand_reviewCommand_successful() {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"review\");","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"kdh3799"},"content":"        assertTrue(parsedCommand instanceof ReviewCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"kdh3799"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"joulev"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"joulev"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"joulev"},"content":"    public void parserUnknownCommand_unknownCommand_successful() {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"unknown\");","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"joulev"},"content":"        assertTrue(parsedCommand instanceof UnknownCommand);","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"joulev"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"javienneyeo"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"javienneyeo"},"content":"    public void parserUpdateCommand_updateCommand_successful() {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"joulev"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"update Question\");","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"javienneyeo"},"content":"        assertTrue(parsedCommand instanceof UpdateCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"moseslee9012"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"moseslee9012"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"moseslee9012"},"content":"    public void parserDeleteCommand_deleteCommand_successful() {","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"moseslee9012"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"delete query\");","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"moseslee9012"},"content":"        assertTrue(parsedCommand instanceof DeleteCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"moseslee9012"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"javienneyeo"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"javienneyeo"},"content":"    @Test","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"javienneyeo"},"content":"    public void parserListCommand_listCommand_successful() {","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"javienneyeo"},"content":"        Command parsedCommand \u003d Parser.parseCommand(\"list all\");","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"javienneyeo"},"content":"        assertTrue(parsedCommand instanceof ListCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"javienneyeo"},"content":"        parsedCommand \u003d Parser.parseCommand(\"list 2023-04-06\");","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"javienneyeo"},"content":"        assertTrue(parsedCommand instanceof ListCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"javienneyeo"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"SongZijin":34,"moseslee9012":7,"kdh3799":5,"joulev":34,"javienneyeo":15}},{"path":"src/test/java/com/clanki/storage/FlashcardListDecoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.Flashcard;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListDecoder.decodeFlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListEncoder.encodeFlashcardList;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"class FlashcardListDecoderTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"    void decodeFlashcardList_correctInput_correctOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e storedString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q/q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q/q2 a/a2 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        ArrayList\u003cFlashcard\u003e decodedFlashcardList \u003d decodeFlashcardList(storedString);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard1 \u003d decodedFlashcardList.get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"q1\", testCard1.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"a1\", testCard1.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"        assertEquals(LocalDate.now(), testCard1.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"        assertEquals(0, testCard1.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard2 \u003d decodedFlashcardList.get(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"q2\", testCard2.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"a2\", testCard2.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"        assertEquals(LocalDate.now(), testCard2.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"        assertEquals(0, testCard2.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"SongZijin"},"content":"    void decodeAddressBook_encodeInput_decodeOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q2\", \"a2\");","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeFlashcardList(flashcardList);","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"SongZijin"},"content":"        ArrayList\u003cFlashcard\u003e decodedFlashcardList \u003d decodeFlashcardList(encodedResult);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard1 \u003d decodedFlashcardList.get(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"q1\", testCard1.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"a1\", testCard1.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"SongZijin"},"content":"        assertEquals(LocalDate.now(), testCard1.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"SongZijin"},"content":"        assertEquals(0, testCard1.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"SongZijin"},"content":"        Flashcard testCard2 \u003d decodedFlashcardList.get(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"q2\", testCard2.getQuestion());","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"a2\", testCard2.getAnswer());","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"SongZijin"},"content":"        assertEquals(LocalDate.now(), testCard2.getDueDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"SongZijin"},"content":"        assertEquals(0, testCard2.getCurrentPeriodInDays());","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"SongZijin"},"content":"    void decodeAddressBook_correctAndInvalidInput_correctOutput() {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e storedString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"SongZijin"},"content":"        storedString.add(\"q/q2 a/a2 d/\" + LocalDate.now().toString() + \" p/0\");","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"SongZijin"},"content":"        ArrayList\u003cFlashcard\u003e decodedFlashcardList \u003d decodeFlashcardList(storedString);","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"SongZijin"},"content":"        assertEquals(1, decodedFlashcardList.size());","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"SongZijin"},"content":"        assertEquals(\"q2\", decodedFlashcardList.get(0).getQuestion());","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":66}},{"path":"src/test/java/com/clanki/storage/FlashcardListEncoderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"SongZijin"},"content":"package com.clanki.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"SongZijin"},"content":"import com.clanki.objects.FlashcardList;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"SongZijin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"SongZijin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"SongZijin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"SongZijin"},"content":"import static com.clanki.storage.FlashcardListEncoder.encodeFlashcardList;","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"SongZijin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"SongZijin"},"content":"class FlashcardListEncoderTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"SongZijin"},"content":"    void encodeAddressBook_correctInput_correctOutput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q1\", \"a1\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"SongZijin"},"content":"        flashcardList.addNewFlashcard(\"q2\", \"a2\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeFlashcardList(flashcardList);","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"SongZijin"},"content":"        String line1 \u003d \"q/q1 a/a1 d/\" + LocalDate.now().toString() + \" p/0\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"SongZijin"},"content":"        String line2 \u003d \"q/q2 a/a2 d/\" + LocalDate.now().toString() + \" p/0\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"SongZijin"},"content":"        assertEquals(line1, encodedResult.get(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"SongZijin"},"content":"        assertEquals(line2, encodedResult.get(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"SongZijin"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"SongZijin"},"content":"    void encodeAddressBook_emptyInput() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"SongZijin"},"content":"        FlashcardList flashcardList \u003d new FlashcardList();","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"SongZijin"},"content":"        List\u003cString\u003e encodedResult \u003d encodeFlashcardList(flashcardList);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"SongZijin"},"content":"        assertTrue(encodedResult.isEmpty());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"SongZijin"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"SongZijin"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"SongZijin"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"SongZijin":35}}]
