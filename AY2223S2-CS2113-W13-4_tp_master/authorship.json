[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"  options.release \u003d 11","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"jar {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"  manifest {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"    attributes(\"Main-Class\": \"seedu.duke.Duke\")","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"  }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"  from {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"  }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"-":46,"WilsonOh":14}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"            \u003cproperty name\u003d\"excludes\" value\u003d\"java.io,java.net,java.lang.Math,org.junit.Assert,org.junit.jupiter.api.Assertions\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"        \u003c/module\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"             @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":286,"WilsonOh":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Quang Anh | [Github](https://github.com/quanganh2810) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Wilson Oh | [Github](https://github.com/WilsonOh) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Goh Jing Hong| [Github](https://github.com/waiter-palypoo) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Victor Ouy | [Github](https://github.com/victorouy) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Varnika Srivastava | [Github](https://github.com/varnika1402) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"quanganh2810":5,"-":4}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-8.0-bin.zip","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"networkTimeout\u003d10000","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":4,"WilsonOh":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"        Ui.printGreeting();","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"        String userCmd \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"quanganh2810"},"content":"        while (!userCmd.equals(\"bye\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"            try {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"quanganh2810"},"content":"                Parser.handleCmd(userCmd, expenseManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"                System.out.println(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"            userCmd \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"quanganh2810"},"content":"        in.close();","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"        Ui.printGoodbye();","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"quanganh2810":9,"-":8,"WilsonOh":5}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"        super(message);","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":7}},{"path":"src/main/java/seedu/duke/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"public class Expense {","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"quanganh2810"},"content":"    private double amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"    private LocalDate date;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"    private String category;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    public Expense(String name, double amount, LocalDate date, String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"quanganh2810"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"quanganh2810"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"quanganh2810"},"content":"    public void setAmount(double amount) {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"quanganh2810"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"quanganh2810"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"    public String getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"        return this.name;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"quanganh2810"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"quanganh2810"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"quanganh2810"},"content":"    public double getAmount() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"quanganh2810"},"content":"        return amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"quanganh2810"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"quanganh2810"},"content":"        return date;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"quanganh2810"},"content":"    public String getCategory() {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"quanganh2810"},"content":"        return category;","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"Spent $%s on %s in the %s category on %s\", this.amount, this.name, this.category,","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"                             this.date);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"quanganh2810":41,"WilsonOh":9}},{"path":"src/main/java/seedu/duke/ExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"public class ExpenseManager {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    public static final int SORT_BY_NAME \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    public static final int SORT_BY_PRICE \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"quanganh2810"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"waiter-palypoo"},"content":"    private ArrayList\u003cFutureExpense\u003e futureExpenses;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"    private double totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"quanganh2810"},"content":"    public ExpenseManager(double totalBalance) {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"quanganh2810"},"content":"        this.expenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"waiter-palypoo"},"content":"        this.futureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"    public void addExpense(String name, double amount, LocalDate date, String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        Expense toAdd \u003d new Expense(name.strip(), amount, date, category.strip());","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"Roger, the following expense has been added!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"quanganh2810"},"content":"        totalBalance -\u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"waiter-palypoo"},"content":"    public void addFutureExpense(String name, double amount, LocalDate dueDate, String category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"waiter-palypoo"},"content":"        FutureExpense toAdd \u003d new FutureExpense(name.strip(), amount, dueDate, category);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Roger, the following expense has been added!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.add(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"waiter-palypoo"},"content":"    public FutureExpense getFutureExpense(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"waiter-palypoo"},"content":"        return futureExpenses.get(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"quanganh2810"},"content":"    public void setTotalBalance(double totalBalance) {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"quanganh2810"},"content":"    public double getTotalBalance() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"quanganh2810"},"content":"        return totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"    private ArrayList\u003cExpense\u003e getSortedExpensesByAmount() {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e(this.expenses);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"        sortedExpenses.sort((e1, e2) -\u003e Double.compare(e1.getAmount(), e2.getAmount()));","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"    private ArrayList\u003cExpense\u003e getSortedExpensesByName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e(this.expenses);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"        sortedExpenses.sort((e1, e2) -\u003e e1.getName().compareTo(e2.getName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"    public ArrayList\u003cExpense\u003e getSortedExpenses(final int sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"        switch (sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"        case SORT_BY_NAME:","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByName();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"WilsonOh"},"content":"        case SORT_BY_PRICE:","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByAmount();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByName();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"    public void printExpense() throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"        if (expenses.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Sorry, there are no expenses in the list currently.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"WilsonOh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"How would you like your expenses to be sorted?\");","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"  1. By date added\");","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"  2. By Name\");","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"  3. By Amount\");","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"WilsonOh"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"WilsonOh"},"content":"        int sortBy \u003d sc.nextInt();","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e toList;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"WilsonOh"},"content":"        switch (sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"WilsonOh"},"content":"        case 1:","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"WilsonOh"},"content":"            toList \u003d this.expenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"WilsonOh"},"content":"        case 2:","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"WilsonOh"},"content":"            toList \u003d getSortedExpenses(SORT_BY_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"WilsonOh"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"WilsonOh"},"content":"        case 3:","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"WilsonOh"},"content":"            toList \u003d getSortedExpenses(SORT_BY_PRICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"WilsonOh"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"WilsonOh"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"WilsonOh"},"content":"            toList \u003d this.expenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"quanganh2810"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Here are the list of your expenses !\");","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"WilsonOh"},"content":"        for (Expense e : toList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(count + \". \" + e);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"            count++;","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"waiter-palypoo"},"content":"    private String checkSufficientBalance(FutureExpense futureExpense) {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"waiter-palypoo"},"content":"        if (futureExpense.getAmount() \u003c\u003d totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"waiter-palypoo"},"content":"            return \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"waiter-palypoo"},"content":"        return \"Warning: Insufficient Balance!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"waiter-palypoo"},"content":"    public void printFutureExpenses() throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"waiter-palypoo"},"content":"        if (futureExpenses.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"Sorry, there are no future expenses.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Here is the list of your future expenses: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"waiter-palypoo"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"waiter-palypoo"},"content":"        int totalAmountDue \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"waiter-palypoo"},"content":"        for (FutureExpense futureExpense : futureExpenses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(count + \". \" + futureExpense + \" \" + checkSufficientBalance(futureExpense));","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"waiter-palypoo"},"content":"            count++;","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"waiter-palypoo"},"content":"            totalAmountDue +\u003d futureExpense.getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"You have \" + futureExpenses.size() + \" future expenses in total.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total amount due: \" + totalAmountDue);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total balance: \" + getTotalBalance());","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"waiter-palypoo"},"content":"        if (totalAmountDue \u003e totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Warning: You have insufficient balance to pay for all future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Great! You have sufficient balance to pay for all future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"waiter-palypoo"},"content":"    public void checkUpcomingExpenses(int timePeriod) {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate endDate \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"waiter-palypoo"},"content":"        switch (timePeriod) {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"waiter-palypoo"},"content":"        case 1:","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusWeeks(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"waiter-palypoo"},"content":"        case 2:","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusMonths(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"waiter-palypoo"},"content":"        case 3:","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusMonths(3);","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"WilsonOh"},"content":"        default:","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"WilsonOh"},"content":"            endDate \u003d today;","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"waiter-palypoo"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"waiter-palypoo"},"content":"        int totalAmountDue \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"waiter-palypoo"},"content":"        for (FutureExpense futureExpense : futureExpenses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"waiter-palypoo"},"content":"            if (futureExpense.getDueDate().isBefore(endDate)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"WilsonOh"},"content":"                System.out.println((futureExpenses.indexOf(futureExpense) + 1) + \". \" +","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"WilsonOh"},"content":"                                   checkSufficientBalance(futureExpense));","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"waiter-palypoo"},"content":"                count++;","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"waiter-palypoo"},"content":"                totalAmountDue +\u003d futureExpense.getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"There are \" + count + \" upcoming payments in this time period.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total amount due: \" + totalAmountDue);","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total balance: \" + getTotalBalance());","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"waiter-palypoo"},"content":"        if (totalAmountDue \u003e totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Warning: You have insufficient balance to pay for all upcoming expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Great! You have sufficient balance to pay for all upcoming expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"waiter-palypoo"},"content":"    public void payFutureExpense(int id) throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"waiter-palypoo"},"content":"        if (id \u003e\u003d futureExpenses.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"That item does not exist in the list of future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"This future expense has been paid for:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(futureExpenses.get(id).toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"You may now find it in your expenses list.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"waiter-palypoo"},"content":"        String name \u003d futureExpenses.get(id).getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"waiter-palypoo"},"content":"        double amt \u003d futureExpenses.get(id).getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"waiter-palypoo"},"content":"        String category \u003d futureExpenses.get(id).getCategory();","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"waiter-palypoo"},"content":"        addExpense(name, amt, LocalDate.now(), category);","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"quanganh2810"},"content":"    public Expense get(int id) {","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"quanganh2810"},"content":"        return expenses.get(id);","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"waiter-palypoo"},"content":"    public void remove(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"waiter-palypoo"},"content":"        expenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"waiter-palypoo"},"content":"    public void removeFutureExpense(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"WilsonOh"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-11"},{"lineNumber":214,"author":{"gitId":"varnika1402"},"content":"        return expenses.size();","lastModifiedDate":"2023-03-11"},{"lineNumber":215,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":217,"author":{"gitId":"waiter-palypoo"},"content":"    public int getFutureSize() {","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"waiter-palypoo"},"content":"        return futureExpenses.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":14,"waiter-palypoo":108,"quanganh2810":33,"WilsonOh":65}},{"path":"src/main/java/seedu/duke/FutureExpense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waiter-palypoo"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"waiter-palypoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"waiter-palypoo"},"content":"public class FutureExpense extends Expense {","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"waiter-palypoo"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"waiter-palypoo"},"content":"    public FutureExpense(String name, double amount, LocalDate dueDate, String category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"waiter-palypoo"},"content":"        super(name, amount, null, category);","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"waiter-palypoo"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"waiter-palypoo"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"waiter-palypoo"},"content":"        return dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"waiter-palypoo"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"waiter-palypoo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"waiter-palypoo"},"content":"        return String.format(\"Upcoming payment %s in the %s category due on %s.\", this.getName(), this.getCategory(),","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"waiter-palypoo"},"content":"                this.dueDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"waiter-palypoo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"waiter-palypoo":22}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"quanganh2810"},"content":"public class Parser {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"    public static void handleCmd(String userCmd, ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"quanganh2810"},"content":"            if (userCmd.startsWith(\"add expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"                Ui.printChoice();","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"quanganh2810"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"quanganh2810"},"content":"                String choice \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"quanganh2810"},"content":"                int choiceNum \u003d Integer.parseInt(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"                executeAddExpense(userCmd, expenseManager, choiceNum);","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"edit expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"quanganh2810"},"content":"                System.out.println(userCmd.substring(userCmd.indexOf(\"id/\") + 3, userCmd.indexOf(\"in/\") - 1));","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"                executeEditExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"            } else if (userCmd.startsWith(\"delete expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"                executeDeleteExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"set balance\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"quanganh2810"},"content":"                executeSetBudget(expenseManager, userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"list expenses\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"                expenseManager.printExpense();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"check balance\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"quanganh2810"},"content":"                System.out.println(\"Your current balance is: $\" + expenseManager.getTotalBalance());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"add future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printChoice();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"waiter-palypoo"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"waiter-palypoo"},"content":"                String choice \u003d in.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"waiter-palypoo"},"content":"                int choiceNum \u003d Integer.parseInt(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"waiter-palypoo"},"content":"                executeAddFutureExpense(userCmd, expenseManager, choiceNum);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"edit future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"waiter-palypoo"},"content":"                executeEditFutureExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"delete future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"waiter-palypoo"},"content":"                executeDeleteFutureExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"list future expenses\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"waiter-palypoo"},"content":"                expenseManager.printFutureExpenses();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"check upcoming expenses\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"waiter-palypoo"},"content":"                executeCheckUpcomingExpenses(expenseManager);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"pay\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"waiter-palypoo"},"content":"                executePayFutureExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"    public static void executeAddExpense(String userCmd, ExpenseManager expenseManager, int choice)","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"            throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"quanganh2810"},"content":"        double amount \u003d extractAmount(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"quanganh2810"},"content":"        LocalDate date \u003d extractDate(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"        String name \u003d extractName(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"quanganh2810"},"content":"        String category \u003d getCategory(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"quanganh2810"},"content":"        if (category.equals(\"wrong input\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"quanganh2810"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"            expenseManager.addExpense(name, amount, date, category);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"quanganh2810"},"content":"    private static String getCategory(int choice) {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"quanganh2810"},"content":"        switch (choice) {","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"        case 1:","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"quanganh2810"},"content":"            return \"Food \u0026 Drinks\";","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"quanganh2810"},"content":"        case 2:","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"quanganh2810"},"content":"            return \"Shopping\";","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"quanganh2810"},"content":"        case 3:","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"quanganh2810"},"content":"            return \"Transportation\";","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"quanganh2810"},"content":"        case 4:","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"quanganh2810"},"content":"            return \"Life \u0026 Entertainment\";","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"quanganh2810"},"content":"        case 5:","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"quanganh2810"},"content":"            return \"Investments\";","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"quanganh2810"},"content":"        case 6:","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"quanganh2810"},"content":"            return \"Communication \u0026 Technology\";","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"quanganh2810"},"content":"        case 7:","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"quanganh2810"},"content":"            return \"Others\";","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"quanganh2810"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"quanganh2810"},"content":"            return \"wrong input\";","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"WilsonOh"},"content":"    private static String extractName(String userCmd) {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"WilsonOh"},"content":"        int endIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"WilsonOh"},"content":"        return userCmd.substring(12, endIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"    private static double extractAmount(String userCmd) throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"quanganh2810"},"content":"        int endIndex \u003d userCmd.indexOf(\" \", startIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense Amount cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"varnika1402"},"content":"        } else if (endIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense Date cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"            String amountString \u003d userCmd.substring(startIndex + 2, endIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"quanganh2810"},"content":"            return Double.parseDouble(amountString);","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"    private static LocalDate extractDate(String input) throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d input.indexOf(\"d/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"        String dateString \u003d input.substring(startIndex + 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"quanganh2810"},"content":"        int year \u003d Integer.parseInt(dateString.substring(0, 4));","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"quanganh2810"},"content":"        int month \u003d Integer.parseInt(dateString.substring(4, 6));","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"quanganh2810"},"content":"        int day \u003d Integer.parseInt(dateString.substring(6));","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"quanganh2810"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"    public static void executeSetBudget(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"quanganh2810"},"content":"        int startIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Budget amount cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"quanganh2810"},"content":"            double balance \u003d Double.parseDouble(userCmd.substring(startIndex + 2));","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Your budget has been set to $\" + balance);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.setTotalBalance(balance);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"victorouy"},"content":"    public static void executeEditExpense(ExpenseManager expenseManager, String userCmd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"quanganh2810"},"content":"        int id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3, userCmd.indexOf(\"in/\") - 1));","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"quanganh2810"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"quanganh2810"},"content":"        switch (userCmd.substring(userCmd.indexOf(\"in/\") + 3)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"quanganh2810"},"content":"        case \"amount\":","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Enter a new amount spent! Just enter a number!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"quanganh2810"},"content":"            Double newAmount \u003d Double.parseDouble(in.nextLine());","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"quanganh2810"},"content":"            Double newBalance \u003d expenseManager.getTotalBalance() + expenseManager.get(id - 1).getAmount() - newAmount;","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.get(id - 1).setAmount(newAmount);","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.setTotalBalance(newBalance);","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Change in amount successful! Balance has also been recalculated\");","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"quanganh2810"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"quanganh2810"},"content":"        case \"date\":","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Enter a new date in the form of YYYYMMDD!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"quanganh2810"},"content":"            String newDate \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"quanganh2810"},"content":"            int year \u003d Integer.parseInt(newDate.substring(0, 4));","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"quanganh2810"},"content":"            int month \u003d Integer.parseInt(newDate.substring(4, 6));","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"quanganh2810"},"content":"            int day \u003d Integer.parseInt(newDate.substring(6));","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.get(id - 1).setDate(LocalDate.of(year, month, day));","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Change in date successful!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"quanganh2810"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"quanganh2810"},"content":"        case \"category\":","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"quanganh2810"},"content":"            Ui.printChoice();","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"quanganh2810"},"content":"            int choice \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"quanganh2810"},"content":"            String newCategory \u003d getCategory(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.get(id - 1).setCategory(newCategory);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Change in category successful!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"quanganh2810"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"quanganh2810"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"varnika1402"},"content":"    public static void executeDeleteExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d userCmd.indexOf(\"id/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense id cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"varnika1402"},"content":"            int id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3));","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"varnika1402"},"content":"            if (id \u003e expenseManager.getSize()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"varnika1402"},"content":"                throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"varnika1402"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"varnika1402"},"content":"                Expense deletedExpense \u003d expenseManager.get(id - 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"varnika1402"},"content":"                expenseManager.remove(id - 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"Noted. I\u0027ve removed this expense:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"varnika1402"},"content":"                System.out.println(deletedExpense);","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executeAddFutureExpense(String userCmd, ExpenseManager expenseManager, int choice)","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"waiter-palypoo"},"content":"            throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"waiter-palypoo"},"content":"        double amount \u003d extractAmount(userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate dueDate \u003d extractDate(userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"waiter-palypoo"},"content":"        String name \u003d userCmd.substring(19, userCmd.indexOf(\"$/\") - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"waiter-palypoo"},"content":"        String category \u003d getCategory(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"waiter-palypoo"},"content":"        if (category.equals(\"wrong input\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.addFutureExpense(name, amount, dueDate, category);","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":194,"author":{"gitId":"victorouy"},"content":"    public static void executeEditFutureExpense(ExpenseManager expenseManager, String userCmd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"waiter-palypoo"},"content":"        int id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3, userCmd.indexOf(\"in/\") - 1));","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"waiter-palypoo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"waiter-palypoo"},"content":"        switch (userCmd.substring(userCmd.indexOf(\"in/\") + 3)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"waiter-palypoo"},"content":"        case \"amount\":","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Enter a new amount spent! Just enter a number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"waiter-palypoo"},"content":"            Double newAmount \u003d Double.parseDouble(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.getFutureExpense(id - 1).setAmount(newAmount);","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Change in amount successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"waiter-palypoo"},"content":"        case \"date\":","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Enter a new date in the form of YYYYMMDD!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"waiter-palypoo"},"content":"            String newDate \u003d in.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"waiter-palypoo"},"content":"            int year \u003d Integer.parseInt(newDate.substring(0, 4));","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"waiter-palypoo"},"content":"            int month \u003d Integer.parseInt(newDate.substring(4, 6));","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"waiter-palypoo"},"content":"            int day \u003d Integer.parseInt(newDate.substring(6));","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.getFutureExpense(id - 1).setDate(LocalDate.of(year, month, day));","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Change in date successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"waiter-palypoo"},"content":"        case \"category\":","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printChoice();","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"waiter-palypoo"},"content":"            int choice \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"waiter-palypoo"},"content":"            String newCategory \u003d getCategory(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.getFutureExpense(id - 1).setCategory(newCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Change in category successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"waiter-palypoo"},"content":"        default:","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":225,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executeDeleteFutureExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"waiter-palypoo"},"content":"        int startIndex \u003d userCmd.indexOf(\"id/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"waiter-palypoo"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"Expense id cannot be empty.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"waiter-palypoo"},"content":"            int id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3));","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"waiter-palypoo"},"content":"            if (id \u003e expenseManager.getFutureSize()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"waiter-palypoo"},"content":"                throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"waiter-palypoo"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"waiter-palypoo"},"content":"                Expense deletedExpense \u003d expenseManager.getFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"waiter-palypoo"},"content":"                expenseManager.removeFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Noted. I\u0027ve removed this expense:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(deletedExpense);","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executeCheckUpcomingExpenses(ExpenseManager expenseManager) {","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Choose a period to show upcoming expenses within (type the number): \");","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"1. 1 week\");","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"2. 1 month\");","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"3. 3 months\");","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"waiter-palypoo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"waiter-palypoo"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"waiter-palypoo"},"content":"            int period \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"waiter-palypoo"},"content":"            while (period \u003c 1 || period \u003e 3) {","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Please choose a number from 1 to 3!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"waiter-palypoo"},"content":"                period \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.checkUpcomingExpenses(period);","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"waiter-palypoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Please input a valid number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executePayFutureExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"waiter-palypoo"},"content":"        if (userCmd.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"waiter-palypoo"},"content":"            String idString \u003d userCmd.split(\" \")[1].trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"waiter-palypoo"},"content":"            if (idString \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"waiter-palypoo"},"content":"                throw new DukeException(\"Please input a valid number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"waiter-palypoo"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"waiter-palypoo"},"content":"                int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"waiter-palypoo"},"content":"                expenseManager.payFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"waiter-palypoo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Please input a valid number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"WilsonOh"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":275,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Please input a valid number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":49,"waiter-palypoo":114,"quanganh2810":101,"WilsonOh":11,"victorouy":3}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"public class Ui {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"     * Print the Input guidelines for the reader","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"    public static void printInstructions() {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"LIST OF ALL COMMANDS:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"add expense + name + $/\\\"amount\\\" + d/\\\"yyyymmdd\\\" to add an expense\");","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"edit expense +  id/\\\"expense id\\\" + in/\\\"amount/date/category\\\" to edit an expense\");","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"delete expense +  id/\\\"expense id\\\" to delete an expense\");","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"set balance +  $/\\\"amount\\\" to set your balance\");","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"list expenses to list all past expenses\");","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"check balance to check the remaining balance\");","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"add future expense + name + $/\\\"amount\\\" + d/\\\"yyyymmdd\\\" to add a future expense\");","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"edit future expense + id/\\\"expense id\\\" + in/\\\"amount/date/category\\\" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"                           + \"to edit a future expense\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"delete future expense + id/\\\"expense id\\\" to delete a future expense\");","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"list future expenses to list all future expenses\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"check upcoming expenses to list all future expenses within an upcoming time period\");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"pay \\\"id\\\" to pay for a future expense and move it to the list of past expenses\");","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"bye to exit the program\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"quanganh2810"},"content":"     * Print the Horizontal Line that seperates between different user Inputs","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"quanganh2810"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"        for (int i \u003d 0; i \u003c\u003d 80; i++) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"quanganh2810"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"quanganh2810"},"content":"        System.out.println();","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"quanganh2810"},"content":"     * Print the message for user to signal that Duke cannot understand the input","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"waiter-palypoo"},"content":"    public static void printFalseInput() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Sorry Duke could not understand your input :\u003e please follow the instructions\");","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"        System.out.println();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"quanganh2810"},"content":"        printInstructions();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"quanganh2810"},"content":"     * Print the Greeting when Duke is started","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"quanganh2810"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"        String logo \u003d \"___  ___                      ___  ___          _\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"                      + \"|  \\\\/  |                      |  \\\\/  |         | |\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"                      + \"| .  . | ___  _ __   ___ _   _| .  . | __ _ ___| |_ ___ _ __\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"                      + \"| |\\\\/| |/ _ \\\\| \u0027_ \\\\ / _ \\\\ | | | |\\\\/| |/ _` / __| __/ _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"                      + \"| |  | | (_) | | | |  __/ |_| | |  | | (_| \\\\__ \\\\ ||  __/ |\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"                      + \"\\\\_|  |_/\\\\___/|_| |_|\\\\___|\\\\__, \\\\_|  |_/\\\\__,_|___/\\\\__\\\\___|_|\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"                      + \"                         __/ |\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"                      + \"                        |___/\";","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"What can I do for you ?\");","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"quanganh2810"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"quanganh2810"},"content":"        printInstructions();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"quanganh2810"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"quanganh2810"},"content":"     * Print the Goodbye message when user exits Duke","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Thanks for using Duke! See ya!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\" /\\\\_/\\\\  \");","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"( o.o ) \");","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\" \u003e ^ \u003c  \");","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"quanganh2810"},"content":"    public static void printChoice() {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Which of the following category is this expense? Input a single number!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"1. Food \u0026 Drinks\");","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"2. Shopping\");","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"3. Transportation\");","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"4. Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"5. Investments\");","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"6. Communication \u0026 Technology\");","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"7. Others\");","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":9,"waiter-palypoo":7,"quanganh2810":63,"WilsonOh":11}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"class ParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    public void addExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"        String actualOutput \u003d expenseManager.get(0).toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"    public void deleteExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"        testExpenses.remove(0);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"        Parser.executeDeleteExpense(expenseManager, \"delete expense id/1\");","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"        assertEquals(testExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"victorouy"},"content":"    public void editExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"victorouy"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"victorouy"},"content":"        InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"victorouy"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"50\".getBytes());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"victorouy"},"content":"        System.setIn(in);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"victorouy"},"content":"        Parser.executeEditExpense(expenseManager, \"edit expense Movie id/1 in/amount\");","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"victorouy"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"victorouy"},"content":"        toAdd.setAmount(50);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"victorouy"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"victorouy"},"content":"    public void listExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"victorouy"},"content":"        Expense toAddFirst \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"        Expense toAddSecond \u003d new Expense(\"Chicken\", 10, date, \"Food \u0026 Drinks\");","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAddFirst);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAddSecond);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Chicken $/10 d/20220101\", expenseManager, 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"victorouy"},"content":"        assertEquals(testExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"    public void setBalance_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(5000);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"victorouy"},"content":"        Parser.executeSetBudget(expenseManager, \"set balance $/5000\");","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"victorouy"},"content":"        assertEquals(5000, expenseManager.getTotalBalance());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"victorouy"},"content":"    public void addFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cFutureExpense\u003e testExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"victorouy"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.getFutureExpense(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"victorouy"},"content":"    public void deleteFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cFutureExpense\u003e testExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"victorouy"},"content":"        testExpenses.remove(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"victorouy"},"content":"        Parser.executeDeleteFutureExpense(expenseManager, \"delete future expense id/1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"victorouy"},"content":"        assertEquals(testExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"victorouy"},"content":"    public void editFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cFutureExpense\u003e testExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"victorouy"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"victorouy"},"content":"        InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"victorouy"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"50\".getBytes());","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"        System.setIn(in);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"victorouy"},"content":"        Parser.executeEditFutureExpense(expenseManager, \"edit future expense Movie id/1 in/amount\");","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"victorouy"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"victorouy"},"content":"        toAdd.setAmount(50);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"victorouy"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.getFutureExpense(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"varnika1402":35,"WilsonOh":2,"victorouy":89}}]
