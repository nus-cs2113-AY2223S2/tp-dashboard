[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"  options.release \u003d 11","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClass \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2022-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"    archiveBaseName \u003d \"tp\"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"jar {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"  manifest {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"    attributes(\"Main-Class\": \"seedu.duke.Duke\")","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"  }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"  from {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"  }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"-":45,"WilsonOh":15}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/basic.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        IMPORT CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        An import statement is redundant if:","lastModifiedDate":"2022-04-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2022-04-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2022-04-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2022-04-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for unused import statements.","lastModifiedDate":"2022-04-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        An import statement is unused if:","lastModifiedDate":"2022-04-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          It\u0027s not referenced in the file.","lastModifiedDate":"2022-04-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"        \u003cmodule name\u003d\"AvoidStarImport\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"            \u003cproperty name\u003d\"excludes\" value\u003d\"java.io,java.net,java.lang.Math,org.junit.Assert,org.junit.jupiter.api.Assertions\"/\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"        \u003c/module\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NAMING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                     value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        LENGTH and CODING CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2022-04-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2022-04-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            the same line. e.g., the following example is fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              } else","lastModifiedDate":"2022-04-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \u003c!-- This next example is not fine:","lastModifiedDate":"2022-04-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003cpre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              if {","lastModifiedDate":"2022-04-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                ...","lastModifiedDate":"2022-04-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"              }","lastModifiedDate":"2022-04-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              else","lastModifiedDate":"2022-04-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003c/pre\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            if (true) return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (true) { return 1; } // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            else if {","lastModifiedDate":"2022-04-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"              return 1; // else if should always be multi line","lastModifiedDate":"2022-04-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            if (true)","lastModifiedDate":"2022-04-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"              return 1; // Not allowed","lastModifiedDate":"2022-04-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2022-04-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2022-04-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2022-04-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2022-04-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-04-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                      value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ORDER CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2022-04-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"             @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2022-04-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2022-04-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2022-04-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"          3. Constructors","lastModifiedDate":"2022-04-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          4. Methods","lastModifiedDate":"2022-04-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2022-04-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                 8.4.3.  The prescribed order is:","lastModifiedDate":"2022-04-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                 public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2022-04-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                 synchronized, native, strictfp","lastModifiedDate":"2022-04-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"              --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        WHITESPACE CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        \u003c!--","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        JAVADOC CHECKS","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        \u003c!-- Checks the Javadoc\u0027s format for every method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":286,"WilsonOh":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Nguyen Quang Anh | [Github](https://github.com/quanganh2810) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"\u003cimg width\u003d\"100\" src\u003dhttps://user-images.githubusercontent.com/87934749/230631963-123606fc-7ff1-44bb-a3c3-5b2409482ce4.png /\u003e | Wilson Oh | [Github](https://github.com/WilsonOh) | [Portfolio](https://ay2223s2-cs2113-w13-4.github.io/tp/team/wilsonoh.html)","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Goh Jing Hong| [Github](https://github.com/waiter-palypoo) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Victor Ouy | [Github](https://github.com/victorouy) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Varnika Srivastava | [Github](https://github.com/varnika1402) | [Portfolio](https://ay2223s2-cs2113-w13-4.github.io/tp/team/varnika.html)","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"varnika1402":1,"quanganh2810":3,"-":4,"WilsonOh":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"## Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"+ [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"+ [Design](#design)","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"    * [Parser Component](#parser-component)","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"    * [UI Component](#ui-component)","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"    * [Storage Component](#storage-component)","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"    * [ExpenseManager Component](#expensemanager-component)","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"+ [Implementation](#implementation)","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"+ [Product Scope](#product-scope)","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"    * [Target User Profile](#target-user-profile)","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    * [Value Proposition](#value-proposition)","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"+ [User Stories](#user-stories)","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"+ [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"+ [Glossary](#glossary)","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"+ [Instructions for Manual Testing](#instructions-for-manual-testing)","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"{list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"original source as well}","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"## Design","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"### Architecture","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"### Parser Component","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"The `Parser` class handles the parsing of user input, executing the appropriate tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"or throwing relevant errors.","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"* `Parser` first receives user input from `Duke` through `Parser::handleCmd`","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"* Depending on the command given, `Parser` will then execute the command on the `ExpenseManager`instance, or throw a `DukeException`, which will be caught by `Duke`","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"#### **Sequence Diagram**","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"\u003cimg alt\u003d\"parser sequence diagram\" src\u003d\"diagrams/parser.png\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"### UI Component","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"The API of this component is specified in Ui.java \\","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"The Ui class contains several static methods which display messages to the user when the user interacts with program.\\","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"Types of messages displayed:","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"+ Instructions: Information message that describes the list of all commands of the application.","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"+ Greeting Messages: Messages shown to greet the user and acknowledge their exit.","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"varnika1402"},"content":"+ Error Messages: Messages shown to inform the user that their input is invalid.","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"+ Category Choice: Displays category choices of expense to the user. \\","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"  The class also prints text such as lines and the formatted list.","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"\u003cimg alt\u003d\"ui class diagram\" src\u003d\"diagrams/UiComponentClassDiagram.png\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"### Storage Component","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"\u003cimg alt\u003d\"storage sequence diagram\" src\u003d\"diagrams/storage.png\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"The `Storage` class handles the validation and creation of the `duke_data.txt` file, which contains all the necessary","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"data regarding the user\u0027s budget and expenses.","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"#### Sequence Explanation","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"* Upon creation of the `Storage` object, the constructor first checks whether the directory and file","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"  `${CWD}/data/duke_data.txt` exists, and creates them otherwise.","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"* Before entering the main loop, `Duke` will first call `Storage::loadDataExpenses()`, which reads from `duke_data.txt`","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"quanganh2810"},"content":"  and initializes and *returns* a `ExpenseManager` object containing the budget, `Expenses` and `FutureExpenses` from","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"quanganh2810"},"content":"  the data file.","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"* Duke then uses the returned `ExpenseManager` object for the current session","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"quanganh2810"},"content":"* After every command, `Duke` will then call `Storage::saveExpenses(ExpenseManager)`, which serializes the current state","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"quanganh2810"},"content":"  of","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"  the `ExpenseManager` and writes the serialized data into `duke_data.txt`, making sure that the latest state of the app","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"quanganh2810"},"content":"  is always saved.","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"### ExpenseManager Component","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"The `ExpenseManager` class keeps track of the list of the class `Expense` and `FutureExpense` as well as","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"the `TotalBudget`. The class also contains methods that involve the creating, editing, listing of these items.","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"\u003cimg alt\u003d\"ExpenseManager class diagram\" src\u003d\"diagrams/ExpenseManagerClassDiagram.png\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"## Implementation","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"### Delete Expenses","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"Delete past and future expenses feature is facilitated by the `Parser`, `ExpenseManager` and `Expense` and `FutureExpense` classes.\\","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"The delete command is used to delete the past and future expenses from the ArrayList `expense` and `future expense` respectively and updates the total balance accordingly.\\","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"varnika1402"},"content":"The sequence in which the `Parser` class handles the `delete expense` command is as follows:","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"1. Assume the user has already added an expense and wants to delete that expense with expense_id 1 using the command: \"delete expense id/1\"","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"varnika1402"},"content":"2. The user input is sent to the `Parser` class which calls the `executeDeleteExpense` method based on the user command.","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"3. The method then extracts the necessary fields from the user command and removes a expense object using the method `remove` from the `ExpenseManager` class if the expense id is a valid expense id in the list.","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"varnika1402"},"content":"4. The total balance is also updated using `setTotalBalance` method in `ExpenseManager` class.","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"varnika1402"},"content":"5. If the deletion was a success, a message will be printed through `executeDeleteExpense` in `Parser` class to notify the user that the expense object has been deleted.\\","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"varnika1402"},"content":"The implementation of `delete future expense` is similar to `delete expense` command as described above.","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"The sequence diagram below illustrates this delete mechanism: ","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"\u003cimg alt\u003d\"delete sequence diagram\" src\u003d\"diagrams/delete.png\" /\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"WilsonOh"},"content":"---","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"waiter-palypoo"},"content":"### Pay Future Expenses","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"waiter-palypoo"},"content":"#### Description","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"waiter-palypoo"},"content":"The pay future expenses feature is accessed by the `pay` command which is handled by the `Parser` class which calls a ","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"waiter-palypoo"},"content":"method in the`ExpenseManager` class and allows the user to set a `FutureExpense` as paid, thereby removing it from the","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"waiter-palypoo"},"content":"`futureExpenses` list and adding it to the `expenses` list.","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"waiter-palypoo"},"content":"The sequence in which the `pay` command is handled and processed is as follows.","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"waiter-palypoo"},"content":"1. The user input is sent to the `Parser` class which determines the index of the `futureExpense` in `futureExpenses` to","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"waiter-palypoo"},"content":"be paid for.","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"waiter-palypoo"},"content":"2. The `Parser` class calls the `payFutureExpense` method in the `ExpenseManager` class and passes the index into it.","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"waiter-palypoo"},"content":"3. The `payFutureExpense` method extracts the `name`, `amt`, and `category` attributes from the `futureExpense` then","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"waiter-palypoo"},"content":"constructs a new `expense` with identical attributes and adds it to the `expenses` list.","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"waiter-palypoo"},"content":"4. The selected `futureExpense` is removed from the `futureExpenses` list.","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"WilsonOh"},"content":"### Set Currency","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"WilsonOh"},"content":"#### Description","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"WilsonOh"},"content":"The `set currency` feature allows users to set the currency used by the app in various operations such as `list expenses`,","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"WilsonOh"},"content":"`add expense`, `check balance` etc.","lastModifiedDate":"2023-04-08"},{"lineNumber":118,"author":{"gitId":"WilsonOh"},"content":"#### CurrencyLoader","lastModifiedDate":"2023-04-08"},{"lineNumber":119,"author":{"gitId":"WilsonOh"},"content":"The list of exchange rates for the currencies **_against SGD_** are stored in a text file at `${PROJECT_ROOT}/src/main/resources/exchange_rates.txt`.","lastModifiedDate":"2023-04-08"},{"lineNumber":120,"author":{"gitId":"WilsonOh"},"content":"The list is hardcoded for the current version of the app in order to reduce complexity of the implementation, but  it should serve the users well enough","lastModifiedDate":"2023-04-08"},{"lineNumber":121,"author":{"gitId":"WilsonOh"},"content":"bar a drastic change in the exchange rates.","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"WilsonOh"},"content":"The currencies are loaded into the app through a _singleton_ class `CurrencyLoader`. Upon initialization of a `CurrencyLoader`","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"WilsonOh"},"content":"instance, the `exchange_rates.txt` file is read and then stored in the form of a `HashMap\u003cString, Double\u003e`, where the key is","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"WilsonOh"},"content":"\"SGD\", \"USD\", \"MYR\" etc. A singleton class is chosen for this feature in order to limit the reading of the `exchange_rates.txt`","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"WilsonOh"},"content":"file to only once as the file is static.","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"WilsonOh"},"content":"#### Getting the converted prices","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"WilsonOh"},"content":"Each class in the project (`Parser`, `ExpenseManager`, `Expense` etc.) will have access to the `CurrencyLoader` instance,","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"WilsonOh"},"content":"from which they can call `CurrencyLoader::getRate($CURRENCY)` in order to get the exchange rate for a currency. Then when","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"WilsonOh"},"content":"the user calls `set currency`, the `ExpenseManager` will call `Expense::setCurrency` for all its `Expense`s. Then when the","lastModifiedDate":"2023-04-08"},{"lineNumber":131,"author":{"gitId":"WilsonOh"},"content":"user calls `list expenses` or something, the price listed out will be `Expense.amount * CurrencyLoader.getRate(Expense.currency)`.","lastModifiedDate":"2023-04-08"},{"lineNumber":132,"author":{"gitId":"WilsonOh"},"content":"This way, all the prices for the expenses are kept (and normalized) to SGD, while its string representation is takes into account","lastModifiedDate":"2023-04-08"},{"lineNumber":133,"author":{"gitId":"WilsonOh"},"content":"the currency set. The same goes for `FutureExpenses` and `balance` as well.","lastModifiedDate":"2023-04-08"},{"lineNumber":134,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"WilsonOh"},"content":"\u003cimg alt\u003d\"set currency sequence diagram\" src\u003d\"diagrams/setCurrency.png\" /\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"## Product scope","lastModifiedDate":"2020-05-24"},{"lineNumber":138,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Target user profile","lastModifiedDate":"2020-05-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":141,"author":{"gitId":"quanganh2810"},"content":"Our target user profile are people who want to be financially responsible and want to keep a track of their spending to","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"quanganh2810"},"content":"make informed financial decisions. The users include students, small business owners etc. who are interested in managing","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"quanganh2810"},"content":"their finances efficiently.","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":147,"author":{"gitId":"quanganh2810"},"content":"Money master provides a fast and streamlined way for users to manage their finances. It helps the user manage their","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"quanganh2810"},"content":"finances quickly and efficiently by providing a convenient way to track their daily expenses. It allows the user to","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"quanganh2810"},"content":"create and track their budgets to prevent overspending and adjusting their expenses accordingly.","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## User Stories","lastModifiedDate":"2020-05-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"| Version | As a ...              | I want to ...                                       | So that I can ...                                                                      |","lastModifiedDate":"2020-05-24"},{"lineNumber":154,"author":{"gitId":"varnika1402"},"content":"|---------|-----------------------|-----------------------------------------------------|----------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"varnika1402"},"content":"| v1.0    | budgeted student      | set a budget limit from which expenses are deducted | track my expenses and avoid overrunning my budget                                      |","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"varnika1402"},"content":"| v1.0    | new user              | add expenses                                        | plan my my expenditure based on the remaining budget                                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"varnika1402"},"content":"| v1.0    | forgetful user        | view my expenses                                    | remove incorrect or outdated entries from my transaction history                       |","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"varnika1402"},"content":"| v1.0    | careless user         | edit my expenses                                    | modify or correct the entries in my transaction history                                |","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"varnika1402"},"content":"| v1.0    | careless user         | delete my expenses                                  | remove incorrect or outdated entries from my transaction history                       |","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"varnika1402"},"content":"| v1.0    | responsible user      | sort my expenses by date, name or amount            | have a clear timeline of how my budget has changed from the past to now                |","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"| v1.0    | responsible user      | add future payments                                 | budget accordingly based on expenses that will happen later on                         |","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"varnika1402"},"content":"| v1.0    | careless user         | edit future payments                                | modify or correct the entries of my upcoming expenses                                  |","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"varnika1402"},"content":"| v1.0    | careless user         | delete future payments                              | remove incorrect entries from my upcoming expenses                                     |","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"varnika1402"},"content":"| v1.0    | responsible user      | view upcoming expenses within a period              | stay informed of the upcoming expenses within that time period and budget accordingly  |","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"varnika1402"},"content":"| v1.0    | responsible user      | pay future payments                                 | complete future payments and add the expenses to transaction history                   |","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"varnika1402"},"content":"| v1.0    | responsible user      | remain informed of the remaining budget             | complete my future payments by managing other expenses                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"varnika1402"},"content":"| v2.0    | responsible user      | view my expenditure across different categories     | see which category is taking up the most budget                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"varnika1402"},"content":"| v2.0    | international student | use the app in my home currency                     | conveniently make calculations                                                         |","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"varnika1402"},"content":"| v2.0    | responsible user      | filter expenses by price                            | easily check which expenses cost more than $X amount, which can help with my budgeting |","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"## Non-Functional Requirements","lastModifiedDate":"2020-05-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":173,"author":{"gitId":"varnika1402"},"content":"1. Program should work on any operating system supporting Java 11 or above.","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"2. Does not require an active connection to the Internet to use the application.","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"varnika1402"},"content":"3. Program should be accessible to users with no prior programming experience.","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"varnika1402"},"content":"4. Program data will be saved persistently.","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"quanganh2810"},"content":"5. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"quanganh2810"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2020-05-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* *glossary item* - Definition","lastModifiedDate":"2020-05-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":184,"author":{"gitId":"varnika1402"},"content":"## Instructions for Manual Testing","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"varnika1402"},"content":"### Launch","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"varnika1402"},"content":"1. Download the JAR file and move it into an empty folder.","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"quanganh2810"},"content":"2. On a command line application, change the current working directory to the same folder as the JAR file and run the","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"quanganh2810"},"content":"   app using:\\","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"varnika1402"},"content":"   `java -jar tp.jar`","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"varnika1402"},"content":"3. Expected: The app\u0027s welcome message is printed onto the terminal along with list of all commands.","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"varnika1402"},"content":"### Add","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":196,"author":{"gitId":"varnika1402"},"content":"#### Add past expense","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":198,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid date is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"varnika1402"},"content":"    - Date is entered in the format: yyyymmdd","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"varnika1402"},"content":"   `add expense book $/100 d/20230101`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"quanganh2810"},"content":"   Expected: Terminal shows choose category message. Enter a category number. Expense entry is added. Terminal shows","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"quanganh2810"},"content":"   successful message along with expenditure details (name, amount, date, category).","lastModifiedDate":"2023-03-31"},{"lineNumber":206,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"varnika1402"},"content":"#### Add future expense","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":209,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid date is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"varnika1402"},"content":"    - Date is entered in the format: yyyymmdd","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"varnika1402"},"content":"   `add future expense bill $/200 d/20230505`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"quanganh2810"},"content":"   Expected: Terminal shows choose category message. Enter a category number. Expense entry is added. Terminal shows","lastModifiedDate":"2023-03-31"},{"lineNumber":216,"author":{"gitId":"quanganh2810"},"content":"   successful message along with expenditure details (name, date, category).","lastModifiedDate":"2023-03-31"},{"lineNumber":217,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"varnika1402"},"content":"#### Entering incomplete information","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":220,"author":{"gitId":"varnika1402"},"content":"Test case: `add expense book $/100` or `add expense book d/20220101` or `add expense book`\\","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal shows error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"varnika1402"},"content":"### Delete","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"varnika1402"},"content":"#### Delete past expense","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":227,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid expense id is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"varnika1402"},"content":"   `delete expense id/1`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"quanganh2810"},"content":"   Expected: Expense entry is deleted. Terminal shows successful message along with expenditure details (name, amount,","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"quanganh2810"},"content":"   date, category).","lastModifiedDate":"2023-03-31"},{"lineNumber":234,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"varnika1402"},"content":"#### Delete future expense","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":237,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid future expense id is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"varnika1402"},"content":"   `delete future expense id/1`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"quanganh2810"},"content":"   Expected: Expense entry is deleted. Terminal shows successful message along with expenditure details (name, date,","lastModifiedDate":"2023-03-31"},{"lineNumber":243,"author":{"gitId":"quanganh2810"},"content":"   category).","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"varnika1402"},"content":"#### Entering incomplete information","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"varnika1402"},"content":"Test case: `delete expense` or `delete expense id/12`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal shows error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"varnika1402"},"content":"### Edit","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"varnika1402"},"content":"#### Edit past expense","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid expense id is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid date is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"varnika1402"},"content":"    - Date is entered in the format: yyyymmdd","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"varnika1402"},"content":"   `edit expense id/1 in/\"amount/date/category\"`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"varnika1402"},"content":"   Enter type of the field to edit in the above format. \\","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"quanganh2810"},"content":"   Expected: Terminal shows message to enter the information for the chosen field to edit. Successful message is shown","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"quanganh2810"},"content":"   on entering the information.","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"varnika1402"},"content":"#### Edit future expense","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid expense id is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid date is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"varnika1402"},"content":"    - Date is entered in the format: yyyymmdd","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"varnika1402"},"content":"   `edit future expense id/1 in/\"amount/date/category\"`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"varnika1402"},"content":"   Enter type of the field to edit in the above format. \\","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"quanganh2810"},"content":"   Expected: Terminal shows message to enter the information for the chosen field to edit. Successful message is shown","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"quanganh2810"},"content":"   on entering the information.","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"varnika1402"},"content":"### List","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"varnika1402"},"content":"#### List past expense","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":284,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"varnika1402"},"content":"`list expenses`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"quanganh2810"},"content":"Expected: Terminal shows message to enter the number associated with the sorting type of expenses (by date/name/amount).","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"quanganh2810"},"content":"List of expenses is displayed based on the entered sorting type. If expense list is empty, terminal displays required","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"quanganh2810"},"content":"message.","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"varnika1402"},"content":"#### List future expense","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"varnika1402"},"content":"`list future expenses`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"quanganh2810"},"content":"Expected: Terminal shows list of upcoming payments with the total amount due and current balance. A warning message is","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"quanganh2810"},"content":"displayed if the balance is insufficient.","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"varnika1402"},"content":"### Balance","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"varnika1402"},"content":"#### Set balance","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"varnika1402"},"content":"   `set balance $/2000`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"varnika1402"},"content":"   Expected: Terminal shows successful message.","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"varnika1402"},"content":"#### Check balance","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"varnika1402"},"content":"`check balance`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal shows remaining balance.","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"varnika1402"},"content":"#### Entering incomplete information","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"varnika1402"},"content":"Test case: `set balance`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal shows error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"varnika1402"},"content":"### Upcoming Expenses","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"varnika1402"},"content":"#### Check upcoming expenses","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"varnika1402"},"content":"`check upcoming expenses`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"quanganh2810"},"content":"Expected: Terminal shows message to choose period of upcoming expenses. Upcoming payments for the entered time period","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"quanganh2810"},"content":"are displayed with the total amount due and current balance. A warning message is displayed if the balance is","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"quanganh2810"},"content":"insufficient.","lastModifiedDate":"2023-03-31"},{"lineNumber":328,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"varnika1402"},"content":"#### Pay upcoming expenses","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid future expense id is entered","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"varnika1402"},"content":"   `pay 1`\\","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"varnika1402"},"content":"   Expected: Terminal shows successful message. The paid future expense is added to list of past expenses.","lastModifiedDate":"2023-03-27"},{"lineNumber":337,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"varnika1402"},"content":"### Currency","lastModifiedDate":"2023-03-31"},{"lineNumber":339,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":340,"author":{"gitId":"varnika1402"},"content":"#### Set currency","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":342,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"varnika1402"},"content":"    - Ensure that a valid currency symbol is entered","lastModifiedDate":"2023-03-31"},{"lineNumber":344,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-31"},{"lineNumber":345,"author":{"gitId":"varnika1402"},"content":"   `set currency USD`\\","lastModifiedDate":"2023-03-31"},{"lineNumber":346,"author":{"gitId":"varnika1402"},"content":"   Expected: Terminal shows successful message. ","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":348,"author":{"gitId":"varnika1402"},"content":"#### Get currency","lastModifiedDate":"2023-03-31"},{"lineNumber":349,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":350,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-31"},{"lineNumber":351,"author":{"gitId":"varnika1402"},"content":"`get currency`\\","lastModifiedDate":"2023-03-31"},{"lineNumber":352,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal shows the currently set currency.","lastModifiedDate":"2023-03-31"},{"lineNumber":353,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":354,"author":{"gitId":"varnika1402"},"content":"### List expenditure by category","lastModifiedDate":"2023-03-31"},{"lineNumber":355,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"varnika1402"},"content":"Test case:","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"varnika1402"},"content":"`list expenditure by category`\\","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"varnika1402"},"content":"Expected: Terminal displays the total expenditure across all categories.","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":360,"author":{"gitId":"varnika1402"},"content":"### Filter expenses","lastModifiedDate":"2023-03-31"},{"lineNumber":361,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":362,"author":{"gitId":"varnika1402"},"content":"#### Expenses above an amount","lastModifiedDate":"2023-03-31"},{"lineNumber":363,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-31"},{"lineNumber":364,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-31"},{"lineNumber":365,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-31"},{"lineNumber":367,"author":{"gitId":"varnika1402"},"content":"   `expenses above $/150`\\","lastModifiedDate":"2023-03-31"},{"lineNumber":368,"author":{"gitId":"varnika1402"},"content":"   Expected: Terminal displays all expenses of amount greater than the entered amount.","lastModifiedDate":"2023-03-31"},{"lineNumber":369,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":370,"author":{"gitId":"varnika1402"},"content":"#### Expenses below an amount","lastModifiedDate":"2023-03-31"},{"lineNumber":371,"author":{"gitId":"varnika1402"},"content":"1. Prerequisites:","lastModifiedDate":"2023-03-31"},{"lineNumber":372,"author":{"gitId":"varnika1402"},"content":"    - Ensure all fields are entered","lastModifiedDate":"2023-03-31"},{"lineNumber":373,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":374,"author":{"gitId":"varnika1402"},"content":"2. Test case:","lastModifiedDate":"2023-03-31"},{"lineNumber":375,"author":{"gitId":"varnika1402"},"content":"   `expenses below $/2000`\\","lastModifiedDate":"2023-03-31"},{"lineNumber":376,"author":{"gitId":"varnika1402"},"content":"   Expected: Terminal displays all expenses of amount lower than the entered amount.","lastModifiedDate":"2023-03-31"},{"lineNumber":377,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":378,"author":{"gitId":"varnika1402"},"content":"### Shutdown","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"varnika1402"},"content":"After the testing is done, type the command `bye` to exit the program\\","lastModifiedDate":"2023-03-27"},{"lineNumber":381,"author":{"gitId":"varnika1402"},"content":"Terminal will display a goodbye message and the application would close in the command-line interface.","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"varnika1402":236,"waiter-palypoo":14,"quanganh2810":69,"-":23,"WilsonOh":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"Money Master is a Command Line Interface (CLI) based desktop application which will help the user track and manage their expenses quickly and effectively.","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"+ [Quick Start](#quick-start)","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"+ [Features](#features)","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"    + [Add Expense: `add expense`](#add-expense--add-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"    + [Edit Expense: `edit expense`](#edit-expense--edit-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"    + [Delete Expense: `delete expense`](#delete-expense--delete-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    + [Set Balance: `set balance`](#set-balance--set-balance)","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"    + [List Expenses: `list expenses`](#list-expenses--list-expenses)","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"    + [List Expenditure by Category: `list expenditure by category`](#list-expenditure-by-category--list-expenditure-by-category)","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    + [Filter Expenses `expenses above` / `expenses below`](#)","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    + [Check Balance: `check balance`](#check-balance--check-balance)","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    + [Currency: `set currency` / `get currency`](#currency--set-currency--get-currency)","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"    + [Add Future Expense: `add future expense`](#add-expense--add-future-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"    + [Edit Future Expense: `edit future expense`](#edit-expense--edit-future-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    + [Delete Future Expense: `delete future expense`](#delete-future-expense--delete-future-expense)","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"    + [List Future Expenses `list future expenses`](#list-expenses--list-future-expenses)","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    + [Check Upcoming Expenses: `check upcoming expenses`](#check-upcoming-expenses--check-upcoming-expenses)","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"    + [Pay Future Expenses: `pay`](#pay-future-expenses--pay)","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    + [Exit the Application: `bye`](#exit-application--bye)","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"+ [FAQ](#faq)","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"+ [Command Summary](#command-summary)","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"2. Download the latest version of Money Master from [here](https://github.com/AY2223S2-CS2113-W13-4/tp/releases).","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"3. Put the JAR file into an empty folder.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"4. Open a command window and change the current working directory to the directory that the JAR file is located in using the following command:","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"cd [PATH_TO_JAR_DIRECTORY]","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"5. Run Money Master Applicatiom","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"java -jar tp.jar","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"### List Expenses: `list expenses`","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"Run the command followed by choosing what to sort the expenses by","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"#### Sort the listed expenses:","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"* By Date Added","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"* By Name","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"* By Price","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"---","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"### Currency: `set currency` / `get currency`","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"Set/get the currency used by the app","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"#### Usage:","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"set currency {USD/MYR/CAD etc.}","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"---","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"### Edit Expense: `edit expense`","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"#### Usage:","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"edit expense id/ID in/(amount|date|category)","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"Upon entering the command, a prompt will be given for the user to enter the new value","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"#### Examples:","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"edit expense id/2 in/amount","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"edit expense id/3 in/category","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":"#### Expected Output","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"edit expense id/1 in/amount","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"Enter a new amount spent! Just enter a number!","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"WilsonOh"},"content":"200","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"Change in amount successful! Balance has also been recalculated","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"```","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"WilsonOh"},"content":"---","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"### Delete Expense: `delete expense`","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"Deletes an expense from the current list of expenses.","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"**Format:** `delete expense id/EXPENSE_ID`","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"* Deletes the expense according to its id in the expense list.","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"* \u0027EXPENSE_ID\u0027 must be an integer starting from 1.","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"* Out of bounds \u0027EXPENSE_ID\u0027 will result in an error message","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"`delete expense id/1`","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"varnika1402"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"varnika1402"},"content":"Noted. I\u0027ve removed this expense:","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"Spent $150.0 on book in the Others category on 2023-02-01","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"### List Expenditure by Category: `list expenditure by category`","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"varnika1402"},"content":"Lists the total expenditure across different categories.","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"**Format:** `list expenditure by category`","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"**Example:**","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"varnika1402"},"content":"`list expenditure by category`","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"varnika1402"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"Food \u0026 Drinks - $100.0","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"varnika1402"},"content":"Others - $0.0","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"varnika1402"},"content":"Investments - $0.0","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"varnika1402"},"content":"Transportation - $0.0","lastModifiedDate":"2023-03-31"},{"lineNumber":113,"author":{"gitId":"varnika1402"},"content":"Communication \u0026 Technology - $2000.0","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"varnika1402"},"content":"Shopping - $0.0","lastModifiedDate":"2023-03-31"},{"lineNumber":115,"author":{"gitId":"varnika1402"},"content":"Life \u0026 Entertainment - $0.0","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"--------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":117,"author":{"gitId":"varnika1402"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":127,"author":{"gitId":"varnika1402"},"content":"* Add expense `add expense NAME $/AMOUNT d/DATE`","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"varnika1402"},"content":"* Edit expense `edit expense id/EXPENSE_ID in/\"AMOUNT/DATE/CATEGORY\"`","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"varnika1402"},"content":"* Delete expense `delete expense id/EXPENSE_ID`","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"varnika1402"},"content":"* Set balance `set balance $/AMOUNT`","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"varnika1402"},"content":"* List expenses `list expenses`","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"varnika1402"},"content":"* List expenditure across categories `list expenditure by category`","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"varnika1402"},"content":"* Filter expenses by amount `expenses above $/AMOUNT` / `expenses below $/AMOUNT`","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"varnika1402"},"content":"* Check balance `check balance`","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"varnika1402"},"content":"* Set currency `set currency CURRENCY_SYMBOL`","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"varnika1402"},"content":"* Get currency `get currency`","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"varnika1402"},"content":"* Add future expense `add future expense NAME $/AMOUNT d/DATE`","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"varnika1402"},"content":"* Edit future expense `edit future expense id/EXPENSE_ID in/\"AMOUNT/DATE/CATEGORY\"`","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"* Delete future expense `delete future expense id/EXPENSE_ID`","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"varnika1402"},"content":"* List future expenses `list future expenses`","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"varnika1402"},"content":"* Check upcoming expenses `check upcoming expenses`","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"varnika1402"},"content":"* Pay future expense `pay EXPENSE_ID`","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"varnika1402"},"content":"* Exit application `bye`","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"varnika1402":85,"-":25,"WilsonOh":33}},{"path":"docs/diagrams/UiComponentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"!pragma layout smetana","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"hide circle","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"class Duke {","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"    + main(args: String[])","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"class Ui {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    +printInstructions()","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"    +printHorizontalLines()","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"    +getFormattedList(ArrayList\u003cExpense\u003e expenses): String[]","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    +printLines()","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    +printFalseInput()","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    +printGreeting()","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"    +printGoodbye()","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"    +printChoice()","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"Duke -- Ui : uses \u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"@enduml","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"varnika1402":22,"WilsonOh":3}},{"path":"docs/diagrams/delete.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"actor User","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"participant \":ExpenseManager\" as ExpenseManager","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"participant \":Expense\" as Expense","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"activate Duke","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"Duke -\u003e Parser: handleCmd()","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"activate Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"Parser -\u003e Parser: executeDeleteExpense","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"activate Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"Parser -\u003e ExpenseManager: get(id:int)","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"activate ExpenseManager","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"ExpenseManager --\u003e Parser: deletedExpense: Expense","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"Parser -\u003e Expense: getAmount()","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"activate Expense","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"Expense --\u003e Parser: amount: double","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"deactivate Expense","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"destroy Expense","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"Parser -\u003e ExpenseManager: setTotalBalance(updatedBalance:double)","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"ExpenseManager --\u003e Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"Parser -\u003e ExpenseManager: remove(id:int)","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"ExpenseManager --\u003e Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"deactivate ExpenseManager","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"destroy ExpenseManager","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"Parser --\u003e Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"deactivate Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"Parser --\u003e Duke","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"deactivate Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"destroy Parser","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"varnika1402":36}},{"path":"docs/diagrams/parser.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"User -\u003e Duke","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"Duke -\u003e Parser: handleCmd()","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"activate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"alt edit expense","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e Parser: Execute edit expense","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"else add expense","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e Parser: Execute add expense","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"else delete expense","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e Parser: Execute delete expense","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"else set balance","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e Parser: Execute set balance","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"else get balance","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e ExpenseManager: getTotalBalance()","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    activate ExpenseManager","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    ExpenseManager --\u003e Parser: totalBalance","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    deactivate ExpenseManager","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"else print expenses","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e ExpenseManager: printExpenses()","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"else set currency","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"    Parser -\u003e ExpenseManager: setCurrency()","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"else other commands","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"end","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"Parser --\u003e Duke","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"deactivate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"Duke --\u003e User","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"WilsonOh":31}},{"path":"docs/diagrams/setCurrency.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"@startuml","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"participant \":ExpenseManager\" as ExpenseManager","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"participant \":CurrencyLoader\" as CurrencyLoader","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"participant \":Expense\" as Expense","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"create CurrencyLoader","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"ExpenseManager -\u003e CurrencyLoader: getCurrencyLoader()","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"activate CurrencyLoader","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"return currencyLoaderInstance","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"ExpenseManager -\u003e ExpenseManager: setCurrency(\"USD\")","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"activate ExpenseManager","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"loop for all expenses","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"ExpenseManager -\u003e Expense: setCurrency(\"USD\")","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"end","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"return","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"@enduml","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"WilsonOh":22}},{"path":"docs/diagrams/storage.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"actor User","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"participant \":Duke\" as Duke","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"activate Storage","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"Duke -\u003e Storage: loadDataExpenses()","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"Storage -\u003e Storage: retrieve data from file","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"Storage --\u003e Duke: ExpenseManager","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"deactivate Storage","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"loop while userCmd !\u003d \"bye\"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    User -\u003e Duke: userCmd","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"    activate Duke","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    Duke -\u003e Parser: handleCmd()","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    activate Storage","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    Duke -\u003e Storage: saveExpenses()","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"    Storage -\u003e Storage: write data to file","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"    Storage --\u003e Duke","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"    deactivate Duke","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"    deactivate Storage","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"end","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"WilsonOh":27}},{"path":"docs/team/varnika.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"# Varnika Srivastava\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"## Project: MoneyMaster","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"MoneyMaster is a CLI based desktop application which allows the users to manage ","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"their finances quickly and effectively. It is a finance tracker that allows the users to easily monitor","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"their spending and make informed financial decisions.","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"* **New Feature**: Added the ability delete expenses.","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"    * What it does: Deletes the expenses from the list of expenses based on the expense id entered by the user and updates the balance accordingly.","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"    * Justification: This feature allows the user to remove any expense entry that are no longer used or added by mistake.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"* **New Feature**: Added the ability to view expenditure by category.","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    * What it does: Displays the total amount spent in each category, allowing users to identify which category is utilizing the most budget.","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    * Justification: This feature provides users with insight into their spending patterns and helps them prioritize and optimize their budget accordingly.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dvarnika1402\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"* **Project management**:","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"    * Managed project deadlines and pending tasks.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"    * Implemented tests for add expense, delete expense and list expense by category.","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"  ","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"    * User Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"        * Added documentation for the features `delete` and `list expenditure by category` commands. [#38](https://github.com/AY2223S2-CS2113-W13-4/tp/pull/38)","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"        * Added class diagram and explanation of Ui component. [#32](https://github.com/AY2223S2-CS2113-W13-4/tp/pull/32)","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"        * Added Product Scope, User Stories, Non-Functional Requirements \u0026 Instructions for Manual Testing. [#38](https://github.com/AY2223S2-CS2113-W13-4/tp/pull/38)","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"* **Community**:","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"    * Reported bugs and suggestions for Duke of Books during PE-D: [#73](https://github.com/AY2223S2-CS2113-F10-4/tp/issues/73), [#76](https://github.com/AY2223S2-CS2113-F10-4/tp/issues/76), [#93](https://github.com/AY2223S2-CS2113-F10-4/tp/issues/93)","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"varnika1402":40}},{"path":"docs/team/wilsonoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"# Wilson Oh\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"## Project: MoneyMaster","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"MoneyMaster is a finance tracker which offers a variety of easy to use features which allows","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"you to manage your budget in the most efficient manner. It is a CLI (Command Line Interface)","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"application, and is written in Java.","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"* **New Feature**: Added the ability to list expenses sorted by date, name or amount","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"  * Justification: This feature allows the user to conveniently list their expenses","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"in any way they need","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"  * Extra info on the implementation:","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    * This feature is implemented in a way such that adding new \"keys\" to sort the expenses by is very easy. You simply","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    need to write a new function which takes in a `Arraylist\u003cExpense\u003e` and return a `ArrayList\u003cExpense\u003e` sorted in the","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"    way you want, and then add the function to the `switch` statement.","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"* **New Feature**: Added local storage for the application","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"  * Completeness: The `storage` feature can be considered \"complete\" as our application as of now is simple enough such that","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"  all the necessary data can be stored in a single text file in a format we chose. Information such as the remaining","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"  budget, currency set, and all expenses are being stored and persisted throughout different sessions.","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"  * Looking forward: In the future if we decide to add more complicated features, a more conventional data storage format","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"  should be considered, such as `JSON/YAML/TOML`etc. This is because there are already tons of tried and tested parsing tools","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"  for those file formats, which will make our storage solution standardized, more maintainable and extensible.","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"* **New Feature**: Added ability to set the currency used in the application","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"  * Justification: As this application is meant to used by people all around the world, being able to","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"use the app in the user\u0027s home currency is of utmost importance","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"  * Extra info on the implementation:","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"    * As I did not wish to complicate the implementation of the application too much, the currency rates","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"are currently being hardcoded in a `exchange_rates.txt` file under `src/main/resources`. This has the advantage of not","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"requiring an API key from the user and the latency from fetching the updated list of exchange rates","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"    * The currency feature is implemented in a way such that the underlying expenses and balance is stored","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"    in terms of **SGD**. Only when the user requests to list the expenses or view the current balance, the","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"    price of each expense is then converted to the `currency` set.","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"    * This also means that when the user calls `add expense`, the price of the added expense is first normalized into","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"    **SGD** before being added in.","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"    * The currency is **SGD** by default, and any other currency being set will be stored in local storage so that","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"    it will persist throughout different sessions.","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"* **Code Contributed**: [Repo Sense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dwilsonoh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"* **Project Management**: Managed releases `v1.0` to `v2.1` (3 releases) on GitHub, created issues and assigned tags.","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"* **Documentation**","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"  * Developer Guide:","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"    * Added sequence diagrams and explanations for the `Storage` and `Parser` class","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"    * Added implementaion details and sequence diagram for the `set currency` feature","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"  * User Guide:","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"    * Added instructions for using the `set/get currency` commands","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"    * Added detailed instructions for the `edit currency` command","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"WilsonOh":50}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-8.0-bin.zip","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"networkTimeout\u003d10000","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":4,"WilsonOh":2}},{"path":"src/main/java/seedu/duke/CurrencyLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"public class CurrencyLoader {","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    private static CurrencyLoader instance;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    private HashMap\u003cString, Double\u003e currencies;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    private CurrencyLoader() {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"        HashMap\u003cString, Double\u003e currencies \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        InputStream resourceStream \u003d Duke.class.getClassLoader().getResourceAsStream(\"exchange_rates.txt\");","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        assert resourceStream !\u003d null : \"exchange_rates.txt must be present\";","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(resourceStream));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"        String line;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"WilsonOh"},"content":"                String[] tokens \u003d line.split(\": \");","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"                currencies.put(tokens[0], Double.parseDouble(tokens[1]));","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"            System.err.println(\"error getting exchange_rates\");","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"        this.currencies \u003d currencies;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"    public static CurrencyLoader getCurrencyLoader() {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"            instance \u003d new CurrencyLoader();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"        return instance;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"    public double getRate(String symbol) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"        return this.currencies.get(symbol);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"    public boolean currencyExists(String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"        return this.currencies.containsKey(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"    public HashMap\u003cString, Double\u003e getCurrencies() {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"        return this.currencies;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"WilsonOh":49}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        ExpenseManager expenseManager \u003d storage.loadDataExpenses();","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"        Ui.printGreeting();","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"waiter-palypoo"},"content":"        expenseManager.startupDueDateCheck();","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"quanganh2810"},"content":"        String userCmd \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"        while (!userCmd.equals(\"bye\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"            try {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"                Parser.handleCmd(userCmd, expenseManager);","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"                storage.saveExpenses(expenseManager);","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"                System.out.println(e);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"quanganh2810"},"content":"            userCmd \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"        in.close();","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"        Ui.printGoodbye();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"waiter-palypoo":1,"quanganh2810":7,"-":8,"WilsonOh":10}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"        super(message);","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":7}},{"path":"src/main/java/seedu/duke/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"public class Expense {","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"quanganh2810"},"content":"    private double amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"    private LocalDate date;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"    private String category;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    private String name;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    private String currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    private CurrencyLoader currencyLoader \u003d CurrencyLoader.getCurrencyLoader();","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    public Expense(String name, double amount, LocalDate date, String category, String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"    public Expense(String name, double amount, LocalDate date, String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"quanganh2810"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"quanganh2810"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"WilsonOh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d \"SGD\";","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"quanganh2810"},"content":"    public void setAmount(double amount) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"quanganh2810"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"quanganh2810"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"quanganh2810"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"    public String getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"        return this.name;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"quanganh2810"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"quanganh2810"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"quanganh2810"},"content":"    public double getAmount() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"        return amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"    public void setCurrency(String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"    public String getCurrency() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        return this.currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"quanganh2810"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"quanganh2810"},"content":"        return date;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"quanganh2810"},"content":"    public String getCategory() {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"quanganh2810"},"content":"        return category;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"quanganh2810"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"Spent %.2f %s on %s in the %s category on %s\",","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"                this.amount * currencyLoader.getRate(this.currency), this.currency, this.name,","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":"                this.category, this.date);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"    public String serialize() {","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"%s|%s|%s|%s|%s\", this.getClass().getSimpleName(), this.getName(), this.getAmount(),","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"                this.getCategory(), this.getDate());","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"WilsonOh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"WilsonOh"},"content":"        if (obj instanceof Expense) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"            Expense o \u003d (Expense) obj;","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"            return o.name.equals(this.name) \u0026\u0026 o.amount \u003d\u003d this.amount \u0026\u0026 o.date.equals(this.date) \u0026\u0026","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"WilsonOh"},"content":"                    o.category.equals(this.category);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"WilsonOh"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"quanganh2810":41,"WilsonOh":44}},{"path":"src/main/java/seedu/duke/ExpenseManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"import java.util.*;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"public class ExpenseManager {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"    public static final int SORT_BY_NAME \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"    public static final int SORT_BY_PRICE \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"quanganh2810"},"content":"    private ArrayList\u003cExpense\u003e expenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"waiter-palypoo"},"content":"    private ArrayList\u003cFutureExpense\u003e futureExpenses;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    private Map\u003cString, Double\u003e expenseByCategory;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"    private double totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    private String currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    private CurrencyLoader currencyLoader \u003d CurrencyLoader.getCurrencyLoader();","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    public ExpenseManager(double totalBalance, ArrayList\u003cExpense\u003e expenses, ArrayList\u003cFutureExpense\u003e futureExpenses,","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"                          String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"quanganh2810"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"        this.futureExpenses \u003d futureExpenses;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"        this.expenseByCategory \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"    public ExpenseManager(double totalBalance, ArrayList\u003cExpense\u003e expenses, ArrayList\u003cFutureExpense\u003e futureExpenses,","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"                          Map\u003cString, Double\u003e expenseByCategory, String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"        this.futureExpenses \u003d futureExpenses;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"        this.expenseByCategory \u003d expenseByCategory;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"    public ExpenseManager(double totalBalance, ArrayList\u003cExpense\u003e expenses, ArrayList\u003cFutureExpense\u003e futureExpenses,","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"                          Map\u003cString, Double\u003e expenseByCategory) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d \"SGD\";","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"quanganh2810"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"        this.expenses \u003d expenses;","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"        this.futureExpenses \u003d futureExpenses;","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"        this.expenseByCategory \u003d expenseByCategory;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"    public ArrayList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"        return this.expenses;","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"    public ArrayList\u003cFutureExpense\u003e getFutureExpenses() {","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"        return this.futureExpenses;","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"    public String getCurrency() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        return this.currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"    public void setCurrency(String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"        this.currency \u003d currency;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"            expense.setCurrency(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"        for (FutureExpense expense : futureExpenses) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"            expense.setCurrency(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"WilsonOh"},"content":"    public void addExpense(String name, double amount, LocalDate date, String category) {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"WilsonOh"},"content":"        double normalizedAmount \u003d amount / currencyLoader.getRate(this.currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"WilsonOh"},"content":"        Expense toAdd \u003d new Expense(name.strip(), normalizedAmount, date, category.strip(), this.currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"        Ui.printLines(\"Roger, the following expense has been added!\", toAdd.toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(toAdd);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"quanganh2810"},"content":"        totalBalance -\u003d amount;","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"        expenseByCategory.put(category.strip(), expenseByCategory.getOrDefault(category.strip(), 0.0) + amount);","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"waiter-palypoo"},"content":"    public void addFutureExpense(String name, double amount, LocalDate dueDate, String category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"WilsonOh"},"content":"        double normalizedAmount \u003d amount / currencyLoader.getRate(this.currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"WilsonOh"},"content":"        FutureExpense toAdd \u003d new FutureExpense(name.strip(), normalizedAmount, dueDate, category, this.currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"        Ui.printLines(\"Roger, the following expense has been added!\", toAdd.toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.add(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"waiter-palypoo"},"content":"    public FutureExpense getFutureExpense(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"waiter-palypoo"},"content":"        return futureExpenses.get(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"quanganh2810"},"content":"    public void setTotalBalance(double totalBalance) {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"quanganh2810"},"content":"        this.totalBalance \u003d totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"quanganh2810"},"content":"    public double getTotalBalance() {","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"quanganh2810"},"content":"        return totalBalance;","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"WilsonOh"},"content":"    public double getRate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"WilsonOh"},"content":"        return this.currencyLoader.getRate(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"WilsonOh"},"content":"    private ArrayList\u003cExpense\u003e getSortedExpensesByAmount() {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e(this.expenses);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"WilsonOh"},"content":"        sortedExpenses.sort((e1, e2) -\u003e Double.compare(e1.getAmount(), e2.getAmount()));","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"WilsonOh"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"quanganh2810"},"content":"    public ArrayList\u003cExpense\u003e getExpensesAbove(double amount) { // return an ArrayList of expenses above a threshold","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"quanganh2810"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"WilsonOh"},"content":"        double convertedAmount \u003d amount / this.getRate();","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"quanganh2810"},"content":"        for (Expense expense : this.expenses) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"WilsonOh"},"content":"            if (expense.getAmount() \u003e\u003d convertedAmount) {","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"quanganh2810"},"content":"                sortedExpenses.add(expense);","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"quanganh2810"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"quanganh2810"},"content":"    public ArrayList\u003cExpense\u003e getExpensesBelow(double amount) { // return an ArrayList of expenses below a threshold","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"quanganh2810"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"WilsonOh"},"content":"        double convertedAmount \u003d amount / this.getRate();","lastModifiedDate":"2023-04-03"},{"lineNumber":119,"author":{"gitId":"quanganh2810"},"content":"        for (Expense expense : this.expenses) {","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"WilsonOh"},"content":"            if (expense.getAmount() \u003c\u003d convertedAmount) {","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"quanganh2810"},"content":"                sortedExpenses.add(expense);","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"quanganh2810"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"WilsonOh"},"content":"    private ArrayList\u003cExpense\u003e getSortedExpensesByName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e(this.expenses);","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"WilsonOh"},"content":"        sortedExpenses.sort((e1, e2) -\u003e e1.getName().compareTo(e2.getName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"WilsonOh"},"content":"        return sortedExpenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"WilsonOh"},"content":"    public ArrayList\u003cExpense\u003e getSortedExpenses(final int sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"WilsonOh"},"content":"        assert sortBy \u003d\u003d SORT_BY_NAME || sortBy \u003d\u003d SORT_BY_PRICE : \"Expenses can either be sort by named or price\";","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"WilsonOh"},"content":"        switch (sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"WilsonOh"},"content":"        case SORT_BY_NAME:","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByName();","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"WilsonOh"},"content":"        case SORT_BY_PRICE:","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByAmount();","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"WilsonOh"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"WilsonOh"},"content":"            return getSortedExpensesByName();","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"varnika1402"},"content":"    public void printExpense() throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"varnika1402"},"content":"        if (expenses.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Sorry, there are no expenses in the list currently.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"varnika1402"},"content":"        Ui.printLines(\"How would you like your expenses to be sorted?\", \"  1. By date added / Expense ID\", \"  2. By Name\",","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"WilsonOh"},"content":"                      \"  3. By Amount\");","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"WilsonOh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"WilsonOh"},"content":"            int sortBy \u003d sc.nextInt();","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"WilsonOh"},"content":"            ArrayList\u003cExpense\u003e toList;","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"WilsonOh"},"content":"            switch (sortBy) {","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"WilsonOh"},"content":"            case 1:","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"WilsonOh"},"content":"                toList \u003d this.expenses;","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"varnika1402"},"content":"                Ui.printLines(Ui.getFormattedList(toList));","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"WilsonOh"},"content":"                break;","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"WilsonOh"},"content":"            case 2:","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"WilsonOh"},"content":"                toList \u003d getSortedExpenses(SORT_BY_NAME);","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"varnika1402"},"content":"                Ui.printLines(Ui.getFormattedList(toList));","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"WilsonOh"},"content":"                break;","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"WilsonOh"},"content":"            case 3:","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"WilsonOh"},"content":"                toList \u003d getSortedExpenses(SORT_BY_PRICE);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"varnika1402"},"content":"                Ui.printLines(Ui.getFormattedList(toList));","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"WilsonOh"},"content":"                break;","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"WilsonOh"},"content":"            default:","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"Invalid choice\");","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"varnika1402"},"content":"        } catch(NumberFormatException | InputMismatchException excep) {","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid input\");","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"waiter-palypoo"},"content":"    private String checkSufficientBalance(FutureExpense futureExpense) {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"waiter-palypoo"},"content":"        if (futureExpense.getAmount() \u003c\u003d totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"waiter-palypoo"},"content":"            return \"\";","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"waiter-palypoo"},"content":"        return \"Warning: Insufficient Balance!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"waiter-palypoo"},"content":"    public void printFutureExpenses() throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"waiter-palypoo"},"content":"        if (futureExpenses.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"Sorry, there are no future expenses.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Here is the list of your future expenses: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"waiter-palypoo"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"waiter-palypoo"},"content":"        int totalAmountDue \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"waiter-palypoo"},"content":"        for (FutureExpense futureExpense : futureExpenses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(count + \". \" + futureExpense + \" \" + checkSufficientBalance(futureExpense));","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"waiter-palypoo"},"content":"            count++;","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"waiter-palypoo"},"content":"            totalAmountDue +\u003d futureExpense.getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"You have \" + futureExpenses.size() + \" future expenses in total.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(String.format(\"Total amount due: %.2f %s\", totalAmountDue * this.getRate(), this.currency));","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(String.format(\"Total balance: %.2f %s\", getTotalBalance() * this.getRate(), this.currency));","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"waiter-palypoo"},"content":"        if (totalAmountDue \u003e totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Warning: You have insufficient balance to pay for all future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Great! You have sufficient balance to pay for all future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"waiter-palypoo"},"content":"    public void checkUpcomingExpenses(int timePeriod) {","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate endDate \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"waiter-palypoo"},"content":"        switch (timePeriod) {","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"waiter-palypoo"},"content":"        case 1:","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusWeeks(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"waiter-palypoo"},"content":"        case 2:","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusMonths(1);","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"waiter-palypoo"},"content":"        case 3:","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"waiter-palypoo"},"content":"            endDate \u003d today.plusMonths(3);","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"waiter-palypoo"},"content":"            break;","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"WilsonOh"},"content":"        default:","lastModifiedDate":"2023-03-21"},{"lineNumber":226,"author":{"gitId":"WilsonOh"},"content":"            endDate \u003d today;","lastModifiedDate":"2023-03-21"},{"lineNumber":227,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"waiter-palypoo"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"waiter-palypoo"},"content":"        int totalAmountDue \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"waiter-palypoo"},"content":"        for (FutureExpense futureExpense : futureExpenses) {","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"varnika1402"},"content":"            if (futureExpense.getDueDate().isBefore(endDate)) { // change","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println((futureExpenses.indexOf(futureExpense) + 1) + \". \" + futureExpense + \" \" +","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"WilsonOh"},"content":"                                   checkSufficientBalance(futureExpense));","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"waiter-palypoo"},"content":"                count++;","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"waiter-palypoo"},"content":"                totalAmountDue +\u003d futureExpense.getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"There are \" + count + \" upcoming payments in this time period.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total amount due: \" + totalAmountDue);","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Total balance: \" + getTotalBalance());","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"waiter-palypoo"},"content":"        if (totalAmountDue \u003e totalBalance) {","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Warning: You have insufficient balance to pay for all upcoming expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Great! You have sufficient balance to pay for all upcoming expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"waiter-palypoo"},"content":"    public void startupDueDateCheck() {","lastModifiedDate":"2023-03-31"},{"lineNumber":252,"author":{"gitId":"waiter-palypoo"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-31"},{"lineNumber":253,"author":{"gitId":"waiter-palypoo"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":254,"author":{"gitId":"waiter-palypoo"},"content":"        int totalAmountDue \u003d 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"waiter-palypoo"},"content":"        for (FutureExpense futureExpense : futureExpenses) {","lastModifiedDate":"2023-03-31"},{"lineNumber":256,"author":{"gitId":"waiter-palypoo"},"content":"            if (futureExpense.getDueDate().isBefore(today)) { // change","lastModifiedDate":"2023-03-31"},{"lineNumber":257,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println((futureExpenses.indexOf(futureExpense) + 1) + \". \" + futureExpense + \" \" +","lastModifiedDate":"2023-03-31"},{"lineNumber":258,"author":{"gitId":"waiter-palypoo"},"content":"                                   checkSufficientBalance(futureExpense));","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"waiter-palypoo"},"content":"                count++;","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"waiter-palypoo"},"content":"                totalAmountDue +\u003d futureExpense.getAmount();","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"waiter-palypoo"},"content":"        if (count \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Warning! The above \" + count + \" future expense(s) are overdue!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Total amount due: \" + totalAmountDue);","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Total balance: \" + getTotalBalance());","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"waiter-palypoo"},"content":"            if (totalAmountDue \u003e totalBalance) {","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Warning: You have insufficient balance to pay for all overdue expenses!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"waiter-palypoo"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"You have sufficient balance to pay for all overdue expenses!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(\"Use the pay command to pay for a future expense. Use the help command for a list of \"","lastModifiedDate":"2023-04-03"},{"lineNumber":275,"author":{"gitId":"WilsonOh"},"content":"                               + \"commands\");","lastModifiedDate":"2023-04-03"},{"lineNumber":276,"author":{"gitId":"waiter-palypoo"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"waiter-palypoo"},"content":"    public void payFutureExpense(int id) throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":282,"author":{"gitId":"waiter-palypoo"},"content":"        if (id \u003e\u003d futureExpenses.size()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":283,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"That item does not exist in the list of future expenses!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"This future expense has been paid for:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":286,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(futureExpenses.get(id).toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":287,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"You may now find it in your expenses list.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":288,"author":{"gitId":"waiter-palypoo"},"content":"        String name \u003d futureExpenses.get(id).getName();","lastModifiedDate":"2023-03-13"},{"lineNumber":289,"author":{"gitId":"waiter-palypoo"},"content":"        double amt \u003d futureExpenses.get(id).getAmount();","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"waiter-palypoo"},"content":"        String category \u003d futureExpenses.get(id).getCategory();","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"waiter-palypoo"},"content":"        addExpense(name, amt, LocalDate.now(), category);","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":296,"author":{"gitId":"varnika1402"},"content":"    public void printExpenditureByCategory() {","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"varnika1402"},"content":"        for (String i : expenseByCategory.keySet()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(i + \" - \"","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"WilsonOh"},"content":"                               + \"$\" + expenseByCategory.get(i));","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":302,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"quanganh2810"},"content":"    public Expense get(int id) {","lastModifiedDate":"2023-03-11"},{"lineNumber":306,"author":{"gitId":"quanganh2810"},"content":"        return expenses.get(id);","lastModifiedDate":"2023-03-11"},{"lineNumber":307,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":308,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":309,"author":{"gitId":"waiter-palypoo"},"content":"    public void remove(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"waiter-palypoo"},"content":"        expenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"waiter-palypoo"},"content":"    public void removeFutureExpense(int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"waiter-palypoo"},"content":"        futureExpenses.remove(id);","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":316,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":317,"author":{"gitId":"WilsonOh"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-11"},{"lineNumber":318,"author":{"gitId":"varnika1402"},"content":"        return expenses.size();","lastModifiedDate":"2023-03-11"},{"lineNumber":319,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":320,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":321,"author":{"gitId":"waiter-palypoo"},"content":"    public int getFutureSize() {","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"waiter-palypoo"},"content":"        return futureExpenses.size();","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":325,"author":{"gitId":"victorouy"},"content":"    public void removeAllExpenses() {","lastModifiedDate":"2023-04-02"},{"lineNumber":326,"author":{"gitId":"WilsonOh"},"content":"        expenses.clear();","lastModifiedDate":"2023-04-03"},{"lineNumber":327,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":328,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":329,"author":{"gitId":"victorouy"},"content":"    public void removeAllFutureExpenses() {","lastModifiedDate":"2023-04-02"},{"lineNumber":330,"author":{"gitId":"WilsonOh"},"content":"        futureExpenses.clear();","lastModifiedDate":"2023-04-03"},{"lineNumber":331,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":332,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":34,"waiter-palypoo":127,"quanganh2810":48,"WilsonOh":117,"victorouy":6}},{"path":"src/main/java/seedu/duke/FutureExpense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"waiter-palypoo"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"waiter-palypoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"waiter-palypoo"},"content":"public class FutureExpense extends Expense {","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"waiter-palypoo"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"    public FutureExpense(String name, double amount, LocalDate dueDate, String category, String currency) {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"        super(name, amount, LocalDate.now(), category, currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"waiter-palypoo"},"content":"    public FutureExpense(String name, double amount, LocalDate dueDate, String category) {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        super(name, amount, LocalDate.now(), category, \"SGD\");","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"waiter-palypoo"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"    public void setDueDate(LocalDate dueDate) {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"waiter-palypoo"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"waiter-palypoo"},"content":"        return dueDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"    public String serialize() {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"        return String.format(\"%s|%s\", super.serialize(), this.dueDate);","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"waiter-palypoo"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"waiter-palypoo"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"waiter-palypoo"},"content":"        return String.format(\"Upcoming payment %s in the %s category due on %s.\", this.getName(), this.getCategory(),","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"waiter-palypoo"},"content":"                this.dueDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"waiter-palypoo"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"varnika1402":3,"waiter-palypoo":21,"WilsonOh":12}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"quanganh2810"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import java.util.Locale;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"quanganh2810"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"quanganh2810"},"content":"public class Parser {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"    public static void handleCmd(String userCmd, ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d expenseManager.getExpenses();","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cFutureExpense\u003e futureExpenses \u003d expenseManager.getFutureExpenses();","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"quanganh2810"},"content":"            if (userCmd.startsWith(\"add expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"quanganh2810"},"content":"                Ui.printChoice();","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"quanganh2810"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"quanganh2810"},"content":"                String choice \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"quanganh2810"},"content":"                int choiceNum \u003d Integer.parseInt(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"quanganh2810"},"content":"                executeAddExpense(userCmd, expenseManager, choiceNum);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"edit expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"                executeEditExpense(expenseManager, userCmd, expenses);","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"            } else if (userCmd.startsWith(\"delete expense\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"                executeDeleteExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"set balance\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"quanganh2810"},"content":"                executeSetBudget(expenseManager, userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"            } else if (userCmd.startsWith(\"get currency\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"                Ui.printLines(String.format(\"Your currency is currently set to: %s\", expenseManager.getCurrency()));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"victorouy"},"content":"            } else if (userCmd.startsWith(\"list expenses\") || userCmd.startsWith(\"list expense\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"quanganh2810"},"content":"                expenseManager.printExpense();","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"check balance\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"                System.out.println(String.format(\"Your current balance is: %.2f %s\",","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"                        expenseManager.getTotalBalance() * expenseManager.getRate(),","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"                        expenseManager.getCurrency()));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"add future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printChoice();","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"waiter-palypoo"},"content":"                Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"waiter-palypoo"},"content":"                String choice \u003d in.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"waiter-palypoo"},"content":"                int choiceNum \u003d Integer.parseInt(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"waiter-palypoo"},"content":"                executeAddFutureExpense(userCmd, expenseManager, choiceNum);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"edit future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"                executeEditFutureExpense(expenseManager, userCmd, futureExpenses);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"            } else if (userCmd.startsWith(\"set currency\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"                try {","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"                    String currency \u003d userCmd.split(\" \")[2];","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"                    if (!CurrencyLoader.getCurrencyLoader().currencyExists(currency)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"                        Ui.printLines(String.format(","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"                                \"The currency %s is not valid. Please try again with a valid currency symbol\", currency));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"                    } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"                        expenseManager.setCurrency(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"                        Ui.printLines(String.format(\"Your currency has been successfully set to: %s\", currency));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"                    }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"varnika1402"},"content":"                } catch (ArrayIndexOutOfBoundsException exc) {","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"varnika1402"},"content":"                    throw new DukeException(\"Currency symbol cannot be empty.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"delete future expense\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"waiter-palypoo"},"content":"                executeDeleteFutureExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"victorouy"},"content":"            } else if (userCmd.startsWith(\"list future expenses\") || userCmd.startsWith(\"list future expense\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"waiter-palypoo"},"content":"                expenseManager.printFutureExpenses();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"check upcoming expenses\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"waiter-palypoo"},"content":"                executeCheckUpcomingExpenses(expenseManager);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"waiter-palypoo"},"content":"            } else if (userCmd.startsWith(\"pay\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"waiter-palypoo"},"content":"                executePayFutureExpense(expenseManager, userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"expenses above $/\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"quanganh2810"},"content":"                double amount \u003d Double.parseDouble(userCmd.substring(userCmd.indexOf(\"$/\") + 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"quanganh2810"},"content":"                executeGetExpenseAbove(amount, expenseManager);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"quanganh2810"},"content":"            } else if (userCmd.startsWith(\"expenses below $/\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"                double amount \u003d Double.parseDouble(userCmd.substring(userCmd.indexOf(\"$/\") + 2));","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"quanganh2810"},"content":"                executeGetExpenseBelow(amount, expenseManager);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"varnika1402"},"content":"            } else if (userCmd.startsWith(\"list expenditure by category\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"                expenseManager.printExpenditureByCategory();","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"victorouy"},"content":"            } else if (userCmd.startsWith(\"clear expenses\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"victorouy"},"content":"                executeClearExpenses(expenseManager);","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"victorouy"},"content":"            } else if (userCmd.startsWith(\"clear future expenses\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"victorouy"},"content":"                executeClearFutureExpenses(expenseManager);","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"quanganh2810"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"waiter-palypoo"},"content":"                Ui.printFalseInput();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"varnika1402"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Invalid input. Please enter command again.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"varnika1402"},"content":"    public static void executeAddExpense(String userCmd, ExpenseManager expenseManager, int choice)","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":"            throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"quanganh2810"},"content":"        double amount \u003d extractAmount(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"WilsonOh"},"content":"        if (amount \u003c 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"WilsonOh"},"content":"            throw new DukeException(\"Expense price cannot be negative\");","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"quanganh2810"},"content":"            LocalDate date \u003d extractDate(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"WilsonOh"},"content":"            String name \u003d extractName(userCmd);","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"quanganh2810"},"content":"            String category \u003d getCategory(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"quanganh2810"},"content":"            if (category.equals(\"wrong input\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"Invalid selection. Please follow the instructions and try again.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"quanganh2810"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"WilsonOh"},"content":"                expenseManager.addExpense(name, amount, date, category);","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Please enter a valid date (YYYYMMDD)\");","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"varnika1402"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid syntax for add expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"quanganh2810"},"content":"    private static String getCategory(int choice) {","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"quanganh2810"},"content":"            switch (choice) {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"quanganh2810"},"content":"            case 1:","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"quanganh2810"},"content":"                return \"Food \u0026 Drinks\";","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"quanganh2810"},"content":"            case 2:","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"quanganh2810"},"content":"                return \"Shopping\";","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"quanganh2810"},"content":"            case 3:","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"quanganh2810"},"content":"                return \"Transportation\";","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"quanganh2810"},"content":"            case 4:","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"quanganh2810"},"content":"                return \"Life \u0026 Entertainment\";","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"quanganh2810"},"content":"            case 5:","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"quanganh2810"},"content":"                return \"Investments\";","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"quanganh2810"},"content":"            case 6:","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"quanganh2810"},"content":"                return \"Communication \u0026 Technology\";","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"quanganh2810"},"content":"            case 7:","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"quanganh2810"},"content":"                return \"Others\";","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"quanganh2810"},"content":"            default:","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"quanganh2810"},"content":"                return \"wrong input\";","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"quanganh2810"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"varnika1402"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"varnika1402"},"content":"            return \"wrong input\";","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"WilsonOh"},"content":"    private static String extractName(String userCmd) {","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"WilsonOh"},"content":"        int endIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"WilsonOh"},"content":"        return userCmd.substring(12, endIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"varnika1402"},"content":"    private static double extractAmount(String userCmd) throws DukeException {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"quanganh2810"},"content":"        int endIndex \u003d userCmd.indexOf(\" \", startIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense Amount cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"varnika1402"},"content":"        } else if (endIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense Date cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"varnika1402"},"content":"            String amountString \u003d userCmd.substring(startIndex + 2, endIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"quanganh2810"},"content":"            return Double.parseDouble(amountString);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"victorouy"},"content":"    private static LocalDate extractDate(String input) {","lastModifiedDate":"2023-04-03"},{"lineNumber":160,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d input.indexOf(\"d/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"        String dateString \u003d input.substring(startIndex + 2);","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"quanganh2810"},"content":"        int year \u003d Integer.parseInt(dateString.substring(0, 4));","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"quanganh2810"},"content":"        int month \u003d Integer.parseInt(dateString.substring(4, 6));","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"quanganh2810"},"content":"        int day \u003d Integer.parseInt(dateString.substring(6));","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"quanganh2810"},"content":"        return LocalDate.of(year, month, day);","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"victorouy"},"content":"    public static void executeSetBudget(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"quanganh2810"},"content":"        int startIndex \u003d userCmd.indexOf(\"$/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Budget amount cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"quanganh2810"},"content":"            double balance \u003d Double.parseDouble(userCmd.substring(startIndex + 2));","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"WilsonOh"},"content":"                    String.format(\"Your budget has been set to %.2f %s\", balance, expenseManager.getCurrency()));","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"WilsonOh"},"content":"            expenseManager.setTotalBalance(balance / expenseManager.getRate());","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"WilsonOh"},"content":"    public static void executeEditExpense(ExpenseManager expenseManager, String userCmd, ArrayList\u003cExpense\u003e expenses)","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"WilsonOh"},"content":"            throws DukeException {","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"WilsonOh"},"content":"        if (!userCmd.contains(\"id/\") || !userCmd.contains(\"in/\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"WilsonOh"},"content":"            throw new DukeException(","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"WilsonOh"},"content":"                    \"Invalid syntax for the edit expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"WilsonOh"},"content":"        int id;","lastModifiedDate":"2023-04-08"},{"lineNumber":189,"author":{"gitId":"WilsonOh"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"WilsonOh"},"content":"            id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3, userCmd.indexOf(\"in/\") - 1));","lastModifiedDate":"2023-04-08"},{"lineNumber":191,"author":{"gitId":"WilsonOh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"WilsonOh"},"content":"            throw new DukeException(\"Please enter a valid digit for the expense id\");","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"varnika1402"},"content":"        if (id \u003e expenseManager.getSize() || id \u003c 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"quanganh2810"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"quanganh2810"},"content":"            switch (userCmd.substring(userCmd.indexOf(\"in/\") + 3)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"quanganh2810"},"content":"            case \"amount\":","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"victorouy"},"content":"                editExpenseAmount(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":201,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":202,"author":{"gitId":"victorouy"},"content":"            case \"date\":","lastModifiedDate":"2023-04-02"},{"lineNumber":203,"author":{"gitId":"victorouy"},"content":"                editExpenseDate(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":204,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":205,"author":{"gitId":"victorouy"},"content":"            case \"category\":","lastModifiedDate":"2023-04-02"},{"lineNumber":206,"author":{"gitId":"victorouy"},"content":"                editExpenseCategory(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":207,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":208,"author":{"gitId":"victorouy"},"content":"            default:","lastModifiedDate":"2023-04-02"},{"lineNumber":209,"author":{"gitId":"victorouy"},"content":"                Ui.printFalseInput();","lastModifiedDate":"2023-04-02"},{"lineNumber":210,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":211,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":212,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":213,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":214,"author":{"gitId":"victorouy"},"content":"    private static void editExpenseAmount(ExpenseManager expenseManager, int id, Scanner in) {","lastModifiedDate":"2023-04-02"},{"lineNumber":215,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Enter a new amount spent! Just enter a number!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"quanganh2810"},"content":"        Double newAmount \u003d Double.parseDouble(in.nextLine());","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"WilsonOh"},"content":"        Double newBalance \u003d expenseManager.getTotalBalance() + expenseManager.get(id - 1).getAmount() - newAmount;","lastModifiedDate":"2023-04-03"},{"lineNumber":218,"author":{"gitId":"quanganh2810"},"content":"        expenseManager.get(id - 1).setAmount(newAmount);","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"quanganh2810"},"content":"        expenseManager.setTotalBalance(newBalance);","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Change in amount successful! Balance has also been recalculated\");","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":222,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":223,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":224,"author":{"gitId":"varnika1402"},"content":"    private static void editExpenseDate(ExpenseManager expenseManager, int id, Scanner in) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(\"Enter a new date in the form of YYYYMMDD!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"quanganh2810"},"content":"        String newDate \u003d in.nextLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"quanganh2810"},"content":"        int year \u003d Integer.parseInt(newDate.substring(0, 4));","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"quanganh2810"},"content":"        int month \u003d Integer.parseInt(newDate.substring(4, 6));","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"quanganh2810"},"content":"        int day \u003d Integer.parseInt(newDate.substring(6));","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.get(id - 1).setDate(LocalDate.of(year, month, day));","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Change in date successful!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"varnika1402"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid date\");","lastModifiedDate":"2023-04-08"},{"lineNumber":236,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":239,"author":{"gitId":"victorouy"},"content":"    private static void editExpenseCategory(ExpenseManager expenseManager, int id, Scanner in) {","lastModifiedDate":"2023-04-02"},{"lineNumber":240,"author":{"gitId":"quanganh2810"},"content":"        Ui.printChoice();","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"quanganh2810"},"content":"        int choice \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"quanganh2810"},"content":"        String newCategory \u003d getCategory(choice);","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"varnika1402"},"content":"        if (newCategory.equals(\"wrong input\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":244,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Wrong category choice. Please enter edit command again\");","lastModifiedDate":"2023-04-07"},{"lineNumber":245,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":246,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":247,"author":{"gitId":"quanganh2810"},"content":"            expenseManager.get(id - 1).setCategory(newCategory);","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"Change in category successful!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":250,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":252,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"varnika1402"},"content":"    public static void executeDeleteExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"varnika1402"},"content":"        int startIndex \u003d userCmd.indexOf(\"id/\");","lastModifiedDate":"2023-03-11"},{"lineNumber":255,"author":{"gitId":"varnika1402"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-11"},{"lineNumber":256,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Expense id cannot be empty.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":257,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":258,"author":{"gitId":"varnika1402"},"content":"            try {","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"varnika1402"},"content":"                int id \u003d Integer.parseInt(userCmd.substring(startIndex + 3));","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"varnika1402"},"content":"                if (id \u003e expenseManager.getSize() || id \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":261,"author":{"gitId":"varnika1402"},"content":"                    throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":262,"author":{"gitId":"varnika1402"},"content":"                } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":263,"author":{"gitId":"varnika1402"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":264,"author":{"gitId":"varnika1402"},"content":"                    Expense deletedExpense \u003d expenseManager.get(id - 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":265,"author":{"gitId":"varnika1402"},"content":"                    Double updatedBalance \u003d expenseManager.getTotalBalance() + deletedExpense.getAmount();","lastModifiedDate":"2023-04-07"},{"lineNumber":266,"author":{"gitId":"varnika1402"},"content":"                    expenseManager.setTotalBalance(updatedBalance);","lastModifiedDate":"2023-04-03"},{"lineNumber":267,"author":{"gitId":"varnika1402"},"content":"                    expenseManager.remove(id - 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":268,"author":{"gitId":"varnika1402"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this expense:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":269,"author":{"gitId":"varnika1402"},"content":"                    System.out.println(deletedExpense);","lastModifiedDate":"2023-03-11"},{"lineNumber":270,"author":{"gitId":"varnika1402"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":271,"author":{"gitId":"varnika1402"},"content":"                }","lastModifiedDate":"2023-03-11"},{"lineNumber":272,"author":{"gitId":"varnika1402"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-03"},{"lineNumber":273,"author":{"gitId":"varnika1402"},"content":"                throw new DukeException(\"Please enter a valid expense id.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":274,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":275,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":276,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":277,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"victorouy"},"content":"    public static void executeClearExpenses(ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-04-02"},{"lineNumber":279,"author":{"gitId":"victorouy"},"content":"        if (1 \u003e expenseManager.getSize()) {","lastModifiedDate":"2023-04-02"},{"lineNumber":280,"author":{"gitId":"victorouy"},"content":"            throw new DukeException(\"You have no expenses to clear.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":281,"author":{"gitId":"victorouy"},"content":"        } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":282,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":283,"author":{"gitId":"victorouy"},"content":"            System.out.println(\"Are you sure you would like to remove all expenses? \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-04-02"},{"lineNumber":284,"author":{"gitId":"victorouy"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-02"},{"lineNumber":285,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":286,"author":{"gitId":"victorouy"},"content":"            String confirmationClear \u003d in.nextLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":287,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":288,"author":{"gitId":"victorouy"},"content":"            if (confirmationClear.toUpperCase(Locale.ROOT).equals(\"Y\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":289,"author":{"gitId":"victorouy"},"content":"                expenseManager.removeAllExpenses();","lastModifiedDate":"2023-04-02"},{"lineNumber":290,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"You have cleared all your expenses.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":291,"author":{"gitId":"victorouy"},"content":"            } else if (confirmationClear.equals(\"N\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":292,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"Okay! Expenses will not be cleared.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":293,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":294,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"Invalid confirmation\");","lastModifiedDate":"2023-04-02"},{"lineNumber":295,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":296,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":299,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":300,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executeAddFutureExpense(String userCmd, ExpenseManager expenseManager, int choice)","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"waiter-palypoo"},"content":"            throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"waiter-palypoo"},"content":"        double amount \u003d extractAmount(userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":303,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"waiter-palypoo"},"content":"            LocalDate dueDate \u003d extractDate(userCmd);","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"varnika1402"},"content":"            if (dueDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":307,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"Please enter a future date\");","lastModifiedDate":"2023-04-04"},{"lineNumber":308,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"varnika1402"},"content":"            } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":310,"author":{"gitId":"waiter-palypoo"},"content":"                String name \u003d userCmd.substring(19, userCmd.indexOf(\"$/\") - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"waiter-palypoo"},"content":"                String category \u003d getCategory(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"waiter-palypoo"},"content":"                if (category.equals(\"wrong input\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"varnika1402"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"varnika1402"},"content":"                    System.out.println(\"Invalid selection. Please add expense again.\");","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"varnika1402"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"waiter-palypoo"},"content":"                } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"waiter-palypoo"},"content":"                    expenseManager.addFutureExpense(name, amount, dueDate, category);","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"waiter-palypoo"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"varnika1402"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2023-04-08"},{"lineNumber":321,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Please enter a valid date (YYYYMMDD)\");","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"varnika1402"},"content":"        } catch (StringIndexOutOfBoundsException exc) {","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid syntax for add future expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":326,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":327,"author":{"gitId":"WilsonOh"},"content":"    public static void executeEditFutureExpense(ExpenseManager expenseManager, String userCmd,","lastModifiedDate":"2023-03-26"},{"lineNumber":328,"author":{"gitId":"WilsonOh"},"content":"                                                ArrayList\u003cFutureExpense\u003e futureExpenses) throws DukeException {","lastModifiedDate":"2023-03-26"},{"lineNumber":329,"author":{"gitId":"varnika1402"},"content":"        if (!userCmd.contains(\"id/\") || !userCmd.contains(\"in/\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":330,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"varnika1402"},"content":"                    \"Invalid syntax for the edit future expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"varnika1402"},"content":"        int id;","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":335,"author":{"gitId":"varnika1402"},"content":"            id \u003d Integer.parseInt(userCmd.substring(userCmd.indexOf(\"id/\") + 3, userCmd.indexOf(\"in/\") - 1));","lastModifiedDate":"2023-04-08"},{"lineNumber":336,"author":{"gitId":"varnika1402"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-08"},{"lineNumber":337,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Please enter a valid digit for the expense id.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":339,"author":{"gitId":"varnika1402"},"content":"        if(id \u003e expenseManager.getFutureSize() || id \u003c 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"waiter-palypoo"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":343,"author":{"gitId":"waiter-palypoo"},"content":"            switch (userCmd.substring(userCmd.indexOf(\"in/\") + 3)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":344,"author":{"gitId":"waiter-palypoo"},"content":"            case \"amount\":","lastModifiedDate":"2023-03-13"},{"lineNumber":345,"author":{"gitId":"victorouy"},"content":"                editFutureExpenseAmount(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":346,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":347,"author":{"gitId":"victorouy"},"content":"            case \"date\":","lastModifiedDate":"2023-04-02"},{"lineNumber":348,"author":{"gitId":"victorouy"},"content":"                editFutureExpenseDate(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":349,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":350,"author":{"gitId":"victorouy"},"content":"            case \"category\":","lastModifiedDate":"2023-04-02"},{"lineNumber":351,"author":{"gitId":"victorouy"},"content":"                editFutureExpenseCategory(expenseManager, id, in);","lastModifiedDate":"2023-04-02"},{"lineNumber":352,"author":{"gitId":"victorouy"},"content":"                break;","lastModifiedDate":"2023-04-02"},{"lineNumber":353,"author":{"gitId":"victorouy"},"content":"            default:","lastModifiedDate":"2023-04-02"},{"lineNumber":354,"author":{"gitId":"victorouy"},"content":"                Ui.printFalseInput();","lastModifiedDate":"2023-04-02"},{"lineNumber":355,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":356,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":357,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":358,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":359,"author":{"gitId":"victorouy"},"content":"    private static void editFutureExpenseAmount(ExpenseManager expenseManager, int id, Scanner in) {","lastModifiedDate":"2023-04-02"},{"lineNumber":360,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Enter a new amount spent! Just enter a number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":361,"author":{"gitId":"waiter-palypoo"},"content":"        Double newAmount \u003d Double.parseDouble(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":362,"author":{"gitId":"waiter-palypoo"},"content":"        expenseManager.getFutureExpense(id - 1).setAmount(newAmount);","lastModifiedDate":"2023-03-13"},{"lineNumber":363,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Change in amount successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":364,"author":{"gitId":"varnika1402"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":365,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":366,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":367,"author":{"gitId":"varnika1402"},"content":"    private static void editFutureExpenseDate(ExpenseManager expenseManager, int id, Scanner in) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":368,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Enter a new date in the form of YYYYMMDD!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":369,"author":{"gitId":"waiter-palypoo"},"content":"        String newDate \u003d in.nextLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":370,"author":{"gitId":"waiter-palypoo"},"content":"        int year \u003d Integer.parseInt(newDate.substring(0, 4));","lastModifiedDate":"2023-03-13"},{"lineNumber":371,"author":{"gitId":"waiter-palypoo"},"content":"        int month \u003d Integer.parseInt(newDate.substring(4, 6));","lastModifiedDate":"2023-03-13"},{"lineNumber":372,"author":{"gitId":"waiter-palypoo"},"content":"        int day \u003d Integer.parseInt(newDate.substring(6));","lastModifiedDate":"2023-03-13"},{"lineNumber":373,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-04-08"},{"lineNumber":374,"author":{"gitId":"varnika1402"},"content":"            LocalDate editDate \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2023-04-04"},{"lineNumber":375,"author":{"gitId":"varnika1402"},"content":"            if (editDate.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-04-04"},{"lineNumber":376,"author":{"gitId":"varnika1402"},"content":"                System.out.println(\"Date entered is not a future date. Please enter the edit command again with correct date\");","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"varnika1402"},"content":"            } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":378,"author":{"gitId":"varnika1402"},"content":"                expenseManager.getFutureExpense(id - 1).setDueDate(editDate);","lastModifiedDate":"2023-04-04"},{"lineNumber":379,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Change in date successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":380,"author":{"gitId":"varnika1402"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":382,"author":{"gitId":"varnika1402"},"content":"        } catch (DateTimeException dte) {","lastModifiedDate":"2023-04-08"},{"lineNumber":383,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid date\");","lastModifiedDate":"2023-04-08"},{"lineNumber":384,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":385,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":386,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":387,"author":{"gitId":"victorouy"},"content":"    private static void editFutureExpenseCategory(ExpenseManager expenseManager, int id, Scanner in) {","lastModifiedDate":"2023-04-02"},{"lineNumber":388,"author":{"gitId":"waiter-palypoo"},"content":"        Ui.printChoice();","lastModifiedDate":"2023-03-13"},{"lineNumber":389,"author":{"gitId":"waiter-palypoo"},"content":"        int choice \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":390,"author":{"gitId":"waiter-palypoo"},"content":"        String newCategory \u003d getCategory(choice);","lastModifiedDate":"2023-03-13"},{"lineNumber":391,"author":{"gitId":"varnika1402"},"content":"        if (newCategory.equals(\"wrong input\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":392,"author":{"gitId":"varnika1402"},"content":"            System.out.println(\"Wrong category choice. Please enter edit command again\");","lastModifiedDate":"2023-04-07"},{"lineNumber":393,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-07"},{"lineNumber":394,"author":{"gitId":"varnika1402"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":395,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.getFutureExpense(id - 1).setCategory(newCategory);","lastModifiedDate":"2023-03-13"},{"lineNumber":396,"author":{"gitId":"waiter-palypoo"},"content":"            System.out.println(\"Change in category successful!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":397,"author":{"gitId":"varnika1402"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-04"},{"lineNumber":398,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":399,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":400,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":401,"author":{"gitId":"waiter-palypoo"},"content":"    public static void executeDeleteFutureExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":402,"author":{"gitId":"varnika1402"},"content":"        if(!userCmd.contains(\"/id\")) {","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid syntax for the delete future expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"waiter-palypoo"},"content":"        int startIndex \u003d userCmd.indexOf(\"id/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":406,"author":{"gitId":"waiter-palypoo"},"content":"        if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":407,"author":{"gitId":"waiter-palypoo"},"content":"            throw new DukeException(\"Expense id cannot be empty.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":408,"author":{"gitId":"waiter-palypoo"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":409,"author":{"gitId":"varnika1402"},"content":"            try {","lastModifiedDate":"2023-04-03"},{"lineNumber":410,"author":{"gitId":"varnika1402"},"content":"                int id \u003d Integer.parseInt(userCmd.substring(startIndex + 3));","lastModifiedDate":"2023-04-03"},{"lineNumber":411,"author":{"gitId":"varnika1402"},"content":"                if (id \u003e expenseManager.getSize() || id \u003c\u003d 0) {","lastModifiedDate":"2023-04-03"},{"lineNumber":412,"author":{"gitId":"waiter-palypoo"},"content":"                    throw new DukeException(\"This expense id does not exist. Please provide a valid expense id.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":413,"author":{"gitId":"waiter-palypoo"},"content":"                } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":414,"author":{"gitId":"waiter-palypoo"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":415,"author":{"gitId":"waiter-palypoo"},"content":"                    Expense deletedExpense \u003d expenseManager.getFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":416,"author":{"gitId":"waiter-palypoo"},"content":"                    expenseManager.removeFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":417,"author":{"gitId":"waiter-palypoo"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this expense:\");","lastModifiedDate":"2023-03-13"},{"lineNumber":418,"author":{"gitId":"waiter-palypoo"},"content":"                    System.out.println(deletedExpense);","lastModifiedDate":"2023-03-13"},{"lineNumber":419,"author":{"gitId":"waiter-palypoo"},"content":"                    Ui.printHorizontalLine();","lastModifiedDate":"2023-03-13"},{"lineNumber":420,"author":{"gitId":"waiter-palypoo"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":421,"author":{"gitId":"varnika1402"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-03"},{"lineNumber":422,"author":{"gitId":"varnika1402"},"content":"                throw new DukeException(\"Please enter a valid expense id.\");","lastModifiedDate":"2023-04-08"},{"lineNumber":423,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-04-03"},{"lineNumber":424,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":425,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":426,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":427,"author":{"gitId":"victorouy"},"content":"    public static void executeClearFutureExpenses(ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-04-02"},{"lineNumber":428,"author":{"gitId":"victorouy"},"content":"        if (1 \u003e expenseManager.getFutureSize()) {","lastModifiedDate":"2023-04-02"},{"lineNumber":429,"author":{"gitId":"victorouy"},"content":"            throw new DukeException(\"You have no future expenses to clear.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":430,"author":{"gitId":"victorouy"},"content":"        } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":431,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":432,"author":{"gitId":"victorouy"},"content":"            System.out.println(\"Are you sure you would like to remove all future expenses? \u0027Y\u0027 or \u0027N\u0027\");","lastModifiedDate":"2023-04-02"},{"lineNumber":433,"author":{"gitId":"victorouy"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-04-02"},{"lineNumber":434,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":435,"author":{"gitId":"victorouy"},"content":"            String confirmationClear \u003d in.nextLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":436,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":437,"author":{"gitId":"victorouy"},"content":"            if (confirmationClear.toUpperCase(Locale.ROOT).equals(\"Y\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":438,"author":{"gitId":"victorouy"},"content":"                expenseManager.removeAllFutureExpenses();","lastModifiedDate":"2023-04-02"},{"lineNumber":439,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"You have cleared all your future expenses.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":440,"author":{"gitId":"victorouy"},"content":"            } else if (confirmationClear.equals(\"N\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":441,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"Okay! Your future expenses will not be cleared.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":442,"author":{"gitId":"victorouy"},"content":"            } else {","lastModifiedDate":"2023-04-02"},{"lineNumber":443,"author":{"gitId":"victorouy"},"content":"                System.out.println(\"Invalid confirmation\");","lastModifiedDate":"2023-04-02"},{"lineNumber":444,"author":{"gitId":"victorouy"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":445,"author":{"gitId":"victorouy"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-04-02"},{"lineNumber":446,"author":{"gitId":"victorouy"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":447,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":448,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":449,"author":{"gitId":"varnika1402"},"content":"    public static void executeCheckUpcomingExpenses(ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-04-08"},{"lineNumber":450,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"Choose a period to show upcoming expenses within (type the number): \");","lastModifiedDate":"2023-03-13"},{"lineNumber":451,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"1. 1 week\");","lastModifiedDate":"2023-03-13"},{"lineNumber":452,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"2. 1 month\");","lastModifiedDate":"2023-03-13"},{"lineNumber":453,"author":{"gitId":"waiter-palypoo"},"content":"        System.out.println(\"3. 3 months\");","lastModifiedDate":"2023-03-13"},{"lineNumber":454,"author":{"gitId":"waiter-palypoo"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-13"},{"lineNumber":455,"author":{"gitId":"waiter-palypoo"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":456,"author":{"gitId":"waiter-palypoo"},"content":"            int period \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":457,"author":{"gitId":"waiter-palypoo"},"content":"            while (period \u003c 1 || period \u003e 3) {","lastModifiedDate":"2023-03-13"},{"lineNumber":458,"author":{"gitId":"waiter-palypoo"},"content":"                System.out.println(\"Please choose a number from 1 to 3!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":459,"author":{"gitId":"waiter-palypoo"},"content":"                period \u003d Integer.parseInt(in.nextLine());","lastModifiedDate":"2023-03-13"},{"lineNumber":460,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":461,"author":{"gitId":"waiter-palypoo"},"content":"            expenseManager.checkUpcomingExpenses(period);","lastModifiedDate":"2023-03-13"},{"lineNumber":462,"author":{"gitId":"waiter-palypoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":463,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Please input a valid number!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":465,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":466,"author":{"gitId":"waiter-palypoo"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":467,"author":{"gitId":"varnika1402"},"content":"    public static void executePayFutureExpense(ExpenseManager expenseManager, String userCmd) throws DukeException {","lastModifiedDate":"2023-04-04"},{"lineNumber":468,"author":{"gitId":"waiter-palypoo"},"content":"        if (userCmd.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2023-03-13"},{"lineNumber":469,"author":{"gitId":"waiter-palypoo"},"content":"            String idString \u003d userCmd.split(\" \")[1].trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":470,"author":{"gitId":"varnika1402"},"content":"            if (idString \u003d\u003d null || Integer.parseInt(idString) \u003c\u003d 0 || Integer.parseInt(idString) \u003e expenseManager.getSize()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":471,"author":{"gitId":"waiter-palypoo"},"content":"                throw new DukeException(\"Please input a valid number!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":472,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":473,"author":{"gitId":"waiter-palypoo"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":474,"author":{"gitId":"waiter-palypoo"},"content":"                int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-03-13"},{"lineNumber":475,"author":{"gitId":"waiter-palypoo"},"content":"                expenseManager.payFutureExpense(id - 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":476,"author":{"gitId":"waiter-palypoo"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":477,"author":{"gitId":"varnika1402"},"content":"                throw new DukeException(\"Please input a valid number!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":478,"author":{"gitId":"waiter-palypoo"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":479,"author":{"gitId":"WilsonOh"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":480,"author":{"gitId":"varnika1402"},"content":"            throw new DukeException(\"Invalid syntax for pay future expense command. Please follow the instructions and try again\");","lastModifiedDate":"2023-04-08"},{"lineNumber":481,"author":{"gitId":"waiter-palypoo"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":482,"author":{"gitId":"waiter-palypoo"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":483,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":484,"author":{"gitId":"varnika1402"},"content":"    private static void executeGetExpenseAbove(double amount, ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-04-04"},{"lineNumber":485,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(amount);","lastModifiedDate":"2023-03-30"},{"lineNumber":486,"author":{"gitId":"quanganh2810"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"quanganh2810"},"content":"        sortedExpenses \u003d expenseManager.getExpensesAbove(amount);","lastModifiedDate":"2023-03-30"},{"lineNumber":488,"author":{"gitId":"quanganh2810"},"content":"        if (sortedExpenses.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":489,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"There is no expense matching your request !\");","lastModifiedDate":"2023-03-30"},{"lineNumber":490,"author":{"gitId":"quanganh2810"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":491,"author":{"gitId":"quanganh2810"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":492,"author":{"gitId":"quanganh2810"},"content":"            Ui.printLines(Ui.getFormattedList(sortedExpenses));","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"varnika1402"},"content":"    private static void executeGetExpenseBelow(double amount, ExpenseManager expenseManager) throws DukeException {","lastModifiedDate":"2023-04-04"},{"lineNumber":497,"author":{"gitId":"quanganh2810"},"content":"        System.out.println(amount);","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"quanganh2810"},"content":"        ArrayList\u003cExpense\u003e sortedExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"quanganh2810"},"content":"        sortedExpenses \u003d expenseManager.getExpensesBelow(amount);","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"quanganh2810"},"content":"        if (sortedExpenses.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":501,"author":{"gitId":"quanganh2810"},"content":"            System.out.println(\"There is no expense matching your request !\");","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"quanganh2810"},"content":"            Ui.printHorizontalLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"quanganh2810"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"quanganh2810"},"content":"            Ui.printLines(Ui.getFormattedList(sortedExpenses));","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"quanganh2810"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":163,"waiter-palypoo":89,"quanganh2810":114,"victorouy":92,"WilsonOh":49}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"varnika1402"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"public class Storage {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    public static final String DATA_DIR_NAME \u003d \"data\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"    public static final String DATA_FILE_NAME \u003d \"duke_data.txt\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"    private Path dataFilePath;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"     * Constructor for the `Storage` class, which initializes storage by first checking if the data file already","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"     * exists at `${CWD}/data/duke_data.txt`, else it will create the file","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    public Storage() {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"        Path dataDirPath \u003d Path.of(\"\").resolve(DATA_DIR_NAME).toAbsolutePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"            if (!Files.exists(dataDirPath)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"                Files.createDirectory(dataDirPath);","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"WilsonOh"},"content":"            this.dataFilePath \u003d dataDirPath.resolve(DATA_FILE_NAME);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"WilsonOh"},"content":"            if (!Files.exists(this.dataFilePath)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"WilsonOh"},"content":"                Files.createFile(this.dataFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(e);","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"     * Parses an expense from the data file","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"     * @param line The line containing information about an expense","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"     * @param expenses The list of expenses to add an expense to","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"     * @param futureExpenses The list of futureExpenses to add a futureExpense to","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"    private void parseExpenses(String line, ArrayList\u003cExpense\u003e expenses, ArrayList\u003cFutureExpense\u003e futureExpenses) {","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"        String type \u003d tokens[0];","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"        String name \u003d tokens[1];","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"        Double amount \u003d Double.parseDouble(tokens[2]);","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"        String category \u003d tokens[3];","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"        LocalDate date \u003d LocalDate.parse(tokens[4]);","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"        if (type.equals(\"Expense\")) {","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"            expenses.add(new Expense(name, amount, date, category));","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"        } else {","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"            LocalDate dueDate \u003d LocalDate.parse(tokens[5]);","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"            futureExpenses.add(new FutureExpense(name, amount, dueDate, category));","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"     * Gets a map of budget spent on expenses by category","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"     * @param expenses The list of expenses","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"     * @return The map of expenses by category","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"    private HashMap\u003cString, Double\u003e getExpensesByCategory(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"        HashMap\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"WilsonOh"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"WilsonOh"},"content":"            String category \u003d expense.getCategory();","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"WilsonOh"},"content":"            Double amount \u003d expense.getAmount();","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"WilsonOh"},"content":"            expenseByCategory.put(category, expenseByCategory.get(category.strip()) + amount);","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"        return expenseByCategory;","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"WilsonOh"},"content":"     * Loads an `ExpenseManager` instance from storage","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"WilsonOh"},"content":"     * @return An `ExpenseManager` instance with all the information from local storage","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"WilsonOh"},"content":"    public ExpenseManager loadDataExpenses() {","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cFutureExpense\u003e futureExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"WilsonOh"},"content":"        String data;","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"WilsonOh"},"content":"        double balance \u003d 0.0;","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"WilsonOh"},"content":"        String currency \u003d \"SGD\";","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"WilsonOh"},"content":"            data \u003d Files.readString(this.dataFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"WilsonOh"},"content":"            if (data.isBlank()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"varnika1402"},"content":"                return new ExpenseManager(balance, expenses, futureExpenses, currency);","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"WilsonOh"},"content":"            for (String line : data.lines().toArray(String[] ::new)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"WilsonOh"},"content":"                if (line.startsWith(\"currency\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"WilsonOh"},"content":"                    currency \u003d line.split(\":\")[1];","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"WilsonOh"},"content":"                    continue;","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"WilsonOh"},"content":"                if (line.startsWith(\"balance\")) {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"WilsonOh"},"content":"                    balance \u003d Double.parseDouble(line.split(\":\")[1]);","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"WilsonOh"},"content":"                    continue;","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"WilsonOh"},"content":"                }","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"WilsonOh"},"content":"                parseExpenses(line, expenses, futureExpenses);","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"WilsonOh"},"content":"            HashMap\u003cString, Double\u003e expenseByCategory \u003d getExpensesByCategory(expenses);","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"WilsonOh"},"content":"            ExpenseManager manager \u003d new ExpenseManager(balance, expenses, futureExpenses, expenseByCategory, currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"WilsonOh"},"content":"            manager.setCurrency(currency);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"WilsonOh"},"content":"            return manager;","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"varnika1402"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"WilsonOh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"WilsonOh"},"content":"        return new ExpenseManager(balance, expenses, futureExpenses, \"SGD\");","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":119,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"WilsonOh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"WilsonOh"},"content":"     * Writes all the information contained in an ExpenseManager into the data file","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"WilsonOh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"WilsonOh"},"content":"     * @param manager The expense manager instance","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"WilsonOh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"WilsonOh"},"content":"    public void saveExpenses(ExpenseManager manager) {","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"WilsonOh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"WilsonOh"},"content":"        sb.append(String.format(\"currency:%s\\n\", manager.getCurrency()));","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"WilsonOh"},"content":"        sb.append(String.format(\"balance:%f\\n\", manager.getTotalBalance()));","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"WilsonOh"},"content":"        for (Expense expense : manager.getExpenses()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"WilsonOh"},"content":"            sb.append(expense.serialize() + \"\\n\");","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"WilsonOh"},"content":"        for (FutureExpense expense : manager.getFutureExpenses()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"WilsonOh"},"content":"            sb.append(expense.serialize() + \"\\n\");","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"WilsonOh"},"content":"        try {","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"WilsonOh"},"content":"            Files.writeString(this.dataFilePath, sb.toString());","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"varnika1402"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"WilsonOh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"varnika1402":35,"WilsonOh":106}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quanganh2810"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"quanganh2810"},"content":"public class Ui {","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"    private static final String LOGO \u003d  \"___  ___                      ___  ___          _\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"            + \"|  \\\\/  |                      |  \\\\/  |         | |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"            + \"| .  . | ___  _ __   ___ _   _| .  . | __ _ ___| |_ ___ _ __\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"            + \"| |\\\\/| |/ _ \\\\| \u0027_ \\\\ / _ \\\\ | | | |\\\\/| |/ _` / __| __/ _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"            + \"| |  | | (_) | | | |  __/ |_| | |  | | (_| \\\\__ \\\\ ||  __/ |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"varnika1402"},"content":"            + \"\\\\_|  |_/\\\\___/|_| |_|\\\\___|\\\\__, \\\\_|  |_/\\\\__,_|___/\\\\__\\\\___|_|\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"            + \"                         __/ |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"            + \"                        |___/\";","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"    private static final String ERROR_MESSAGE \u003d \"Sorry Duke could not understand your input :\u003e please follow the instructions\";","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke \\n\" + \"What can I do for you ?\";","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    private static final String EXIT_MESSAGE \u003d \"Thanks for using MoneyMaster! See ya! \\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"            + \" /\\\\_/\\\\  \\n\" + \"( o.o ) \\n\" + \" \u003e ^ \u003c  \";","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"    private static final String CATEGORY_CHOICE \u003d \"Which of the following category is this expense? Input a single number!\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"varnika1402"},"content":"            + \"1. Food \u0026 Drinks\\n\" + \"2. Shopping\\n\" + \"3. Transportation\\n\" + \"4. Life \u0026 Entertainment\\n\" + \"5. Investments\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"            + \"6. Communication \u0026 Technology\\n\" + \"7. Others\";","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"    private static final String COMMAND_LIST \u003d \"LIST OF ALL COMMANDS:\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"            + \"add expense + name + $/\\\"amount\\\" + d/\\\"yyyymmdd\\\" to add an expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"            + \"edit expense +  id/\\\"expense id\\\" + in/\\\"amount/date/category\\\" to edit an expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"            + \"delete expense +  id/\\\"expense id\\\" to delete an expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"            + \"clear expenses to clear all current expenses\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"            + \"set balance +  $/\\\"amount\\\" to set your balance\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"            + \"list expenses to list all past expenses\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"            + \"list expenditure by category to list total expenditure on each category\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"            + \"expenses above + $/\\\"amount\\\" to see all expenses above amount\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"            + \"expenses below + $/\\\"amount\\\" to see all expenses below amount\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"            + \"check balance to check the remaining balance\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"            + \"set currency {CURRENCY_SYMBOL} to set the app to your desired currency\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"            + \"get currency to get the currently set currency\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"            + \"add future expense + name + $/\\\"amount\\\" + d/\\\"yyyymmdd\\\" to add a future expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"            + \"edit future expense + id/\\\"expense id\\\" + in/\\\"amount/date/category\\\" to edit a future expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"            + \"delete future expense + id/\\\"expense id\\\" to delete a future expense\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"            + \"clear future expenses to clear all future expenses\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"            + \"list future expenses to list all future expenses\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"            + \"check upcoming expenses to list all future expenses within an upcoming time period\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"            + \"pay \\\"id\\\" to pay for a future expense and move it to the list of past expenses\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"            + \"bye to exit the program\";","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"varnika1402"},"content":"     * Print the Horizontal Line that separates between different user Inputs","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"quanganh2810"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"        System.out.println(\"-\".repeat(80));","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"    public static String[] getFormattedList(ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"        String[] ret \u003d new String[expenses.size() + 1];","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"        ret[0] \u003d \"Here are the list of your expenses !\\n\";","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        for (int i \u003d 0; i \u003c expenses.size(); ++i) {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"            ret[i + 1] \u003d String.format(\"%d. %s\", i + 1, expenses.get(i));","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"        return ret;","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"    public static void printLines(String... lines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"        for (String line : lines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"            System.out.println(line);","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"quanganh2810"},"content":"     * Print the message for user to signal that Duke cannot understand the input","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"waiter-palypoo"},"content":"    public static void printFalseInput() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"        System.out.println(ERROR_MESSAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"        System.out.println();","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"quanganh2810"},"content":"     * Print the Greeting when Duke is started","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"quanganh2810"},"content":"    public static void printGreeting() {","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"varnika1402"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"quanganh2810"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"varnika1402"},"content":"        System.out.println(COMMAND_LIST);","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"quanganh2810"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"quanganh2810"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"quanganh2810"},"content":"     * Print the Goodbye message when user exits Duke","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"quanganh2810"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"quanganh2810"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"varnika1402"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"quanganh2810"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"quanganh2810"},"content":"    public static void printChoice() {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"        System.out.println(CATEGORY_CHOICE);","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"varnika1402"},"content":"        printHorizontalLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"quanganh2810"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"quanganh2810"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"varnika1402":52,"waiter-palypoo":1,"quanganh2810":32,"WilsonOh":19}},{"path":"src/test/java/seedu/duke/CurrencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"public class CurrencyTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    public void setCurrencyToUSD_successful() {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cFutureExpense\u003e futureExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"foo\", 100, date, \"Shopping\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        CurrencyLoader loader \u003d CurrencyLoader.getCurrencyLoader();","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"        ExpenseManager manager \u003d new ExpenseManager(0.0, expenses, futureExpenses, \"USD\");","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"        assertEquals(manager.getRate(), loader.getRate(\"USD\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"WilsonOh":21}},{"path":"src/test/java/seedu/duke/ExpenseManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"public class ExpenseManagerTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"    ArrayList\u003cExpense\u003e testExpenses;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"    ExpenseManager testManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"Movie\", 20, date, \"Life \u0026 Entertainment\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"Trip\", 200.1, date, \"Life \u0026 Entertainment\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"Food\", 10.4, date, \"Life \u0026 Entertainment\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"Laptop\", 3000, date, \"Life \u0026 Entertainment\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"WilsonOh"},"content":"        expenses.add(new Expense(\"Bag\", 50.2, date, \"Life \u0026 Entertainment\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"WilsonOh"},"content":"        this.testExpenses \u003d expenses;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, expenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"WilsonOh"},"content":"        expenseManager.addExpense(\"Movie\", 20, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"WilsonOh"},"content":"        expenseManager.addExpense(\"Trip\", 200.1, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"WilsonOh"},"content":"        expenseManager.addExpense(\"Food\", 10.4, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"        expenseManager.addExpense(\"Laptop\", 3000, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"        expenseManager.addExpense(\"Bag\", 50.2, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"WilsonOh"},"content":"        this.testManager \u003d expenseManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"WilsonOh"},"content":"    public void sortExpensesByName_successful() {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e controlExpense \u003d new ArrayList\u003c\u003e(this.testExpenses);","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"WilsonOh"},"content":"        controlExpense.sort((e1, e2) -\u003e e1.getName().compareTo(e2.getName()));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e testingExpense \u003d this.testManager.getSortedExpenses(ExpenseManager.SORT_BY_NAME);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"        assertEquals(controlExpense, testingExpense, \"Expenses are sorted by name correctly\");","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"WilsonOh"},"content":"    public void sortExpensesByPrice_successful() {","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e controlExpense \u003d new ArrayList\u003c\u003e(this.testExpenses);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"WilsonOh"},"content":"        controlExpense.sort((e1, e2) -\u003e Double.compare(e1.getAmount(), e2.getAmount()));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"WilsonOh"},"content":"        ArrayList\u003cExpense\u003e testingExpense \u003d this.testManager.getSortedExpenses(ExpenseManager.SORT_BY_PRICE);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"WilsonOh"},"content":"        assertEquals(controlExpense, testingExpense, \"Expenses are sorted by price correctly\");","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"varnika1402":12,"WilsonOh":53}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"varnika1402"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"victorouy"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"victorouy"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"varnika1402"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"varnika1402"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"varnika1402"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"varnika1402"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"varnika1402"},"content":"class ParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"varnika1402"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"varnika1402"},"content":"    public void addExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"varnika1402"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"varnika1402"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"varnika1402"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"varnika1402"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"varnika1402"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"varnika1402"},"content":"        String actualOutput \u003d expenseManager.get(0).toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"varnika1402"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"varnika1402"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"varnika1402"},"content":"    public void deleteExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"varnika1402"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"varnika1402"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"varnika1402"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"varnika1402"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"varnika1402"},"content":"        testExpenses.remove(0);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"varnika1402"},"content":"        Parser.executeDeleteExpense(expenseManager, \"delete expense id/1\");","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"varnika1402"},"content":"        assertEquals(testExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"victorouy"},"content":"    public void editExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"victorouy"},"content":"        Expense toAdd \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"victorouy"},"content":"        InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"victorouy"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"50\".getBytes());","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"victorouy"},"content":"        System.setIn(in);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"varnika1402"},"content":"        Parser.executeEditExpense(expenseManager, \"edit expense Movie id/1 in/amount\", testExpenses);","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"victorouy"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"victorouy"},"content":"        toAdd.setAmount(50);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"victorouy"},"content":"        String expectedOutput \u003d testExpenses.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.get(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"victorouy"},"content":"    public void listExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"victorouy"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"victorouy"},"content":"        Expense toAddFirst \u003d new Expense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"victorouy"},"content":"        Expense toAddSecond \u003d new Expense(\"Chicken\", 10, date, \"Food \u0026 Drinks\");","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAddFirst);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"victorouy"},"content":"        testExpenses.add(toAddSecond);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddExpense(\"add expense Chicken $/10 d/20220101\", expenseManager, 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"victorouy"},"content":"        assertEquals(testExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"varnika1402"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"varnika1402"},"content":"    public void listExpenseByCategory_successful() throws DukeException {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"WilsonOh"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e() {","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"WilsonOh"},"content":"            {","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"varnika1402"},"content":"                put(\"Food \u0026 Drinks\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"varnika1402"},"content":"                put(\"Shopping\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"varnika1402"},"content":"                put(\"Transportation\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"varnika1402"},"content":"                put(\"Life \u0026 Entertainment\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"varnika1402"},"content":"                put(\"Investments\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"varnika1402"},"content":"                put(\"Communication \u0026 Technology\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"varnika1402"},"content":"                put(\"Others\", 0.0);","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"WilsonOh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"WilsonOh"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"varnika1402"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"varnika1402"},"content":"        double amount \u003d 200;","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"varnika1402"},"content":"        String category \u003d \"Life \u0026 Entertainment\";","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"varnika1402"},"content":"        Parser.executeAddExpense(\"add expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"varnika1402"},"content":"        assertEquals(expenseByCategory.get(category.strip()), amount);","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"varnika1402"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"varnika1402"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"victorouy"},"content":"    public void setBalance_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"varnika1402"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(5000, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"victorouy"},"content":"        Parser.executeSetBudget(expenseManager, \"set balance $/5000\");","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"victorouy"},"content":"        assertEquals(5000, expenseManager.getTotalBalance());","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"victorouy"},"content":"    public void addFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"varnika1402"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"varnika1402"},"content":"        testFutureExpenses.add(toAdd);","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"varnika1402"},"content":"        String expectedOutput \u003d testFutureExpenses.get(0).toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.getFutureExpense(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"victorouy"},"content":"    public void deleteFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"varnika1402"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"varnika1402"},"content":"        testFutureExpenses.add(toAdd);","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"varnika1402"},"content":"        testFutureExpenses.remove(0);","lastModifiedDate":"2023-03-25"},{"lineNumber":183,"author":{"gitId":"victorouy"},"content":"        Parser.executeDeleteFutureExpense(expenseManager, \"delete future expense id/1\");","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"varnika1402"},"content":"        assertEquals(testFutureExpenses.size(), expenseManager.getSize());","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"victorouy"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"victorouy"},"content":"    public void editFutureExpense_successful() throws DukeException {","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cExpense\u003e testExpenses \u003d new ArrayList\u003cExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"varnika1402"},"content":"        ArrayList\u003cFutureExpense\u003e testFutureExpenses \u003d new ArrayList\u003cFutureExpense\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"varnika1402"},"content":"        Map\u003cString, Double\u003e expenseByCategory \u003d new HashMap\u003cString, Double\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"victorouy"},"content":"        LocalDate date \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"victorouy"},"content":"        FutureExpense toAdd \u003d new FutureExpense(\"Movie\", 200, date, \"Life \u0026 Entertainment\");","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"varnika1402"},"content":"        ExpenseManager expenseManager \u003d new ExpenseManager(0, testExpenses, testFutureExpenses, expenseByCategory);","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"victorouy"},"content":"        Parser.executeAddFutureExpense(\"add future expense Movie $/200 d/20220101\", expenseManager, 4);","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"victorouy"},"content":"        InputStream sysInBackup \u003d System.in;","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"victorouy"},"content":"        ByteArrayInputStream in \u003d new ByteArrayInputStream(\"50\".getBytes());","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"victorouy"},"content":"        System.setIn(in);","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"varnika1402"},"content":"        Parser.executeEditFutureExpense(expenseManager, \"edit future expense Movie id/1 in/amount\", testFutureExpenses);","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"victorouy"},"content":"        System.setIn(sysInBackup);","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"victorouy"},"content":"        toAdd.setAmount(50);","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"varnika1402"},"content":"        testFutureExpenses.add(toAdd);","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"varnika1402"},"content":"        String expectedOutput \u003d testFutureExpenses.get(0).toString();","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"victorouy"},"content":"        String actualOutput \u003d expenseManager.getFutureExpense(0).toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"victorouy"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"victorouy"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"victorouy"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"varnika1402"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"varnika1402":115,"WilsonOh":22,"victorouy":71}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"WilsonOh"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"WilsonOh"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"WilsonOh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"WilsonOh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"WilsonOh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"WilsonOh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"WilsonOh"},"content":"public class StorageTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"WilsonOh"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"WilsonOh"},"content":"    public void storageFilesCreated_successful() {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"WilsonOh"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"WilsonOh"},"content":"        Path storageFileDir \u003d Path.of(\"\").resolve(Storage.DATA_DIR_NAME).toAbsolutePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"WilsonOh"},"content":"        assertTrue(Files.exists(storageFileDir));","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"WilsonOh"},"content":"        Path storageFile \u003d storageFileDir.resolve(Storage.DATA_FILE_NAME);","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"WilsonOh"},"content":"        assertTrue(Files.exists(storageFile));","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"WilsonOh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"WilsonOh"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"WilsonOh":19}}]
