[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"Budget Manager","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"namsengi11":1,"-":63}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display |   Name    | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"sistine-yu"},"content":"--------|:---------:|:--------------:|:---------:","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"sistine-yu"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Yu Sichen | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Don Joe  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Ron John  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Sangjun Nam  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Don Roe  | [Github](https://github.com/) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"sistine-yu":2,"namsengi11":1,"-":6}},{"path":"src/main/java/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"public class Expense {","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"    private double cost;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"    private String info;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    private String time;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"    public Expense(double cost, String info, String time) {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"        this.info \u003d info;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"     * Edits cost entry of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"     * @param newCost New desired cost of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"    public void editCost(double newCost) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"        this.cost \u003d newCost;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"     * Edits information entry of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"     * @param newInfo New desired information of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"    public void editInfo(String newInfo) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"        this.info \u003d newInfo;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"     * Edits time entry of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"     * @param newTime New desired time of the expense","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"    public void editTime(String newTime) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"        this.time \u003d newTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"    public double getCost() {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"namsengi11"},"content":"        return this.cost;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"namsengi11"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"namsengi11"},"content":"        return String.format(\"$%.2f spent on %s - %s\", cost, info, time);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"namsengi11":46}},{"path":"src/main/java/ExpenseCostComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"public class ExpenseCostComparator implements Comparator\u003cExpense\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"    public int compare(Expense e1, Expense e2) {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"        return (int)((e2.getCost() - e1.getCost()) * 100);","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"namsengi11":8}},{"path":"src/main/java/Expenses.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"namsengi11"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"namsengi11"},"content":"public class Expenses {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"namsengi11"},"content":"    private final LinkedList\u003cExpense\u003e expenseList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"namsengi11"},"content":"    public Expenses() {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"namsengi11"},"content":"        this.expenseList \u003d new LinkedList\u003cExpense\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"namsengi11"},"content":"     * Adds new expense to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"namsengi11"},"content":"     * @param newExpense new expense to be added","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"namsengi11"},"content":"    public void addExpense(Expense newExpense) {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"namsengi11"},"content":"        expenseList.add(newExpense);","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"namsengi11"},"content":"     * lists out expenses in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"namsengi11"},"content":"    public void listExpense() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"namsengi11"},"content":"        this.sortExpenses();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"namsengi11"},"content":"        System.out.println(\"Here are the expenses you have made\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"namsengi11"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"namsengi11"},"content":"        for (Expense expenseLog : expenseList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"namsengi11"},"content":"            String message \u003d String.format(\"%s. %s\", Integer.toString(counter), expenseLog.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"namsengi11"},"content":"            System.out.println(message + \u0027\\n\u0027);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"namsengi11"},"content":"            counter++;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"namsengi11"},"content":"     * deletes specific expense in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"namsengi11"},"content":"     * @param expenseIndex Index of the expense in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"namsengi11"},"content":"    public void deleteExpense(int expenseIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"namsengi11"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"namsengi11"},"content":"            expenseList.remove(expenseIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Successfully deleted expense.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"namsengi11"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Invalid index! Please try again.\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"namsengi11"},"content":"     * Edits a specific index in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"namsengi11"},"content":"     * @param type entry type of the expense to be changed","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"namsengi11"},"content":"     * @param expenseIndex index of the expense in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"namsengi11"},"content":"     * @param newEntry new entry that will replace current entry","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"namsengi11"},"content":"    public void editExpense(String type, int expenseIndex, double newEntry) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"namsengi11"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"namsengi11"},"content":"            Expense expenseBeingEdited \u003d expenseList.get(expenseIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"namsengi11"},"content":"            switch (type) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"namsengi11"},"content":"            case \"cost\": expenseBeingEdited.editCost(newEntry);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"namsengi11"},"content":"                         break;","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"namsengi11"},"content":"            default: System.out.println(\"Invalid type parameter!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Successfully edited expense.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"namsengi11"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Invalid index! Please try again.\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"namsengi11"},"content":"     * Edits a specific index in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"namsengi11"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"namsengi11"},"content":"     * @param type entry type of the expense to be changed","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"namsengi11"},"content":"     * @param expenseIndex index of the expense in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"namsengi11"},"content":"     * @param newEntry new entry that will replace current entry","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"namsengi11"},"content":"    public void editExpense(String type, int expenseIndex, String newEntry) {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"namsengi11"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"namsengi11"},"content":"            Expense expenseBeingEdited \u003d expenseList.get(expenseIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"namsengi11"},"content":"            switch (type) {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"namsengi11"},"content":"            case \"info\": expenseBeingEdited.editInfo(newEntry);","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"namsengi11"},"content":"                         break;","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"namsengi11"},"content":"            case \"time\": expenseBeingEdited.editTime(newEntry);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"namsengi11"},"content":"                         break;","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"namsengi11"},"content":"            default: System.out.println(\"Invalid type parameter!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"namsengi11"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Successfully edited expense.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"namsengi11"},"content":"        } catch (IndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"namsengi11"},"content":"            System.out.println(\"Invalid index! Please try again.\\n\");","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"namsengi11"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"namsengi11"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"namsengi11"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"namsengi11"},"content":"     * Sorts expenses using Expense comparator","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"namsengi11"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"namsengi11"},"content":"    public void sortExpenses() {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"namsengi11"},"content":"        this.expenseList.sort(new ExpenseCostComparator());","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"namsengi11"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"namsengi11"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"namsengi11":98}}]
