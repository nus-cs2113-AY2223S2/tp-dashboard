[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"| Display                                             |      Name      |               Github Profile                |             Portfolio             |","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"|-----------------------------------------------------|:--------------:|:-------------------------------------------:|:---------------------------------:|","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Clement Siut  |   [Github](https://github.com/clement559)   | [Portfolio](docs/team/clement.md) |","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |     Jerome     | [Github](https://github.com/jeromeongithub) |     [Portfolio](NOPORTFOLIO)      |","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) | Seow Rui Sheng |  [Github](https://github.com/RuiShengGit)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |  Kedrian Loh   |   [Github](https://github.com/KedrianLoh)   | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"| ![](https://via.placeholder.com/100.png?text\u003dPhoto) |   Er Jun Ze    |    [Github](https://github.com/ERJUNZE)     | [Portfolio](docs/team/johndoe.md) |","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ERJUNZE":7,"-":2}},{"path":"src/main/java/seedu/duke/ConversionErrorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"public class ConversionErrorException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":4}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.command.CommandParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"    private static boolean isInUse \u003d true;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d Storage.loadData(\"./data.txt\", ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"            ui.printFileNotFoundMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"        } catch (ConversionErrorException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"            ui.printLoadingErrorMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"        try (Scanner in \u003d new Scanner(System.in)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"            while (isInUse) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"                String userInput \u003d in.nextLine();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"                Command parsedCommand \u003d CommandParser.parseCommand(userInput, taskList);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"                parsedCommand.execute(taskList, ui);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"                try {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"                    Storage.saveData(\"./data.txt\", taskList, ui);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"                    ui.printSavingErrorMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"                isInUse \u003d !parsedCommand.isExit();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":23,"ERJUNZE":6,"-":7,"RuiShengGit":6}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import java.io.File;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"// This class was largely based off the Storage classes from jeromeongithub/ip and erjunze/ip.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"// The supporting code e.g. toSaveString() methods in TaskList and Task class were largely based off erjunze/ip.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":" * A class for saving the task list as a text file and loading it.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"public abstract class Storage {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"    public static final String DELIMITER \u003d \"\\u001D\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"    // code provided by module website","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"    private static void writeToFile(String filepath, String textToAdd) throws IOException {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"        fw.close();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"     * Writes the current task list to the local save file.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"     * @param filepath The path of the local save file.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"     * @param taskList The task list being saved.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"     * @param ui       The Ui object used in Duke to interact with the user.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"    public static void saveData(String filepath, TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"            writeToFile(filepath, taskList.toSaveString());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"            throw new IOException();","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"    public static TaskList loadData(String filepath, Ui ui) throws FileNotFoundException, ConversionErrorException {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"            File f \u003d new File(filepath);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"                String tasksInStringFormat \u003d s.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"                taskList.addTask(convertStringToTask(tasksInStringFormat));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"            ui.listTasks(taskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"            return taskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"        } catch (ConversionErrorException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"            throw new ConversionErrorException();","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    private static boolean isInvalidSaveString(String[] splitTasks, int expectedArgs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"        return splitTasks.length !\u003d expectedArgs || !(splitTasks[0].equals(\"1\") || splitTasks[0].equals(\"0\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"    private static Task convertStringToTask(String taskString) throws ConversionErrorException {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"        String[] splitTasks \u003d taskString.split(DELIMITER);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"        Task task;","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"        if (isInvalidSaveString(splitTasks, 3)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"            throw new ConversionErrorException();","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"        task \u003d new Task(splitTasks[1], splitTasks[2]);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"        task.setDone(splitTasks[0].equals(\"1\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"        return task;","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":76}},{"path":"src/main/java/seedu/duke/command/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"public class AddTaskCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    public static final String KEYWORD \u003d \"add\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    public static final HashSet\u003cString\u003e FLAGS \u003d new HashSet\u003c\u003e(Arrays.asList(KEYWORD, \"-d\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    private String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private String deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public AddTaskCommand(String[] splitInput){","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        HashMap\u003cString, String\u003e args \u003d CommandParser.getArguments(splitInput, FLAGS);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"        description \u003d args.get(KEYWORD);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        deadline \u003d CommandParser.formatDateTime(args.get(\"-d\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        if (description.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Ui ui){","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        Task task \u003d new Task(description, deadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        ui.printAddTaskNotification(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"RuiShengGit":16,"clement559":15}},{"path":"src/main/java/seedu/duke/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Parent class for Command objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    public abstract void execute(TaskList taskList, Ui ui);","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     * Returns whether a command, by default, should terminate the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @return \u003ccode\u003eFalse\u003c/code\u003e, since most commands should not terminate the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"        return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":1,"ERJUNZE":22}},{"path":"src/main/java/seedu/duke/command/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":" * Class containing a method for parsing the commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"public class CommandParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * Splits the initial command string into its arguments.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @param splitInput The command string, split into words.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @param flags Map of flags of the arguments that the command string are expected to contain.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     * @return Map of flags to arguments extracted from the command string.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public static HashMap\u003cString, String\u003e getArguments(String[] splitInput, HashSet\u003cString\u003e flags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        HashMap\u003cString, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner currentArgument \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        String currentFlag \u003d splitInput[0];","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"            // Append to current argument if current word is not a new flag.","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"            if (!flags.contains(splitInput[i])) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"                currentArgument.add(splitInput[i]);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"                continue;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"            // Repeating flags are not allowed.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"            if (arguments.containsKey(splitInput[i]) || currentFlag.equals(splitInput[i])) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"                // Unimplemented exception, break as placeholder","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"            // Add current flag-argument combo to argument list if current word is a new flag.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"            arguments.put(currentFlag, currentArgument.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"            currentArgument \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"            currentFlag \u003d splitInput[i];","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"        // Add last flag-argument combo to argument list.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"        arguments.put(currentFlag, currentArgument.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        return arguments;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    // Adapted from Clement559 iP","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"    public static String formatDateTime(String date) throws DateTimeParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"        DateTimeFormatter dateTimeFormatterInput \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu HH:mm\");","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"        DateTimeFormatter dateTimeFormatterOutput \u003d DateTimeFormatter.ofPattern(\"LLL dd uuuu HH:mm\");","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date, dateTimeFormatterInput);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        String formattedDateTime \u003d dateTime.format(dateTimeFormatterOutput);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        return formattedDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     * Parses the given command string into a command that can be executed.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"     * @param input The unparsed command string.","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"     * @return A command that can be executed by calling the run() method.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"    public static Command parseCommand(String input, TaskList taskList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"        String[] splitInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \").split(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"        case AddTaskCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"            return checkValidityAdd(splitInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"        case ListTasksCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"        case MarkTaskCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"            return new MarkTaskCommand(splitInput);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"        case UnmarkTaskCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"            return new UnmarkTaskCommand(splitInput);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"clement559"},"content":"        case EditDeadlineCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"clement559"},"content":"            return checkValidityEdit(splitInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"        case DeleteCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"            return new DeleteCommand(splitInput, taskList);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"        case ExitCommand.KEYWORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"clement559"},"content":"    public static Command checkValidityAdd (String[] splitInput) {","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"clement559"},"content":"            return new AddTaskCommand(splitInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"clement559"},"content":"        } catch (NullPointerException | DateTimeParseException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"clement559"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"clement559"},"content":"    public static Command checkValidityEdit (String[] splitInput) {","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"clement559"},"content":"            return new EditDeadlineCommand(splitInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"clement559"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"clement559"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ERJUNZE":59,"RuiShengGit":10,"clement559":35}},{"path":"src/main/java/seedu/duke/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"    public static final String KEYWORD \u003d \"delete\";","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    public DeleteCommand(String[] command, TaskList taskList){","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"        if (command[1].isEmpty()){","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()){","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        ui.printDeleteTaskNotification(taskList, index);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"RuiShengGit":24}},{"path":"src/main/java/seedu/duke/command/EditDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"public class EditDeadlineCommand extends Command  {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    public static final String KEYWORD \u003d \"editdeadline\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    public static final HashSet\u003cString\u003e FLAGS \u003d new HashSet\u003c\u003e(Arrays.asList(KEYWORD, \"-d\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    public static int index;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    public static String deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public EditDeadlineCommand(String[] splitInput) throws NumberFormatException, DateTimeParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        HashMap\u003cString, String\u003e args \u003d CommandParser.getArguments(splitInput, FLAGS);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"        index \u003d Integer.parseInt(args.get(KEYWORD)) - 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        deadline \u003d CommandParser.formatDateTime(args.get(\"-d\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        /*if (deadline.isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"            ui.printDateTimeError();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        else if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"            ui.printIndexError();","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        else { */","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"            String taskItem \u003d taskList.editDeadline(index, deadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"            ui.printEditDeadlineNotification(taskItem);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"            ui.printIndexError();","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"ERJUNZE":1,"clement559":37}},{"path":"src/main/java/seedu/duke/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Command for terminating the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    public static final String KEYWORD \u003d \"bye\";","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the program\u0027s shutdown message.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * Returns whether this command should terminate the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     * @return \u003ccode\u003eTrue\u003c/code\u003e, since this is the exit command.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"ERJUNZE":26,"RuiShengGit":1}},{"path":"src/main/java/seedu/duke/command/InvalidCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Command generated and run when there is an error with parsing the command.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"     * Displays a generic error message.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"        ui.printErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":2,"ERJUNZE":14}},{"path":"src/main/java/seedu/duke/command/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * Command for displaying the current task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    public static final String KEYWORD \u003d \"list\";","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the current task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"        ui.listTasks(taskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"ERJUNZE":17}},{"path":"src/main/java/seedu/duke/command/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class MarkTaskCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    public static final String KEYWORD \u003d \"mark\";","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    public MarkTaskCommand(String[] command){","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"        isDone \u003d command[0].equals(\"mark\");","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        ui.printMarkTaskNotification(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"RuiShengGit":22}},{"path":"src/main/java/seedu/duke/command/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class UnmarkTaskCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    public static final String KEYWORD \u003d \"unmark\";","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"    private int index;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    public UnmarkTaskCommand(String[] command){","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"        index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"        isDone \u003d command[0].equals(\"mark\");","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        task.setDone(isDone);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        ui.printUnmarkTaskNotification(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":1,"RuiShengGit":22}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"public class Task {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"     * Compares the task1 deadline and task2 deadline. Used for sorting the ArrayList tasks by deadline.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"    public static Comparator\u003cTask\u003e TaskDeadlineComparator \u003d new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"        public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"            return task1.deadline.compareTo(task2.deadline);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"    };","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"    private String description;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"    private String deadline;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    public Task(String description, String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"        return this.description;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        return this.deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"        return this.isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    public void editDeadline (String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" due by: \" + deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"        StringJoiner saveString \u003d new StringJoiner(Storage.DELIMITER);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"        String[] taskParameters \u003d {isDone ? \"1\" : \"0\", description, deadline};","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"        for (String string : taskParameters) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"            saveString.add(string);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"        return saveString.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":29,"KedrianLoh":15,"ERJUNZE":7,"clement559":10}},{"path":"src/main/java/seedu/duke/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" * A list of Task objects representing the current list of tasks.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"public class TaskList {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    public TaskList(){","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the number of tasks in this task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * @return The number of tasks in this task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public int size() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.size();","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the task at the given index of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task to return.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * @return The task at the given index of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.get(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"     * Appends the given task to the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task that was added.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        return task.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the completion status of the task at the given index of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task whose completion status should be set.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"     * @param isDone Whether the task should be marked as completed.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task whose completion status was set.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"    public String setDone(int index, boolean isDone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"        tasks.get(index).setDone(isDone);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     * Deletes the task at the given index of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task that was deleted.","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d tasks.get(index).toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"        return taskString;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"     * Replace deadline of task at the given index of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"clement559"},"content":"     * @param index The index of the task whose deadline should be changed.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"clement559"},"content":"     *              Must be between 1 and the size of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"clement559"},"content":"     * @return String representation of the task whose deadline was changed.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"clement559"},"content":"    public String editDeadline(int index, String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"clement559"},"content":"        tasks.get(index).editDeadline(deadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"clement559"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the task list into its string representation.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner taskListString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"            taskListString.add((i + 1) + \".\" + getTask(i).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"        return taskListString.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"jeromeongithub"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"jeromeongithub"},"content":"        StringJoiner taskListString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"jeromeongithub"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jeromeongithub"},"content":"            taskListString.add(getTask(i).toSaveString());","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jeromeongithub"},"content":"        return taskListString.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"KedrianLoh"},"content":"     * Sorts the ArrayList tasks, by the corresponding Task deadlines","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"KedrianLoh"},"content":"    public void sortTaskList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"KedrianLoh"},"content":"        tasks.sort(Task.TaskDeadlineComparator);","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":8,"KedrianLoh":7,"ERJUNZE":80,"RuiShengGit":5,"clement559":12}},{"path":"src/main/java/seedu/duke/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"package seedu.duke.ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"public class Ui {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Hello, I am Duke and I will help you remember the tasks you need to do!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"For now, you can do the following:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Add a task using: add \u003cdescription\u003e -d \u003cdeadline\u003e\");","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"List all tasks using: list\");","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Mark a task as done using: mark \u003cindex\u003e\");","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Mark a task as undone using: unmark \u003cindex\u003e\");","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Edit a task deadline using: editdeadline \u003cindex\u003e -d \u003cdeadline\u003e\");","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Exit the program using: bye\");","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println();","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"        System.out.print(\"See you again, bye!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    public void printAddTaskNotification(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Got it, I have added the following task:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    public void printMarkTaskNotification(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Got it, I have marked the following task as done:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"    public void printUnmarkTaskNotification(Task task) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Got it, I have marked the following task as undone:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    public static void printEditDeadlineNotification(String taskItem) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        System.out.println(\"Okay, I have edited the deadline for the following task:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        System.out.println(taskItem);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    public void printDeleteTaskNotification(TaskList taskList, int index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        Task task \u003d taskList.getTask(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"    public void listTasks(TaskList taskList) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"            printEmptyList();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"KedrianLoh"},"content":"            taskList.sortTaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(taskList);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"    public void printEmptyList(){","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"There are no tasks in the list.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Error encountered! Please type in a valid command!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"    public void printDateTimeError() {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"        System.out.println(\"The date provided must be of the following format: dd-MM-yyyy HH:MM.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"    public static void printIndexError() {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"        System.out.println(\"You provided an invalid index.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"    public static void printParametersError() {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"clement559"},"content":"        System.out.println(\"You did not provide the correct parameters for this function.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"    public void printSavingErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Error encountered while saving!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"    public void printFileNotFoundMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"No save file was found. Creating a new list and save file \u0027data.txt\u0027 for you to use.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"    public void printLoadingErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"        System.out.println(\"Error encountered while loading your saved file! Creating a new list for you to use.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":48,"KedrianLoh":1,"ERJUNZE":7,"RuiShengGit":18,"clement559":16}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"package seedu.duke;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.command.AddTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.command.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import java.io.File;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"class StorageTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"./src/test/data\"; // this is also a directory","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"    private static final String ACTUAL_SAVE_FILE \u003d \"./src/test/data/actualSaveFile.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"    private static final String EXPECTED_SAVE_FILE \u003d \"./src/test/data/expectedSaveFile.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"    private static final String VALID_DATA_FILE \u003d \"./src/test/data/validData.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"    private static final String INVALID_DATA_FILE \u003d \"./src/test/data/invalidData.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"    private static final String NON_EXISTENT_FILE \u003d \"./src/test/data/doesNotExist.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"    private static final String NEW_SAVE_FILE_FOR_COMPARISON \u003d \"./src/test/data/newSaveFileAfterLoading.txt\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    void saveData_properFilePath_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"            String[] sampleInput1 \u003d {\"add\", \"bubu\", \"-d\", \"18-02-2022\", \"18:00\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"            String[] sampleInput2 \u003d {\"add\", \"baba\", \"-d\", \"12-05-2023\", \"17:00\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"            Command addTaskCommand1 \u003d new AddTaskCommand(sampleInput1);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"            Command addTaskCommand2 \u003d new AddTaskCommand(sampleInput2);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"            addTaskCommand1.execute(taskList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"            addTaskCommand2.execute(taskList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"            Storage.saveData(ACTUAL_SAVE_FILE, taskList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"            File f1 \u003d new File(ACTUAL_SAVE_FILE);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"            File f2 \u003d new File(EXPECTED_SAVE_FILE);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"            Scanner s1 \u003d new Scanner(f1);","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"            Scanner s2 \u003d new Scanner(f2);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"            boolean isActualSaveEqualExpectedSave \u003d true;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"            while (s1.hasNext() \u0026\u0026 s2.hasNext()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"                String line1 \u003d s1.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"                String line2 \u003d s2.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"                if (!line1.equals(line2)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"                    isActualSaveEqualExpectedSave \u003d false;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"            assertEquals(true, isActualSaveEqualExpectedSave);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"            fail();","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"    void saveData_directoryAsFilePath_exceptionThrown() { // if the path exists but is a directory, not a regular file","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"            Storage.saveData(TEST_DATA_FOLDER, taskList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(\"Directory cannot be opened\");","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"    void loadData_fileWithInvalidData_exceptionThrown() {","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d Storage.loadData(INVALID_DATA_FILE, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"            fail(); // should not reach this line","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"            if (e instanceof ConversionErrorException) {","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"                ui.printLoadingErrorMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"    void loadData_nonExistentFile_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d Storage.loadData(NON_EXISTENT_FILE, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"            fail(); // should not reach this line","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"            if (e instanceof FileNotFoundException) {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"                ui.printFileNotFoundMessage();","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"jeromeongithub"},"content":"    void loadData_fileWithValidData_taskListCreated() {","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d Storage.loadData(VALID_DATA_FILE, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"jeromeongithub"},"content":"            Storage.saveData(NEW_SAVE_FILE_FOR_COMPARISON, taskList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"jeromeongithub"},"content":"            File f1 \u003d new File(VALID_DATA_FILE);","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"jeromeongithub"},"content":"            File f2 \u003d new File(NEW_SAVE_FILE_FOR_COMPARISON);","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"jeromeongithub"},"content":"            Scanner s1 \u003d new Scanner(f1);","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"jeromeongithub"},"content":"            Scanner s2 \u003d new Scanner(f2);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"jeromeongithub"},"content":"            boolean isActualSaveEqualExpectedSave \u003d true;","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"jeromeongithub"},"content":"            while (s1.hasNext() \u0026\u0026 s2.hasNext()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"jeromeongithub"},"content":"                String line1 \u003d s1.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"jeromeongithub"},"content":"                String line2 \u003d s2.nextLine();","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"jeromeongithub"},"content":"                if (!line1.equals(line2)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"jeromeongithub"},"content":"                    isActualSaveEqualExpectedSave \u003d false;","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"jeromeongithub"},"content":"                }","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"jeromeongithub"},"content":"            assertEquals(true, isActualSaveEqualExpectedSave);","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"jeromeongithub"},"content":"            fail(); // should not reach this line","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jeromeongithub":113}},{"path":"src/test/java/seedu/duke/command/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"class AddTaskCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private static TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private final  String DATE_EXAMPLE \u003d \"06-04-2000\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    private final  String TIME_EXAMPLE \u003d \"23:59\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private final String KEYWORD \u003d \"add\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    private final String SPLITTER \u003d \"-d\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    public void addTask_emptydescription_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        final String emptyDescription \u003d \"\";","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        String[] testString \u003d {KEYWORD, emptyDescription, SPLITTER, DATE_EXAMPLE, TIME_EXAMPLE};","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"        assertConstructingEmptyDescriptionAddCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    public void addTask_invaliddate_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        final String[] invalidDates \u003d {\"03/02/2032\", \"493430\", \"2013-12-22\", \"1023-43-22\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        for (String date : invalidDates) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"            String[] testString \u003d {KEYWORD, \"0\", SPLITTER, date, TIME_EXAMPLE};","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"            assertConstructingInvalidAddDateTimeCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    public void addTask_invalidtime_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"        final String[] invalidTimes \u003d {\"1000\", \"493430\", \"9AM\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        for (String time : invalidTimes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            String[] testString \u003d {KEYWORD, \"0\", SPLITTER, DATE_EXAMPLE, time};","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"            assertConstructingInvalidAddDateTimeCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"    private void assertConstructingInvalidAddDateTimeCmdThrowsException(String[] testString) {","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"            Command testAdd \u003d new AddTaskCommand(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"            testAdd.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        } catch (NumberFormatException | DateTimeParseException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        String error \u003d String.format(\"An edit command was successfully constructed with invalid input: %s %s %s \",","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"                testString[1], testString[3], testString[4]);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"        fail(error);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"    private void assertConstructingEmptyDescriptionAddCmdThrowsException(String[] testString) {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"            Command testAdd \u003d new AddTaskCommand(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"            testAdd.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"        String error \u003d String.format(\"An edit command was successfully constructed with invalid input: %s %s %s \",","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"                testString[1], testString[3], testString[4]);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"        fail(error);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jeromeongithub":1,"clement559":65}},{"path":"src/test/java/seedu/duke/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    private static TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"    private final String KEYWORD \u003d \"delete\";","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    private final String[] sampleTask \u003d {\"add\", \"something\", \"-d\", \"06-04-2000\", \"23:59\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public void deleteTask_emptyIndex () {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"        final String emptyIndex \u003d \"\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"        String[] testString \u003d {KEYWORD, emptyIndex};","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"        assertConstructingEmptyIndexDeleteCmd(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    public void deleteTask_invalidIndex () {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidIndex \u003d {\"1000\", \"-1\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        for (String index : invalidIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"            String[] testString \u003d {KEYWORD, index};","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"            assertConstructingInvalidIndex(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"    private void assertConstructingEmptyIndexDeleteCmd(String[] testString){","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        Command testAdd \u003d new AddTaskCommand(sampleTask);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        testAdd.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"            Command testDelete \u003d new DeleteCommand(testString, testList);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"            testDelete.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"        String error \u003d String.format(\"A delete command was successfully constructed with invalid input: %s \",","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"                testString[1]);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        fail(error);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"    private void assertConstructingInvalidIndex(String[] testString) {","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        Command testAdd \u003d new AddTaskCommand(sampleTask);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"        testAdd.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"            Command testDelete \u003d new DeleteCommand(testString, testList);","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"            testDelete.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"        String error \u003d String.format(\"A delete command was successfully constructed with invalid input: %s \",","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                testString[1]);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"        fail(error);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"RuiShengGit":58}},{"path":"src/test/java/seedu/duke/command/EditDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package seedu.duke.command;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.duke.ui.Ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.duke.task.TaskList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"public class EditDeadlineCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    private static TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    private final String DATE_EXAMPLE \u003d \"06-04-2000\";","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private final String TIME_EXAMPLE \u003d \"23:59\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    private final String KEYWORD \u003d \"editdeadline\";","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private final String SPLITTER \u003d \"-d\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    public void editDeadline_charsindex_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"        final String[] invalidIndexes \u003d {\"\", \"]\", \"wq\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"        generateTestList();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"        for (String index : invalidIndexes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"            String[] testString \u003d {KEYWORD, index, SPLITTER, DATE_EXAMPLE, TIME_EXAMPLE};","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"            assertConstructingInvalidEditCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    public void editDeadline_invaliddate_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        final String[] invalidDates \u003d {\"03/02/2032\", \"493430\", \"2013-12-22\", \"1023-43-22\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        generateTestList();","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"        for (String date : invalidDates) {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"            String[] testString \u003d {KEYWORD, \"0\", SPLITTER, date, TIME_EXAMPLE};","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"            assertConstructingInvalidEditCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    public void editDeadline_invalidtime_throwsException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        final String[] invalidTimes \u003d {\"1000\", \"493430\", \"9AM\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        generateTestList();","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        for (String time : invalidTimes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            String[] testString \u003d {KEYWORD, \"0\", SPLITTER, DATE_EXAMPLE, time};","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"            assertConstructingInvalidEditCmdThrowsException(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"     * Asserts that attempting to construct an edit deadline command with invalid","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"     * index number or date or time throws an IndexOutOfBoundsException, DateTimeParseException","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    private void assertConstructingInvalidEditCmdThrowsException(String[] testString) {","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            Command testEdit \u003d new EditDeadlineCommand(testString);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"            testEdit.execute(testList, ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"        }catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"            return;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"        String error \u003d String.format(\"An edit command was successfully constructed with invalid input: %s %s %s \",","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"                testString[1], testString[3], testString[4]);","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"        fail(error);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    private void generateTestList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"        String[] testInput \u003d {\"add\", \"Test\", \"Input\", \"-d\", \"02-02-2023\", \"18:00\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"        Command addTask \u003d new AddTaskCommand(testInput);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"        addTask.execute(testList,ui);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"jeromeongithub":1,"clement559":73}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"pause","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"ERJUNZE":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"rm data.txt","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"diff \u003c(tr -d \u0027\\r\u0027 \u003cACTUAL.TXT) \u003c(tr -d \u0027\\r\u0027 \u003cEXPECTED.TXT)","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ERJUNZE":2,"-":20}}]
