[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"# NUS To-Do List","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"[![Java CI](https://github.com/AY2223S2-CS2113-T11-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2113-T11-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"With the transition to Canvas, the most important feature of LumiNUS’s deadline reminders is gone! **NUS To-Do List** aims to","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"bring an application to keep you aware of your deadlines and not miss them.","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"Useful links:","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"- [User Guide](https://ay2223s2-cs2113-t11-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"- [Developer Guide](https://ay2223s2-cs2113-t11-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"- [About Us](https://ay2223s2-cs2113-t11-4.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"ERJUNZE":8,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.9.2\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"    implementation \u0027com.google.code.gson:gson:2.10.1\u0027 // gson dependency","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    mainClass \u003d \"seedu.todolist.Main\"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    archiveBaseName \u003d \"todolist\"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeromeongithub":3,"ERJUNZE":3,"-":42}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"| Display                             |      Name      |               Github Profile                |              Portfolio              |","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"|-------------------------------------|:--------------:|:-------------------------------------------:|:-----------------------------------:|","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"| ![](images/PlaceholderPortrait.png) |  Clement Siut  |   [Github](https://github.com/clement559)   |   [Portfolio](team/clement559.md)   |","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"| ![](images/PlaceholderPortrait.png) |   Jerome Foo   | [Github](https://github.com/jeromeongithub) | [Portfolio](team/jeromeongithub.md) |","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"| ![](images/PlaceholderPortrait.png) | Seow Rui Sheng |  [Github](https://github.com/RuiShengGit)   |  [Portfolio](team/ruishenggit.md)   |","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"| ![](images/PlaceholderPortrait.png) |  Kedrian Loh   |   [Github](https://github.com/KedrianLoh)   |   [Portfolio](team/kedrianloh.md)   |","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"| ![](images/PlaceholderPortrait.png) |   Er Jun Ze    |    [Github](https://github.com/ERJUNZE)     |    [Portfolio](team/erjunze.md)     |","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ERJUNZE":7,"-":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"## Table of Contents","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"* Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"{:toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"Adapted from [AddressBook Level 3 Developer Guide](https://se-education.org/addressbook-level3/DeveloperGuide.html)","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"## Setup","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"### Setting up the project on your computer","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"First, **fork** [this repo](https://github.com/AY2223S2-CS2113-T11-4/tp.git), and **clone** the fork into your computer.","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"   - Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"1. **Verify the setup**: Run `Main` and try a few commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"## Design","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"\u003e The `.puml` files used to create the diagrams in this guide can be found in the [diagrams](https://github.com/AY2223S2-CS2113-T11-4/tp/tree/master/docs/diagrams) folder.","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"### Architecture","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"![ArchitectureDiagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"The above diagram provides a high-level overview of the program\u0027s design, which consists of 5 main components.","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"- [`ToDoListManager`](#manager-component): Initializes the other components and connects them together","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"- [`UI`](#ui-component): Handles all input and output between the user and the program","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"- [`Logic`](#logic-component): Parses user input to commands and executes them","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"- [`TaskList`](#model-component): Holds the program\u0027s data in memory","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"- [`Storage`](#storage-component): Saves data to the hard disk and loads it during the program\u0027s startup","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"### Manager Component","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"The code for this component is found in [`ToDoListManager.java`](https://github.com/AY2223S2-CS2113-T11-4/tp/blob/master/src/main/java/seedu/todolist/ToDoListManager.java).","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"![ManagerClassDiagram](images/ManagerClassDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"The `ToDoListManager` component contains the `Ui`, `Logic`, `Model`, and `Storage` components, and depends","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"on the `Command` class, which is returned by the `Parser` class and executed by the `ToDoListManager`.","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"The `ToDoListManager` component,","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"- initializes all the other components that it operates on (`Ui`, `Parser`, `Model`, `Storage`).","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"- passes user input from the `Ui` component to the `Logic` component, which returns a `Command` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"- executes the returned `Command` object on the `Model` component, using the `Logic` component.","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"- calls on the `Storage` component to save the data of the `Model` component locally.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"### Ui component","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"The code for this component is found in [`Ui.java`](https://github.com/AY2223S2-CS2113-T11-4/tp/blob/master/src/main/java/seedu/todolist/ui/Ui.java).","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"![UiClassDiagram](images/UiClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"The `Ui` component consists of just the `Ui` class.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"The `Ui` component,","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"- gets the user\u0027s input with the `getUserInput()` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"- displays output from executing a `Command` using the `println()` method.","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"- closes the `Scanner` used to get user input when `close()` is called.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"### Logic component","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"The code for this component is found [here](https://github.com/AY2223S2-CS2113-T11-4/tp/blob/master/src/main/java/seedu/todolist/logic).","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"![LogicClassDiagram](images/LogicClassDiagram.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"The `Logic` component contains the `Parser`, `Command`, `ParserUtil`, and `FormatterUtil` classes, as well as","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"extensions of the `Command` class like the `AddTaskCommand`, `ListTagsCommand`, and `EditEmailCommand` subclasses.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"The `Logic` component,","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"- parses user input through the `Parser` and `ParserUtil` classes, returning a `Command` object (such as an `AddTaskCommand`).","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"- operates on the `TaskList` and `Config` classes, if needed, when a `Command` is executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"- invokes the `Ui` component to display the result of executing a `Command`.","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"### Model component","lastModifiedDate":"2023-04-09"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"The code for this component is found in [here](https://github.com/AY2223S2-CS2113-T11-4/tp/blob/master/src/main/java/seedu/todolist/model).","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"![ModelClassDiagram](images/ModelClassDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"The `Model` component contains the `Config`, `TaskList`, and `Task` classes, and the `Priority` enum.","lastModifiedDate":"2023-04-09"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"The `Model` component,","lastModifiedDate":"2023-04-09"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"- stores the user\u0027s recurrence-related config settings within the `Config`.","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"- stores the user\u0027s tasks within the `TaskList`, which it can operate on.","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"The `Task` class consists of several attributes:","lastModifiedDate":"2023-04-09"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"- An `id`, which is a unique positive `int`.","lastModifiedDate":"2023-04-09"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"- A `description`, which is a non-empty `String`.","lastModifiedDate":"2023-04-09"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"- An optional `email address`, which must be of a valid email address format and is stored as a `String`.","lastModifiedDate":"2023-04-09"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"- An optional `deadline`, stored in a `LocalDateTime` object. ","lastModifiedDate":"2023-04-09"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"- A `recurrence count`, also known as `repeat times`, stored as an `int`.","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"- Any number of `tags`, each of which is a `String`.","lastModifiedDate":"2023-04-09"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"- A `priority level`, which is represented as an enumeration `Priority`.","lastModifiedDate":"2023-04-09"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":103,"author":{"gitId":"jeromeongithub"},"content":"\u003c!-- @@author jeromeongithub --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":104,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":105,"author":{"gitId":"jeromeongithub"},"content":"### Storage component","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"jeromeongithub"},"content":"The code for this component is found in [`Storage.java`](https://github.com/AY2223S2-CS2113-T11-4/tp/blob/master/src/main/java/seedu/todolist/storage/Storage.java).","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"jeromeongithub"},"content":"The Storage component can save the task list as TaskList objects in a .json file format using the GSON library and read ","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"jeromeongithub"},"content":"it back into a TaskList object.","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"jeromeongithub"},"content":"## Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"jeromeongithub"},"content":"\u003e The lifeline of the sequence diagrams in this section should end at the destroy marker (X), but due to a limitation of PlantUML, the lifeline reaches the end of the diagram.","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"RuiShengGit"},"content":"### Delete task feature","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"RuiShengGit"},"content":"The DeleteTaskCommand extends NUS To-Do List with a delete feature for the removal of tasks from the task list.","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"RuiShengGit"},"content":"It is facilitated by ToDoListManager, Parser, exception, TaskList and Storage classes.","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"RuiShengGit"},"content":"It implements the `TaskList#deleteTask()` operation.","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"RuiShengGit"},"content":"Given below is an example usage scenario and how the DeleteTaskCommand mechanism behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"RuiShengGit"},"content":"Step 1: The user launches the program for the first time. The ToDoListManager will be initialised. This in turn will","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"RuiShengGit"},"content":"then initialise the Parser, TaskList and Storage. Take it as there are no existing tasks read/stored by the program.","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"RuiShengGit"},"content":"Step 2: The user executes `add survey -due 20/03/2023 23:59` command to add a task for the To-Do List.","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"RuiShengGit"},"content":"The add command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"RuiShengGit"},"content":"Step 3: The user now then decides that adding this task was a mistake, and decides to remove the task from the","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"RuiShengGit"},"content":"To-Do List. The user does this by inputting the command `delete 1` into the terminal to delete a task in the task list.","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"RuiShengGit"},"content":"The command will then call the `TaskList#deleteTask()`, which removes the task at id 1 of the TaskList.","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"RuiShengGit"},"content":"The following sequence diagram shows how the delete task operation works:","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"![DeleteTaskCommandSequence](images/DeleteTaskCommandSequence.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"RuiShengGit"},"content":"### Mark/unmark task feature","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"RuiShengGit"},"content":"The Mark/UnmarkTaskCommand extends NUS To-Do List with a mark/unmark feature for the marking of tasks of the task list","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"RuiShengGit"},"content":"as complete or incomplete.","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"RuiShengGit"},"content":"It is facilitated by ToDoListManager, Parser, exception, TaskList and Storage classes.","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"RuiShengGit"},"content":"It implements the `TaskList#setDone()` operation.","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"RuiShengGit"},"content":"Step 1: The user launches the program for the first time. The ToDoListManager will be initialised. This in turn will","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"RuiShengGit"},"content":"then initialise the Parser, TaskList and Storage. Take it as there are no existing tasks read/stored by the program.","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"RuiShengGit"},"content":"Step 2: The user executes `add survey -due 20/03/2023 23:59` command to add a task for the To-Do List.","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"RuiShengGit"},"content":"The add command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"RuiShengGit"},"content":"Step 3: The user wants to mark the task as completed by inputting the command `mark 1` into the terminal","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"RuiShengGit"},"content":"to mark the task as done. The command will then call the `TaskList#setDone()`, which marks the task at id 1","lastModifiedDate":"2023-04-09"},{"lineNumber":154,"author":{"gitId":"RuiShengGit"},"content":"of the TaskList as done.","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"RuiShengGit"},"content":"For the unmark command, the user can instead input the command `unmark 1` to set the task as incomplete.","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"RuiShengGit"},"content":"The command also calls `TaskList#setDone()` which sets the task at id 1 to be not done.","lastModifiedDate":"2023-04-09"},{"lineNumber":158,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"RuiShengGit"},"content":"The following sequence diagram shows how the mark/unmark task operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"RuiShengGit"},"content":"![MarkOrUnmarkTaskCommandSequence](images/MarkorUnmarkTaskCommandSequence.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"clement559"},"content":"\u003c!-- @@author clement559 --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":164,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":165,"author":{"gitId":"clement559"},"content":"### Edit task deadline feature","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"clement559"},"content":"The edit deadline function extends NUS To-Do List with an edit feature for the deadlines assigned to tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"clement559"},"content":"It is facilitated by the TaskList and Command classes. It implements the `TaskList#setDeadline()` operation,","lastModifiedDate":"2023-04-09"},{"lineNumber":169,"author":{"gitId":"clement559"},"content":"which edits deadline of task at assigned id.","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"clement559"},"content":"Given below is an example usage scenario and how the edit deadline mechanism will behave at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"clement559"},"content":"Step 1. The user launches the application for the first time. There are no existing tasks read by the program.","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"clement559"},"content":"Step 2. The user executes `add survey -due 20/03/2023 23:59` command to add a task to the To-Do List.","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"clement559"},"content":"The `add` command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"clement559"},"content":"Step 3. The user has received an update about an extension to the deadline for the task, and decides to change","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"clement559"},"content":"the deadline by executing the `edit 1 -due 25/03/2023 15:00` command. The `edit` will call `TaskList#setDeadline()`,","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"clement559"},"content":"which updates the value of deadline for the Task item saved at id 1 to the new updated deadline.","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"clement559"},"content":"The following sequence diagram shows how the edit operations works:","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"clement559"},"content":"![EditDeadlineCommandSequence](images/EditDeadlineCommandSequence.png)","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"clement559"},"content":"### Edit task email feature","lastModifiedDate":"2023-04-09"},{"lineNumber":187,"author":{"gitId":"clement559"},"content":"The edit email function extends NUS To-Do List with an edit feature to add/edit/delete emails to tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":188,"author":{"gitId":"clement559"},"content":"It is facilitated by the TaskList and Command classes. It implements the `TaskList#editEmail()` operation,","lastModifiedDate":"2023-04-09"},{"lineNumber":189,"author":{"gitId":"clement559"},"content":"which adds/edits/deletes the email of task at assigned id.","lastModifiedDate":"2023-04-09"},{"lineNumber":190,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":191,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":192,"author":{"gitId":"clement559"},"content":"Given below is an example usage scenario and how the edit email mechanism will behave at each step.","lastModifiedDate":"2023-04-09"},{"lineNumber":193,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":194,"author":{"gitId":"clement559"},"content":"Step 1. The user launches the application for the first time. There are no existing tasks read by the program.","lastModifiedDate":"2023-04-09"},{"lineNumber":195,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"clement559"},"content":"Step 2. The user executes `add survey -due 20/03/2023 23:59` command to add a task to the To-Do List.","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"clement559"},"content":"The `add` command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-04-09"},{"lineNumber":198,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"clement559"},"content":"Step 3. The user has the email of a teaching staff for the task, and decides to add","lastModifiedDate":"2023-04-09"},{"lineNumber":200,"author":{"gitId":"clement559"},"content":"the email to the task by executing the `email 1 -edit username@gmail.com` command. The command will call","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"clement559"},"content":"`TaskList#setEmail()`, which adds the email address for the Task item saved at id 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":202,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"clement559"},"content":"Step 4. If the user decides to remove the email address for the task, the user can choose to execute `email 1 -del`","lastModifiedDate":"2023-04-09"},{"lineNumber":204,"author":{"gitId":"clement559"},"content":"command. The command will call","lastModifiedDate":"2023-04-09"},{"lineNumber":205,"author":{"gitId":"clement559"},"content":"`TaskList#setEmail()`, which removes the email address for the Task item saved at id 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":206,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":207,"author":{"gitId":"clement559"},"content":"The following sequence diagram shows how the edit operations works:","lastModifiedDate":"2023-04-09"},{"lineNumber":208,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"clement559"},"content":"![EditEmailCommandSequence](images/EditEmailCommandSequence.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":210,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":211,"author":{"gitId":"clement559"},"content":"### Edit task priority feature","lastModifiedDate":"2023-04-09"},{"lineNumber":212,"author":{"gitId":"clement559"},"content":"The edit priority function extends NUS To-Do List with an edit feature to add/edit/delete priority levels to tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":213,"author":{"gitId":"clement559"},"content":"It is facilitated by the TaskList and Command classes. It implements the `TaskList#editPriority()` operation,","lastModifiedDate":"2023-04-09"},{"lineNumber":214,"author":{"gitId":"clement559"},"content":"which adds/edits/deletes the priority level of task at assigned id.","lastModifiedDate":"2023-04-09"},{"lineNumber":215,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":216,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":217,"author":{"gitId":"clement559"},"content":"Given below is an example usage scenario and how the edit email mechanism will behave at each step.","lastModifiedDate":"2023-04-09"},{"lineNumber":218,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":219,"author":{"gitId":"clement559"},"content":"Step 1. The user launches the application for the first time. There are no existing tasks read by the program.","lastModifiedDate":"2023-04-09"},{"lineNumber":220,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"clement559"},"content":"Step 2. The user executes `add survey -due 20/03/2023 23:59` command to add a task to the To-Do List.","lastModifiedDate":"2023-04-09"},{"lineNumber":222,"author":{"gitId":"clement559"},"content":"The `add` command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-04-09"},{"lineNumber":223,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":224,"author":{"gitId":"clement559"},"content":"Step 3. The user has realised that the tasks has great urgency, and decides to add priority level to the task by","lastModifiedDate":"2023-04-09"},{"lineNumber":225,"author":{"gitId":"clement559"},"content":"executing the `prio 1 -edit 3` command. The command will call `TaskList#setPriority()`, which sets the priority level","lastModifiedDate":"2023-04-09"},{"lineNumber":226,"author":{"gitId":"clement559"},"content":"for the Task item saved at id 1 to be high.","lastModifiedDate":"2023-04-09"},{"lineNumber":227,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"clement559"},"content":"Step 4. If the user decides to remove the priority for the task, the user can choose to execute `email 1 -del`","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"clement559"},"content":"command. The command will call `TaskList#setEmail()`, which removes the priority level for the Task item saved at id 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"clement559"},"content":"The following sequence diagram shows how the edit operations works:","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"clement559"},"content":"![EditPrioritySequence](images/EditPriorityCommandSequence.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":234,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":235,"author":{"gitId":"clement559"},"content":"### Repeating tasks feature","lastModifiedDate":"2023-04-02"},{"lineNumber":236,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":237,"author":{"gitId":"clement559"},"content":"The repeating tasks function extends NUS To-Do List allowing tasks to be listed as repeating for a certain number of","lastModifiedDate":"2023-04-02"},{"lineNumber":238,"author":{"gitId":"clement559"},"content":"occurrences.","lastModifiedDate":"2023-04-02"},{"lineNumber":239,"author":{"gitId":"clement559"},"content":"It is facilitated by the TaskList, Storage and Command classes. It implements the `TaskList#setRepeatTimes()` ","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"clement559"},"content":"which sets the number of times the task is to repeat, and `TaskList#checkRepeatingTasks()` to check for tasks stored","lastModifiedDate":"2023-04-02"},{"lineNumber":241,"author":{"gitId":"clement559"},"content":"in the TaskList for repeat settings.","lastModifiedDate":"2023-04-02"},{"lineNumber":242,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":243,"author":{"gitId":"clement559"},"content":"Given below is an example usage scenario and how the repeating task mechanism will behave at each step.","lastModifiedDate":"2023-04-02"},{"lineNumber":244,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":245,"author":{"gitId":"clement559"},"content":"Step 1. The user launches the application for the first time. There are no existing tasks read by the program.","lastModifiedDate":"2023-04-02"},{"lineNumber":246,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":247,"author":{"gitId":"clement559"},"content":"Step 2. The user executes `add survey -due 20-03-2023 23:59 -rep 3` command to add a task to the To-Do List.","lastModifiedDate":"2023-04-02"},{"lineNumber":248,"author":{"gitId":"clement559"},"content":"The `add` command calls `TaskList#addTask()`, which causes a new Task to be added to the existing TaskList.","lastModifiedDate":"2023-04-02"},{"lineNumber":249,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":250,"author":{"gitId":"clement559"},"content":"Step 3. The user then exits the program with the saved TaskList.","lastModifiedDate":"2023-04-02"},{"lineNumber":251,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":252,"author":{"gitId":"clement559"},"content":"Step 4. The user opens the program a week after the set deadline of the `survey` task. Since the configuration file is","lastModifiedDate":"2023-04-09"},{"lineNumber":253,"author":{"gitId":"clement559"},"content":"still at default settings, it will check after every command is executed if any tasks in the TaskList have a repeat ","lastModifiedDate":"2023-04-09"},{"lineNumber":254,"author":{"gitId":"clement559"},"content":"count of \u003e 0 and is due for repeat after 1 week. Since the existing task fulfils the condition, a new task with the same","lastModifiedDate":"2023-04-09"},{"lineNumber":255,"author":{"gitId":"clement559"},"content":"description `survey` will be created, with a deadline of 1 week from the original deadline appended to the ","lastModifiedDate":"2023-04-09"},{"lineNumber":256,"author":{"gitId":"clement559"},"content":"task. (i.e `27-03-2023 23:59`). The repeat count of the original `survey` task will be changed to 0, whilst the new `survey`","lastModifiedDate":"2023-04-02"},{"lineNumber":257,"author":{"gitId":"clement559"},"content":"task will have a repeat count of 2.","lastModifiedDate":"2023-04-02"},{"lineNumber":258,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":259,"author":{"gitId":"KedrianLoh"},"content":"\u003c!-- @@author KedrianLoh --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":260,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":261,"author":{"gitId":"KedrianLoh"},"content":"### List tasks sorted by deadline feature","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"KedrianLoh"},"content":"This ListTasksCommand extends NUS To-Do List with an automatic sorting feature that sorts all tasks in an ascending","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"KedrianLoh"},"content":"deadline order and displays the To-Do List to users. It is facilitated by the TaskList, Command class, and UI class.","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"KedrianLoh"},"content":"It implements the `TaskList#toString()` and  `ui#printTaskList()`operation.","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":267,"author":{"gitId":"KedrianLoh"},"content":"Given below is an example usage scenario and how the ListTasksCommand mechanism will behave at each step.","lastModifiedDate":"2023-03-24"},{"lineNumber":268,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":269,"author":{"gitId":"KedrianLoh"},"content":"Step 1. The user launches the application for the first time. There are no existing tasks read by the program.","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"KedrianLoh"},"content":"Step 2. The user executes `add survey -due 20/03/2023 12:00` and `add survey -due 21/03/2023 12:00` command to add 2","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"KedrianLoh"},"content":"tasks to the To-Do List. The `add` command calls `TaskList#addTask()` once for each task, which causes 2 new Tasks to","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"KedrianLoh"},"content":"be added to the existing TaskList.","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"KedrianLoh"},"content":"Step 3. The user wants to view the entire list of deadlines that he/she has added. The user can do this by using the","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"KedrianLoh"},"content":"command `list -sort due` into the terminal. By doing so,`TaskList#toString()` will be executed, which will sort","lastModifiedDate":"2023-04-09"},{"lineNumber":277,"author":{"gitId":"KedrianLoh"},"content":"the list in an ascending deadline order, where the deadline that is closest to date will be at the top and the deadline","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"KedrianLoh"},"content":"furthest to date will be at the bottom. Next, `ui#printTaskList()` will be executed, which will display the list of","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"KedrianLoh"},"content":"deadlines to the user in the terminal.","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"KedrianLoh"},"content":"The following sequence diagram shows how the list operation works:","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"KedrianLoh"},"content":"![ListTasksCommandSequence](images/ListTasksCommandSequence.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"jeromeongithub"},"content":"\u003c!-- @@author jeromeongithub --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":286,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":287,"author":{"gitId":"jeromeongithub"},"content":"### Storage feature","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":289,"author":{"gitId":"jeromeongithub"},"content":"The storage feature is facilitated by the `Storage` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":291,"author":{"gitId":"jeromeongithub"},"content":"The Storage class implements the following operations:","lastModifiedDate":"2023-03-22"},{"lineNumber":292,"author":{"gitId":"jeromeongithub"},"content":"- `Storage#save()` --- Saves the current task list.","lastModifiedDate":"2023-04-09"},{"lineNumber":293,"author":{"gitId":"jeromeongithub"},"content":"- `Storage#loadData()` --- Loads a task list from the previously saved file, if there is one.","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":295,"author":{"gitId":"jeromeongithub"},"content":"Given below are 3 example usage scenarios and how the Storage mechanism behaves in each scenario.","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"jeromeongithub"},"content":"Scenario 1: The user launches the application and there is a valid save file found. Storage loads the file successfully","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"jeromeongithub"},"content":"and informs the user of the loaded task list (and how many tasks there are in it).","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"jeromeongithub"},"content":"![StartUpStorageSequenceWithValidSaveFile](images/StartUpStorageWithValidSaveFile.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":302,"author":{"gitId":"jeromeongithub"},"content":"Scenario 2: The user launches the application and there is no save file found. Storage informs the user that there is no","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"jeromeongithub"},"content":"save file found and that a new one will be created for them later.","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":305,"author":{"gitId":"jeromeongithub"},"content":"![StartUpStorageSequenceWithNoSaveFile](images/StartUpStorageSequenceWithNoSaveFile.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"jeromeongithub"},"content":"Scenario 3: The user edits the task list or exits the program. Storage saves the changes automatically into the save ","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"jeromeongithub"},"content":"file. Note that the sequence diagram below shows what happens when the user exits the program, but the processes in","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"jeromeongithub"},"content":"Storage occur even when the user performs other commands to edit the task list.","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":311,"author":{"gitId":"jeromeongithub"},"content":"![ExitProgramStorageSequence](images/ExitProgramStorageSequence.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":313,"author":{"gitId":"jeromeongithub"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":315,"author":{"gitId":"jeromeongithub"},"content":"- **Option 1**: Save task list as a self-formatted .txt file which can be printed and used as a physical task list.","lastModifiedDate":"2023-03-24"},{"lineNumber":316,"author":{"gitId":"jeromeongithub"},"content":"    - Pros: Can get a physical task list to use.","lastModifiedDate":"2023-03-24"},{"lineNumber":317,"author":{"gitId":"jeromeongithub"},"content":"    - Cons: Difficult to maintain as Storage class has to be updated whenever more fields are added to Task class. For","lastModifiedDate":"2023-03-24"},{"lineNumber":318,"author":{"gitId":"jeromeongithub"},"content":"          example, if we add a \"tag\" field to Task, the formatting for the saved .txt file has to be updated to reflect","lastModifiedDate":"2023-03-22"},{"lineNumber":319,"author":{"gitId":"jeromeongithub"},"content":"          that change.","lastModifiedDate":"2023-03-22"},{"lineNumber":320,"author":{"gitId":"jeromeongithub"},"content":"- **Option 2**: Append rather than overwrite when saving the task list.","lastModifiedDate":"2023-03-24"},{"lineNumber":321,"author":{"gitId":"jeromeongithub"},"content":"    - Pros: Will likely be able to save the task list much faster.","lastModifiedDate":"2023-03-24"},{"lineNumber":322,"author":{"gitId":"jeromeongithub"},"content":"    - Cons: Difficult to implement, especially when considering the current mark task operation.","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"jeromeongithub"},"content":"- **Option 3 (current choice)**: Save task list as a json file using the GSON library.","lastModifiedDate":"2023-04-06"},{"lineNumber":324,"author":{"gitId":"jeromeongithub"},"content":"    - Pros: Easy to implement and easy to maintain as Storage class does not have to be updated whenever new fields are ","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"jeromeongithub"},"content":"added to Task class. Do not need to consider whether we use append or overwrite when saving task list as it is ","lastModifiedDate":"2023-04-06"},{"lineNumber":326,"author":{"gitId":"jeromeongithub"},"content":"irrelevant when using this implementation. The GSON library\u0027s pretty printing functionality makes the json file very ","lastModifiedDate":"2023-04-06"},{"lineNumber":327,"author":{"gitId":"jeromeongithub"},"content":"easy to read for humans and understand which allows advanced users to easily modify the file for quick updating of their","lastModifiedDate":"2023-04-06"},{"lineNumber":328,"author":{"gitId":"jeromeongithub"},"content":"task list.","lastModifiedDate":"2023-04-06"},{"lineNumber":329,"author":{"gitId":"jeromeongithub"},"content":"    - Cons: Users have to download some dependencies to be able to use the GSON library.","lastModifiedDate":"2023-04-06"},{"lineNumber":330,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"jeromeongithub"},"content":"Main reasons for choosing Alternative 3: It is much easier to implement and maintain than the other 2 alternatives,","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"jeromeongithub"},"content":"and we found that the need to download dependencies to use the GSON library would not be a big issue.","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":334,"author":{"gitId":"jeromeongithub"},"content":"### Progress Bar Feature","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":336,"author":{"gitId":"jeromeongithub"},"content":"The ProgressBarCommand extends NUS To-Do List with a progress bar feature for tracking the progress on tasks in the task ","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"jeromeongithub"},"content":"list that must be finished by the current week. It is facilitated by ToDoListManager, Parser, TaskList, TemporalField, ","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"jeromeongithub"},"content":"LocalDate and Ui classes. It implements the `Ui#printProgressBar()` operation, which informs the user of their progress ","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"jeromeongithub"},"content":"using a percentage (up to 2 decimal places) and a bar (where \u0027\u003d\u0027 denotes completion and \u0027-\u0027 denotes incomplete).","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":341,"author":{"gitId":"jeromeongithub"},"content":"Given below is an example usage scenario and how the ProgressBarCommand mechanism behaves in this scenario.","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":343,"author":{"gitId":"jeromeongithub"},"content":"The user has a task list with 3 tasks that are due this week. Among the 3 tasks, 1 is marked as done. The user executes ","lastModifiedDate":"2023-03-29"},{"lineNumber":344,"author":{"gitId":"jeromeongithub"},"content":"the progress command, which will call `Ui#printProgressBar()`. The user now sees that they have completed 33.33% of ","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"jeromeongithub"},"content":"their tasks and a progress bar to help them visualize their progress.","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":347,"author":{"gitId":"jeromeongithub"},"content":"![ProgressBarCommandSequence](images/ProgressBarCommandSequence.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":348,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":349,"author":{"gitId":"jeromeongithub"},"content":"In the above diagram `printProgressBar(completedTasksThisWeek, tasksThisWeek, PROGRESS_BAR_SECTIONS, taskListString)`","lastModifiedDate":"2023-04-09"},{"lineNumber":350,"author":{"gitId":"jeromeongithub"},"content":"is abbreviated as `printProgressBar(...)`.","lastModifiedDate":"2023-04-09"},{"lineNumber":351,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":352,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":353,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":354,"author":{"gitId":"RuiShengGit"},"content":"### Reset feature","lastModifiedDate":"2023-04-09"},{"lineNumber":355,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":356,"author":{"gitId":"RuiShengGit"},"content":"The ResetCommand extends NUS To-Do List with a reset feature to allow users to start a new To-Do list if needed.","lastModifiedDate":"2023-04-09"},{"lineNumber":357,"author":{"gitId":"RuiShengGit"},"content":"It is facilitated by ToDoListManager, Parser, TaskList and Ui classes.","lastModifiedDate":"2023-04-09"},{"lineNumber":358,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"RuiShengGit"},"content":"Given below is an example usage scenario and how the reset mechanism will behave at each step.","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":361,"author":{"gitId":"RuiShengGit"},"content":"Step 1. The user launches the program, assuming the To-Do list is filled with tasks. However, the user realise all the","lastModifiedDate":"2023-04-09"},{"lineNumber":362,"author":{"gitId":"RuiShengGit"},"content":"tasks in the tasks list have expired and wants to remove all of them in a quick way.","lastModifiedDate":"2023-04-09"},{"lineNumber":363,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":364,"author":{"gitId":"RuiShengGit"},"content":"Step 2. The user executes `reset` to remove all the tasks and start a new To-Do list.","lastModifiedDate":"2023-04-09"},{"lineNumber":365,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":366,"author":{"gitId":"RuiShengGit"},"content":"Step 3.The user would be shown a confirmation message. If the user inputs `YES`, the command calls `TaskList#reset()` to","lastModifiedDate":"2023-04-09"},{"lineNumber":367,"author":{"gitId":"RuiShengGit"},"content":"reset the task list and a reset message will be printed to inform the user that the To-Do list has reset. However, if","lastModifiedDate":"2023-04-09"},{"lineNumber":368,"author":{"gitId":"RuiShengGit"},"content":"the user inputs anything else, a cancellation message will be printed to notify the users.","lastModifiedDate":"2023-04-09"},{"lineNumber":369,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":370,"author":{"gitId":"RuiShengGit"},"content":"The following sequence diagram shows how the ResetCommand operation works:","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":372,"author":{"gitId":"RuiShengGit"},"content":"![ResetCommandSequence](images/ResetCommandSequence.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":373,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":374,"author":{"gitId":"RuiShengGit"},"content":"### Help List feature","lastModifiedDate":"2023-04-09"},{"lineNumber":375,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":376,"author":{"gitId":"RuiShengGit"},"content":"The HelpCommand extends NUS To-Do List with a help list feature to allow users to keep track of all the possible","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"RuiShengGit"},"content":"commands of the program. It is facilitated by ToDoListManager, Parser, Ui classes. It implements the","lastModifiedDate":"2023-04-09"},{"lineNumber":378,"author":{"gitId":"RuiShengGit"},"content":"`Ui#printHelpList(helpMessage)` operation, which displays a help list for the users. Different help lists would be","lastModifiedDate":"2023-04-09"},{"lineNumber":379,"author":{"gitId":"RuiShengGit"},"content":"displayed based on the different `HELP_TYPE` such as `filter` or `sort` or none.","lastModifiedDate":"2023-04-09"},{"lineNumber":380,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":381,"author":{"gitId":"RuiShengGit"},"content":"The following sequence diagram shows how the ResetCommand operation works:","lastModifiedDate":"2023-04-09"},{"lineNumber":382,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":383,"author":{"gitId":"RuiShengGit"},"content":"![HelpCommandSequence](images/HelpCommandSequence.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":384,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":385,"author":{"gitId":"jeromeongithub"},"content":"\u003c!-- @@author jeromeongithub --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":386,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":387,"author":{"gitId":"jeromeongithub"},"content":"## Appendix","lastModifiedDate":"2023-04-09"},{"lineNumber":388,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"jeromeongithub"},"content":"### Product scope","lastModifiedDate":"2023-03-23"},{"lineNumber":390,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":391,"author":{"gitId":"jeromeongithub"},"content":"#### Target user profile","lastModifiedDate":"2023-03-23"},{"lineNumber":392,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":393,"author":{"gitId":"jeromeongithub"},"content":"Forgetful NUS students who used to rely on LumiNUS’s deadline reminders.","lastModifiedDate":"2023-03-20"},{"lineNumber":394,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":395,"author":{"gitId":"jeromeongithub"},"content":"#### Value proposition","lastModifiedDate":"2023-03-23"},{"lineNumber":396,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":397,"author":{"gitId":"jeromeongithub"},"content":"With the transition to Canvas, the most important feature of LumiNUS’s deadline reminders is gone! Our project aims to","lastModifiedDate":"2023-03-20"},{"lineNumber":398,"author":{"gitId":"jeromeongithub"},"content":"bring an application to keep you aware of your deadlines and not miss them.","lastModifiedDate":"2023-03-20"},{"lineNumber":399,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":400,"author":{"gitId":"jeromeongithub"},"content":"### User Stories","lastModifiedDate":"2023-03-23"},{"lineNumber":401,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":402,"author":{"gitId":"jeromeongithub"},"content":"| Version | As a ... | I want to ...                                                                                                    | So that I can ...                                                         |","lastModifiedDate":"2020-05-24"},{"lineNumber":403,"author":{"gitId":"jeromeongithub"},"content":"|---------|----------|------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-03-22"},{"lineNumber":404,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | add tasks to my to-do list                                                                                       ||","lastModifiedDate":"2023-03-22"},{"lineNumber":405,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | add a time/deadline to a task                                                                                    | record when a task needs to be done                                       |","lastModifiedDate":"2023-03-20"},{"lineNumber":406,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | list all tasks by ascending date                                                                                 | view tasks that have an earlier deadline                                  |","lastModifiedDate":"2023-03-20"},{"lineNumber":407,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | remove tasks                                                                                                     | remove finished/wrong tasks                                               |","lastModifiedDate":"2023-03-20"},{"lineNumber":408,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | mark/unmark tasks                                                                                                | check off unfinished tasks                                                |","lastModifiedDate":"2023-03-20"},{"lineNumber":409,"author":{"gitId":"jeromeongithub"},"content":"| v1.0    | user     | edit the time/deadline of existing tasks                                                                         | update tasks with changed deadlines (postponed/brought forward)           |","lastModifiedDate":"2023-03-20"},{"lineNumber":410,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | student  | add tags/module codes to each task                                                                               | group related tasks together                                              |","lastModifiedDate":"2023-03-20"},{"lineNumber":411,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | student  | set reminders at the start of the day                                                                            | do not forget what I have to achieve by the end of the day/week           |","lastModifiedDate":"2023-03-20"},{"lineNumber":412,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | list all the tasks in chronological order/grouped by module code/grouped by type of work (individual/group work) | have a “birds’ eye view” of all my tasks. (i.e different sorting methods) |","lastModifiedDate":"2023-03-22"},{"lineNumber":413,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | filter the tasks by their properties (description, deadline, tags, …)                                            | find them easily                                                          |","lastModifiedDate":"2023-03-20"},{"lineNumber":414,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | view the tasks in a calendar view                                                                                | view them in a summarised layout                                          |","lastModifiedDate":"2023-03-20"},{"lineNumber":415,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | add the email of the professor/TA in charge of the task                                                          | can email them to clarify if needed                                       |","lastModifiedDate":"2023-03-20"},{"lineNumber":416,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | attach a list of files/links to refer to                                                                         | know where the materials I can refer to are                               |","lastModifiedDate":"2023-03-20"},{"lineNumber":417,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | set a task to repeat                                                                                             | create 1 task to represent repeating tasks every week                     |","lastModifiedDate":"2023-03-20"},{"lineNumber":418,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | set priority level and can sort the tasks based on the priority level                                            | identify high priority tasks                                              |","lastModifiedDate":"2023-03-22"},{"lineNumber":419,"author":{"gitId":"jeromeongithub"},"content":"| v2.0    | user     | see a progress bar                                                                                               | track my progress of unfinished tasks                                     |","lastModifiedDate":"2023-03-22"},{"lineNumber":420,"author":{"gitId":"jeromeongithub"},"content":"| v2.1    | user     | customise some of the repeating settings                                                                         | reduce my system usage and repeat my tasks at a more suitable frequency   |","lastModifiedDate":"2023-04-09"},{"lineNumber":421,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":422,"author":{"gitId":"jeromeongithub"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":424,"author":{"gitId":"jeromeongithub"},"content":"1. Should work on any mainstream OS assuming it has Java 11 or above installed.","lastModifiedDate":"2023-03-20"},{"lineNumber":425,"author":{"gitId":"jeromeongithub"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be ","lastModifiedDate":"2023-03-20"},{"lineNumber":426,"author":{"gitId":"jeromeongithub"},"content":"able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-20"},{"lineNumber":427,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":428,"author":{"gitId":"ERJUNZE"},"content":"\u003c!-- @@author ERJUNZE --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":429,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":430,"author":{"gitId":"ERJUNZE"},"content":"### Glossary","lastModifiedDate":"2023-04-09"},{"lineNumber":431,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":432,"author":{"gitId":"ERJUNZE"},"content":"| Term          | Definition                                                              |","lastModifiedDate":"2023-04-09"},{"lineNumber":433,"author":{"gitId":"ERJUNZE"},"content":"|---------------|-------------------------------------------------------------------------|","lastModifiedDate":"2023-04-09"},{"lineNumber":434,"author":{"gitId":"ERJUNZE"},"content":"| Mainstream OS | Windows, Linux, Unix, OS-X                                              |","lastModifiedDate":"2023-04-09"},{"lineNumber":435,"author":{"gitId":"ERJUNZE"},"content":"| Main command  | The first word in a command, like `add` or `help`                       |","lastModifiedDate":"2023-04-09"},{"lineNumber":436,"author":{"gitId":"ERJUNZE"},"content":"| Flag          | A word preceded by a dash, like `-edit` or `-due`                       |","lastModifiedDate":"2023-04-09"},{"lineNumber":437,"author":{"gitId":"ERJUNZE"},"content":"| Argument      | The words following the main command or a flag and before the next flag |","lastModifiedDate":"2023-04-09"},{"lineNumber":438,"author":{"gitId":"ERJUNZE"},"content":"| Id            | Identification number; it is fixed for any given task                   |","lastModifiedDate":"2023-04-09"},{"lineNumber":439,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":440,"author":{"gitId":"ERJUNZE"},"content":"### Instructions for manual testing","lastModifiedDate":"2023-04-09"},{"lineNumber":441,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":442,"author":{"gitId":"ERJUNZE"},"content":"The following are instructions on how to test the program manually.","lastModifiedDate":"2023-03-31"},{"lineNumber":443,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":444,"author":{"gitId":"ERJUNZE"},"content":"- After downloading the jar file from [here](https://github.com/AY2223S2-CS2113-T11-4/tp/releases/tag/v2.1), run it in a terminal to start the program.","lastModifiedDate":"2023-04-10"},{"lineNumber":445,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `java -jar NUSTo-DoList.jar`","lastModifiedDate":"2023-04-09"},{"lineNumber":446,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: The startup and save loading messages will be displayed in the terminal.","lastModifiedDate":"2023-04-09"},{"lineNumber":447,"author":{"gitId":"ERJUNZE"},"content":"- Try running some commands - use the command `help` or refer to the [User Guide](https://ay2223s2-cs2113-t11-4.github.io/tp/UserGuide.html) for a list of commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":448,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `help`","lastModifiedDate":"2023-04-09"},{"lineNumber":449,"author":{"gitId":"ERJUNZE"},"content":"  - Help message is displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":450,"author":{"gitId":"ERJUNZE"},"content":"- Try adding a task with various attributes with the `add` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":451,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `add do homework -due 9/9/2025 19:37 -email rui@gmail.com -tags difficult later -prio 2 -rep 12`","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"ERJUNZE"},"content":"  - The above command adds a task with the description `do homework`, the deadline `9/9/2025 19:37`, the email address `rui@gmail.com`, the tags `difficult` and `later`, the priority level `Medium`, and will recur weekly up to `12` times starting from its deadline.","lastModifiedDate":"2023-04-09"},{"lineNumber":453,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A message about how the task was successfully added is displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":454,"author":{"gitId":"ERJUNZE"},"content":"- Try marking a task as complete/incomplete with the `mark` and `unmark` commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":455,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `mark 1`, `unmark 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":456,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A message about how the task was marked as complete/incomplete is displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":457,"author":{"gitId":"ERJUNZE"},"content":"- Try displaying a summary of tasks using the `list` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":458,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `list -done 1 -sort due`","lastModifiedDate":"2023-04-09"},{"lineNumber":459,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A summary of tasks is displayed. This particular test case shows only complete tasks, sorted by deadline with earlier deadlines first.","lastModifiedDate":"2023-04-09"},{"lineNumber":460,"author":{"gitId":"ERJUNZE"},"content":"  - You may want to use the `add` and `mark` commands to add more complete tasks after trying this command to see the difference.","lastModifiedDate":"2023-04-09"},{"lineNumber":461,"author":{"gitId":"ERJUNZE"},"content":"- Try displaying the detailed attributes of a task using the `info` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":462,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `info 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":463,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: All the attributes of the task is displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":464,"author":{"gitId":"ERJUNZE"},"content":"- Try editing an attribute of a task using the `desc`, `due`, `email`, `tags`, `prio`, or `rep` commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":465,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `prio 1 -edit 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":466,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A message about how the task\u0027s priority level was edited to `Low` is displayed. You can use the `list` or `info` commands to verify this.","lastModifiedDate":"2023-04-09"},{"lineNumber":467,"author":{"gitId":"ERJUNZE"},"content":"- Try checking all the tags in your task list with the `taglist` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":468,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `taglist`","lastModifiedDate":"2023-04-09"},{"lineNumber":469,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A comma separated list of any tags your tasks have is displayed, in lexicographic order.","lastModifiedDate":"2023-04-09"},{"lineNumber":470,"author":{"gitId":"ERJUNZE"},"content":"- Try viewing a summary of this week\u0027s tasks, with a progress bar, using the `progress` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":471,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `progress`","lastModifiedDate":"2023-04-09"},{"lineNumber":472,"author":{"gitId":"ERJUNZE"},"content":"  - \"This week\" is defined as from this Monday to this Sunday.","lastModifiedDate":"2023-04-09"},{"lineNumber":473,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A summary of this week\u0027s tasks is displayed, similar to the `list` command, along with a progress bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":474,"author":{"gitId":"ERJUNZE"},"content":"  - You may want to add some tasks that will be due \"this week\" after trying this command to see the difference.","lastModifiedDate":"2023-04-09"},{"lineNumber":475,"author":{"gitId":"ERJUNZE"},"content":"- Try deleting a task from your task list using the `delete` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":476,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `delete 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":477,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: A message about how the task was deleted is displayed. You can use the `list` command to verify this.","lastModifiedDate":"2023-04-09"},{"lineNumber":478,"author":{"gitId":"ERJUNZE"},"content":"- Try viewing your config settings using the `config` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":479,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `config`","lastModifiedDate":"2023-04-09"},{"lineNumber":480,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: Your current config settings are displayed.","lastModifiedDate":"2023-04-09"},{"lineNumber":481,"author":{"gitId":"ERJUNZE"},"content":"- Try resetting your task list using the `reset` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":482,"author":{"gitId":"ERJUNZE"},"content":"  - Test case: `reset`","lastModifiedDate":"2023-04-09"},{"lineNumber":483,"author":{"gitId":"ERJUNZE"},"content":"  - You will need to confirm this by entering `YES` (case sensitive).","lastModifiedDate":"2023-04-09"},{"lineNumber":484,"author":{"gitId":"ERJUNZE"},"content":"  - **Warning!** This is irreversible.","lastModifiedDate":"2023-04-09"},{"lineNumber":485,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: Your task list is reset, with all tasks deleted. Running an `add` command will start from id 1 again.","lastModifiedDate":"2023-04-09"},{"lineNumber":486,"author":{"gitId":"ERJUNZE"},"content":"- To exit, use the command: `exit`","lastModifiedDate":"2023-04-09"},{"lineNumber":487,"author":{"gitId":"ERJUNZE"},"content":"  - Expected: The exit message is displayed in the terminal and the program exits, returning control to the terminal.","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"jeromeongithub":123,"KedrianLoh":26,"ERJUNZE":154,"-":7,"RuiShengGit":80,"clement559":97}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"# NUS To-Do List","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"With the transition to Canvas, the most important feature of LumiNUS’s deadline reminders is gone! **NUS To-Do List** aims to","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"bring an application to keep you aware of your deadlines and not miss them.","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"- [User Guide](https://ay2223s2-cs2113-t11-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"- [Developer Guide](https://ay2223s2-cs2113-t11-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"- [About Us](https://ay2223s2-cs2113-t11-4.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"ERJUNZE":6,"-":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"* Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"{:toc}","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"With the transition to Canvas, the most important feature of LumiNUS’s deadline reminders is gone! **NUS To-Do List** aims to","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"bring an application to keep you aware of your deadlines and not miss them.","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"2. Download the latest version of `NUS To-Do List` from [here](https://github.com/AY2223S2-CS2113-T11-4/tp/releases/tag/v2.1).","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"3. Run `java -jar NUSTo-DoList.jar` in a terminal to start the program.","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"## Command Format","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"### Flags","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"- Words with a dash in front such as `-due` or `-email`, are considered as flags. Hence, [parameters](#parameters) like the description or tags cannot start with a dash.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"- Each command has its own flags that need to be provided when running the command, some of which are mutually exclusive.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"- A typo in a flag may cause it to be recognised as a parameter instead of a flag.","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"- You **cannot** repeat the same flag (`-edit abc -edit def`) for a command.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"- Flags in square brackets `[]` are optional. (Do not include the brackets in the command)","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"### Parameters","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"- Words in `UPPER_CASE` are parameters to be supplied by the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"- Parameters cannot start with a dash `-`. For example, `add -random_name` is an invalid command.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"- Flags and their parameters can be provided in any order after the command name and its parameter. For example, instead of `add DESCRIPTION -due DATE -email ADDRESS` you can also use `add DESCRIPTION -email ADDRESS -due DATE`.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"- Unnecessary parameters for commands/flags that do not need them are ignored. For example, `exit 123` is equivalent to `exit`.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"#### Restrictions","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"Given below is list of task attributes and their restrictions.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"- `DESCRIPTION` A task must have a non-empty description.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `Hello yah`, `pi is roughly 3`","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"- `DEADLINE` The date-time format is `dd/mm/yyyy hh:mm` or `dd-mm-yyyy hh:mm`.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"  - When adding a task or editing a deadline, the `DEADLINE` cannot be in the past.","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `14/03/2025 16:40`, `29/02/2024 06:39`","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"- `EMAIL_ADDRESS` must be of a valid email address format. (We do not check if the mailbox actually exists.)","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `abc@def.com`, `this-is-valid-@too.com`","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"- `LIST_OF_TAGS` consists of one or more tags, separated by a space. A task cannot have multiple of the same tag.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"  - Tags will be sorted in lexicographic order.","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `difficult later 3.14`, `ALSO_A_TAG`","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"- `REPEAT_TIMES` must be an integer from 0 to 2147483647, and can only be used if the task also has a `DEADLINE`.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"  - A copy of the task (with a new id) will be added every `REPEAT_FREQUENCY` days (defaults to 7) starting from the `DEADLINE` for `REPEAT_TIMES` times.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `37`, `0` (the default if not specified, equivalent to no recurrence)","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"- `PRIORITY_LEVEL` can be either 1, 2, or 3 (1: `Low`, 2: `Medium`, 3: `High`).","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"  - A priority of `0` (the default if not specified) can also be used to indicate no priority.","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"### Selecting tasks","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"Some commands can act on multiple tasks at once, which can be selected by providing a list of ids, OR one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"- `IDS` consists of one or more ids, separated by a space.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"  - **IMPORTANT**: Ids (indicated with `ID:`) are different from the ordering number of a task (indicated with `#`). Each task has a unique, fixed id number used to select that specific task. Hence, ids do not reset without using the [`reset`](#reset-to-do-list-reset) command.","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"  - A command will not be executed if any of the provided ids are invalid (not in the task list).","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"  - Commands will be executed as if the list of ids is provided in increasing order.","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"  - Examples: `1 3 5`, `99`","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"- `FILTERS` can be one or more of the following:","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"  - Boolean filters","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"    - Replace `1` with `0` to invert the filter. ","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"    - `-done 1` filters completed tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"    - `-overdue 1` filters overdue (incomplete and past deadline) tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"    - `-rep 1` filters recurring (`REPEAT_TIMES` \u003e 0) tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"  - Non-boolean filters","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"    - `-all` selects all tasks (this overrides all other filters).","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"    - `-desc STRING` filters tasks with descriptions containing the given string.","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    - `-email EMAIL_ADDRESS` filters tasks with the given email address.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"    - `-before DEADLINE` filters tasks with deadlines before the given deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    - `-after DEADLINE` filters tasks with deadlines after the given deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"    - `-tags LIST_OF_TAGS` filters tasks that have all the given tags.","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"    - `-prio PRIORITY_LEVEL` filters tasks with the given priority level.","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"  - Example: `-done 0 -desc next` selects all incomplete tasks with `next` in their description. ","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"### Others","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"- Trailing, leading or consecutive spaces will be removed from commands.","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"- Certain commands that have no effect, such as deleting a non-existent attribute from a task or marking an already complete task, can still be executed anyway.","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"## Features","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"### Adding a task `add`","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"Adds a new task with the given attributes to your To-Do list.","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"Format: `add DESCRIPTION [-due DEADLINE] [-email EMAIL_ADDRESS] [-tags LIST_OF_TAGS] [-rep REPEAT_TIMES] [-prio PRIORITY_LEVEL]`","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"Example of usage and output: ","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"`add todo -due 23/09/2023 23:59 -rep 10` creates a task with the description `todo`, the deadline `23 Sep 2023 23:59`, which will produce a copy of itself after `30 Sep 2023 23:59`.","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"Okay, I have added this task:","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"[ID:00001][ ][   ][todo                               ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"`add do math homework -email abc@def.com -prio 2 -tags difficult later 3.14` creates a task with the description `do math homework`, email address `abc@def.com`, priority level `Medium`, and the tags `3.14`, `difficult` and `later`.","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"Okay, I have added this task:","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"[ID:00002][ ][II ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":109,"author":{"gitId":"RuiShengGit"},"content":"### Mark a task (as complete) `mark`","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"RuiShengGit"},"content":"Marks tasks with the given ids or matching the given filters as completed.","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"RuiShengGit"},"content":"Format: `mark ID` OR `mark FILTERS`","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"RuiShengGit"},"content":"`mark 1` marks the task with id 1 in the To-Do list as done.","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have marked the following task(s) as complete:","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00001][X][   ][todo                               ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":125,"author":{"gitId":"RuiShengGit"},"content":"`mark -done 0` marks all incomplete tasks as done.","lastModifiedDate":"2023-04-08"},{"lineNumber":126,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":127,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have marked the following task(s) as complete:","lastModifiedDate":"2023-04-08"},{"lineNumber":128,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":129,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00002][X][II ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":130,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"RuiShengGit"},"content":"### Unmark a task (as incomplete) `unmark`","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"RuiShengGit"},"content":"Unmarks tasks with the given ids or matching the given filters as incomplete.","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"RuiShengGit"},"content":"Format: `unmark ID` OR `unmark FILTERS`","lastModifiedDate":"2023-04-08"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":139,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"RuiShengGit"},"content":"`unmark 1` unmarks the task with id 1 in the To-Do list, so it is considered not done yet.","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have marked the following task(s) as incomplete:","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00001][ ][   ][todo                               ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"RuiShengGit"},"content":"`unmark -prio 2` unmarks all tasks with priority level 2 (`Medium`), so they are considered not done yet.","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have marked the following task(s) as incomplete:","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00002][ ][II ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"RuiShengGit"},"content":"### Delete a task `delete`","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"RuiShengGit"},"content":"Deletes all tasks with the given ids or matching the given filters from the To-Do List.","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"RuiShengGit"},"content":"Format: `delete ID` OR `delete FILTERS`","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"RuiShengGit"},"content":"`delete 2` deletes the task with id 2 from the To-Do list.","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have removed the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":168,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00002][ ][II ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"RuiShengGit"},"content":"`delete -before 12/12/2024 12:12` deletes all tasks with deadlines before 12 Dec 2024 12:12.","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have removed the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00001][ ][   ][todo                               ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"ERJUNZE"},"content":"\u003c!-- @@author ERJUNZE --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":179,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":180,"author":{"gitId":"ERJUNZE"},"content":"###  Edit description of a task `desc`","lastModifiedDate":"2023-04-08"},{"lineNumber":181,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"ERJUNZE"},"content":"Edits the description of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"ERJUNZE"},"content":"Format: `desc IDS -edit DESCRIPTION` OR `desc FILTERS -edit DESCRIPTION`","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"ERJUNZE"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"ERJUNZE"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":188,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"ERJUNZE"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":190,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"ERJUNZE"},"content":"`desc 1 -edit abc def` sets the description of the task with id 1 to `abc def`.","lastModifiedDate":"2023-04-08"},{"lineNumber":192,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"ERJUNZE"},"content":"Okay, I have edited the description of the following task(s) to [abc def]:","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"ERJUNZE"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"ERJUNZE"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"clement559"},"content":"\u003c!-- @@author clement559 --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":200,"author":{"gitId":"clement559"},"content":"### Edit/delete deadline `due`","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"clement559"},"content":"Edits or deletes the deadline of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"clement559"},"content":"Format: `due IDS -edit DEADLINE` OR `due FILTERS -edit DEADLINE`","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"clement559"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"clement559"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"clement559"},"content":"- `-edit DEADLINE` can be replaced with `-del` to delete the deadline from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":209,"author":{"gitId":"clement559"},"content":"  - Deleting the deadline from a recurring task will set its repeat times to 0, making it no longer recurring.","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"clement559"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"clement559"},"content":"`due 1 -edit 30-03-2024 18:00` sets the deadline of the task with id 1 to `30-03-2024 18:00`.","lastModifiedDate":"2023-04-08"},{"lineNumber":214,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":215,"author":{"gitId":"clement559"},"content":"Okay, I have edited the deadline of the following task(s) to [30 Mar 2024 18:00]:","lastModifiedDate":"2023-04-08"},{"lineNumber":216,"author":{"gitId":"clement559"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"clement559"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":219,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":220,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":222,"author":{"gitId":"RuiShengGit"},"content":"### Edit/Delete email address `email`","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"RuiShengGit"},"content":"Edits or deletes the email address of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":225,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"RuiShengGit"},"content":"Format: `email IDS -edit EMAIL_ADDRESS` OR `email FILTERS -edit EMAIL_ADDRESS`","lastModifiedDate":"2023-04-08"},{"lineNumber":227,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":228,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"RuiShengGit"},"content":"- `-edit EMAIL_ADDRESS` can be replaced with `-del` to delete the email address from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":233,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"RuiShengGit"},"content":"`email 1 -edit rui@gmail.com` adds the email address `rui@gmail.com` to the task of id 1 in the To-Do list.","lastModifiedDate":"2023-03-31"},{"lineNumber":235,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have edited the email of the following task(s) to [rui@gmail.com]:","lastModifiedDate":"2023-04-08"},{"lineNumber":237,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":238,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"ERJUNZE"},"content":"\u003c!-- @@author ERJUNZE --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":242,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":243,"author":{"gitId":"ERJUNZE"},"content":"### Add/Edit/Delete tags `tags`","lastModifiedDate":"2023-03-31"},{"lineNumber":244,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"ERJUNZE"},"content":"Adds, edits, or deletes the tags of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"ERJUNZE"},"content":"Format: `tags IDS -edit LIST_OF_TAGS` OR `tags FILTERS -edit LIST_OF_TAGS`","lastModifiedDate":"2023-04-08"},{"lineNumber":248,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"ERJUNZE"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"ERJUNZE"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"ERJUNZE"},"content":"- `-edit LIST_OF_TAGS` can be replaced with `-add LIST_OF_TAGS` to add all given tags to a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"ERJUNZE"},"content":"- `-edit LIST_OF_TAGS` can be replaced with `-del LIST_OF_TAGS` to delete all given tags from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"ERJUNZE"},"content":"- `-edit LIST_OF_TAGS` can be replaced with `-del` to delete all tags from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"ERJUNZE"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":257,"author":{"gitId":"ERJUNZE"},"content":"`tags 1 -edit difficult later` sets the tags of the task with id 1 to `difficult` and `later`.","lastModifiedDate":"2023-04-08"},{"lineNumber":258,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":259,"author":{"gitId":"ERJUNZE"},"content":"Okay, I have edited the tags of the following task(s) to [difficult, later]:","lastModifiedDate":"2023-04-08"},{"lineNumber":260,"author":{"gitId":"ERJUNZE"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":261,"author":{"gitId":"ERJUNZE"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":262,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"ERJUNZE"},"content":"`tags -tags later -del later` deletes the tag `later` from all tasks with the tag `later`.","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"ERJUNZE"},"content":"Okay, I have removed the tags [later] from the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"ERJUNZE"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"ERJUNZE"},"content":"[#00002][ID:00002][ ][   ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"clement559"},"content":"\u003c!-- @@author clement559 --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":272,"author":{"gitId":"clement559"},"content":"### Edit/delete repeat times `rep`","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":274,"author":{"gitId":"clement559"},"content":"Edits or deletes the recurrence count of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":276,"author":{"gitId":"clement559"},"content":"Format: `rep IDS -edit REPEAT_TIMES` OR `rep FILTERS -edit REPEAT_TIMES`","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":278,"author":{"gitId":"clement559"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"clement559"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"clement559"},"content":"- `-edit REPEAT_TIMES` can be replaced with `-del` to delete the recurrence count from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"clement559"},"content":"- You cannot set or delete the recurrence count of tasks without a deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":283,"author":{"gitId":"clement559"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":285,"author":{"gitId":"clement559"},"content":"`rep 1 -edit 3` sets the recurrence count of the task with id 1 to `3`.","lastModifiedDate":"2023-04-08"},{"lineNumber":286,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":287,"author":{"gitId":"clement559"},"content":"Okay, I have edited the repeat times of the following task(s) to [3]:","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"clement559"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"clement559"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":291,"author":{"gitId":"clement559"},"content":"`rep -rep 1 -del` deletes the recurrence count of all recurring tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":293,"author":{"gitId":"clement559"},"content":"Okay, I have deleted the repeat times of the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"clement559"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"clement559"},"content":"[#00001][ID:00001][ ][   ][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-02"},{"lineNumber":297,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":298,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":299,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":300,"author":{"gitId":"RuiShengGit"},"content":"###  Edit/Delete priority level `prio`","lastModifiedDate":"2023-04-08"},{"lineNumber":301,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"RuiShengGit"},"content":"Edits or deletes the priority level of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":303,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"RuiShengGit"},"content":"Format: `prio IDS -edit PRIORITY_LEVEL` OR `prio FILTERS -edit PRIORITY_LEVEL`","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":307,"author":{"gitId":"RuiShengGit"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":308,"author":{"gitId":"RuiShengGit"},"content":"- `-edit PRIORITY_LEVEL` can be replaced with `-del` to delete the priority level from a task instead.","lastModifiedDate":"2023-04-08"},{"lineNumber":309,"author":{"gitId":"RuiShengGit"},"content":"  - `-edit 0` is equivalent to `del`.","lastModifiedDate":"2023-04-08"},{"lineNumber":310,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":311,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"RuiShengGit"},"content":"`prio 1 -edit 3` sets the priority level of the task with id 1 to 2 (High).","lastModifiedDate":"2023-04-08"},{"lineNumber":314,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have edited the priority level of the following task(s) to [High]:","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":317,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00001][ ][III][abc def                            ][Due by: 23 Sep 2023 23:59]","lastModifiedDate":"2023-04-08"},{"lineNumber":318,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"RuiShengGit"},"content":"`prio -prio 2 -del` deletes the priority level of all tasks with priority level 0.","lastModifiedDate":"2023-04-08"},{"lineNumber":320,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":321,"author":{"gitId":"RuiShengGit"},"content":"Okay, I have deleted the priority level of the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"RuiShengGit"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"RuiShengGit"},"content":"[#00001][ID:00002][ ][   ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":325,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"KedrianLoh"},"content":"\u003c!-- @@author KedrianLoh --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":327,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":328,"author":{"gitId":"KedrianLoh"},"content":"### View all/selected tasks in To-Do list `list`","lastModifiedDate":"2023-04-08"},{"lineNumber":329,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":330,"author":{"gitId":"KedrianLoh"},"content":"Display a summary of all tasks, or tasks matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"KedrianLoh"},"content":"Format: `list [IDS] [-sort SORT_OPTION]` OR `list [FILTERS] [-sort SORT_OPTION]`","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"KedrianLoh"},"content":"- Reading the task summary:","lastModifiedDate":"2023-04-08"},{"lineNumber":335,"author":{"gitId":"KedrianLoh"},"content":"  - `[#number]` indicates the ordering of the displayed task.","lastModifiedDate":"2023-04-08"},{"lineNumber":336,"author":{"gitId":"KedrianLoh"},"content":"  - `[ID:number]` indicates the id of the displayed task.","lastModifiedDate":"2023-04-08"},{"lineNumber":337,"author":{"gitId":"KedrianLoh"},"content":"  - `[!]` indicates an overdue task, `[ ]` indicates an incomplete task, `[X]` indicates a completed task.","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"KedrianLoh"},"content":"  - `[   ]` indicates no priority, `[I  ]` indicates `Low` priority, `[II ]` indicates `Medium` priority, `[III]` indicates `High` priority.","lastModifiedDate":"2023-04-08"},{"lineNumber":339,"author":{"gitId":"KedrianLoh"},"content":"  - The description is shown after the priority, and is truncated with `...` if it is too long.","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"KedrianLoh"},"content":"  - The deadline is shown after the description, if it exists.","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"KedrianLoh"},"content":"  - Other attributes can be seen with the [`info`](#view-detailed-information-of-a-task-info) command.","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"KedrianLoh"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":343,"author":{"gitId":"KedrianLoh"},"content":"  - If no ids or filters are provided, all tasks will be displayed by default.","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"KedrianLoh"},"content":"- `SORT_OPTION` can be one of the following:","lastModifiedDate":"2023-04-08"},{"lineNumber":345,"author":{"gitId":"KedrianLoh"},"content":"  - `due` sorts tasks by their deadline, with earlier deadlines first and no-deadline tasks last.","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"KedrianLoh"},"content":"  - `prio` sorts tasks by their priority, with higher priority levels first and no-priority tasks last.","lastModifiedDate":"2023-04-08"},{"lineNumber":347,"author":{"gitId":"KedrianLoh"},"content":"  - `desc` sorts tasks by their description in lexicographic order.","lastModifiedDate":"2023-04-08"},{"lineNumber":348,"author":{"gitId":"KedrianLoh"},"content":"  - `done` sorts tasks by their completion status, with overdue tasks first, then incomplete tasks, and complete tasks last.","lastModifiedDate":"2023-04-08"},{"lineNumber":349,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":350,"author":{"gitId":"KedrianLoh"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":351,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":352,"author":{"gitId":"KedrianLoh"},"content":"`list -sort done` will display a summary of all tasks, sorted by completion status. ","lastModifiedDate":"2023-04-08"},{"lineNumber":353,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":354,"author":{"gitId":"KedrianLoh"},"content":"Okay, here is your task list, with 6 tasks","lastModifiedDate":"2023-04-08"},{"lineNumber":355,"author":{"gitId":"KedrianLoh"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"KedrianLoh"},"content":"[#00001][ID:00005][!][II ][object Object                      ][Due by: 03 Mar 2023 03:03]","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"KedrianLoh"},"content":"[#00002][ID:00006][ ][III][Test                               ][Due by: 08 Apr 2023 20:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":358,"author":{"gitId":"KedrianLoh"},"content":"[#00003][ID:00003][ ][I  ][baba                               ][Due by: 20 Apr 2023 13:37]","lastModifiedDate":"2023-04-08"},{"lineNumber":359,"author":{"gitId":"KedrianLoh"},"content":"[#00004][ID:00001][ ][III][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":360,"author":{"gitId":"KedrianLoh"},"content":"[#00005][ID:00002][X][   ][do math homework                   ]","lastModifiedDate":"2023-04-08"},{"lineNumber":361,"author":{"gitId":"KedrianLoh"},"content":"[#00006][ID:00004][X][   ][bubu                               ]","lastModifiedDate":"2023-04-08"},{"lineNumber":362,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":363,"author":{"gitId":"KedrianLoh"},"content":"`list -done 0 -sort prio` will display a summary of all incomplete tasks, sorted by priority.","lastModifiedDate":"2023-04-08"},{"lineNumber":364,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":365,"author":{"gitId":"KedrianLoh"},"content":"Okay, here is your task list, with 4 tasks","lastModifiedDate":"2023-04-08"},{"lineNumber":366,"author":{"gitId":"KedrianLoh"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":367,"author":{"gitId":"KedrianLoh"},"content":"[#00001][ID:00001][ ][III][abc def                            ][Due by: 30 Mar 2024 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":368,"author":{"gitId":"KedrianLoh"},"content":"[#00002][ID:00006][ ][III][Test                               ][Due by: 08 Apr 2023 20:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":369,"author":{"gitId":"KedrianLoh"},"content":"[#00003][ID:00005][!][II ][object Object                      ][Due by: 03 Mar 2023 03:03]","lastModifiedDate":"2023-04-08"},{"lineNumber":370,"author":{"gitId":"KedrianLoh"},"content":"[#00004][ID:00003][ ][I  ][baba                               ][Due by: 20 Apr 2023 13:37]","lastModifiedDate":"2023-04-08"},{"lineNumber":371,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":372,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":373,"author":{"gitId":"KedrianLoh"},"content":"### View detailed information of a task `info`","lastModifiedDate":"2023-03-31"},{"lineNumber":374,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":375,"author":{"gitId":"KedrianLoh"},"content":"Display all the attributes (description, deadline, email, tags, repeat times, priority level) of tasks with the given ids or matching the given filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":376,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":377,"author":{"gitId":"KedrianLoh"},"content":"Format: `info IDS` OR `info FILTERS`","lastModifiedDate":"2023-04-08"},{"lineNumber":378,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"KedrianLoh"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":380,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":381,"author":{"gitId":"KedrianLoh"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":383,"author":{"gitId":"KedrianLoh"},"content":"`info 2 6` displays the details of the tasks with ids 2 and 6.","lastModifiedDate":"2023-04-08"},{"lineNumber":384,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":385,"author":{"gitId":"KedrianLoh"},"content":"Okay, here is the detailed information of the following task(s):","lastModifiedDate":"2023-04-08"},{"lineNumber":386,"author":{"gitId":"KedrianLoh"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":387,"author":{"gitId":"KedrianLoh"},"content":"ID:           2","lastModifiedDate":"2023-04-08"},{"lineNumber":388,"author":{"gitId":"KedrianLoh"},"content":"Description:  do math homework","lastModifiedDate":"2023-04-08"},{"lineNumber":389,"author":{"gitId":"KedrianLoh"},"content":"Completed:    Yes","lastModifiedDate":"2023-04-08"},{"lineNumber":390,"author":{"gitId":"KedrianLoh"},"content":"Email:        abc@def.com","lastModifiedDate":"2023-04-08"},{"lineNumber":391,"author":{"gitId":"KedrianLoh"},"content":"Tags:         3.14, can, difficult, okay, yeah","lastModifiedDate":"2023-04-08"},{"lineNumber":392,"author":{"gitId":"KedrianLoh"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":393,"author":{"gitId":"KedrianLoh"},"content":"ID:           6","lastModifiedDate":"2023-04-08"},{"lineNumber":394,"author":{"gitId":"KedrianLoh"},"content":"Description:  Test","lastModifiedDate":"2023-04-08"},{"lineNumber":395,"author":{"gitId":"KedrianLoh"},"content":"Completed:    No","lastModifiedDate":"2023-04-08"},{"lineNumber":396,"author":{"gitId":"KedrianLoh"},"content":"Priority:     High","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"KedrianLoh"},"content":"Due:          08 Apr 2023 20:00","lastModifiedDate":"2023-04-08"},{"lineNumber":398,"author":{"gitId":"KedrianLoh"},"content":"Repeat times: 12","lastModifiedDate":"2023-04-08"},{"lineNumber":399,"author":{"gitId":"KedrianLoh"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":400,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":401,"author":{"gitId":"ERJUNZE"},"content":"\u003c!-- @@author ERJUNZE --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":402,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":403,"author":{"gitId":"ERJUNZE"},"content":"### View all tags in task list `taglist`","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"ERJUNZE"},"content":"Displays all tags found in your To-Do List.","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"ERJUNZE"},"content":"Format: `taglist`","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"ERJUNZE"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":410,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":411,"author":{"gitId":"ERJUNZE"},"content":"`taglist` displays any tags your tasks have.","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-31"},{"lineNumber":413,"author":{"gitId":"ERJUNZE"},"content":"Okay, here are the tags associated with your task list:","lastModifiedDate":"2023-04-08"},{"lineNumber":414,"author":{"gitId":"ERJUNZE"},"content":"3.14, can, difficult, haha, okay, yeah","lastModifiedDate":"2023-04-08"},{"lineNumber":415,"author":{"gitId":"ERJUNZE"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":417,"author":{"gitId":"jeromeongithub"},"content":"\u003c!-- @@author jeromeongithub --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":418,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":419,"author":{"gitId":"jeromeongithub"},"content":"### Show progress of tasks that are due this week `progress`","lastModifiedDate":"2023-03-29"},{"lineNumber":420,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":421,"author":{"gitId":"jeromeongithub"},"content":"Displays the progress of and lists tasks that are due this week in To-Do list. Progress is shown in the form of a ","lastModifiedDate":"2023-03-29"},{"lineNumber":422,"author":{"gitId":"jeromeongithub"},"content":"percentage (up to 2 decimal places) and a progress bar (where `\u003d` denotes the proportion of tasks completed and `-` ","lastModifiedDate":"2023-03-31"},{"lineNumber":423,"author":{"gitId":"jeromeongithub"},"content":"denotes the proportion of tasks that are left undone). Called automatically on startup.","lastModifiedDate":"2023-04-08"},{"lineNumber":424,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":425,"author":{"gitId":"jeromeongithub"},"content":"- \"this week\" starts from Monday to Sunday of the current week.","lastModifiedDate":"2023-04-06"},{"lineNumber":426,"author":{"gitId":"jeromeongithub"},"content":"- For example, if `progress` is used at any time on 06/04/2023 (Thursday), \"this week\" would include any time within ","lastModifiedDate":"2023-04-06"},{"lineNumber":427,"author":{"gitId":"jeromeongithub"},"content":"03/04/2023 00:00 (Monday 12:00AM) to 09/04/2023 23:59 (Sunday 11:59PM).","lastModifiedDate":"2023-04-06"},{"lineNumber":428,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":429,"author":{"gitId":"jeromeongithub"},"content":"Format: `progress`","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":431,"author":{"gitId":"jeromeongithub"},"content":"Example of usage:","lastModifiedDate":"2023-03-29"},{"lineNumber":432,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":433,"author":{"gitId":"jeromeongithub"},"content":"`progress`","lastModifiedDate":"2023-04-08"},{"lineNumber":434,"author":{"gitId":"jeromeongithub"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":435,"author":{"gitId":"jeromeongithub"},"content":"You have completed 33.33% of the 3 tasks due this week!","lastModifiedDate":"2023-03-29"},{"lineNumber":436,"author":{"gitId":"jeromeongithub"},"content":"Progress: |\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d----------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":437,"author":{"gitId":"jeromeongithub"},"content":"__________________________________________________________________________________________","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"jeromeongithub"},"content":"[#00001][ID:00001][X][III][task1                              ][Due by: 30 Mar 2023 18:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":439,"author":{"gitId":"jeromeongithub"},"content":"[#00002][ID:00002][ ][III][task2                              ][Due by: 30 Mar 2023 19:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":440,"author":{"gitId":"jeromeongithub"},"content":"[#00003][ID:00003][ ][III][task3                              ][Due by: 31 Mar 2023 20:00]","lastModifiedDate":"2023-04-08"},{"lineNumber":441,"author":{"gitId":"jeromeongithub"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":442,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":443,"author":{"gitId":"clement559"},"content":"\u003c!-- @@author clement559 --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":444,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":445,"author":{"gitId":"clement559"},"content":"### View/Edit configurable settings `config`","lastModifiedDate":"2023-04-06"},{"lineNumber":446,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":447,"author":{"gitId":"clement559"},"content":"Displays/edits the current configuration for repeating tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":448,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":449,"author":{"gitId":"clement559"},"content":"Format: `config` OR `config [-repfreq REPEAT_FREQUENCY] [-chkfreq CHECK_FREQUENCY]` OR `config -reset`","lastModifiedDate":"2023-04-08"},{"lineNumber":450,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":451,"author":{"gitId":"clement559"},"content":"- `REPEAT_FREQUENCY` is in days and must be an integer from 1 to 2147483647.","lastModifiedDate":"2023-04-08"},{"lineNumber":452,"author":{"gitId":"clement559"},"content":"  - Tasks will recur, creating a copy of themselves (with a new id) if it has been at least `REPEAT_FREQUENCY` since their deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":453,"author":{"gitId":"clement559"},"content":"- `CHECK_FREQUENCY` is in minutes and must be an integer from 0 to 2147483647.","lastModifiedDate":"2023-04-08"},{"lineNumber":454,"author":{"gitId":"clement559"},"content":"  - The program will check for recurring tasks on startup and when a command is executed if it has been at least `CHECK_FREQUENCY` minutes since the last check.","lastModifiedDate":"2023-04-08"},{"lineNumber":455,"author":{"gitId":"clement559"},"content":"  - A `CHECK_FREQUENCY` of 0 will mean that the program will check for recurring tasks every time a command is executed.","lastModifiedDate":"2023-04-08"},{"lineNumber":456,"author":{"gitId":"clement559"},"content":"- `config -reset` will cause configuration settings to be reset to the default (equivalent to `config -repfreq 7 -chkfreq 0`).","lastModifiedDate":"2023-04-08"},{"lineNumber":457,"author":{"gitId":"clement559"},"content":"  - `-reset` will override `-repfreq` and `-chkfreq` if provided together.","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":459,"author":{"gitId":"clement559"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":460,"author":{"gitId":"clement559"},"content":"`config` displays the current configuration settings.","lastModifiedDate":"2023-04-08"},{"lineNumber":461,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":462,"author":{"gitId":"clement559"},"content":"Here are the configuration settings for your system:","lastModifiedDate":"2023-04-06"},{"lineNumber":463,"author":{"gitId":"clement559"},"content":"Repeating tasks every 7 days","lastModifiedDate":"2023-04-06"},{"lineNumber":464,"author":{"gitId":"clement559"},"content":"Checking for repeating task every: 0 minutes","lastModifiedDate":"2023-04-06"},{"lineNumber":465,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":466,"author":{"gitId":"clement559"},"content":"`config -chkfreq 5 -repfreq 3` sets tasks to repeat every 3 days and the check for recurring task to every 5 minutes.","lastModifiedDate":"2023-04-08"},{"lineNumber":467,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":468,"author":{"gitId":"clement559"},"content":"Okay, I have changed the configuration to as follows:","lastModifiedDate":"2023-04-06"},{"lineNumber":469,"author":{"gitId":"clement559"},"content":"Repeating tasks every 3 days","lastModifiedDate":"2023-04-08"},{"lineNumber":470,"author":{"gitId":"clement559"},"content":"Checking for repeating task every: 5 minutes","lastModifiedDate":"2023-04-06"},{"lineNumber":471,"author":{"gitId":"clement559"},"content":"```","lastModifiedDate":"2023-04-06"},{"lineNumber":472,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":473,"author":{"gitId":"RuiShengGit"},"content":"\u003c!-- @@author RuiShengGit --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":474,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":475,"author":{"gitId":"RuiShengGit"},"content":"### View help List `help`","lastModifiedDate":"2023-04-08"},{"lineNumber":476,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":477,"author":{"gitId":"RuiShengGit"},"content":"Displays all possible commands/filters/sorts that can be used.","lastModifiedDate":"2023-04-08"},{"lineNumber":478,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":479,"author":{"gitId":"RuiShengGit"},"content":"Format: `help [HELP_TYPE]`","lastModifiedDate":"2023-04-08"},{"lineNumber":480,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":481,"author":{"gitId":"RuiShengGit"},"content":"- If `HELP_TYPE` is `filter`, the help message regarding filter options is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":482,"author":{"gitId":"RuiShengGit"},"content":"- If `HELP_TYPE` is `sort`, the help message regarding sorting options is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":483,"author":{"gitId":"RuiShengGit"},"content":"- If `HELP_TYPE` is anything else or not provided, the command help message is displayed.","lastModifiedDate":"2023-04-08"},{"lineNumber":484,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":485,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":486,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":487,"author":{"gitId":"RuiShengGit"},"content":"`help` will display the command help message.","lastModifiedDate":"2023-04-08"},{"lineNumber":488,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":489,"author":{"gitId":"RuiShengGit"},"content":"Here is the list of commands that you can use:","lastModifiedDate":"2023-04-08"},{"lineNumber":490,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-05"},{"lineNumber":491,"author":{"gitId":"RuiShengGit"},"content":"| Command                                | Description                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":492,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-05"},{"lineNumber":493,"author":{"gitId":"RuiShengGit"},"content":"| add DESCRIPTION [-due DEADLINE]        | Adds a new task with the given attributes to  |","lastModifiedDate":"2023-04-08"},{"lineNumber":494,"author":{"gitId":"RuiShengGit"},"content":"|                 [-email EMAIL_ADDRESS] | your To-Do list.                              |","lastModifiedDate":"2023-04-08"},{"lineNumber":495,"author":{"gitId":"RuiShengGit"},"content":"|                 [-tags TAGS]           |                                               |","lastModifiedDate":"2023-04-08"},{"lineNumber":496,"author":{"gitId":"RuiShengGit"},"content":"|                 [-rep REPEAT_TIMES]    |                                               |","lastModifiedDate":"2023-04-08"},{"lineNumber":497,"author":{"gitId":"RuiShengGit"},"content":"|                 [-prio PRIORITY_LEVEL] |                                               |","lastModifiedDate":"2023-04-05"},{"lineNumber":498,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":499,"author":{"gitId":"RuiShengGit"},"content":"| mark IDS                               | Marks given tasks as completed.               |","lastModifiedDate":"2023-04-08"},{"lineNumber":500,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":501,"author":{"gitId":"RuiShengGit"},"content":"| unmark IDS                             | Marks given tasks as incomplete.              |","lastModifiedDate":"2023-04-08"},{"lineNumber":502,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":503,"author":{"gitId":"RuiShengGit"},"content":"| delete IDS                             | Deletes given tasks from your To-Do list.     |","lastModifiedDate":"2023-04-08"},{"lineNumber":504,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":505,"author":{"gitId":"RuiShengGit"},"content":"| desc IDS -edit DESCRIPTION             | Sets the descriptions of given tasks.         |","lastModifiedDate":"2023-04-08"},{"lineNumber":506,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":507,"author":{"gitId":"RuiShengGit"},"content":"| prio IDS -edit PRIORITY_LEVEL          | Sets the priority levels of given tasks.      |","lastModifiedDate":"2023-04-08"},{"lineNumber":508,"author":{"gitId":"RuiShengGit"},"content":"| prio IDS -del                          | Deletes the priority levels of given tasks.   |","lastModifiedDate":"2023-04-08"},{"lineNumber":509,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":510,"author":{"gitId":"RuiShengGit"},"content":"| due IDS -edit DEADLINE                 | Sets the deadlines of given tasks.            |","lastModifiedDate":"2023-04-08"},{"lineNumber":511,"author":{"gitId":"RuiShengGit"},"content":"| due IDS -del                           | Deletes the deadlines of given tasks.         |","lastModifiedDate":"2023-04-08"},{"lineNumber":512,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":513,"author":{"gitId":"RuiShengGit"},"content":"| email IDS -edit EMAIL_ADDRESS          | Sets the email addresses of given tasks.      |","lastModifiedDate":"2023-04-08"},{"lineNumber":514,"author":{"gitId":"RuiShengGit"},"content":"| email IDS -del                         | Deletes the email addresses of given tasks.   |","lastModifiedDate":"2023-04-08"},{"lineNumber":515,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":516,"author":{"gitId":"RuiShengGit"},"content":"| tags IDS -edit LIST_OF_TAGS            | Sets the tags of given tasks.                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":517,"author":{"gitId":"RuiShengGit"},"content":"| tags IDS -add LIST_OF_TAGS             | Adds given tags to given tasks.               |","lastModifiedDate":"2023-04-08"},{"lineNumber":518,"author":{"gitId":"RuiShengGit"},"content":"| tags IDS -del LIST_OF_TAGS             | Deletes given tags from given tasks.          |","lastModifiedDate":"2023-04-08"},{"lineNumber":519,"author":{"gitId":"RuiShengGit"},"content":"| tags IDS -del                          | Deletes all tags from given tasks.            |","lastModifiedDate":"2023-04-08"},{"lineNumber":520,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":521,"author":{"gitId":"RuiShengGit"},"content":"| rep IDS -edit REPEAT_TIMES             | Sets the recurrence count of given tasks.     |","lastModifiedDate":"2023-04-08"},{"lineNumber":522,"author":{"gitId":"RuiShengGit"},"content":"| rep IDS -del                           | Makes given tasks no longer recur.            |","lastModifiedDate":"2023-04-08"},{"lineNumber":523,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":524,"author":{"gitId":"RuiShengGit"},"content":"| list [FILTERS] [-sort SORT_OPTION]     | Display summary of all/filtered tasks that    |","lastModifiedDate":"2023-04-08"},{"lineNumber":525,"author":{"gitId":"RuiShengGit"},"content":"|                                        | is sorted if a sorting option is given.       |","lastModifiedDate":"2023-04-08"},{"lineNumber":526,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":527,"author":{"gitId":"RuiShengGit"},"content":"| info IDS                               | Display all attributes of given tasks.        |","lastModifiedDate":"2023-04-08"},{"lineNumber":528,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":529,"author":{"gitId":"RuiShengGit"},"content":"| progress                               | Displays the progress and summary of tasks    |","lastModifiedDate":"2023-04-08"},{"lineNumber":530,"author":{"gitId":"RuiShengGit"},"content":"|                                        | that are due this week.                       |","lastModifiedDate":"2023-04-08"},{"lineNumber":531,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":532,"author":{"gitId":"RuiShengGit"},"content":"| taglist                                | Displays all tags found in your To-Do List.   |","lastModifiedDate":"2023-04-08"},{"lineNumber":533,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":534,"author":{"gitId":"RuiShengGit"},"content":"| config                                 | Displays current configuration settings.      |","lastModifiedDate":"2023-04-08"},{"lineNumber":535,"author":{"gitId":"RuiShengGit"},"content":"| config [-chkfreq CHECK_FREQUENCY]      | Sets checking frequency for recurring tasks.  |","lastModifiedDate":"2023-04-08"},{"lineNumber":536,"author":{"gitId":"RuiShengGit"},"content":"|        [-repfreq REPEAT_FREQUENCY]     | Sets repeating frequency of recurring tasks.  |","lastModifiedDate":"2023-04-08"},{"lineNumber":537,"author":{"gitId":"RuiShengGit"},"content":"| config -reset                          | Resets configuration settings to default.     |","lastModifiedDate":"2023-04-08"},{"lineNumber":538,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":539,"author":{"gitId":"RuiShengGit"},"content":"| help                                   | Displays summary of all possible commands.    |","lastModifiedDate":"2023-04-08"},{"lineNumber":540,"author":{"gitId":"RuiShengGit"},"content":"| help filter                            | Displays summary of all filter options.       |","lastModifiedDate":"2023-04-08"},{"lineNumber":541,"author":{"gitId":"RuiShengGit"},"content":"| help sort                              | Displays summary of all sorting options.      |","lastModifiedDate":"2023-04-08"},{"lineNumber":542,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":543,"author":{"gitId":"RuiShengGit"},"content":"| reset                                  | Deletes all tasks and reset IDs to 0.         |","lastModifiedDate":"2023-04-08"},{"lineNumber":544,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":545,"author":{"gitId":"RuiShengGit"},"content":"| exit                                   | Exits the program.                            |","lastModifiedDate":"2023-04-05"},{"lineNumber":546,"author":{"gitId":"RuiShengGit"},"content":"+----------------------------------------------------------------------------------------+","lastModifiedDate":"2023-04-08"},{"lineNumber":547,"author":{"gitId":"RuiShengGit"},"content":"IDS can also be replaced with FILTERS, use \"help filter\" for information on filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":548,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":549,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":550,"author":{"gitId":"RuiShengGit"},"content":"### Exit program `exit`","lastModifiedDate":"2023-04-05"},{"lineNumber":551,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":552,"author":{"gitId":"RuiShengGit"},"content":"Exits the program.","lastModifiedDate":"2023-04-01"},{"lineNumber":553,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":554,"author":{"gitId":"RuiShengGit"},"content":"Format: `exit`","lastModifiedDate":"2023-04-01"},{"lineNumber":555,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":556,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":557,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":558,"author":{"gitId":"RuiShengGit"},"content":"`exit`","lastModifiedDate":"2023-04-01"},{"lineNumber":559,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-01"},{"lineNumber":560,"author":{"gitId":"RuiShengGit"},"content":"See you again, bye!","lastModifiedDate":"2023-04-01"},{"lineNumber":561,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-01"},{"lineNumber":562,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":563,"author":{"gitId":"RuiShengGit"},"content":"### Reset To-Do List `reset`","lastModifiedDate":"2023-04-08"},{"lineNumber":564,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":565,"author":{"gitId":"RuiShengGit"},"content":"Resets your To-Do List, deleting all tasks and resetting the allocated id numbers.","lastModifiedDate":"2023-04-08"},{"lineNumber":566,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":567,"author":{"gitId":"RuiShengGit"},"content":"Exits the program.","lastModifiedDate":"2023-04-08"},{"lineNumber":568,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":569,"author":{"gitId":"RuiShengGit"},"content":"Format: `reset`","lastModifiedDate":"2023-04-08"},{"lineNumber":570,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":571,"author":{"gitId":"RuiShengGit"},"content":"- Must be confirmed by entering `YES` (case sensitive).","lastModifiedDate":"2023-04-08"},{"lineNumber":572,"author":{"gitId":"RuiShengGit"},"content":"- **Warning!** This is irreversible.","lastModifiedDate":"2023-04-08"},{"lineNumber":573,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":574,"author":{"gitId":"RuiShengGit"},"content":"Example of usage and output:","lastModifiedDate":"2023-04-08"},{"lineNumber":575,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":576,"author":{"gitId":"RuiShengGit"},"content":"`reset`","lastModifiedDate":"2023-04-08"},{"lineNumber":577,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":578,"author":{"gitId":"RuiShengGit"},"content":"Are you sure you want to reset your To-Do List?","lastModifiedDate":"2023-04-08"},{"lineNumber":579,"author":{"gitId":"RuiShengGit"},"content":"This cannot be undone. Enter \"YES\" to confirm, or anything else to cancel: ","lastModifiedDate":"2023-04-08"},{"lineNumber":580,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":581,"author":{"gitId":"RuiShengGit"},"content":"`YES` will reset your To-Do List if entered after the above confirmation prompt.","lastModifiedDate":"2023-04-08"},{"lineNumber":582,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":583,"author":{"gitId":"RuiShengGit"},"content":"Okay, your To-Do List has been reset.","lastModifiedDate":"2023-04-08"},{"lineNumber":584,"author":{"gitId":"RuiShengGit"},"content":"```","lastModifiedDate":"2023-04-08"},{"lineNumber":585,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":586,"author":{"gitId":"jeromeongithub"},"content":"\u003c!-- @@author jeromeongithub --\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":587,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":588,"author":{"gitId":"jeromeongithub"},"content":"## FAQ","lastModifiedDate":"2023-03-29"},{"lineNumber":589,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":590,"author":{"gitId":"jeromeongithub"},"content":"**How do I transfer my data to another computer?**","lastModifiedDate":"2023-03-29"},{"lineNumber":591,"author":{"gitId":"jeromeongithub"},"content":"- Your task list is saved in the generated `data.json` file, and configs are saved in the `config.json` file.","lastModifiedDate":"2023-04-07"},{"lineNumber":592,"author":{"gitId":"jeromeongithub"},"content":"- Copy these files to the other computer and place them in the same location as the jar file for the program before running it.","lastModifiedDate":"2023-04-07"},{"lineNumber":593,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":594,"author":{"gitId":"jeromeongithub"},"content":"**Can I edit my save/config file using a text editor?**","lastModifiedDate":"2023-04-08"},{"lineNumber":595,"author":{"gitId":"jeromeongithub"},"content":"- Yes, but this is not recommended unless you know what you are doing.","lastModifiedDate":"2023-04-08"},{"lineNumber":596,"author":{"gitId":"jeromeongithub"},"content":"- If your save/config file is invalidated and cannot be loaded, it will be copied to `invalid_data.json` and `invalid_config.json`, while your task list/config settings will be reset.","lastModifiedDate":"2023-04-08"},{"lineNumber":597,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":598,"author":{"gitId":"jeromeongithub"},"content":"**Why was my recurring task details not updated with the original task?**","lastModifiedDate":"2023-04-02"},{"lineNumber":599,"author":{"gitId":"jeromeongithub"},"content":"- The recurring tasks that are automatically added by the system are not linked to the original task.","lastModifiedDate":"2023-04-02"},{"lineNumber":600,"author":{"gitId":"jeromeongithub"},"content":"- If you wish to change the task details for future recurring tasks, you may edit the latest task added by the system before the current deadline.","lastModifiedDate":"2023-04-02"},{"lineNumber":601,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":602,"author":{"gitId":"jeromeongithub"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":603,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":604,"author":{"gitId":"jeromeongithub"},"content":"- Refer to the [Restrictions](#restrictions) section for more information about the parameters.","lastModifiedDate":"2023-04-08"},{"lineNumber":605,"author":{"gitId":"jeromeongithub"},"content":"- Refer to the [Selecting tasks](#selecting-tasks) section for more information about selecting targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":606,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":607,"author":{"gitId":"jeromeongithub"},"content":"| Action                                 | Command                                                                                                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":608,"author":{"gitId":"jeromeongithub"},"content":"|----------------------------------------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-08"},{"lineNumber":609,"author":{"gitId":"jeromeongithub"},"content":"| Add a task                             | `add DESCRIPTION [-due DEADLINE] [-email EMAIL_ADDRESS] [-tags LIST_OF_TAGS] [-rep REPEAT_TIMES] [-prio PRIORITY_LEVEL]` |","lastModifiedDate":"2023-04-08"},{"lineNumber":610,"author":{"gitId":"jeromeongithub"},"content":"| Mark tasks complete                    | `mark IDS`                                                                                                               |","lastModifiedDate":"2023-04-08"},{"lineNumber":611,"author":{"gitId":"jeromeongithub"},"content":"| Mark tasks incomplete                  | `unmark IDS`                                                                                                             |","lastModifiedDate":"2023-04-08"},{"lineNumber":612,"author":{"gitId":"jeromeongithub"},"content":"| Delete tasks                           | `delete IDS`                                                                                                             |","lastModifiedDate":"2023-04-08"},{"lineNumber":613,"author":{"gitId":"jeromeongithub"},"content":"| Edit description of tasks              | `desc IDS -edit DESCRIPTION`                                                                                             |","lastModifiedDate":"2023-04-08"},{"lineNumber":614,"author":{"gitId":"jeromeongithub"},"content":"| Edit deadline to tasks                 | `due IDS -edit DEADLINE`                                                                                                 |","lastModifiedDate":"2023-04-08"},{"lineNumber":615,"author":{"gitId":"jeromeongithub"},"content":"| Edit email to tasks                    | `email IDS -edit EMAIL_ADDRESS`                                                                                          |","lastModifiedDate":"2023-04-08"},{"lineNumber":616,"author":{"gitId":"jeromeongithub"},"content":"| Edit tags to tasks                     | `tags IDS -edit LIST_OF_TAGS`                                                                                            |","lastModifiedDate":"2023-04-08"},{"lineNumber":617,"author":{"gitId":"jeromeongithub"},"content":"| Edit repeat times of tasks             | `rep IDS -edit REPEAT_TIMES`                                                                                             |","lastModifiedDate":"2023-04-08"},{"lineNumber":618,"author":{"gitId":"jeromeongithub"},"content":"| Edit priority level of tasks           | `prio IDS -edit PRIORITY_LEVEL`                                                                                          |","lastModifiedDate":"2023-04-08"},{"lineNumber":619,"author":{"gitId":"jeromeongithub"},"content":"| Display summary of tasks               | `list [FILTERS] [-sort SORT_OPTION]`                                                                                     |","lastModifiedDate":"2023-04-08"},{"lineNumber":620,"author":{"gitId":"jeromeongithub"},"content":"| Check all details of a task            | `info`                                                                                                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":621,"author":{"gitId":"jeromeongithub"},"content":"| Check all tags in task list            | `taglist`                                                                                                                |","lastModifiedDate":"2023-04-08"},{"lineNumber":622,"author":{"gitId":"jeromeongithub"},"content":"| Check progress of current week\u0027s tasks | `progress`                                                                                                               |","lastModifiedDate":"2023-04-08"},{"lineNumber":623,"author":{"gitId":"jeromeongithub"},"content":"| Show/edit configuration settings       | `config [-repfreq REPEAT_FREQUENCY] [-chkfreq CHECK_FREQUENCY]`                                                          |","lastModifiedDate":"2023-04-08"},{"lineNumber":624,"author":{"gitId":"jeromeongithub"},"content":"| Check all commands of the program      | `help`                                                                                                                   |","lastModifiedDate":"2023-04-05"},{"lineNumber":625,"author":{"gitId":"jeromeongithub"},"content":"| Exit program                           | `exit`                                                                                                                   |","lastModifiedDate":"2023-04-01"},{"lineNumber":626,"author":{"gitId":"jeromeongithub"},"content":"| Reset task list                        | `reset`                                                                                                                  |","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"jeromeongithub":67,"KedrianLoh":75,"ERJUNZE":153,"-":16,"RuiShengGit":235,"clement559":80}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!include Style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"hide members","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"Package \" \" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    Class UI COLOR_UI","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    Package \"Logic\\t\\t\\t\\t\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    Class Parser COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"        Class Command COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    Class Storage COLOR_STORAGE","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    Class TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    Class Config COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    Class ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"Class \"User\" as User COLOR_USER","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"Class \"Save file\" as File #E1AF87","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"User -[#pink]\u003e UI","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"UI \u003c-[#green]\u003e ToDoListManager","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -[#grey]-\u003e Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"Parser -r[#blue]-\u003e Command","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -[#grey]-\u003e Command","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"Command -[#blue]-\u003e TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"Command -[#blue]-\u003e Config","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -[#grey]\u003e Storage","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"Storage -u[COLOR_STORAGE]-\u003e TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"Storage -u[COLOR_STORAGE]-\u003e Config","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"Storage -r[COLOR_STORAGE]\u003e File","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ERJUNZE":31}},{"path":"docs/diagrams/DeleteTaskCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"participant \":DeleteTaskCommand\" as DeleteTaskCommand COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"delete \u003cid\u003e\")","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser : parseCommand(\"delete \u003cid\u003e\")","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"activate Parser","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"create DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"DeleteTaskCommand --\u003e Parser","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"deactivate Parser","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e DeleteTaskCommand : execute(taskList, ui)","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"DeleteTaskCommand -\u003e TaskList: deleteTask(id)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"activate TaskList","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"TaskList --\u003e DeleteTaskCommand : taskString","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"DeleteTaskCommand -\u003e Ui : printDeleteTaskMessage(taskString)","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"activate Ui","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"Ui --\u003e DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"deactivate Ui","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"DeleteTaskCommand --\u003e ToDoListManager","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"destroy DeleteTaskCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"RuiShengGit":50}},{"path":"docs/diagrams/EditDeadlineCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"!include Style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"actor User","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"participant \":EditDeadlineCommand\" as EditDeadlineCommand COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"participant \":Task\" as Task COLOR_TASK_LIST","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"User -\u003e ToDoListManager: input(\"due \u003cid\u003e -edit \u003cdeadline\u003e\")","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"ToDoListManager -\u003e Parser: parseCommand(inputCommand)","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"Parser -\u003e EditDeadlineCommand: EditDeadlineCommand(getArguments(splitInput, EditDeadlineCommand.FLAGS))","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"ToDoListManager -\u003e EditDeadlineCommand: execute(taskList, ui)","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"EditDeadlineCommand -\u003e TaskList: setDeadline(id, deadline)","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"TaskList -\u003e TaskList: getTasks(id)","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"TaskList -\u003e Task: setDeadline(deadline)","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"Task --\u003e TaskList: taskString","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"TaskList -\u003e Ui: printEditTaskMessage(taskString)","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"clement559":34}},{"path":"docs/diagrams/EditEmailCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":ParserUtil\" as ParserUtil COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"participant \":EditEmailCommand\" as EditEmailCommand COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"participant \":Task\" as Task COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"email IDs -edit \u003cemail\u003e\")","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser: parseCommand(inputCommand)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"create EditEmailCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e EditEmailCommand: EditEmailCommand(getArguments(splitInput, EditEmailCommand.FLAGS))","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"EditEmailCommand -\u003e ParserUtil : parseId(args.get(Flags.COMMAND_EDIT_EMAIL));","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"EditEmailCommand -\u003e ParserUtil : parseFilter(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e EditEmailCommand: execute(taskList, ui)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"EditEmailCommand -\u003e TaskList: setEmail(idHashSet, email)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e TaskList: getTask(IDs)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Task: setEmail(email)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"Task --\u003e TaskList: taskString","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"alt taskString.isEmpty()","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"else email \u003d\u003d null","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printEditDeleteTaskMessage(\"email\", taskString);","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"else","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printEditTaskMessage(\"email\", email, taskString);","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":44}},{"path":"docs/diagrams/EditPriorityCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":ParserUtil\" as ParserUtil COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"participant \":EditPriorityCommand\" as EditPriorityCommand COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"participant \":Task\" as Task COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"prio IDs -edit \u003cpriority\u003e\")","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser: parseCommand(inputCommand)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"create EditPriorityCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e EditPriorityCommand: EditPriorityCommand(getArguments(splitInput, EditPriorityCommand.FLAGS))","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"EditPriorityCommand -\u003e ParserUtil : parseId(args.get(Flags.COMMAND_EDIT_PRIORITY));","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"EditPriorityCommand -\u003e ParserUtil : parseFilter(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e EditPriorityCommand: execute(taskList, config, ui)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"EditPriorityCommand -\u003e TaskList: setPriority(idHashSet, priority)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e TaskList: getTask(IDs)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Task: setPriority(priority)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"Task --\u003e TaskList: taskString","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"alt taskString.isEmpty()","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"else priority \u003d\u003d Priority.NONE","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printEditDeleteTaskMessage(\"priority level\", taskString)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"else","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"TaskList -\u003e Ui: printEditTaskMessage(\"priority level\", priority.toString(), taskString);","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":45}},{"path":"docs/diagrams/ExitProgramStorageSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"!include Style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"participant \":ExitCommand\" as ExitCommand COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"box Storage COLOR_STORAGE_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"endbox","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"User -\u003e ToDoListManager: input(\"exit\")","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Parser : parseCommand(\"exit\")","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"activate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"create ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"Parser -\u003e ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"activate ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"ExitCommand --\u003e Parser:","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"deactivate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e ExitCommand : execute(taskList, ui)","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"activate ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"ExitCommand -\u003e Ui : printGoodbyeMessage()","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"Ui --\u003e ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"ExitCommand --\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Storage: saveData(taskList)","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"activate Storage","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"Storage --\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"deactivate Storage","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e ExitCommand: shouldExit()","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"activate ExitCommand","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"ExitCommand --\u003e ToDoListManager: true","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"deactivate ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"destroy ExitCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"destroy ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jeromeongithub":56}},{"path":"docs/diagrams/HelpCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"participant \":HelpCommand\" as HelpCommand COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"help\")","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser : parseCommand(input command)","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"create HelpCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e HelpCommand :  HelpCommand(getArguments(splitInput, HelpCommand.EXPECTED_FLAGS))","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e HelpCommand : execute(taskList, config, ui)","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"HelpCommand -\u003e Ui : printHelpList(helpMessage)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":28}},{"path":"docs/diagrams/ListTasksCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"//@@author KedrianLoh","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"actor User","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"participant \":ListTasksCommand\" as ListTasksCommand COLOR_LOGIC","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"User -\u003e ToDoListManager: input(\"list -sort due\")","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"ToDoListManager -\u003e Parser : parseCommand(\"list -sort due\")","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"activate Parser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"create ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"Parser -\u003e ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"activate ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"ListTasksCommand --\u003e Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"Parser --\u003e ToDoListManager: command","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"deactivate Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"ToDoListManager -\u003e ListTasksCommand : execute(TaskList, ui)","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"activate ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"ListTasksCommand -\u003e TaskList : toString(comparator)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"activate TaskList","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"TaskList --\u003e ListTasksCommand : taskListString","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"ListTasksCommand -\u003e Ui : printTaskList(taskList.size(), taskListString)","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"activate Ui","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"Ui --\u003e ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"deactivate Ui","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"ListTasksCommand --\u003e ToDoListManager","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"destroy ListTasksCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"KedrianLoh":50}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!include Style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"hide members","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"package \"\\t\\t\\t\\t\\t\\t\\t\\tLogic\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"class Parser COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"class \"{abstract}\\nCommand\" as Command COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"class ABCCommand COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"class ParserUtil COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"class FormatterUtil COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"class ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"class Ui COLOR_UI","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"package \"\\t\\t\\t\\tModel\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"class TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"class Config COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"note top of ABCCommand: AddTaskCommand,\\nListTagsCommand,\\nEditEmailCommand etc","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"Parser .\u003e ABCCommand : creates \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"ABCCommand -d-|\u003e Command","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"ABCCommand .\u003e ParserUtil","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"ABCCommand ..\u003e FormatterUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"Command .d.\u003e TaskList","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"Command .d.\u003e Config","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"Command .d.\u003e Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -d-\u003e \"\\t1\" Parser","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager .\u003e ABCCommand : executes \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ERJUNZE":30}},{"path":"docs/diagrams/ManagerClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!include Style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"hide members","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"class ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"class Ui COLOR_UI","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"class Parser COLOR_LOGIC","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"class \"{abstract}\\nCommand\" as Command COLOR_LOGIC","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"package \"\\t\\t\\t\\tModel\" \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"class TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"class Config COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"class Storage COLOR_STORAGE","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -l-\u003e \"1\\t\" Ui : creates \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -u-\u003e \"\\t1\" Parser : creates \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -d-\u003e \"\\t\\t1\" TaskList : creates \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -d-\u003e \"\\t\\t1\" Config : creates \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -d-\u003e \"1\" Storage : creates\\t \u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager .d.\u003e Command : executes \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"Parser .r.\u003e Command","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"Storage .u.\u003e TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"Storage .u.\u003e Config","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ERJUNZE":26}},{"path":"docs/diagrams/MarkorUnmarkTaskCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"participant \":Mark/UnmarkTaskCommand\" as MarkTaskCommand COLOR_LOGIC","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"mark \u003cid\u003e\")","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser : parseCommand(\"mark \u003cid\u003e\")","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"activate Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"create MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"activate MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"MarkTaskCommand -\u003e Parser","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"deactivate MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"deactivate Parser","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e MarkTaskCommand : execute(taskList, ui)","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"activate MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"MarkTaskCommand -\u003e TaskList: setDone(id, isDone)","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"activate TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"TaskList --\u003e MarkTaskCommand : taskString","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"MarkTaskCommand -\u003e Ui : printMark/UnmarkTaskMessage(taskString)","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"activate Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"Ui --\u003e MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"deactivate Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"MarkTaskCommand --\u003e ToDoListManager","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"deactivate MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"destroy MarkTaskCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"RuiShengGit":50}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"hide empty members","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    class Task COLOR_TASK_LIST {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        -id: int","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"        -description: String","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"        -email: String \u003d null","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"        -deadline: LocalDateTime \u003d null","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"        -repeatTimes: int","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"        -tags: TreeSet\u003cString\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    class \"\u003c\u003cenumeration\u003e\u003e\\nPriority\" as Priority COLOR_TASK_LIST {","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"        HIGH","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"        MEDIUM","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"        LOW","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"        NONE","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    class TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    class Config COLOR_TASK_LIST {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        -repeatFrequency: int","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        -checkFrequency: int","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        -lastChecked: LocalDateTime","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"TaskList ..\u003e Priority","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"Task -r-\u003e \"1\" Priority","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"TaskList *-d-\u003e \"*\" Task","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ERJUNZE":31}},{"path":"docs/diagrams/ProgressBarCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"!include Style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"participant \":ProgressBarCommand\" as ProgressBarCommand COLOR_LOGIC","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"User -\u003e ToDoListManager: input(\"progress\")","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Parser : parseCommand(\"progress\")","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"activate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"create ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"Parser -\u003e ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"activate ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand --\u003e Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"deactivate ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"deactivate Parser","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e ProgressBarCommand : execute(taskList, ui)","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"activate ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand -\u003e TaskList: size(inThisWeek)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"activate TaskList","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"TaskList --\u003e ProgressBarCommand : tasksThisWeek","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"deactivate TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand -\u003e TaskList: size(inThisWeek.and(Task.isDonePredicate()))","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"activate TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"TaskList --\u003e ProgressBarCommand : completedTasksThisWeek","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"deactivate TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand -\u003e TaskList: toString(inThisWeek)","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"activate TaskList","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"TaskList --\u003e ProgressBarCommand : taskListString","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand -\u003e Ui : printProgressBar(...)","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"Ui --\u003e ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"ProgressBarCommand --\u003e ToDoListManager","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"deactivate ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"destroy ProgressBarCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jeromeongithub":61}},{"path":"docs/diagrams/ResetCommandSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"!include Style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"actor User","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"box Logic COLOR_LOGIC_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"participant \":Parser\" as Parser COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"participant \":ResetCommand\" as ResetCommand COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"User -\u003e ToDoListManager: input(\"reset\")","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e Parser : parseCommand(input command)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"create ResetCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"Parser -\u003e ResetCommand :  ResetCommand()","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"Parser --\u003e ToDoListManager : command","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"ToDoListManager -\u003e ResetCommand : execute(taskList, config, ui)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"alt getUserConfirmation() \u003d true","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"ResetCommand -\u003e TaskList : taskList.reset();","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"ResetCommand -\u003e Ui : printResetMessage(true);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"else","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"ResetCommand -\u003e Ui : printResetMessage(false);","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"end","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":35}},{"path":"docs/diagrams/StartUpStorageSequenceWithNoSaveFile.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"!include Style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"participant \":Main\" as Main","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"box Storage COLOR_STORAGE_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"User -\u003e Main: start program","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"Main -\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Storage: loadData()","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"activate Storage","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"Storage --\u003e ToDoListManager","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"deactivate Storage","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Ui: printNewSaveMessage()","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"activate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"Ui --\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"deactivate Ui","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"jeromeongithub":34}},{"path":"docs/diagrams/StartUpStorageWithValidSaveFile.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"!include Style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"actor User","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"participant \":Main\" as Main","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"box Manager COLOR_MAIN_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"participant \":ToDoListManager\" as ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"box Storage COLOR_STORAGE_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"participant \":Storage\" as Storage COLOR_STORAGE","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"box TaskList COLOR_TASK_LIST_LIGHT","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"participant \":TaskList\" as TaskList COLOR_TASK_LIST","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"end box","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"box Ui COLOR_UI_LIGHT","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"participant \":Ui\" as Ui COLOR_UI","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"User -\u003e Main: start program","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"Main -\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"activate ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Storage: loadData()","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"activate Storage","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"Storage --\u003e ToDoListManager: taskList","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"deactivate Storage","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e TaskList: size()","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"activate TaskList","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"TaskList --\u003e ToDoListManager : size","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager -\u003e Ui:printLoadSaveMessage(size)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"activate Ui","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"Ui --\u003e ToDoListManager","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"deactivate Ui","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"ToDoListManager --\u003e User","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"deactivate ToDoListManager","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"jeromeongithub":41}},{"path":"docs/diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_UI #3FC71B","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_UI_LIGHT #BFFCC6","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_MAIN #949494","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_MAIN_LIGHT #BFD1D0","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_LOGIC #6A6ADC","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_LOGIC_LIGHT #85E3FF","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_TASK_LIST #E41F36","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_TASK_LIST_LIGHT #FFABAB","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_STORAGE #EDC520","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_STORAGE_LIGHT #FFFFD1","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"!define COLOR_USER #F8C8DC","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"skinparam BoxPadding 0","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"hide footbox","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"hide circle","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ERJUNZE":26}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"hide empty members","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"package \"\\t\\t\\t\\t\\t\\tUi\" as UiPackage \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    class Ui COLOR_UI {","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        +close()","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"        +getUserInput()","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"        +println(strings: Strings...)","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"        +printSpecificMessage()","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    class Scanner COLOR_UI","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"class ToDoListManager COLOR_MAIN","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"class ABCCommand COLOR_LOGIC","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"note right of ABCCommand: AddTaskCommand,\\nListTagsCommand,\\nEditEmailCommand etc...","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"note bottom of Ui: printWelcomeMessage(),\\nprintTaskList(), etc... call\\nprintln() with the Strings\\nto be displayed","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"Ui -\u003e \"1\" Scanner","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager -\u003e \"\\t\\t\\t\\t1\" Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"ToDoListManager .r.\u003e ABCCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"ABCCommand ..\u003e Ui","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"ERJUNZE":24}},{"path":"docs/team/clement559.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"# Clement Siut - Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"## Project: NUS To-Do List","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"NUS To-Do List is a Java command-line interface (CLI) application that is designed to allow NUS students to keep track","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"of tasks that needs to be completed.","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"- **New Feature**: Created a repeating attribute to allow users to repeat tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    - What it does: Allows the user to add a repeating task to the To-Do list.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    - Justification: This feature is essential to the program as users may have regularly recurring tasks with similar ","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"      descriptions. This serves as a convenience for them as the program will automatically generate the next recurring","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"      task upon passing the deadline of the first.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"- **New Feature**: Created an edit deadline command to allow users to edit deadlines of existing tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    - What it does: Allows the user to edit the deadline of task with the given id by the user.","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    - Justification: This feature is essential to the program as users may want to change the initial deadline provided","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"      as they may wish to bring forward or delay the deadline of the tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"- **New Feature**: Created an edit repeat command to allow users to edit the number of repeats for existing tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    - What it does: Allows the user to edit the repeat count of a task with the given id by the user.","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    - Justification: This feature is essential to the program as users may want to reduce or increase the number of ","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"      times a task is repeated to prevent unnecessary duplicate tasks from being created by the program.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"- **New Feature**: Created filters for listing of existing tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    - What it does: Allows the user to filter existing tasks in the task list and list the filtered tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    - Justification: This feature is essential to the program as users may want to narrow down on certain tasks that they ","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"      would like to see in the To-do list and do not want to have to sieve through all tasks in it. Thus, the features helps ","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"      to save time for the user in identifying the tasks that they want to find.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"- **New Feature**: Created a configuration file to allow users to control the frequency of repeating tasks as well as ","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"    checks for repeating tasks.","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"    - What it does: Allows the user to edit the frequency of repeating tasks and repeating tasks checks.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    - Justification: This feature is essential to the program as users may want to reduce the number of times the ","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"      program checks for repeating tasks to minimise the performance impact during their usage of the program. They may","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"      also want their tasks to repeat at a lower or higher frequency.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"#### Code Contributed:","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"- [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dclement559\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"#### Enhancements Implemented:","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"- Wrote JUnit test for the edit deadline command.","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"#### Contributions to the UG:","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"- Contributed to the `Command Summary` section.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"- Updated and contributed to the `Features` section.","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"    - Contributed to the `Edit/delete deadline` feature component.","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"    - Contributed to the `Edit/delete recurring count` feature component.","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    - Contributed to the `View all/selected tasks in To-Do list` feature component.","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"    - Contributed to the `View/Edit configurable settings` feature component.","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"    - Contributed to the `Help` feature component.","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"#### Contributions to the DG:","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"- Added implementation details for the edit deadline command.","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"- Added implementation details for the repeating task command.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"- Created Sequence Diagrams using Plant UML for edit deadline command.","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"- Contributed to the planning of the product by coming up with features to implement.","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"- Ensure that the code being merged does not have bugs or typos.","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"#### Review/monitoring contributions:","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"- Reviewed and approved PRs for the team: [Full List](https://github.com/AY2223S2-CS2113-T11-4/tp/issues?q\u003dis%3Aclosed+reviewed-by%3Aclement559)","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"- #13,#20,#22,#25,#32,#46,#47,#50,#55,#57,#69,#114,#119,#124,#126","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"- Reviewed and provide suggestions to other group\u0027s developer guide: [CS2113-T09-1](https://github.com/nus-cs2113-AY2223S2/tp/pull/14#pullrequestreview-1364260237)","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"- Reported bugs in other teams\u0027 programs and provide suggestions to improve the program: [CS2113-T13-2](https://github.com/clement559/ped/issues).","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"clement559":71}},{"path":"docs/team/erjunze.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"# Er Jun Ze - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"## Project: NUS To-Do List","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"NUS To-Do List is a Java command-line interface (CLI) application that is designed to allow NUS students to keep track","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"of tasks that needs to be completed.","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"- **New Feature**: Created the `Parser` and `ParserUtil` classes for parsing commands from the user.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"  - What it does: Parses user input into the respective commands and their parameters.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"  - Justification: This feature is essential to the program as it made it easier to add new commands to the program,","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    which was necessary as new features likely require new commands to use.","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"- **New Feature**: Grouped the code into components, like the `Model`, `Logic`, and `Ui` components.","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"  - What it does: Improves the project\u0027s structure to be more in line with OOP principles.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"  - Justification: This feature is essential to the program as it made it easier to extend the codebase and implement","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    more features, without the code becoming too messy. ","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"- **New Feature**: Created a tag system for users to add tags, in the form of strings, to their tasks.","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"  - What it does: Allows users to add, edit and remove tags from their tasks using the `tags` command. Users can also","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    see all the tags present in their task list using the `taglist` command, in case they forgot what tags they have","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    used, after which they can view/edit tasks with those tags.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"  - Justification: This feature is useful to the program as it sets up the ability for users to search for tasks by","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    tags, or target certain tasks with commands depending on the tags they have. For example, students can add module","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    codes to tasks as a tag, so they can easily find all tasks in their task list that are related to that module later.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"- **New Feature**: Created a command for editing the description of tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"  - What it does: Allows users to edit the description of existing tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"  - Justification: This feature is useful to the program as users can update the descriptions of tasks if they want to","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    do so for reasons such as to more accurately reflect what the task is about.","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"- **New Feature**: Extended filters out of the `list` command to task selection in multiple commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"  - What it does: Allows users to select more than one task to target with a command. Users can use filters to target","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    all tasks fulfilling certain conditions.","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"  - Justification: This feature is useful to the program as it affords more flexibility to users when it comes to","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    manipulating their task list. Users do not have to individually target tasks, which will require as many commands","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    as tasks they want to edit/delete, and can instead mass edit/delete tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"### Code Contributed:","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"- [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003derjunze\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"### Enhancements Implemented:","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"- Wrote some JUnit tests for the `ParserUtil` class.","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"- Wrote the `Command format` section.","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"- Contributed to the `Add task`, `Edit description`, `Edit tags`, and `View all tags` components in the `Features` section.","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"- Added architecture diagram and provided a high-level overview of the project\u0027s structure.","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"- Added component class diagrams and described briefly how each component functions.","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"- Wrote the glossary and manual testing section.","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"- Contributed to the planning of the product by coming up with features to implement.","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"- Ensure that the code being merged does not have bugs or typos.","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"### Review/monitoring contributions:","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"- Reviewed and approved PRs for the [team](https://github.com/AY2223S2-CS2113-T11-4/tp/issues?q\u003dis%3Aclosed+reviewed-by%3AERJUNZE)","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"- Reviewed the developer guide for another team and provided suggestions: [CS2113-W15-1](https://github.com/nus-cs2113-AY2223S2/tp/pull/94)","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"- Reported bugs in the program of another team and provided suggestions for improvement: [CS2113T-T09-1](https://github.com/ERJUNZE/ped/issues)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ERJUNZE":73}},{"path":"docs/team/jeromeongithub.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"# Jerome Foo - Project Portfolio Page","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"## Project: NUS To-Do List","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"NUS To-Do List is a Java command-line interface (CLI) application that is designed to allow NUS students to keep track","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"of tasks that needs to be completed.","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"- **New Feature**: Created the base the task class which was greatly improved by the team over the project.","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"    - What it does: Allows for the creation and modification of tasks in the To-Do list. ","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"    - Justification: This feature is essential to the program as tasks have to be created for the task list to be useful ","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"recording them in the first place.","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"- **New Feature**: Provided storage functionality using GSON library.","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"    - What it does: The user\u0027s To-Do list is saved as a `.json` file after every command executed by the user. The saved ","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"file is loaded whenever the user uses the program again.","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"    - Justification: This feature is essential to the program as the task list would only be useful for the user if it ","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"can be saved and used again when the user needs to refer to the task list. By using the GSON library, the user\u0027s task ","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"list is saved as a human-readable file which can be easily modified by advanced users to quickly edit their task list.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"    ","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"-  **New Feature**: Created a `progress` command to allow users to check their progress on tasks that are due within the ","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"                   current week.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    - What it does: Allows the user to see their progress on all tasks in the To-Do list that are due within the current","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"week. The user will see the percentage of tasks completed, a progress bar and a list of all the tasks that are due ","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"within the current week.","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    - Justification: This feature is useful to the program as it provides users with a quick and easy way to view all of","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"their tasks that are due within the current week. This is especially useful if the user has a long To-Do list and only ","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"wants to see the tasks that are due very soon (in the current week), rather than listing out more tasks and having to ","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"double-check which are the ones that are due in the current week.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"-  **New Feature**: Changed the commands dealing with task id to handle multiple ids instead of a single id only.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"    - What it does: Commands such as the delete command can be done on multiple ids at once, instead of having to be ","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"selected 1 by 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"    - Justification: During the PE Dry Run, our team obtained feedback that it was very troublesome to delete tasks 1 by","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"1 and that a mass delete option would be very useful to reduce the effort required to delete many tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"- **New Feature**: Changed the edit tags command so that there was the option of selective deletion of tags instead of","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"having the option to delete all tags only.","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"  - What it does: Users can specify task ids and the particular tags to they want to delete from those tasks.","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"  - Justification: During the PE Dry Run, our team obtained feedback that it was very inconvenient to remove specific ","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"tags as the only way to do so was by using the edit tags command and re-listing all the tags that the user wanted to ","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"have. The feedback suggested that an option to delete specific tags would make the program much more convenient to use.","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"#### Code Contributed:","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"- [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003djeromeongithub\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"#### Enhancements Implemented:","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"- Wrote JUnit tests for the Storage class.","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"#### Contributions to the UG:","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"- Contributed to the `Features` section.","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"  - Contributed to the `Show progress of tasks that are due this week` component.","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"#### Contributions to the DG:","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"- Added implementation details for the progress command.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"- Added implementation details and design considerations for the storage feature.","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"- Created Sequence Diagrams using Plant UML for the storage feature.","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"- Created Sequence Diagrams using Plant UML for the progress command.","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"- Contributed to the planning of the product by coming up with features to implement.","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"- Ensure that the code being merged does not have bugs or typos.","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"#### Review/monitoring contributions:","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"- Reviewed and approved PRs for the team: [Full List](https://github.com/AY2223S2-CS2113-T11-4/tp/issues?q\u003dis%3Aclosed+reviewed-by%3Ajeromeongithub)","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"- Reported bugs in other teams\u0027 programs and provide suggestions to improve the program: [CS2113-W13-1](https://github.com/jeromeongithub/ped/issues)","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"jeromeongithub":70,"ERJUNZE":1}},{"path":"docs/team/kedrianloh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"# Kedrian Loh - Project Portfolio Page","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"## Project: NUS To-Do List","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"NUS To-Do List is a Java command-line interface (CLI) application that is designed to allow NUS students to keep track","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"of tasks that needs to be completed.","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"- **New Feature**: Created the `info` command to allow users to view all relevant information about a task.","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"  - What it does: Allows the user to view all information tagged to a task.","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"  - Justification: This feature is essential so that users can exactly identify the task with all its specifications.","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"- **New Feature**: Created the `ParserUtil` predicate for filtering flags and arguments.","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"  - What it does: Returns predicate matching all given filters. If no filters are provided, returns null.","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"  - Justification: Allows for more efficient and clearer code to be written for the sorting functions for user display.","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"- **New Feature**: Created the `TaskList` sorting function.","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"  - What it does: Sorts the TaskList based on the predicate and comparator","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"  - Justification: This allows the list command to be sorted by its various requirements before displaying to the user.","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"### Code Contributed:","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"- [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003dkedrian\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dKedrianLoh\u0026tabRepo\u003dAY2223S2-CS2113-T11-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"### Enhancements Implemented:","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"- Added a Junit test for `info` command.","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"- Contributed to the `list` section.","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"- Added implementation for details for list function","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"- Created Sequence Diagrams using Plant UML for list commands.","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"- Contributed to the planning of the product by coming up with features to implement.","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"- Ensure that the code being merged does not have bugs or typos.","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"### Review/monitoring contributions:","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"- Reviewed and approved PRs for the team: [CS2113-T11-4](https://github.com/AY2223S2-CS2113-T11-4/tp/pulls?page\u003d2\u0026q\u003dis%3Apr+is%3Aclosed)","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"KedrianLoh"},"content":"- Reported bugs in other teams\u0027 programs and provide suggestions to improve the program:[CS2113-W12-1](https://github.com/KedrianLoh/ped)","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"KedrianLoh":51,"RuiShengGit":1}},{"path":"docs/team/ruishenggit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"# Seow Rui Sheng - Project Portfolio Page","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"## Project: NUS To-Do List","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"NUS To-Do List is a Java command-line interface (CLI) application that is designed to allow NUS students to keep track","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"of tasks that needs to be completed.","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Created a delete command to allow users to delete tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Allows the user to remove a task with the given id by the user from the To-Do list.","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as users may make mistakes in commands or a task that may","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"      be overdue. This feature provides a convenient way to rectify the mistakes or remove unwanted tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Created a mark command to allow users to mark tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Allows the user to mark a task with the given id by the user as completed.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as users may want to indicate that they have completed a","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"      and to better find the remaining tasks that are incomplete.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Created an unmark command to allow users to unmark tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Allows the user to unmark a task with the given id by the user as completed.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as users may want to remove a completed task from the list","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"      without deleting it entirely. It is also helpful as users may make mistakes by marking an uncompleted task or for","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"      recurring tasks that need to be completed on a regular basis.","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Created an email command to allow users to add/edit/delete email.","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Allows the user to add, edit, or delete the email address of a task with the given id in the To-Do List.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as users may want to add an email address associated to the","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"      task so that they can keep track of the professors to email if the users need help.","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Created a priority command to allow users to edit priority level.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Allows the user to edit, or delete the priority level of a task with the given id in the To-Do List.","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as different tasks have different urgency and the app","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"      should provide a convenient way to shows the user which tasks should be prioritised and which task should be left later.","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"- **New Feature**: Provide a help list.","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    - What it does: Displays a help list to show the user all the commands of the program.","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    - Justification: This feature is essential to the program as users do not know the commands of the To-Do List and it","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"      would be tiring to have to constantly refer to the UserGuide.","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"#### Code Contributed:","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"- [RepoSense Link](https://nus-cs2113-ay2223s2.github.io/tp-dashboard/?search\u003druishenggit\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"#### Enhancements Implemented:","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"- Wrote JUnit tests for the `delete`, `mark/unmark`, `edit priority level` and `edit email` commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"#### Contributions to the UG:","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"- Contributed to the `Command Summary` section.","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"- Contributed to the `Mark a task`, `Unmark a task`, `Delete a task`, `Edit priority level of a task`","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"  `Add/Edit/Delete an email` components in the `Features` section.","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"#### Contributions to the DG:","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"- Added implementation details for the `mark/unmark`, `delete`, `edit email`, `edit priority`, `reset` and `help`","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"  commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"- Created Sequence Diagrams using Plant UML for `mark/unmark`, `delete`, `edit email`, `edit priority`, `reset` and","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"  `help` commands.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"#### Contributions to team-based tasks:","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"- Contributed to the planning of the product by coming up with features to implement.","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"- Ensure that the code being merged does not have bugs or typos.","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"#### Review/monitoring contributions:","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"- Reviewed and approved PRs for the team: [CS2113-T11-4](https://github.com/AY2223S2-CS2113-T11-4/tp/pulls?q\u003dis%3Apr+is%3Aclosed)","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"- Reviewed and provide suggestions to other group\u0027s developer guide: [CS2113-T09-2](https://github.com/nus-cs2113-AY2223S2/tp/pulls?q\u003dis%3Aopen+is%3Apr+CS2113T-T09-2+)","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"- Reported bugs in other teams\u0027 programs and provide suggestions to improve the program: [CS2113-T15-3](https://github.com/RuiShengGit/ped/issues).","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":69}},{"path":"src/main/java/seedu/todolist/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * The main entry point of the program, only used to start the controller.","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class Main {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"        ToDoListManager controller \u003d new ToDoListManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"        controller.run();","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ERJUNZE":12}},{"path":"src/main/java/seedu/todolist/ToDoListManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.FailedLoadDataException;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedSaveException;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.FailedLoadConfigException;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.command.Command;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.command.ProgressBarCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.storage.Storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":" * The main controller of the program.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"public class ToDoListManager {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"    private Config config \u003d new Config();","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a ToDoListManager object, which involves loading the","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     * saved task list and config settings, if they exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    public ToDoListManager() {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        loadConfig();","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"        loadTaskList();","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"            storage.save(taskList, config);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        } catch (FailedSaveException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"            ui.printError(e);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"     * Loads the saved config settings and displays different messages depending","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"     * on whether there are saved config settings found and successfully loaded.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"    private void loadConfig() {","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"            // Config file found, try loading it","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            config \u003d storage.loadConfig();","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"            ui.printLoadConfigMessage();","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"            // No config file found, generate new configs","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"            ui.printNewConfigMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        } catch (FailedLoadConfigException e2) {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"            ui.printError(e2);","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"     * Loads the saved task list and displays different messages depending","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"     * on whether there is a saved task list found and successfully loaded.","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"    private void loadTaskList() {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"            // Save file found, try loading it","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d storage.loadData();","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"            taskList.checkRepeatingTasks(config);","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"            ui.printLoadSaveMessage(taskList.size());","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"            new ProgressBarCommand().execute(taskList, config, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FileNotFoundException e1) {","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"            // No save file found, generate new task list","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"            ui.printNewSaveMessage();","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FailedLoadDataException e2) {","lastModifiedDate":"2023-04-09"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"            ui.printError(e2);","lastModifiedDate":"2023-04-09"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"    //@@author","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"     * Starts the main controller, which will continuously read input from the user and execute the parsed command.","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"     * Also saves the task list and config settings periodically.","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"    public void run() {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"        while (isRunning) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"            String inputCommand \u003d ui.getUserInput();","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"            try {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"                Command command \u003d parser.parseCommand(inputCommand);","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"                command.execute(taskList, config, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"clement559"},"content":"                LocalDateTime nextCheck \u003d config.getLastChecked().plusMinutes(config.getCheckFrequency());","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"clement559"},"content":"                if (nextCheck.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"clement559"},"content":"                    taskList.checkRepeatingTasks(config);","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"clement559"},"content":"                }","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"                storage.save(taskList, config);","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"                isRunning \u003d !command.shouldExit();","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"                ui.printError(e);","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"        ui.close();","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jeromeongithub":25,"ERJUNZE":55,"clement559":25}},{"path":"src/main/java/seedu/todolist/constants/Errors.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.constants;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.storage.Storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":" * Enum that holds all the error messages to be displayed.","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"public final class Errors {","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    public static final String MISSING_ARGUMENT \u003d \"Missing argument after: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_COMMAND \u003d \"You need to provide a valid command.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_FLAGS \u003d \"Unknown or duplicate flags are not allowed: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_ID \u003d \"Invalid task id: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_DATE \u003d \"Invalid deadline: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public static final String OLD_DATE \u003d \"Deadline must be after the current date \u0026 time: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_EMAIL \u003d \"Invalid email address: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_PRIORITY \u003d \"Invalid priority: \";","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_DURATION \u003d \"Invalid repeat times: \";","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_EDIT \u003d \"Task edit commands must have either \"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"            + Flags.EDIT.getName() + \" or \" + Flags.EDIT_DELETE.getName() + \", not both or neither.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_TAG_EDIT \u003d \"Tag edit commands must have exactly one of \"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"            + Flags.EDIT.getName() + \", \" + Flags.EDIT_ADD.getName() + \", or \" + Flags.EDIT_DELETE.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_SELECT \u003d \"Commands taking IDs/filters must have either \"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"            + \"IDs or filters, not both or neither.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_FREQUENCY \u003d \"Invalid frequency: \";","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_BOOLEAN \u003d \"Invalid boolean value: \";","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    public static final String INVALID_SORT \u003d \"Invalid sort option: \";","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    public static final String FAILED_SAVE \u003d \"Error when saving to \"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"            + Storage.DEFAULT_DATA_PATH + \" and \" + Storage.DEFAULT_CONFIG_PATH + System.lineSeparator()","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"            + \"Check that these are not directories and that you have write permissions for them.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    public static final String FAILED_LOAD_DATA \u003d \"Error when loading your data from \"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"            + Storage.DEFAULT_DATA_PATH + System.lineSeparator()","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"            + \"A new task list will be created for you.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    public static final String FAILED_LOAD_CONFIG \u003d \"Error when loading your configs from \"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"            + Storage.DEFAULT_CONFIG_PATH + System.lineSeparator()","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            + \"Your settings will be reset to the default.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"    private Errors() {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ERJUNZE":28,"clement559":14}},{"path":"src/main/java/seedu/todolist/constants/Flags.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.constants;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" * Enum that holds all the flags allowed in commands.","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"public enum Flags {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    // Command flags that do not take arguments","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EXIT(\"exit\", true),","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_TAG_LIST(\"taglist\", true),","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_PROGRESS(\"progress\", true),","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"    COMMAND_HELP(\"help\", true),","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_RESET(\"reset\", true),","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    // Command flags that can take arguments","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_LIST(\"list\", true),","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_ADD(\"add\", false),","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_MARK(\"mark\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_UNMARK(\"unmark\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_DELETE(\"delete\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_FULL_INFO(\"info\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    COMMAND_CONFIG(\"config\", true),","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    // Commands that edit task parameters","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_DESCRIPTION(\"desc\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_DEADLINE(\"due\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_EMAIL(\"email\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_TAGS(\"tags\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_REPEAT(\"rep\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    COMMAND_EDIT_PRIORITY(\"prio\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    // Argument flags","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    DESCRIPTION(\"-desc\", false),","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    DEADLINE(\"-due\", false),","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    EMAIL(\"-email\", false),","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    PRIORITY(\"-prio\", false),","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    REPEAT(\"-rep\", false),","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"    TAG(\"-tags\", false),","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"    EDIT(\"-edit\", false),","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"    EDIT_ADD(\"-add\", false),","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    EDIT_DELETE(\"-del\", true),","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"    RESET(\"-reset\", true),","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    SORT(\"-sort\", false),","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    // Filter flags","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"    FILTER_DONE(\"-done\", false),","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"    FILTER_OVERDUE(\"-overdue\", false),","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"    FILTER_BEFORE(\"-before\", false),","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    FILTER_AFTER(\"-after\", false),","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"    FILTER_ALL(\"-all\", true),","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"    // Config flags","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"    CONFIG_CHECK_FREQ(\"-chkfreq\", false),","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"    CONFIG_REPEAT_FREQ(\"-repfreq\", false);","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"    public static final HashSet\u003cFlags\u003e FILTER_FLAGS \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"            Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"            Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"    ));","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"    private static final HashMap\u003cString, Flags\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"    private final String name;","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"    private final boolean canBeEmpty;","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs the flags enum.","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"     * @param name Allowed flag in a command.","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"     * @param canBeEmpty Whether this flag expects an argument after it.","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"     *                   True means an argument can still be provided after the flag, but it may not be used.","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    Flags(String name, boolean canBeEmpty) {","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"        this.canBeEmpty \u003d canBeEmpty;","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"    public String getName() {","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"        return name;","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"    public boolean canBeEmpty() {","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"        return canBeEmpty;","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"    static {","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"        for (Flags flag : Flags.values()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"            map.put(flag.name, flag);","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"     * Converts the given string into the corresponding Flags object.","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"     * @param name The string to convert into a Flags object.","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"     * @return A Flags object if there is a flag matching the given string, null otherwise.","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"    public static Flags fromString(String name) {","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"        return map.get(name);","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"KedrianLoh":1,"ERJUNZE":97,"RuiShengGit":1,"clement559":3}},{"path":"src/main/java/seedu/todolist/constants/Formats.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.constants;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public final class Formats {","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    public static final int MAX_DESC_LEN_FOR_LIST \u003d 32;","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TASK_STRING \u003d \"[ID:%05d][%s][%s][%-35s]\";","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TASK_STRING_INDEXED \u003d \"[#%05d]%s\";","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TIME_IN_1 \u003d \"[d-M-uuuu H:m]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TIME_IN_2 \u003d \"[d/M/uuuu H:m]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TIME_OUT_UI \u003d \"dd LLL uuuu HH:mm\";","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TIME_OUT_SAVE \u003d \"dd/MM/uuuu HH:mm\";","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public static final String CONFIG_STRING \u003d \"Repeating tasks every %d days\" + System.lineSeparator()","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"        + \"Checking for repeating task every: %d minutes\";","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    public static final DateTimeFormatter TIME_IN_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"            .ofPattern(Formats.TIME_IN_1 + Formats.TIME_IN_2).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public static final DateTimeFormatter TIME_OUT_UI_FORMATTER \u003d DateTimeFormatter.ofPattern(Formats.TIME_OUT_UI);","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    public static final DateTimeFormatter TIME_OUT_SAVE_FORMATTER \u003d DateTimeFormatter.ofPattern(Formats.TIME_OUT_SAVE);","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    private Formats() {","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ERJUNZE":24}},{"path":"src/main/java/seedu/todolist/constants/HelpMessages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.constants;","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"public class HelpMessages {","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"    public static final String PRIORITY_HELP \u003d \"Please enter a number from 1 to 3 \u003d 1:Low, 2:Medium, 3:High)\";","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"    public static final String HELP_COMMAND \u003d \"Here is the list of commands that you can use:\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"            + \"| Command                                | Description                                   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"            + \"| add DESCRIPTION [-due DEADLINE]        | Adds a new task with the given attributes to  |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                 [-email EMAIL_ADDRESS] | your To-Do list.                              |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                 [-tags TAGS]           |                                               |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                 [-rep REPEAT_TIMES]    |                                               |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                 [-prio PRIORITY_LEVEL] |                                               |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"            + \"| mark IDS                               | Marks given tasks as completed.               |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"            + \"| unmark IDS                             | Marks given tasks as incomplete.              |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"            + \"| delete IDS                             | Deletes given tasks from your To-Do list.     |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"            + \"| desc IDS -edit DESCRIPTION             | Sets the descriptions of given tasks.         |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"            + \"| prio IDS -edit PRIORITY_LEVEL          | Sets the priority levels of given tasks.      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"            + \"| prio IDS -del                          | Deletes the priority levels of given tasks.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"            + \"| due IDS -edit DEADLINE                 | Sets the deadlines of given tasks.            |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"            + \"| due IDS -del                           | Deletes the deadlines of given tasks.         |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"            + \"| email IDS -edit EMAIL_ADDRESS          | Sets the email addresses of given tasks.      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            + \"| email IDS -del                         | Deletes the email addresses of given tasks.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            + \"| tags IDS -edit LIST_OF_TAGS            | Sets the tags of given tasks.                 |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"            + \"| tags IDS -add LIST_OF_TAGS             | Adds given tags to given tasks.               |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"            + \"| tags IDS -del LIST_OF_TAGS             | Deletes given tags from given tasks.          |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"            + \"| tags IDS -del                          | Deletes all tags from given tasks.            |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"            + \"| rep IDS -edit REPEAT_TIMES             | Sets the recurrence count of given tasks.     |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"            + \"| rep IDS -del                           | Makes given tasks no longer recur.            |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            + \"| list [FILTERS] [-sort SORT_OPTION]     | Display summary of all/filtered tasks that    |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                                        | is sorted if a sorting option is given.       |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            + \"| info IDS                               | Display all attributes of given tasks.        |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"            + \"| progress                               | Displays the progress and summary of tasks    |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"            + \"|                                        | that are due this week.                       |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"            + \"| taglist                                | Displays all tags found in your To-Do List.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"            + \"| config                                 | Displays current configuration settings.      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"            + \"| config [-chkfreq CHECK_FREQUENCY]      | Sets checking frequency for recurring tasks.  |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"            + \"|        [-repfreq REPEAT_FREQUENCY]     | Sets repeating frequency of recurring tasks.  |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"            + \"| config -reset                          | Resets configuration settings to default.     |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"            + \"| help                                   | Displays summary of all possible commands.    |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"            + \"| help filter                            | Displays summary of all filter options.       |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"            + \"| help sort                              | Displays summary of all sorting options.      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"            + \"| reset                                  | Deletes all tasks and reset IDs to 0.         |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"            + \"| exit                                   | Exits the program.                            |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"            + \"IDS can also be replaced with FILTERS, use \\\"help filter\\\" for information on filters.\";","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"KedrianLoh"},"content":"    public static final String HELP_FILTERS \u003d \"Here is the list of filters that you can use instead of ids:\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"KedrianLoh"},"content":"            + \"| Boolean Filter                         | Description                                   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"KedrianLoh"},"content":"            + \"| Replace \\\"1\\\" with \\\"0\\\" to invert a boolean filter.                                       |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -done 1                                | Filters completed tasks.                      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -overdue 1                             | Filters overdue tasks.                        |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -rep 1                                 | Filters recurring tasks.                      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"KedrianLoh"},"content":"            + \"| Non-boolean Filter                     | Description                                   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -all                                   | Selects all tasks. Overrides other filters.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -desc STRING                           | Filters tasks with descriptions containing    |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | the given string.                             |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -email EMAIL_ADDRESS                   | Filters tasks with the given email address.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -before DEADLINE                       | Filters tasks with deadlines before the given |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | deadline.                                     |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -after DEADLINE                        | Filters tasks with deadlines after the given  |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | deadline.                                     |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -tags LIST_OF_TAGS                     | Filters tasks that have all the given tags.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -prio PRIORITY_LEVEL                   | Filters tasks with the given priority level.  |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"KedrianLoh"},"content":"            + \"Filters can also be combined, except for \\\"-all\\\".\";","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"KedrianLoh"},"content":"    public static final String HELP_SORT \u003d \"Here is the list of sorts you can use with the \\\"list\\\" command:\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"KedrianLoh"},"content":"            + \"| Sort Option                            | Description                                   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":101,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -due                                   | Sorts tasks by deadline, with earlier         |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | deadlines first and no-deadline tasks last.   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":104,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":105,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -prio                                  | Sorts tasks by priority, with higher priority |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":106,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | levels first and no-priority tasks last.      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":107,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":108,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -desc                                  | Sorts tasks by their description in           |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | lexicographic order.                          |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"KedrianLoh"},"content":"            + \"| -done                                  | Sorts tasks by completion status, with        |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | overdue tasks first, then incomplete tasks,   |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"KedrianLoh"},"content":"            + \"|                                        | and complete tasks last.                      |\\n\"","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"KedrianLoh"},"content":"            + \"+----------------------------------------------------------------------------------------+\";","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"KedrianLoh":51,"RuiShengGit":64}},{"path":"src/main/java/seedu/todolist/constants/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.constants;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":" * Enum that holds all the notification and help messages to be displayed.","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"public final class Messages {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    public static final String LINE \u003d \"_\".repeat(90);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    public static final String START \u003d \"Hello, I am your To-Do List \" +","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"            \"and I will help you remember the tasks you need to do!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    public static final String NEW_SAVE \u003d \"No save data found, creating a new task list for you!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    public static final String LOAD_SAVE \u003d \"Your saved task list was successfully loaded with \";","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    public static final String NEW_CONFIG \u003d \"No configuration data found, your settings will be set to the default!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public static final String LOAD_CONFIG \u003d \"Your configuration file was successfully loaded.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public static final String EXIT \u003d \"See you again, bye!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    public static final String ADD_TASK \u003d \"Okay, I have added this task:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    public static final String MARK_TASK \u003d \"Okay, I have marked the following task(s) as complete:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public static final String UNMARK_TASK \u003d \"Okay, I have marked the following task(s) as incomplete:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"    public static final String DELETE_TASK \u003d \"Okay, I have removed the following task(s):\";","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public static final String EDIT_TASK \u003d \"Okay, I have edited the %s of the following task(s) to [%s]:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    public static final String EDIT_DELETE_TASK \u003d \"Okay, I have deleted the %s of the following task(s):\";","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public static final String EDIT_TAGS_TASK \u003d \"Okay, I have %s the tags [%s] %s the following task(s):\";","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    public static final String EDIT_CONFIG \u003d \"Okay, I have changed the configuration to as follows:\";","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    public static final String FILTERED_NONE \u003d \"No tasks matched the given filter.\";","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    public static final String LIST_TASKS \u003d \"Okay, here is your task list, with \";","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TAGS_INFO \u003d \"Okay, here are the tags associated with your task list:\";","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    public static final String LIST_EMPTY \u003d \"There are no tasks in your list.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    public static final String TAGS_EMPTY \u003d \"There are no tags associated with your task list.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"    public static final String FULL_INFO \u003d \"Okay, here is the detailed information of the following task(s):\";","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    public static final String CONFIG_INFO \u003d \"Here are the configuration settings for your system:\";","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"    public static final String CONFIRM \u003d \"Are you sure you want to reset your To-Do List?\"","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"            + System.lineSeparator() + \"This cannot be undone. Enter \\\"YES\\\" to confirm, or anything else to cancel: \";","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    public static final String RESET \u003d \"Okay, your To-Do List has been reset.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"    public static final String CANCEL \u003d \"Reset command canceled.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    private Messages() {","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jeromeongithub":1,"ERJUNZE":39,"clement559":1}},{"path":"src/main/java/seedu/todolist/exception/FailedLoadConfigException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"public class FailedLoadConfigException extends ToDoListException {","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public FailedLoadConfigException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        super(Errors.FAILED_LOAD_CONFIG);","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"clement559":10}},{"path":"src/main/java/seedu/todolist/exception/FailedLoadDataException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"public class FailedLoadDataException extends ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    public FailedLoadDataException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"        super(Errors.FAILED_LOAD_DATA);","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"jeromeongithub":11}},{"path":"src/main/java/seedu/todolist/exception/FailedSaveException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"public class FailedSaveException extends ToDoListException {","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"    public FailedSaveException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"        super(Errors.FAILED_SAVE);","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"jeromeongithub":11}},{"path":"src/main/java/seedu/todolist/exception/InvalidBooleanException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidBooleanException extends ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidBooleanException(String boolString) {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_BOOLEAN + boolString);","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ERJUNZE":9}},{"path":"src/main/java/seedu/todolist/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidCommandException extends ToDoListException {","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_COMMAND);","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ERJUNZE":9}},{"path":"src/main/java/seedu/todolist/exception/InvalidDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"public class InvalidDateException extends ToDoListException {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public InvalidDateException(String date) {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        super(Errors.INVALID_DATE + date);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"clement559":10}},{"path":"src/main/java/seedu/todolist/exception/InvalidDurationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"public class InvalidDurationException extends ToDoListException {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public InvalidDurationException(String duration) {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        super(Errors.INVALID_DURATION + duration);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"clement559":10}},{"path":"src/main/java/seedu/todolist/exception/InvalidEditException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidEditException extends ToDoListException {","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidEditException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_EDIT);","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidEditException(int count) {","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_TAG_EDIT);","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ERJUNZE":13}},{"path":"src/main/java/seedu/todolist/exception/InvalidEmailFormatException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"public class InvalidEmailFormatException extends ToDoListException {","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"    public InvalidEmailFormatException(String email) {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"        super(Errors.INVALID_EMAIL + email);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"RuiShengGit":10}},{"path":"src/main/java/seedu/todolist/exception/InvalidFlagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidFlagException extends ToDoListException {","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidFlagException(String flag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_FLAGS + flag);","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"ERJUNZE":9}},{"path":"src/main/java/seedu/todolist/exception/InvalidFrequencyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"public class InvalidFrequencyException extends ToDoListException {","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidFrequencyException(String frequency) {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_FREQUENCY + frequency);","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"ERJUNZE":2,"clement559":7}},{"path":"src/main/java/seedu/todolist/exception/InvalidIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidIdException extends ToDoListException {","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidIdException(String id) {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_ID + id);","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidIdException(int id) {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_ID + id);","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ERJUNZE":13}},{"path":"src/main/java/seedu/todolist/exception/InvalidPriorityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.HelpMessages;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"public class InvalidPriorityException extends ToDoListException{","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    public InvalidPriorityException (String priority) {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"        super(Errors.INVALID_PRIORITY + priority + System.lineSeparator() + HelpMessages.PRIORITY_HELP);","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"RuiShengGit":11}},{"path":"src/main/java/seedu/todolist/exception/InvalidSelectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidSelectException extends ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidSelectException() {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_SELECT);","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ERJUNZE":9}},{"path":"src/main/java/seedu/todolist/exception/InvalidSortException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"public class InvalidSortException extends ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    public InvalidSortException(String sort) {","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.INVALID_SORT + sort);","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"ERJUNZE":9}},{"path":"src/main/java/seedu/todolist/exception/MissingArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"public class MissingArgumentException extends ToDoListException {","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"    public MissingArgumentException(Flags flag) {","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"        super(Errors.MISSING_ARGUMENT + flag.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ERJUNZE":10}},{"path":"src/main/java/seedu/todolist/exception/PassedDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Errors;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"public class PassedDateException extends ToDoListException {","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"    public PassedDateException(String date) {","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"        super(Errors.OLD_DATE + date);","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"clement559":10}},{"path":"src/main/java/seedu/todolist/exception/ToDoListException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.exception;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"public abstract class ToDoListException extends Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"    ToDoListException(String message) {","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"        super(message);","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"ERJUNZE":7}},{"path":"src/main/java/seedu/todolist/logic/FormatterUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" * Utility class for formatting deadlines and lists of tags as a string, for display purposes.","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"public class FormatterUtil {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    private FormatterUtil() {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public static String getDeadlineAsString(LocalDateTime deadline) {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"        return deadline.format(Formats.TIME_OUT_UI_FORMATTER);","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public static String getTagsAsString(TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        return String.join(\", \", tags);","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ERJUNZE":22}},{"path":"src/main/java/seedu/todolist/logic/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidCommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidFlagException;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.MissingArgumentException;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.AddTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.Command;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.DeleteTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.EditDeadlineCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.EditDescriptionCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.EditEmailCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.command.EditPriorityCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.EditRepeatCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.command.EditTagsCommand;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.ExitCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.logic.command.HelpCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.ListFullInfoCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.ListTagsCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.ListTasksCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.MarkTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.ProgressBarCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.command.ResetCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.command.UnmarkTaskCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.command.EditConfigCommand;","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":" * Class containing a method for parsing the commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"public class Parser {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    private Flags parseFlag(String word, HashSet\u003cFlags\u003e allowedFlagsSet, Flags currentFlag,","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"                            HashMap\u003cFlags, String\u003e arguments) throws InvalidFlagException {","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"        Flags flag \u003d Flags.fromString(word);","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"        boolean isUnexpectedFlag \u003d flag \u003d\u003d null || !allowedFlagsSet.contains(flag);","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"        boolean isRepeatedFlag \u003d currentFlag.equals(flag) || arguments.containsKey(flag);","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        if (isUnexpectedFlag || isRepeatedFlag) {","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidFlagException(word);","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"        return flag;","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"    private String getArgumentString(Flags flag, StringJoiner argument) throws MissingArgumentException {","lastModifiedDate":"2023-04-01"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"        if (argument.length() \u003d\u003d 0 \u0026\u0026 !flag.canBeEmpty()) {","lastModifiedDate":"2023-04-01"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"            // Empty argument not allowed for this flag","lastModifiedDate":"2023-04-01"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"            throw new MissingArgumentException(flag);","lastModifiedDate":"2023-04-01"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"        return argument.toString();","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"     * Splits the initial command string into its arguments.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"     * @param splitInput The command string, split into words.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     * @param allowedFlags Array of flags that are allowed for this command.","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     * @return Map of flags to arguments extracted from the command string.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidFlagException If there are multiple of the same flag or unexpected flags for this command.","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"     * @throws MissingArgumentException If arguments are not provided for flags that need them.","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"    private HashMap\u003cFlags, String\u003e getArguments(String[] splitInput, Flags[] allowedFlags)","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"            throws InvalidFlagException, MissingArgumentException {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"        HashMap\u003cFlags, String\u003e arguments \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        StringJoiner currentArgument \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"        Flags currentFlag \u003d allowedFlags[0];","lastModifiedDate":"2023-04-01"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"        HashSet\u003cFlags\u003e allowedFlagsSet \u003d new HashSet\u003c\u003e(Arrays.asList(allowedFlags));","lastModifiedDate":"2023-04-01"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"        for (String word : Arrays.copyOfRange(splitInput, 1, splitInput.length)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"            // Append to current argument if current word is not a new flag.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"            if (!word.startsWith(\"-\")) {","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"                currentArgument.add(word);","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"                continue;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"            // Current word is a new flag, check if it is valid","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"            Flags flag \u003d parseFlag(word, allowedFlagsSet, currentFlag, arguments);","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"            // Add current flag-argument combo to argument list and reset the argument string.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"            arguments.put(currentFlag, getArgumentString(currentFlag, currentArgument));","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"            currentArgument \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"            currentFlag \u003d flag;","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"        // Add last flag-argument combo to argument list.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"        arguments.put(currentFlag, getArgumentString(currentFlag, currentArgument));","lastModifiedDate":"2023-04-01"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"        return arguments;","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"     * Parses the given command string into a command that can be executed.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"     * @param input The unparsed command string.","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"     * @return A command that can be executed by calling the run() method.","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"     * @throws ToDoListException If there is an error in parsing the command.","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"    public Command parseCommand(String input) throws ToDoListException {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"        String[] splitInput \u003d input.trim().replaceAll(\"\\\\s+\", \" \").split(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"        Flags command \u003d Flags.fromString(splitInput[0]);","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"            // Command not found","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"ERJUNZE"},"content":"        switch (command) {","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"ERJUNZE"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_TAG_LIST:","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ERJUNZE"},"content":"            return new ListTagsCommand();","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_PROGRESS:","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"jeromeongithub"},"content":"            return new ProgressBarCommand();","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_RESET:","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"ERJUNZE"},"content":"            return new ResetCommand();","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"ERJUNZE"},"content":"            return new ListTasksCommand(getArguments(splitInput, ListTasksCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_ADD:","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"ERJUNZE"},"content":"            return new AddTaskCommand(getArguments(splitInput, AddTaskCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_MARK:","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"ERJUNZE"},"content":"            return new MarkTaskCommand(getArguments(splitInput, MarkTaskCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_UNMARK:","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"ERJUNZE"},"content":"            return new UnmarkTaskCommand(getArguments(splitInput, UnmarkTaskCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"ERJUNZE"},"content":"            return new DeleteTaskCommand(getArguments(splitInput, DeleteTaskCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EDIT_DESCRIPTION:","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"ERJUNZE"},"content":"            return new EditDescriptionCommand(getArguments(splitInput, EditDescriptionCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EDIT_DEADLINE:","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"ERJUNZE"},"content":"            return new EditDeadlineCommand(getArguments(splitInput, EditDeadlineCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EDIT_EMAIL:","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"ERJUNZE"},"content":"            return new EditEmailCommand(getArguments(splitInput, EditEmailCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EDIT_TAGS:","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"ERJUNZE"},"content":"            return new EditTagsCommand(getArguments(splitInput, EditTagsCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_EDIT_REPEAT:","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"ERJUNZE"},"content":"            return new EditRepeatCommand(getArguments(splitInput, EditRepeatCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"        case COMMAND_EDIT_PRIORITY:","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"            return new EditPriorityCommand(getArguments(splitInput, EditPriorityCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_FULL_INFO:","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"ERJUNZE"},"content":"            return new ListFullInfoCommand(getArguments(splitInput, ListFullInfoCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"clement559"},"content":"        case COMMAND_CONFIG:","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"clement559"},"content":"            return new EditConfigCommand(getArguments(splitInput, EditConfigCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"ERJUNZE"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"ERJUNZE"},"content":"            return new HelpCommand(getArguments(splitInput, HelpCommand.EXPECTED_FLAGS));","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"ERJUNZE"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"jeromeongithub":2,"ERJUNZE":124,"RuiShengGit":18,"clement559":5}},{"path":"src/main/java/seedu/todolist/logic/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidBooleanException;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidDateException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidDurationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.InvalidEmailFormatException;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidFrequencyException;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.InvalidPriorityException;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidSortException;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.PassedDateException;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Priority;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":" * Utility class for parsing arguments that are in the form of strings.","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"public class ParserUtil {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"    private ParserUtil() {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"     * Parses the id string into an integer. Does not check if id is in task list.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"     * @param idList The string containing the list of ids.","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"     * @return The ids, as a HashSet of integers.","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"     * @throws InvalidIdException If any id cannot be parsed to an integer.","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"    public static HashSet\u003cInteger\u003e parseId(String idList) throws InvalidIdException {","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"        if (idList.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"            return new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"        HashSet\u003cInteger\u003e idHashSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"        for (String idString : idList.split(\" \")) {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"            try {","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"                int id \u003d Integer.parseInt(idString);","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"                assert id \u003e\u003d 0 : \"Parser should catch any negative values\";","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"                idHashSet.add(id);","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"                throw new InvalidIdException(idString);","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"        return idHashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"    //@@author RuiShengGit","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"     * Parses the priority string into an integer from 1 to 3, if it exists.","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"     * If the priority is null because it is not provided, it will default to 1.","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"     * @param priorityString The priority string.","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"     * @return The priority, as an integer.","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidPriorityException If the priority cannot be parsed to an integer, or if it is not from 1 to 3.","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"    public static Priority parsePriority(String priorityString) throws InvalidPriorityException {","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"        if (priorityString \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"            return Priority.NONE;","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"RuiShengGit"},"content":"            int priority \u003d Integer.parseInt(priorityString);","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"RuiShengGit"},"content":"            switch (priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"RuiShengGit"},"content":"            case 0:","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"RuiShengGit"},"content":"                return Priority.NONE;","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"RuiShengGit"},"content":"            case 1:","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"RuiShengGit"},"content":"                return Priority.LOW;","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"RuiShengGit"},"content":"            case 2:","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"RuiShengGit"},"content":"                return Priority.MEDIUM;","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"RuiShengGit"},"content":"            case 3:","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"RuiShengGit"},"content":"                return Priority.HIGH;","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"RuiShengGit"},"content":"            default:","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"RuiShengGit"},"content":"                throw new InvalidPriorityException(priorityString);","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"RuiShengGit"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidPriorityException(priorityString);","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"clement559"},"content":"     * Parses the deadline string into a LocalDateTime object.","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"clement559"},"content":"     * The deadline is allowed to be null as it is an optional parameter.","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"clement559"},"content":"     * @param deadline The deadline string.","lastModifiedDate":"2023-03-25"},{"lineNumber":103,"author":{"gitId":"clement559"},"content":"     * @param afterThisDate The date-time that the parsed deadline cannot be before.","lastModifiedDate":"2023-04-06"},{"lineNumber":104,"author":{"gitId":"clement559"},"content":"     *                      For adding tasks or editing deadlines, that will be the current date-time.","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"clement559"},"content":"     * @return A LocalDateTime object that contains the date and time in the string,","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"clement559"},"content":"     *         if it was not null, null otherwise.","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"clement559"},"content":"     * @throws InvalidDateException If the string is not in a valid date time format,","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"clement559"},"content":"     *                              or if the parsed date is before the current time.","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":110,"author":{"gitId":"clement559"},"content":"    public static LocalDateTime parseDeadline(String deadline, LocalDateTime afterThisDate)","lastModifiedDate":"2023-04-06"},{"lineNumber":111,"author":{"gitId":"clement559"},"content":"            throws InvalidDateException, PassedDateException {","lastModifiedDate":"2023-04-06"},{"lineNumber":112,"author":{"gitId":"clement559"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"clement559"},"content":"            return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"clement559"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(Formats.TIME_IN_1 + Formats.TIME_IN_2)","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"clement559"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"clement559"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(deadline, inputFormatter);","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"clement559"},"content":"            if (!date.isAfter(afterThisDate)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"clement559"},"content":"                throw new PassedDateException(deadline);","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"clement559"},"content":"            return date;","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"clement559"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"clement559"},"content":"            throw new InvalidDateException(deadline);","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"clement559"},"content":"    public static LocalDateTime parseDeadline(String deadline) throws InvalidDateException, PassedDateException {","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"clement559"},"content":"        return parseDeadline(deadline, LocalDateTime.now());","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":133,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"RuiShengGit"},"content":"    //@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"RuiShengGit"},"content":"     * Parses the email string, checking that is a valid email address.","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"RuiShengGit"},"content":"     * The email is allowed to be null as it is an optional parameter.","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"RuiShengGit"},"content":"     * @param email The email address string.","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"RuiShengGit"},"content":"     * @return The email address, if it was not null, null otherwise.","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidEmailFormatException If the email address is invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"RuiShengGit"},"content":"    public static String parseEmail(String email) throws InvalidEmailFormatException {","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"RuiShengGit"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"RuiShengGit"},"content":"            return null;","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"RuiShengGit"},"content":"        String mandatoryUsername \u003d \"^[a-zA-Z0-9_+\u0026*-]+(?:\\\\.\";","lastModifiedDate":"2023-04-09"},{"lineNumber":149,"author":{"gitId":"RuiShengGit"},"content":"        String mandatoryAddressSign \u003d \"[a-zA-Z0-9_+\u0026*-]+)*@\";","lastModifiedDate":"2023-04-09"},{"lineNumber":150,"author":{"gitId":"RuiShengGit"},"content":"        String mandatoryDomain \u003d \"(?:[a-zA-Z0-9-]+\\\\.)+[a-z A-Z]{2,7}$\";","lastModifiedDate":"2023-04-09"},{"lineNumber":151,"author":{"gitId":"RuiShengGit"},"content":"        String emailRegex \u003d mandatoryUsername + mandatoryAddressSign + mandatoryDomain;","lastModifiedDate":"2023-04-09"},{"lineNumber":152,"author":{"gitId":"RuiShengGit"},"content":"        if (!Pattern.compile(emailRegex).matcher(email).matches()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidEmailFormatException(email);","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"RuiShengGit"},"content":"        return email;","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":158,"author":{"gitId":"ERJUNZE"},"content":"    //@@author ERJUNZE","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"ERJUNZE"},"content":"     * Parses the string of multiple tags into a hashset of tag strings.","lastModifiedDate":"2023-03-25"},{"lineNumber":161,"author":{"gitId":"ERJUNZE"},"content":"     * Tags are separated from each other by a space.","lastModifiedDate":"2023-03-25"},{"lineNumber":162,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"ERJUNZE"},"content":"     * @param tags The string containing multiple tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":164,"author":{"gitId":"ERJUNZE"},"content":"     * @return A hashset containing the extracted tags.","lastModifiedDate":"2023-03-25"},{"lineNumber":165,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":166,"author":{"gitId":"ERJUNZE"},"content":"    public static TreeSet\u003cString\u003e parseTags(String tags) {","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"ERJUNZE"},"content":"        if (tags \u003d\u003d null || tags.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"ERJUNZE"},"content":"            return new TreeSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"ERJUNZE"},"content":"        return new TreeSet\u003c\u003e(Arrays.asList(tags.split(\" \")));","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":173,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"ERJUNZE"},"content":"     * Counts the number of trues in an array of boolean values.","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":176,"author":{"gitId":"ERJUNZE"},"content":"     * @param bools The boolean array.","lastModifiedDate":"2023-04-07"},{"lineNumber":177,"author":{"gitId":"ERJUNZE"},"content":"     * @return The number of trues in the boolean array.","lastModifiedDate":"2023-04-07"},{"lineNumber":178,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":179,"author":{"gitId":"ERJUNZE"},"content":"    public static int countTrue(boolean... bools) {","lastModifiedDate":"2023-04-07"},{"lineNumber":180,"author":{"gitId":"ERJUNZE"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":181,"author":{"gitId":"ERJUNZE"},"content":"        for (boolean b : bools) {","lastModifiedDate":"2023-04-07"},{"lineNumber":182,"author":{"gitId":"ERJUNZE"},"content":"            count +\u003d b ? 1 : 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":183,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":184,"author":{"gitId":"ERJUNZE"},"content":"        return count;","lastModifiedDate":"2023-04-07"},{"lineNumber":185,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":186,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":187,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":189,"author":{"gitId":"clement559"},"content":"     * Parses the repeat duration of the task, which is in number of weeks.","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"clement559"},"content":"     * A repeat duration can be specified only if deadline is not null.","lastModifiedDate":"2023-03-25"},{"lineNumber":191,"author":{"gitId":"clement559"},"content":"     * If the repeat duration is null because it is not provided, it will default to 0.","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"clement559"},"content":"     * @param repeatTimes The repeat duration string.","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"clement559"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"clement559"},"content":"     * @return The repeat duration of the task as an integer, if the deadline has been provided.","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"clement559"},"content":"     * @throws InvalidDateException If the deadline is null.","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"clement559"},"content":"     * @throws InvalidDurationException If the repeat duration cannot be parsed to an integer.","lastModifiedDate":"2023-03-25"},{"lineNumber":198,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"clement559"},"content":"    public static int parseRepeatTimes(String repeatTimes, LocalDateTime deadline)","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"clement559"},"content":"            throws InvalidDateException, InvalidDurationException {","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"clement559"},"content":"        if (repeatTimes \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"clement559"},"content":"            return 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":203,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":204,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":205,"author":{"gitId":"clement559"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"clement559"},"content":"            throw new InvalidDateException(\"A deadline must be provided to use the repeat option.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":207,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":208,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":209,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":210,"author":{"gitId":"clement559"},"content":"            return Integer.parseInt(repeatTimes);","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"clement559"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":212,"author":{"gitId":"clement559"},"content":"            throw new InvalidDurationException(repeatTimes);","lastModifiedDate":"2023-04-08"},{"lineNumber":213,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":214,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":215,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":216,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":217,"author":{"gitId":"clement559"},"content":"     * Parses the frequency to be set in the config.","lastModifiedDate":"2023-04-06"},{"lineNumber":218,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":219,"author":{"gitId":"clement559"},"content":"     * @param frequencyString The frequency, as a string.","lastModifiedDate":"2023-04-07"},{"lineNumber":220,"author":{"gitId":"clement559"},"content":"     * @return The frequency, as an integer, if it was not null, -1 otherwise.","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"clement559"},"content":"     * @throws InvalidFrequencyException If the priority cannot be parsed to an integer.","lastModifiedDate":"2023-04-06"},{"lineNumber":222,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":223,"author":{"gitId":"clement559"},"content":"    public static int parseFrequency(String frequencyString, int minAllowed) throws InvalidFrequencyException {","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"clement559"},"content":"        if (frequencyString \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"clement559"},"content":"            return -1;","lastModifiedDate":"2023-04-06"},{"lineNumber":226,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":227,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":228,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":229,"author":{"gitId":"clement559"},"content":"            int frequency \u003d Integer.parseInt(frequencyString);","lastModifiedDate":"2023-04-07"},{"lineNumber":230,"author":{"gitId":"clement559"},"content":"            assert frequency \u003e\u003d 0 : \"Parser should catch any negative values\";","lastModifiedDate":"2023-04-07"},{"lineNumber":231,"author":{"gitId":"clement559"},"content":"            if (frequency \u003c minAllowed) {","lastModifiedDate":"2023-04-07"},{"lineNumber":232,"author":{"gitId":"clement559"},"content":"                throw new InvalidFrequencyException(frequencyString);","lastModifiedDate":"2023-04-07"},{"lineNumber":233,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-07"},{"lineNumber":234,"author":{"gitId":"clement559"},"content":"            return frequency;","lastModifiedDate":"2023-04-07"},{"lineNumber":235,"author":{"gitId":"clement559"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"clement559"},"content":"            throw new InvalidFrequencyException(frequencyString);","lastModifiedDate":"2023-04-07"},{"lineNumber":237,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":238,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":239,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":240,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":241,"author":{"gitId":"clement559"},"content":"     * Parses a boolean argument.","lastModifiedDate":"2023-04-06"},{"lineNumber":242,"author":{"gitId":"clement559"},"content":"     * \"1\", \"y\", \"yes\", \"t\", \"true\" are considered true, while \"0\", \"n\", \"no\", \"f\", \"false\" are considered false.","lastModifiedDate":"2023-04-06"},{"lineNumber":243,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":244,"author":{"gitId":"clement559"},"content":"     * @param boolString The boolean argument.","lastModifiedDate":"2023-04-06"},{"lineNumber":245,"author":{"gitId":"clement559"},"content":"     * @return Whether the argument was recognized as true or false.","lastModifiedDate":"2023-04-06"},{"lineNumber":246,"author":{"gitId":"clement559"},"content":"     * @throws InvalidBooleanException If the argument is not considered as either true or false.","lastModifiedDate":"2023-04-06"},{"lineNumber":247,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":248,"author":{"gitId":"clement559"},"content":"    public static boolean parseBoolean(String boolString) throws InvalidBooleanException {","lastModifiedDate":"2023-04-06"},{"lineNumber":249,"author":{"gitId":"clement559"},"content":"        switch (boolString.toLowerCase()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":250,"author":{"gitId":"clement559"},"content":"        case \"1\":","lastModifiedDate":"2023-04-06"},{"lineNumber":251,"author":{"gitId":"clement559"},"content":"        case \"y\":","lastModifiedDate":"2023-04-06"},{"lineNumber":252,"author":{"gitId":"clement559"},"content":"        case \"yes\":","lastModifiedDate":"2023-04-06"},{"lineNumber":253,"author":{"gitId":"clement559"},"content":"        case \"t\":","lastModifiedDate":"2023-04-06"},{"lineNumber":254,"author":{"gitId":"clement559"},"content":"        case \"true\":","lastModifiedDate":"2023-04-06"},{"lineNumber":255,"author":{"gitId":"clement559"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":256,"author":{"gitId":"clement559"},"content":"        case \"0\":","lastModifiedDate":"2023-04-06"},{"lineNumber":257,"author":{"gitId":"clement559"},"content":"        case \"n\":","lastModifiedDate":"2023-04-06"},{"lineNumber":258,"author":{"gitId":"clement559"},"content":"        case \"no\":","lastModifiedDate":"2023-04-06"},{"lineNumber":259,"author":{"gitId":"clement559"},"content":"        case \"f\":","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"clement559"},"content":"        case \"false\":","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"clement559"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":262,"author":{"gitId":"clement559"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":263,"author":{"gitId":"clement559"},"content":"            throw new InvalidBooleanException(boolString);","lastModifiedDate":"2023-04-06"},{"lineNumber":264,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":265,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":266,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":267,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":268,"author":{"gitId":"clement559"},"content":"     * Parses the boolean filter options, which can either be true or false.","lastModifiedDate":"2023-04-07"},{"lineNumber":269,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":270,"author":{"gitId":"clement559"},"content":"     * @param args Hashmap containing filter flags and their arguments, if any.","lastModifiedDate":"2023-04-06"},{"lineNumber":271,"author":{"gitId":"clement559"},"content":"     * @return Null, if no filters are provided, otherwise, a predicate matching all the given filters.","lastModifiedDate":"2023-04-06"},{"lineNumber":272,"author":{"gitId":"clement559"},"content":"     * @throws ToDoListException If the argument for any filter is invalid.","lastModifiedDate":"2023-04-06"},{"lineNumber":273,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":274,"author":{"gitId":"clement559"},"content":"    private static Predicate\u003cTask\u003e parseBooleanFilters(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-07"},{"lineNumber":275,"author":{"gitId":"clement559"},"content":"        Predicate\u003cTask\u003e predicate \u003d task -\u003e true;","lastModifiedDate":"2023-04-06"},{"lineNumber":276,"author":{"gitId":"clement559"},"content":"        if (args.containsKey(Flags.FILTER_DONE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":277,"author":{"gitId":"clement559"},"content":"            predicate \u003d predicate.and(parseBoolean(args.get(Flags.FILTER_DONE))","lastModifiedDate":"2023-04-06"},{"lineNumber":278,"author":{"gitId":"clement559"},"content":"                    ? Task.isDonePredicate() : Predicate.not((Task.isDonePredicate())));","lastModifiedDate":"2023-04-07"},{"lineNumber":279,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":280,"author":{"gitId":"clement559"},"content":"        if (args.containsKey(Flags.FILTER_OVERDUE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":281,"author":{"gitId":"clement559"},"content":"            predicate \u003d predicate.and(parseBoolean(args.get(Flags.FILTER_OVERDUE))","lastModifiedDate":"2023-04-06"},{"lineNumber":282,"author":{"gitId":"clement559"},"content":"                    ? Task.isOverdue() : Predicate.not(Task.isOverdue()));","lastModifiedDate":"2023-04-07"},{"lineNumber":283,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":284,"author":{"gitId":"clement559"},"content":"        if (args.containsKey(Flags.REPEAT)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":285,"author":{"gitId":"clement559"},"content":"            predicate \u003d predicate.and(parseBoolean(args.get(Flags.REPEAT))","lastModifiedDate":"2023-04-07"},{"lineNumber":286,"author":{"gitId":"clement559"},"content":"                    ? Task.isRepeating() : Predicate.not(Task.isRepeating()));","lastModifiedDate":"2023-04-07"},{"lineNumber":287,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":288,"author":{"gitId":"clement559"},"content":"        return predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":290,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":291,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-04-06"},{"lineNumber":292,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":293,"author":{"gitId":"KedrianLoh"},"content":"     * Parses the filter options.","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"KedrianLoh"},"content":"     * @param args Hashmap containing filter flags and their arguments, if any.","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"KedrianLoh"},"content":"     * @return Null, if no filters are provided, otherwise, a predicate matching all the given filters.","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"KedrianLoh"},"content":"     * @throws ToDoListException If the argument for any filter is invalid.","lastModifiedDate":"2023-04-07"},{"lineNumber":298,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":299,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e parseFilter(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-07"},{"lineNumber":300,"author":{"gitId":"KedrianLoh"},"content":"        if (Collections.disjoint(args.keySet(), Flags.FILTER_FLAGS)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":301,"author":{"gitId":"KedrianLoh"},"content":"            // No filter flags are present","lastModifiedDate":"2023-04-07"},{"lineNumber":302,"author":{"gitId":"KedrianLoh"},"content":"            return null;","lastModifiedDate":"2023-04-07"},{"lineNumber":303,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":304,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":305,"author":{"gitId":"KedrianLoh"},"content":"        Predicate\u003cTask\u003e predicate \u003d parseBooleanFilters(args);","lastModifiedDate":"2023-04-07"},{"lineNumber":306,"author":{"gitId":"KedrianLoh"},"content":"        // Parse the non-boolean filters, which take in arguments","lastModifiedDate":"2023-04-07"},{"lineNumber":307,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.DESCRIPTION)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":308,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.matchesDescription(args.get(Flags.DESCRIPTION)));","lastModifiedDate":"2023-04-06"},{"lineNumber":309,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":310,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.EMAIL)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":311,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.matchesEmail(parseEmail(args.get(Flags.EMAIL))));","lastModifiedDate":"2023-04-06"},{"lineNumber":312,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":313,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.FILTER_BEFORE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":314,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.beforeDeadline(","lastModifiedDate":"2023-04-06"},{"lineNumber":315,"author":{"gitId":"KedrianLoh"},"content":"                    parseDeadline(args.get(Flags.FILTER_BEFORE), LocalDateTime.MIN)));","lastModifiedDate":"2023-04-06"},{"lineNumber":316,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":317,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.FILTER_AFTER)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":318,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.afterDeadline(","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"KedrianLoh"},"content":"                    parseDeadline(args.get(Flags.FILTER_AFTER), LocalDateTime.MIN)));","lastModifiedDate":"2023-04-06"},{"lineNumber":320,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":321,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.TAG)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":322,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.matchesTags(parseTags(args.get(Flags.TAG))));","lastModifiedDate":"2023-04-06"},{"lineNumber":323,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":324,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.PRIORITY)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":325,"author":{"gitId":"KedrianLoh"},"content":"            predicate \u003d predicate.and(Task.matchesPriority(parsePriority(args.get(Flags.PRIORITY))));","lastModifiedDate":"2023-04-06"},{"lineNumber":326,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":327,"author":{"gitId":"KedrianLoh"},"content":"        return predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":328,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":329,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":330,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":331,"author":{"gitId":"KedrianLoh"},"content":"     * Parses the sort option.","lastModifiedDate":"2023-04-06"},{"lineNumber":332,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"KedrianLoh"},"content":"     * @param sortType The sort option as a string.","lastModifiedDate":"2023-04-06"},{"lineNumber":334,"author":{"gitId":"KedrianLoh"},"content":"     * @return The comparator matching the sort option.","lastModifiedDate":"2023-04-06"},{"lineNumber":335,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidSortException If the string did not match any sort option.","lastModifiedDate":"2023-04-06"},{"lineNumber":336,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"KedrianLoh"},"content":"    public static Comparator\u003cTask\u003e parseSort(String sortType) throws InvalidSortException {","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"KedrianLoh"},"content":"        switch (sortType) {","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"KedrianLoh"},"content":"        case \"due\":","lastModifiedDate":"2023-04-06"},{"lineNumber":340,"author":{"gitId":"KedrianLoh"},"content":"            return Task.deadlineComparator;","lastModifiedDate":"2023-04-06"},{"lineNumber":341,"author":{"gitId":"KedrianLoh"},"content":"        case \"prio\":","lastModifiedDate":"2023-04-06"},{"lineNumber":342,"author":{"gitId":"KedrianLoh"},"content":"            return Task.priorityComparator;","lastModifiedDate":"2023-04-06"},{"lineNumber":343,"author":{"gitId":"KedrianLoh"},"content":"        case \"desc\":","lastModifiedDate":"2023-04-07"},{"lineNumber":344,"author":{"gitId":"KedrianLoh"},"content":"            return Task.descriptionComparator;","lastModifiedDate":"2023-04-07"},{"lineNumber":345,"author":{"gitId":"KedrianLoh"},"content":"        case \"done\":","lastModifiedDate":"2023-04-07"},{"lineNumber":346,"author":{"gitId":"KedrianLoh"},"content":"            // Sort overdue tasks before non-overdue incomplete tasks","lastModifiedDate":"2023-04-07"},{"lineNumber":347,"author":{"gitId":"KedrianLoh"},"content":"            return Task.doneComparator.thenComparing(Task.deadlineComparator);","lastModifiedDate":"2023-04-07"},{"lineNumber":348,"author":{"gitId":"KedrianLoh"},"content":"        default:","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"KedrianLoh"},"content":"            throw new InvalidSortException(sortType);","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":351,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":352,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"jeromeongithub":30,"KedrianLoh":62,"ERJUNZE":59,"RuiShengGit":59,"clement559":142}},{"path":"src/main/java/seedu/todolist/logic/command/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":" * Command class that will add a Task object to the given TaskList object.","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_ADD,","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        Flags.EMAIL, Flags.DEADLINE, Flags.TAG, Flags.REPEAT, Flags.PRIORITY};","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    private String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    private String email;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    private TreeSet\u003cString\u003e tags;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    private int repeatTimes;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    private Priority priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs an AddTaskCommand object by parsing the provided arguments.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     * Optional parameters (anything except the description) are allowed to be null.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     * @throws ToDoListException If any of the provided arguments are invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    public AddTaskCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"        description \u003d args.get(Flags.COMMAND_ADD);","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        deadline \u003d ParserUtil.parseDeadline(args.get(Flags.DEADLINE));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        email \u003d ParserUtil.parseEmail(args.get(Flags.EMAIL));","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"        tags \u003d ParserUtil.parseTags(args.get(Flags.TAG));","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"        repeatTimes \u003d ParserUtil.parseRepeatTimes(args.get(Flags.REPEAT), deadline);","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        priority \u003d ParserUtil.parsePriority(args.get(Flags.PRIORITY));","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty(): \"Missing description uncaught by parser!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     * Adds a task with the attributes given in the constructor to the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list to add the task to.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     * @param ui The Ui object used to display the result of adding the task.","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d taskList.addTask(description, deadline, email, tags, repeatTimes, priority);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"        ui.printAddTaskMessage(taskString);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ERJUNZE":43,"RuiShengGit":11,"clement559":3}},{"path":"src/main/java/seedu/todolist/logic/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" * Parent class for Command objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"public abstract class Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     * Executes the command.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"    public abstract void execute(TaskList taskList, Config config, Ui ui) throws ToDoListException;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * Returns whether a command, by default, should terminate the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     * @return False, since most commands should not terminate the program.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ERJUNZE":25}},{"path":"src/main/java/seedu/todolist/logic/command/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will remove Task objects from the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_DELETE,","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a DeleteTaskCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     * Can select tasks to delete by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    public DeleteTaskCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_DELETE));","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"     * Removes tasks specified in the constructor from the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to remove tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of deleting tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"            ui.printDeleteTaskMessage(taskList.deleteTask(idHashSet));","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"        String taskString \u003d taskList.deleteTask(predicate);","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"            ui.printDeleteTaskMessage(taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RuiShengGit":65}},{"path":"src/main/java/seedu/todolist/logic/command/EditConfigCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidFrequencyException;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":" * Command class that will display or edit the configuration settings.","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"public class EditConfigCommand extends Command {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d { Flags.COMMAND_CONFIG,","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"        Flags.CONFIG_CHECK_FREQ, Flags.CONFIG_REPEAT_FREQ, Flags.RESET};","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    private int checkFrequency;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    private int repeatFrequency;","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    private boolean shouldReset;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"     * Constructs a EditConfigCommand object by parsing the provided arguments. checkFrequency determines the frequency","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"     * that the program checks for repeating tasks. repeatFrequency determines that frequency that tasks will repeat.","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"     * @throws InvalidFrequencyException If any of the provided frequency values are invalid. (i.e. less than 0)","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    public EditConfigCommand(HashMap\u003cFlags, String\u003e args) throws InvalidFrequencyException {","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"        // Use -1 to represent no value as the flag was not in the command","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        checkFrequency \u003d ParserUtil.parseFrequency(args.get(Flags.CONFIG_CHECK_FREQ), 0);","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        repeatFrequency \u003d ParserUtil.parseFrequency(args.get(Flags.CONFIG_REPEAT_FREQ), 1);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        shouldReset \u003d args.containsKey(Flags.RESET);","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"     * Edits the configuration for the settings to be changed provided in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"     * @param config The Configuration object whose settings are displayed/updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"     * @param ui The Ui object used to display the configuration settings.","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"        if (shouldReset) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"            config.reset();","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"            if (checkFrequency !\u003d -1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"                config.setCheckFrequency(checkFrequency);","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            if (repeatFrequency !\u003d -1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"                config.setRepeatFrequency(repeatFrequency);","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"        String taskString \u003d config.toString();","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        if (shouldReset || checkFrequency !\u003d -1 || repeatFrequency !\u003d -1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"            ui.printEditConfigMessage(taskString);","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"            ui.printConfigInfo(taskString);","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"clement559":63}},{"path":"src/main/java/seedu/todolist/logic/command/EditDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidEditException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.FormatterUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":" * Command class that will edit/delete the deadlines of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"public class EditDeadlineCommand extends Command  {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_DEADLINE, Flags.EDIT, Flags.EDIT_DELETE,","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     * Constructs a EditDeadlineCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"     * @throws InvalidSelectException If no task ids are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"     * @throws InvalidEditException If neither/both edit and delete keywords are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"    public EditDeadlineCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_DEADLINE));","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"        if (args.containsKey(Flags.EDIT) \u003d\u003d args.containsKey(Flags.EDIT_DELETE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"            throw new InvalidEditException();","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        } else if (args.containsKey(Flags.EDIT)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"            deadline \u003d ParserUtil.parseDeadline(args.get(Flags.EDIT));","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"     * Edits the deadline for the tasks provided in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"     * @param ui The Ui object used to display the result of editing deadlines.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"                ? taskList.setDeadline(idHashSet, deadline)","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"                : taskList.setDeadline(predicate, deadline);","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"        } else if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"            ui.printEditDeleteTaskMessage(\"deadline\", taskString);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"            ui.printEditTaskMessage(\"deadline\", FormatterUtil.getDeadlineAsString(deadline), taskString);","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"clement559":75}},{"path":"src/main/java/seedu/todolist/logic/command/EditDescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":" * Command class that will edit the description of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"public class EditDescriptionCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_DESCRIPTION, Flags.EDIT,","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    private String description;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a EditDescriptionCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     * Can select tasks to edit by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"    public EditDescriptionCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_DESCRIPTION));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"        description \u003d args.get(Flags.EDIT);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        assert description !\u003d null \u0026\u0026 !description.isEmpty(): \"Missing description uncaught by parser!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"     * Edits the description of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"     * @param ui The Ui object used to display the result of editing descriptions.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"                ? taskList.setDescription(idHashSet, description)","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"                : taskList.setDescription(predicate, description);","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"            ui.printEditTaskMessage(\"description\", description, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"jeromeongithub":3,"ERJUNZE":63}},{"path":"src/main/java/seedu/todolist/logic/command/EditEmailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidEditException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will edit/delete the email address of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"public class EditEmailCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_EMAIL, Flags.EDIT, Flags.EDIT_DELETE,","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    private String email;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a EditEmailCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * Can select tasks to edit by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided,","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     *                           or if the given email address is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    public EditEmailCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_EMAIL));","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        if (args.containsKey(Flags.EDIT) \u003d\u003d args.containsKey(Flags.EDIT_DELETE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidEditException();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"        } else if (args.containsKey(Flags.EDIT)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"            email \u003d ParserUtil.parseEmail(args.get(Flags.EDIT));","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"     * Edits/deletes the email address of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of editing email addresses.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"                ? taskList.setEmail(idHashSet, email)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"                : taskList.setEmail(predicate, email);","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"        } else if (email \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"            ui.printEditDeleteTaskMessage(\"email\", taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"            ui.printEditTaskMessage(\"email\", email, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"RuiShengGit":74}},{"path":"src/main/java/seedu/todolist/logic/command/EditPriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidEditException;","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will edit/delete the priority level of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"public class EditPriorityCommand extends Command{","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_PRIORITY, Flags.EDIT, Flags.EDIT_DELETE,","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    private Priority priority \u003d Priority.NONE;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a EditPriorityCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * Can select tasks to edit by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided,","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"     *                           or if the given priority level is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    public EditPriorityCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_PRIORITY));","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        if (args.containsKey(Flags.EDIT) \u003d\u003d args.containsKey(Flags.EDIT_DELETE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidEditException();","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"        } else if (args.containsKey(Flags.EDIT)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"            priority \u003d ParserUtil.parsePriority(args.get(Flags.EDIT));","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"     * Edits/deletes the priority level of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of editing priority levels.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"                ? taskList.setPriority(idHashSet, priority)","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"                : taskList.setPriority(predicate, priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"        } else if (priority \u003d\u003d Priority.NONE) {","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"            ui.printEditDeleteTaskMessage(\"priority level\", taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"            ui.printEditTaskMessage(\"priority level\", priority.toString(), taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":75}},{"path":"src/main/java/seedu/todolist/logic/command/EditRepeatCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidEditException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-04-08"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":" * Command class that will edit/delete the repeat count of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"public class EditRepeatCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_REPEAT, Flags.EDIT, Flags.EDIT_DELETE,","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    private String repeatTimesString;","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"     * Constructs a EditRepeatCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"     * @throws InvalidSelectException If no task ids are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"     * @throws InvalidEditException If neither/both edit and delete keywords are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    public EditRepeatCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_REPEAT));","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        if (args.containsKey(Flags.EDIT) \u003d\u003d args.containsKey(Flags.EDIT_DELETE)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"            throw new InvalidEditException();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"        } else if (args.containsKey(Flags.EDIT)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"            repeatTimesString \u003d args.get(Flags.EDIT);","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"     * Edits the repeat count for the tasks provided in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"     * @param ui The Ui object used to display the result of editing repeat count.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"        int repeatTimes \u003d ParserUtil.parseRepeatTimes(repeatTimesString, LocalDateTime.MIN);","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"                ? taskList.setRepeatTimes(idHashSet, repeatTimes)","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"                : taskList.setRepeatTimes(predicate, repeatTimes);","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"        } else if (repeatTimes \u003d\u003d 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"            ui.printEditDeleteTaskMessage(\"repeat times\", taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"            ui.printEditTaskMessage(\"repeat times\", repeatTimesString, taskString);","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"clement559":75}},{"path":"src/main/java/seedu/todolist/logic/command/EditTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidEditException;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.FormatterUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":" * Command class that will add/edit/delete tags of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"public class EditTagsCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_EDIT_TAGS, Flags.EDIT, Flags.EDIT_ADD,","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        Flags.EDIT_DELETE, Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY,","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL};","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    private TreeSet\u003cString\u003e tags;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"    private Flags purpose;","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     * Constructs a EditTagsCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     * Can select tasks to edit by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    public EditTagsCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_EDIT_TAGS));","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"        int count \u003d ParserUtil.countTrue(args.containsKey(Flags.EDIT), args.containsKey(Flags.EDIT_ADD),","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"                args.containsKey(Flags.EDIT_DELETE));","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"        if (count !\u003d 1) {","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"            // Can only have one of -add, -edit, -del","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"            throw new InvalidEditException(count);","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"        if (args.containsKey(Flags.EDIT)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"            tags \u003d ParserUtil.parseTags(args.get(Flags.EDIT));","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"            purpose \u003d Flags.EDIT;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"        } else if (args.containsKey(Flags.EDIT_ADD)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"            tags \u003d ParserUtil.parseTags(args.get(Flags.EDIT_ADD));","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"            purpose \u003d Flags.EDIT_ADD;","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"            tags \u003d ParserUtil.parseTags(args.get(Flags.EDIT_DELETE));","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"            purpose \u003d Flags.EDIT_DELETE;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"        assert args.size() \u003e 1: \"Fewer arguments than expected!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"     * Adds/edits/deletes the tags of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"     * @param ui The Ui object used to display the result of editing tags.","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"        String taskString;","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"        if (purpose.equals(Flags.EDIT) || tags.isEmpty()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"            // Set tags to given list of tags, or delete all tags if list is empty","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"            taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"                    ? taskList.setTags(idHashSet, tags) : taskList.setTags(predicate, tags);","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"        } else if (purpose.equals(Flags.EDIT_ADD)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"            // Add all given tags","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"            taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"                    ? taskList.addTags(idHashSet, tags) : taskList.addTags(predicate, tags);","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"            // Delete all given tags","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"            taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"                    ? taskList.removeTags(idHashSet, tags) : taskList.removeTags(predicate, tags);","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"        } else if (tags.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"            ui.printEditDeleteTaskMessage(\"tags\", taskString);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"        } else if (purpose.equals(Flags.EDIT)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"            ui.printEditTaskMessage(\"tags\", FormatterUtil.getTagsAsString(tags), taskString);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"        } else if (purpose.equals(Flags.EDIT_ADD)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"            ui.printEditTagsMessage(\"added\", \"to\", FormatterUtil.getTagsAsString(tags), taskString);","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"            ui.printEditTagsMessage(\"removed\", \"from\", FormatterUtil.getTagsAsString(tags), taskString);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jeromeongithub":5,"ERJUNZE":96}},{"path":"src/main/java/seedu/todolist/logic/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":" * Command for terminating the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"     * Displays the program\u0027s shutdown message.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     * Returns whether this command should terminate the program.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"     * @return True, since this is the exit command.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"ERJUNZE":27}},{"path":"src/main/java/seedu/todolist/logic/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.HelpMessages;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will display different help messages.","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_HELP};","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private String helpMessage;","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a HelpCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"    public HelpCommand(HashMap\u003cFlags, String\u003e args) {","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        switch(args.get(Flags.COMMAND_HELP)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"        case \"filter\":","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"            helpMessage \u003d HelpMessages.HELP_FILTERS;","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        case \"sort\":","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            helpMessage \u003d HelpMessages.HELP_SORT;","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        default:","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"            helpMessage \u003d HelpMessages.HELP_COMMAND;","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"     * Display the help message specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to edit tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the help messages.","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        ui.printHelpList(helpMessage);","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":48}},{"path":"src/main/java/seedu/todolist/logic/command/ListFullInfoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"//@@author KedrianLoh","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":" * Command class that will display all attributes of Task objects of the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"public class ListFullInfoCommand extends Command{","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_FULL_INFO,","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"     * Constructs a ListFullInfoCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"     * Can select tasks to display by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"    public ListFullInfoCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_FULL_INFO));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"     * Displays the attributes of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"     * @param taskList The task list to get task information from.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"     * @param ui The Ui object used to display the task attributes.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"KedrianLoh"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"KedrianLoh"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"KedrianLoh"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"KedrianLoh"},"content":"                ? taskList.getFullInfo(idHashSet)","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"KedrianLoh"},"content":"                : taskList.getFullInfo(predicate);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"KedrianLoh"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"KedrianLoh"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"KedrianLoh"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"KedrianLoh"},"content":"            ui.printGetFullInfoMessage(taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"KedrianLoh":63}},{"path":"src/main/java/seedu/todolist/logic/command/ListTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.FormatterUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":" * Command class that will display all tags of Task objects in the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"public class ListTagsCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"     * Displays all tags of tasks found in the given task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskList The task list to get tag information from.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"     * @param ui The Ui object used to display the tags.","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"        TreeSet\u003cString\u003e tags \u003d taskList.getAllTags();","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"        ui.printGetTagsMessage(tags.size(), FormatterUtil.getTagsAsString(tags));","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ERJUNZE":25}},{"path":"src/main/java/seedu/todolist/logic/command/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"//@@author KedrianLoh","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-04-08"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":" * Command class that will display a summary of Task objects from the given TaskList object.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_LIST, Flags.SORT,","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"    private Comparator\u003cTask\u003e comparator \u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"     * Constructs a ListTasksCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"     * Can select tasks to display by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"    public ListTasksCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_LIST));","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"        if (args.containsKey(Flags.SORT)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"            comparator \u003d ParserUtil.parseSort(args.get(Flags.SORT));","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"KedrianLoh"},"content":"     * Displays a summary of tasks specified in the constructor.","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"KedrianLoh"},"content":"     * @param taskList The task list to get task information from.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"KedrianLoh"},"content":"     * @param ui The Ui object used to display the task summary.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"KedrianLoh"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-08"},{"lineNumber":53,"author":{"gitId":"KedrianLoh"},"content":"        if (idHashSet.isEmpty() \u0026\u0026 predicate \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"KedrianLoh"},"content":"            if (comparator \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"KedrianLoh"},"content":"                // Display full unsorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"KedrianLoh"},"content":"                ui.printTaskList(taskList.size(), taskList.toString());","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"KedrianLoh"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"KedrianLoh"},"content":"                // Display full sorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"KedrianLoh"},"content":"                ui.printTaskList(taskList.size(), taskList.toString(comparator));","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"KedrianLoh"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"KedrianLoh"},"content":"            return;","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"KedrianLoh"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"KedrianLoh"},"content":"            if (comparator \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"KedrianLoh"},"content":"                // Display filtered (by ids) unsorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"KedrianLoh"},"content":"                ui.printTaskList(idHashSet.size(), taskList.toString(idHashSet));","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"KedrianLoh"},"content":"            } else {","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"KedrianLoh"},"content":"                // Display filtered (by ids) sorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"KedrianLoh"},"content":"                ui.printTaskList(idHashSet.size(), taskList.toString(idHashSet, comparator));","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"KedrianLoh"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"KedrianLoh"},"content":"            return;","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"KedrianLoh"},"content":"        if (comparator \u003d\u003d null) {","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"KedrianLoh"},"content":"            // Display filtered (by predicate) unsorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"KedrianLoh"},"content":"            ui.printTaskList(taskList.size(predicate), taskList.toString(predicate));","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"KedrianLoh"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"KedrianLoh"},"content":"            // Display filtered (by predicate) sorted task list","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"KedrianLoh"},"content":"            ui.printTaskList(taskList.size(predicate), taskList.toString(predicate, comparator));","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"KedrianLoh":83}},{"path":"src/main/java/seedu/todolist/logic/command/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will mark Task objects of the given TaskList object as complete.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"public class MarkTaskCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_MARK,","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs a MarkTaskCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     * Can select tasks to mark by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    public MarkTaskCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_MARK));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"     * Marks the tasks specified in the constructor as complete.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to mark tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of marking tasks as complete.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"                ? taskList.setDone(idHashSet, true)","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                : taskList.setDone(predicate, true);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"            ui.printMarkTaskMessage(taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":63}},{"path":"src/main/java/seedu/todolist/logic/command/ProgressBarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import java.time.temporal.TemporalField;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import java.time.temporal.WeekFields;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":" * Command class that will display the progress of tasks in the given TaskList object that are due this week.","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"public class ProgressBarCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"    private static final int PROGRESS_BAR_SECTIONS \u003d 50;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"    Predicate\u003cTask\u003e isInThisWeek;","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"     * Constructs a ProgressBarCommand that will display the tasks that are due this week,","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"     * and a progress bar. \"This week\" is defined as from this Monday to this Sunday.","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"    public ProgressBarCommand() {","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"        TemporalField fieldISO \u003d WeekFields.of(Locale.FRANCE).dayOfWeek();","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"        // Before Monday (start of the week - 1st day)","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"        LocalDate beforeStartOfWeek \u003d LocalDate.now().with(fieldISO, 1).minusDays(1);","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"        // After Sunday (end of the week - 7th day)","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"        LocalDate afterEndOfWeek \u003d beforeStartOfWeek.plusDays(8);","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"        isInThisWeek \u003d Task.afterDate(beforeStartOfWeek).and(Task.beforeDate(afterEndOfWeek));","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"     * Displays a summary of tasks due this week and a progress bar.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"     * @param taskList The task list to check for tasks that are due this week.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"     * @param ui The Ui object used to display the tasks due this week and the progress bar.","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"        int tasksThisWeek \u003d taskList.size(isInThisWeek);","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"        int completedTasksThisWeek \u003d taskList.size(isInThisWeek.and(Task.isDonePredicate()));","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"        ui.printProgressBar(completedTasksThisWeek, tasksThisWeek,","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"                PROGRESS_BAR_SECTIONS, taskList.toString(isInThisWeek, Task.deadlineComparator));","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jeromeongithub":49}},{"path":"src/main/java/seedu/todolist/logic/command/ResetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-08"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will reset the given task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"public class ResetCommand extends Command {","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"     * Resets the given task list after obtaining confirmation from the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to be reset.","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of resetting the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) {","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"        if (ui.getUserConfirmation()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"            taskList.reset();","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"            ui.printResetMessage(true);","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"            ui.printResetMessage(false);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"RuiShengGit":27}},{"path":"src/main/java/seedu/todolist/logic/command/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.InvalidSelectException;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.ParserUtil;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.Task;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":" * Command class that will mark Task objects of the given TaskList object as incomplete.","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"public class UnmarkTaskCommand extends Command{","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public static final Flags[] EXPECTED_FLAGS \u003d {Flags.COMMAND_UNMARK,","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        Flags.FILTER_DONE, Flags.FILTER_OVERDUE, Flags.FILTER_BEFORE, Flags.FILTER_AFTER, Flags.FILTER_ALL,","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        Flags.DESCRIPTION, Flags.EMAIL, Flags.REPEAT, Flags.TAG, Flags.PRIORITY};","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    private HashSet\u003cInteger\u003e idHashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    private Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"     * Constructs an UnmarkTaskCommand object by parsing the provided arguments.","lastModifiedDate":"2023-04-08"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"     * Can select tasks to unmark by providing a list of ids, or one or more filters.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"     * @param args The provided arguments, parsed from the user\u0027s input.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"     * @throws ToDoListException If ids/filters are invalid, or if both ids and filters are provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    public UnmarkTaskCommand(HashMap\u003cFlags, String\u003e args) throws ToDoListException {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        idHashSet \u003d ParserUtil.parseId(args.get(Flags.COMMAND_UNMARK));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"        predicate \u003d ParserUtil.parseFilter(args);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        if (idHashSet.isEmpty() \u003d\u003d (predicate \u003d\u003d null)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            throw new InvalidSelectException();","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"     * Marks the tasks specified in the constructor as incomplete.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"     * @param taskList The task list to unmark tasks from.","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"     * @param ui The Ui object used to display the result of marking tasks as incomplete.","lastModifiedDate":"2023-04-08"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If the given task list does not contain tasks with the specified ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"    public void execute(TaskList taskList, Config config, Ui ui) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        String taskString \u003d predicate \u003d\u003d null","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"                ? taskList.setDone(idHashSet, false)","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                : taskList.setDone(predicate, false);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"        if (taskString.isEmpty()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"            ui.printFilteredNoTasksFoundMessage();","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        } else {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"            ui.printUnmarkTaskMessage(taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":63}},{"path":"src/main/java/seedu/todolist/model/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.model;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"public class Config {","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"    // Repeating tasks will recur every this number of days","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"    private int repeatFrequency \u003d 7;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"    // Program will check for repeating tasks every this number of minutes","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"    private int checkFrequency \u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"    private LocalDateTime lastChecked \u003d LocalDateTime.now();","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"     * Returns the configuration settings in a specified string format.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"     * @return String containing configuration settings","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    public String toString() {","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"        return String.format(Formats.CONFIG_STRING, repeatFrequency, checkFrequency);","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"     * Reset configuration settings to default.","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"    public void reset() {","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"        repeatFrequency \u003d 7;","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"        checkFrequency \u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"     * Checks if this configuration settings is still valid after loading it from the save file.","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"     * Certain attributes if deleted or edited to invalid values will cause the configs to be invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"     * @return If this configuration settings is still valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"        if (repeatFrequency \u003c 1 || checkFrequency \u003c 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"            // Repeat frequency must be positive; check frequency must not be negative","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        // Last checked date-time cannot be after the current date-time","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        return !lastChecked.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"    public void setCheckFrequency(int checkFrequency) {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        this.checkFrequency \u003d checkFrequency;","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"    public void setRepeatFrequency(int repeatFrequency) {","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"        this.repeatFrequency \u003d repeatFrequency;","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"    public void setLastChecked(LocalDateTime lastChecked) {","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"        this.lastChecked \u003d lastChecked;","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"    public int getCheckFrequency() {","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"        return checkFrequency;","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"    public int getRepeatFrequency() {","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"        return repeatFrequency;","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"    public LocalDateTime getLastChecked() {","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"        return lastChecked;","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"clement559":71}},{"path":"src/main/java/seedu/todolist/model/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.model;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"public enum Priority {","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"    HIGH(\"High\", \"III\"),","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"    MEDIUM(\"Medium\", \"II \"),","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"    LOW(\"Low\", \"I  \"),","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"    NONE(\"None\", \"   \");","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"    private final String name;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"    private final String display;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"    Priority(String name, String display) {","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"        this.display \u003d display;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    public String toString() {","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"        return name;","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    public String toDisplayString() {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        return display;","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"RuiShengGit":25}},{"path":"src/main/java/seedu/todolist/model/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.model;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.logic.FormatterUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":" * A class representing a task to be done, with various attributes like deadlines and completion status.","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"public class Task {","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"     * Comparator for sorting the task list by deadline, with older deadlines first.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"     * Tasks without deadlines are placed at the bottom.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"    public static Comparator\u003cTask\u003e deadlineComparator \u003d (task1, task2) -\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"        if (task1.getDeadline() \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"            return 1;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"        if (task2.getDeadline() \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"            return -1;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"        return task1.deadline.compareTo(task2.deadline);","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"    };","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"     * Comparator for sorting the task list by description, in lexicographic order.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"    public static Comparator\u003cTask\u003e descriptionComparator \u003d Comparator.comparing(task -\u003e task.description);","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"KedrianLoh"},"content":"     * Comparator for sorting the task list by completion status, with incomplete tasks first.","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"KedrianLoh"},"content":"    public static Comparator\u003cTask\u003e doneComparator \u003d Comparator.comparing(task -\u003e task.isDone);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"     * Comparator for sorting the task list by priority, with higher priority first.","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"     * Tasks without priority are placed at the bottom.","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    // Uses enum ordinal to sort","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"    public static Comparator\u003cTask\u003e priorityComparator \u003d Comparator.comparing(task -\u003e task.priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"    int id;","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"    private String description;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"    private String email;","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"    private int repeatTimes;","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"    private TreeSet\u003cString\u003e tags;","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"    private Priority priority;","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"    public Task(int id, String description, LocalDateTime deadline, String email, TreeSet\u003cString\u003e tags,","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"                int repeatTimes, Priority priority) {","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"        this.repeatTimes \u003d repeatTimes;","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"     * Checks if this task is still valid after loading it from the save file.","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"     * Certain attributes if deleted or edited to invalid values will cause the task to be invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"     * @return If this task is still valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"        if (id \u003c 1) {","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"            // Id must be positive","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"        if (description \u003d\u003d null || description.isEmpty()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"            // Description must exist","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"        if (repeatTimes \u003c 0 || (repeatTimes \u003e 0 \u0026\u0026 deadline \u003d\u003d null)) {","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"            // Recurrence count must be positive, unless there is no deadline, then it must be 0","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"        // Tag list and priority level must exist","lastModifiedDate":"2023-04-08"},{"lineNumber":91,"author":{"gitId":"jeromeongithub"},"content":"        return tags !\u003d null \u0026\u0026 priority !\u003d null;","lastModifiedDate":"2023-04-08"},{"lineNumber":92,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":96,"author":{"gitId":"KedrianLoh"},"content":"     * Converts this task into its summarised string representation, with only some attributes listed.","lastModifiedDate":"2023-04-08"},{"lineNumber":97,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":98,"author":{"gitId":"KedrianLoh"},"content":"     * @return The summarised string representation of this task.","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":100,"author":{"gitId":"KedrianLoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"KedrianLoh"},"content":"        String descriptionString \u003d description.length() \u003e Formats.MAX_DESC_LEN_FOR_LIST","lastModifiedDate":"2023-04-08"},{"lineNumber":102,"author":{"gitId":"KedrianLoh"},"content":"                ? description.substring(0, Formats.MAX_DESC_LEN_FOR_LIST) + \"...\" : description;","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"KedrianLoh"},"content":"        String isDoneString \u003d isDone ? \"X\" : (isDue() ? \"!\" : \" \");","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"KedrianLoh"},"content":"        String taskString \u003d String.format(Formats.TASK_STRING, id, isDoneString,","lastModifiedDate":"2023-04-06"},{"lineNumber":105,"author":{"gitId":"KedrianLoh"},"content":"                priority.toDisplayString(), descriptionString);","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"KedrianLoh"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"KedrianLoh"},"content":"            taskString +\u003d \"[Due by: \" + FormatterUtil.getDeadlineAsString(deadline) + \"]\";","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"KedrianLoh"},"content":"        return taskString;","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"KedrianLoh"},"content":"     * Converts this task into its full string representation, with all attributes that exist listed.","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":115,"author":{"gitId":"KedrianLoh"},"content":"     * @return The full string representation of this task.","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":117,"author":{"gitId":"KedrianLoh"},"content":"    public String getFullInfo() {","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"KedrianLoh"},"content":"        StringJoiner infoString \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"KedrianLoh"},"content":"        infoString.add(\"ID:           \" + id);","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"KedrianLoh"},"content":"        infoString.add(\"Description:  \" + description);","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"KedrianLoh"},"content":"        infoString.add(\"Completed:    \" + (isDone ? \"Yes\" : (isDue() ? \"Overdue\" : \"No\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"KedrianLoh"},"content":"        if (priority !\u003d Priority.NONE) {","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"KedrianLoh"},"content":"            infoString.add(\"Priority:     \" + priority.toString());","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"KedrianLoh"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"KedrianLoh"},"content":"            infoString.add(\"Due:          \" + FormatterUtil.getDeadlineAsString(deadline));","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"KedrianLoh"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"KedrianLoh"},"content":"            infoString.add(\"Email:        \" + email);","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"KedrianLoh"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"KedrianLoh"},"content":"            infoString.add(\"Tags:         \" + FormatterUtil.getTagsAsString(tags));","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"KedrianLoh"},"content":"        if (repeatTimes \u003e 0) {","lastModifiedDate":"2023-04-08"},{"lineNumber":135,"author":{"gitId":"KedrianLoh"},"content":"            infoString.add(\"Repeat times: \" + repeatTimes);","lastModifiedDate":"2023-04-08"},{"lineNumber":136,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"KedrianLoh"},"content":"        return infoString.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"KedrianLoh"},"content":"     * Checks if a task is due, which means the current time is equal to or after its deadline.","lastModifiedDate":"2023-04-09"},{"lineNumber":142,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":143,"author":{"gitId":"KedrianLoh"},"content":"     * @return If a task is due.","lastModifiedDate":"2023-04-09"},{"lineNumber":144,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":145,"author":{"gitId":"KedrianLoh"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-04-09"},{"lineNumber":146,"author":{"gitId":"KedrianLoh"},"content":"        return deadline !\u003d null \u0026\u0026 !deadline.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":148,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":149,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"jeromeongithub"},"content":"    public int getId() {","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"jeromeongithub"},"content":"        return id;","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"jeromeongithub"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"jeromeongithub"},"content":"        return description;","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"jeromeongithub"},"content":"    public String getEmail() {","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"jeromeongithub"},"content":"        return email;","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"jeromeongithub"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2023-03-25"},{"lineNumber":163,"author":{"gitId":"jeromeongithub"},"content":"        return deadline;","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"jeromeongithub"},"content":"    public TreeSet\u003cString\u003e getTags() {","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"jeromeongithub"},"content":"        return tags;","lastModifiedDate":"2023-03-25"},{"lineNumber":168,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"jeromeongithub"},"content":"    public int getRepeatTimes() {","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"jeromeongithub"},"content":"        return repeatTimes;","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"jeromeongithub"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"jeromeongithub"},"content":"        return priority;","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"jeromeongithub"},"content":"    public String setDone(boolean isDone) {","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"jeromeongithub"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"jeromeongithub"},"content":"    public String setDescription(String description) {","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"jeromeongithub"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"jeromeongithub"},"content":"    public String setEmail(String email) {","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"jeromeongithub"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-25"},{"lineNumber":190,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"jeromeongithub"},"content":"    public String setDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"jeromeongithub"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"jeromeongithub"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":196,"author":{"gitId":"jeromeongithub"},"content":"            repeatTimes \u003d 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":198,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":200,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"jeromeongithub"},"content":"    public String setRepeatTimes(int newRepeatTimes) {","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"jeromeongithub"},"content":"        repeatTimes \u003d newRepeatTimes;","lastModifiedDate":"2023-04-09"},{"lineNumber":203,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"jeromeongithub"},"content":"    public String setTags(TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-03-31"},{"lineNumber":207,"author":{"gitId":"jeromeongithub"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"jeromeongithub"},"content":"    public String setPriority(Priority priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":212,"author":{"gitId":"jeromeongithub"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":217,"author":{"gitId":"jeromeongithub"},"content":"     * Adds the tags requested by the user to this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":218,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":219,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The set containing the tags that the user wants to add to this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":220,"author":{"gitId":"jeromeongithub"},"content":"     * @return The summarised string representation of this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":221,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":222,"author":{"gitId":"jeromeongithub"},"content":"    public String addTags(TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"jeromeongithub"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":227,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-09"},{"lineNumber":228,"author":{"gitId":"jeromeongithub"},"content":"     * Removes the tags requested by the user from this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":229,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":230,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The set containing the tags that the user wants to remove from this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":231,"author":{"gitId":"jeromeongithub"},"content":"     * @return The summarised string representation of this task.","lastModifiedDate":"2023-04-09"},{"lineNumber":232,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-09"},{"lineNumber":233,"author":{"gitId":"jeromeongithub"},"content":"    public String removeTags(TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"jeromeongithub"},"content":"        this.tags.removeAll(tags);","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"jeromeongithub"},"content":"        return toString();","lastModifiedDate":"2023-04-04"},{"lineNumber":236,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":239,"author":{"gitId":"jeromeongithub"},"content":"     * Creates a predicate for checking if a task\u0027s deadline is before a given date.","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"jeromeongithub"},"content":"     * Used for the progress command.","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"jeromeongithub"},"content":"     * @param date The date to compare to.","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"jeromeongithub"},"content":"     * @return A predicate for checking if the task\u0027s deadline is before a given date.","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"jeromeongithub"},"content":"    public static Predicate\u003cTask\u003e beforeDate(LocalDate date) {","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"jeromeongithub"},"content":"        return task -\u003e task.deadline !\u003d null \u0026\u0026 task.deadline.toLocalDate().isBefore(date);","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":250,"author":{"gitId":"jeromeongithub"},"content":"     * Creates a predicate for checking if a task\u0027s deadline is after a given date.","lastModifiedDate":"2023-04-08"},{"lineNumber":251,"author":{"gitId":"jeromeongithub"},"content":"     * Used for the progress command.","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"jeromeongithub"},"content":"     * @param date The date to compare to.","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"jeromeongithub"},"content":"     * @return A predicate for checking if the task\u0027s deadline is after a given date.","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"jeromeongithub"},"content":"    public static Predicate\u003cTask\u003e afterDate(LocalDate date) {","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"jeromeongithub"},"content":"        return task -\u003e task.deadline !\u003d null \u0026\u0026 task.deadline.toLocalDate().isAfter(date);","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":259,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":260,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":261,"author":{"gitId":"jeromeongithub"},"content":"     * Creates a predicate for checking if a task is overdue, which means it is incomplete and due.","lastModifiedDate":"2023-04-08"},{"lineNumber":262,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":263,"author":{"gitId":"jeromeongithub"},"content":"     * @return A predicate for checking if a task is overdue.","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-04"},{"lineNumber":266,"author":{"gitId":"clement559"},"content":"    public static Predicate\u003cTask\u003e isOverdue() {","lastModifiedDate":"2023-04-02"},{"lineNumber":267,"author":{"gitId":"clement559"},"content":"        return task -\u003e !task.isDone \u0026\u0026 task.isDue();","lastModifiedDate":"2023-04-04"},{"lineNumber":268,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-02"},{"lineNumber":269,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":270,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":271,"author":{"gitId":"clement559"},"content":"     * Creates a predicate for checking if a task is completed.","lastModifiedDate":"2023-04-08"},{"lineNumber":272,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":273,"author":{"gitId":"clement559"},"content":"     * @return A predicate for checking if a task is completed.","lastModifiedDate":"2023-04-08"},{"lineNumber":274,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"clement559"},"content":"    public static Predicate\u003cTask\u003e isDonePredicate() {","lastModifiedDate":"2023-04-06"},{"lineNumber":276,"author":{"gitId":"clement559"},"content":"        return task -\u003e task.isDone;","lastModifiedDate":"2023-04-06"},{"lineNumber":277,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":278,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":279,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-04-06"},{"lineNumber":280,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task\u0027s description contains a given string.","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":283,"author":{"gitId":"KedrianLoh"},"content":"     * @param description The string to check for.","lastModifiedDate":"2023-04-08"},{"lineNumber":284,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if a task\u0027s description contains a given string.","lastModifiedDate":"2023-04-08"},{"lineNumber":285,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":286,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e matchesDescription(String description) {","lastModifiedDate":"2023-04-06"},{"lineNumber":287,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.description.contains(description);","lastModifiedDate":"2023-04-06"},{"lineNumber":288,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":289,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":290,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task has the given email address.","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"KedrianLoh"},"content":"     * @param email The email address to check for.","lastModifiedDate":"2023-04-08"},{"lineNumber":294,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if a task has the given email address.","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":296,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e matchesEmail(String email) {","lastModifiedDate":"2023-04-06"},{"lineNumber":297,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.email !\u003d null \u0026\u0026 task.email.equals(email);","lastModifiedDate":"2023-04-06"},{"lineNumber":298,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":299,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":300,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":301,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task\u0027s deadline is before a given date-time.","lastModifiedDate":"2023-04-08"},{"lineNumber":302,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":303,"author":{"gitId":"KedrianLoh"},"content":"     * @param deadline The date-time to compare to.","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if the task\u0027s deadline is before a given date-time.","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":306,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e beforeDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.deadline !\u003d null \u0026\u0026 task.deadline.isBefore(deadline);","lastModifiedDate":"2023-04-06"},{"lineNumber":308,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":309,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":310,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":311,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task\u0027s deadline is after a given date-time.","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":313,"author":{"gitId":"KedrianLoh"},"content":"     * @param deadline The date-time to compare to.","lastModifiedDate":"2023-04-08"},{"lineNumber":314,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if the task\u0027s deadline is after a given date-time.","lastModifiedDate":"2023-04-08"},{"lineNumber":315,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e afterDeadline(LocalDateTime deadline) {","lastModifiedDate":"2023-04-06"},{"lineNumber":317,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.deadline !\u003d null \u0026\u0026 task.deadline.isAfter(deadline);","lastModifiedDate":"2023-04-06"},{"lineNumber":318,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":319,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":320,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":321,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task is a recurring task.","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if a task is a recurring task.","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e isRepeating() {","lastModifiedDate":"2023-04-06"},{"lineNumber":326,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.repeatTimes \u003e 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":328,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":329,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":330,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task has all the given tags.","lastModifiedDate":"2023-04-08"},{"lineNumber":331,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":332,"author":{"gitId":"KedrianLoh"},"content":"     * @param tags The list of tags to check for.","lastModifiedDate":"2023-04-08"},{"lineNumber":333,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if a task has all the given tags.","lastModifiedDate":"2023-04-08"},{"lineNumber":334,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":335,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e matchesTags(TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-06"},{"lineNumber":336,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.tags.containsAll(tags);","lastModifiedDate":"2023-04-06"},{"lineNumber":337,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":338,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":339,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"KedrianLoh"},"content":"     * Creates a predicate for checking if a task has the given priority level.","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"KedrianLoh"},"content":"     * @param priority The priority level to check for.","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"KedrianLoh"},"content":"     * @return A predicate for checking if a task has the given priority level.","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":345,"author":{"gitId":"KedrianLoh"},"content":"    public static Predicate\u003cTask\u003e matchesPriority(Priority priority) {","lastModifiedDate":"2023-04-06"},{"lineNumber":346,"author":{"gitId":"KedrianLoh"},"content":"        return task -\u003e task.priority.equals(priority);","lastModifiedDate":"2023-04-06"},{"lineNumber":347,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jeromeongithub":161,"KedrianLoh":150,"ERJUNZE":15,"clement559":22}},{"path":"src/main/java/seedu/todolist/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.model;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Messages;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidDateException;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Map;","lastModifiedDate":"2023-04-08"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeMap;","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":" * A list of Task objects representing the current list of tasks.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"public class TaskList {","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    private int allocatedIds \u003d 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    private TreeMap\u003cInteger, Task\u003e tasks \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"    public void reset() {","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        allocatedIds \u003d 0;","lastModifiedDate":"2023-04-08"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"        tasks.clear();","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"     * Returns a stream of tasks with the given ids.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"     * @param ids The ids of the tasks to return.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"     * @return A stream of tasks with the given ids.","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    private Stream\u003cTask\u003e getTasks(HashSet\u003cInteger\u003e ids) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"        for (int id : ids) {","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"            if (!tasks.containsKey(id)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"                throw new InvalidIdException(id);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"        return ids.stream().map(tasks::get);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        tasks.put(task.getId(), task);","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    public String addTask(String description, LocalDateTime deadline, String email, TreeSet\u003cString\u003e tags,","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"                          int repeatTimes, Priority priority) {","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"        Task task \u003d new Task(++allocatedIds, description, deadline, email, tags, repeatTimes, priority);","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"        tasks.put(allocatedIds, task);","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"        return task.toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"     * Deletes the task at the given ids of the task list.","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"     * @param ids The ids of the task to be deleted.","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"    public String deleteTask(HashSet\u003cInteger\u003e ids) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d joinStringStream(getTasks(ids).map(Task::toString));","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"        tasks.keySet().removeAll(ids);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"        return taskString;","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"    public String deleteTask(Predicate\u003cTask\u003e p) {","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"        String taskString \u003d joinStringStream(tasks.values().stream().filter(p).map(Task::toString));","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"        tasks.values().removeIf(p);","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"        return taskString;","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"     * Returns the number of tasks in this task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"     * @return The number of tasks in this task list.","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"    public int size() {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"        return tasks.size();","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"clement559"},"content":"    public int size(Predicate\u003cTask\u003e p) {","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"        return (int) tasks.values().stream().filter(p).count();","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":92,"author":{"gitId":"clement559"},"content":"     * Joins a stream of strings together with numbering (#1, #2, etc...).","lastModifiedDate":"2023-04-06"},{"lineNumber":93,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"clement559"},"content":"     * @param stream The stream of strings to join together.","lastModifiedDate":"2023-04-06"},{"lineNumber":95,"author":{"gitId":"clement559"},"content":"     * @return A single string composed of numbered strings.","lastModifiedDate":"2023-04-06"},{"lineNumber":96,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"clement559"},"content":"    private String joinStringStream(Stream\u003cString\u003e stream) {","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"clement559"},"content":"        AtomicInteger count \u003d new AtomicInteger(1);","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"clement559"},"content":"        return stream.map(string -\u003e String.format(Formats.TASK_STRING_INDEXED, count.getAndIncrement(), string))","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"clement559"},"content":"                .collect(Collectors.joining(System.lineSeparator()));","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"clement559"},"content":"     * Converts the task list into its string representation.","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"clement559"},"content":"     * @return String representation of the task list.","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"clement559"},"content":"    public String toString() {","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"clement559"},"content":"        return joinStringStream(tasks.values().stream().map(Task::toString));","lastModifiedDate":"2023-04-06"},{"lineNumber":110,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":111,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"clement559"},"content":"     * Filters the task list using a predicate before converting it into its string representation.","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"clement559"},"content":"     * @param p The predicate to filter the task list with.","lastModifiedDate":"2023-04-08"},{"lineNumber":116,"author":{"gitId":"clement559"},"content":"     * @return Filtered string representation of the task list.","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"clement559"},"content":"    public String toString(Predicate\u003cTask\u003e p) {","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"clement559"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(Task::toString));","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"KedrianLoh"},"content":"    //@@author KedrianLoh","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"KedrianLoh"},"content":"     * Sorts the task list using a comparator before converting it into its sorted string representation.","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"KedrianLoh"},"content":"     * @param c The comparator to sort the task list with.","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"KedrianLoh"},"content":"     * @return Sorted string representation of the task list.","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"KedrianLoh"},"content":"    public String toString(Comparator\u003cTask\u003e c) {","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"KedrianLoh"},"content":"        return joinStringStream(tasks.values().stream().sorted(c).map(Task::toString));","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"KedrianLoh"},"content":"     * Filters the task list using a predicate and comparator before converting it","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"KedrianLoh"},"content":"     * into its sorted string representation.","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"KedrianLoh"},"content":"     * @param p The predicate to filter the task list with.","lastModifiedDate":"2023-04-08"},{"lineNumber":138,"author":{"gitId":"KedrianLoh"},"content":"     * @param c The comparator to sort the task list with.","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"KedrianLoh"},"content":"     * @return Filtered string representation of the task list.","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"KedrianLoh"},"content":"    public String toString(Predicate\u003cTask\u003e p, Comparator\u003cTask\u003e c) {","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"KedrianLoh"},"content":"        return joinStringStream(tasks.values().stream().filter(p).sorted(c).map(Task::toString));","lastModifiedDate":"2023-04-06"},{"lineNumber":143,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"KedrianLoh"},"content":"     * Filters the task list using the given ids before converting it into its string representation.","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"KedrianLoh"},"content":"     * @param ids The ids to filter the task list with.","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"KedrianLoh"},"content":"     * @return Filtered string representation of the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidIdException If there is no task with any of the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":151,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":152,"author":{"gitId":"KedrianLoh"},"content":"    public String toString(HashSet\u003cInteger\u003e ids) throws InvalidIdException {","lastModifiedDate":"2023-04-08"},{"lineNumber":153,"author":{"gitId":"KedrianLoh"},"content":"        return joinStringStream(getTasks(ids).map(Task::toString));","lastModifiedDate":"2023-04-08"},{"lineNumber":154,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":155,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":156,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":157,"author":{"gitId":"KedrianLoh"},"content":"     * Filters the task list using the given ids and comparator before converting it","lastModifiedDate":"2023-04-08"},{"lineNumber":158,"author":{"gitId":"KedrianLoh"},"content":"     * into its sorted string representation.","lastModifiedDate":"2023-04-08"},{"lineNumber":159,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":160,"author":{"gitId":"KedrianLoh"},"content":"     * @param ids The ids to filter the task list with.","lastModifiedDate":"2023-04-08"},{"lineNumber":161,"author":{"gitId":"KedrianLoh"},"content":"     * @param c The comparator to sort the task list with.","lastModifiedDate":"2023-04-08"},{"lineNumber":162,"author":{"gitId":"KedrianLoh"},"content":"     * @return Filtered string representation of the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":163,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidIdException If there is no task with any of the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":164,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"KedrianLoh"},"content":"    public String toString(HashSet\u003cInteger\u003e ids, Comparator\u003cTask\u003e c) throws InvalidIdException {","lastModifiedDate":"2023-04-08"},{"lineNumber":166,"author":{"gitId":"KedrianLoh"},"content":"        return joinStringStream(getTasks(ids).sorted(c).map(Task::toString));","lastModifiedDate":"2023-04-08"},{"lineNumber":167,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"KedrianLoh"},"content":"     * Gets the full information of all tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":171,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":172,"author":{"gitId":"KedrianLoh"},"content":"     * @param ids The ids of the tasks to get the full information of.","lastModifiedDate":"2023-04-08"},{"lineNumber":173,"author":{"gitId":"KedrianLoh"},"content":"     * @return A combined string of the full information of all tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":174,"author":{"gitId":"KedrianLoh"},"content":"     * @throws InvalidIdException If there is no task with any of the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":175,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":176,"author":{"gitId":"KedrianLoh"},"content":"    public String getFullInfo(HashSet\u003cInteger\u003e ids) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"KedrianLoh"},"content":"        return getTasks(ids).map(Task::getFullInfo)","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"KedrianLoh"},"content":"                .collect(Collectors.joining(System.lineSeparator() + Messages.LINE + System.lineSeparator()));","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"KedrianLoh"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":182,"author":{"gitId":"KedrianLoh"},"content":"     * Gets the full information of all tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":183,"author":{"gitId":"KedrianLoh"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":184,"author":{"gitId":"KedrianLoh"},"content":"     * @param p The predicate used to filter the task list.","lastModifiedDate":"2023-04-08"},{"lineNumber":185,"author":{"gitId":"KedrianLoh"},"content":"     * @return A combined string of the full information of all tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":186,"author":{"gitId":"KedrianLoh"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":187,"author":{"gitId":"KedrianLoh"},"content":"    public String getFullInfo(Predicate\u003cTask\u003e p) {","lastModifiedDate":"2023-04-07"},{"lineNumber":188,"author":{"gitId":"KedrianLoh"},"content":"        return tasks.values().stream().filter(p).map(Task::getFullInfo)","lastModifiedDate":"2023-04-07"},{"lineNumber":189,"author":{"gitId":"KedrianLoh"},"content":"                .collect(Collectors.joining(System.lineSeparator() + Messages.LINE + System.lineSeparator()));","lastModifiedDate":"2023-04-07"},{"lineNumber":190,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":192,"author":{"gitId":"ERJUNZE"},"content":"    //@@author ERJUNZE","lastModifiedDate":"2023-04-08"},{"lineNumber":193,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":194,"author":{"gitId":"ERJUNZE"},"content":"     * Gets the list of tags that tasks in the task list have.","lastModifiedDate":"2023-04-08"},{"lineNumber":195,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":196,"author":{"gitId":"ERJUNZE"},"content":"     * @return A TreeSet containing all the tags that tasks in the task list have.","lastModifiedDate":"2023-04-08"},{"lineNumber":197,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":198,"author":{"gitId":"ERJUNZE"},"content":"    public TreeSet\u003cString\u003e getAllTags() {","lastModifiedDate":"2023-04-08"},{"lineNumber":199,"author":{"gitId":"ERJUNZE"},"content":"        TreeSet\u003cString\u003e tags \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-04-08"},{"lineNumber":200,"author":{"gitId":"ERJUNZE"},"content":"        tasks.values().forEach(task -\u003e tags.addAll(task.getTags()));","lastModifiedDate":"2023-04-08"},{"lineNumber":201,"author":{"gitId":"ERJUNZE"},"content":"        return tags;","lastModifiedDate":"2023-04-08"},{"lineNumber":202,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":203,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":204,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":205,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the description for the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":206,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":207,"author":{"gitId":"ERJUNZE"},"content":"     * @param ids The ids of the tasks to set the description for.","lastModifiedDate":"2023-04-08"},{"lineNumber":208,"author":{"gitId":"ERJUNZE"},"content":"     * @param description The description to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":209,"author":{"gitId":"ERJUNZE"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":210,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":211,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":212,"author":{"gitId":"ERJUNZE"},"content":"    public String setDescription(HashSet\u003cInteger\u003e ids, String description) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":213,"author":{"gitId":"ERJUNZE"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setDescription(description)));","lastModifiedDate":"2023-04-06"},{"lineNumber":214,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":217,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the description for the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":218,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":219,"author":{"gitId":"ERJUNZE"},"content":"     * @param p The predicate that tasks need to fulfil to have their description updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":220,"author":{"gitId":"ERJUNZE"},"content":"     * @param description The description to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":221,"author":{"gitId":"ERJUNZE"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":222,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":223,"author":{"gitId":"ERJUNZE"},"content":"    public String setDescription(Predicate\u003cTask\u003e p, String description) {","lastModifiedDate":"2023-04-07"},{"lineNumber":224,"author":{"gitId":"ERJUNZE"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setDescription(description)));","lastModifiedDate":"2023-04-07"},{"lineNumber":225,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":226,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":227,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":228,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the tags for the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":229,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":230,"author":{"gitId":"ERJUNZE"},"content":"     * @param ids The ids of the tasks to set the tags for.","lastModifiedDate":"2023-04-08"},{"lineNumber":231,"author":{"gitId":"ERJUNZE"},"content":"     * @param tags The list of tags to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":232,"author":{"gitId":"ERJUNZE"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":233,"author":{"gitId":"ERJUNZE"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":234,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":235,"author":{"gitId":"ERJUNZE"},"content":"    public String setTags(HashSet\u003cInteger\u003e ids, TreeSet\u003cString\u003e tags) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":236,"author":{"gitId":"ERJUNZE"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setTags(tags)));","lastModifiedDate":"2023-04-06"},{"lineNumber":237,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":240,"author":{"gitId":"ERJUNZE"},"content":"     * Sets the tags for the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":241,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":242,"author":{"gitId":"ERJUNZE"},"content":"     * @param p The predicate that tasks need to fulfil to have their tags updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":243,"author":{"gitId":"ERJUNZE"},"content":"     * @param tags The list of tags to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":244,"author":{"gitId":"ERJUNZE"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":245,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":246,"author":{"gitId":"ERJUNZE"},"content":"    public String setTags(Predicate\u003cTask\u003e p, TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":247,"author":{"gitId":"ERJUNZE"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setTags(tags)));","lastModifiedDate":"2023-04-07"},{"lineNumber":248,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":249,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":250,"author":{"gitId":"RuiShengGit"},"content":"    //@@author RuiShengGit","lastModifiedDate":"2023-04-06"},{"lineNumber":251,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":252,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the email address for the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":253,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":254,"author":{"gitId":"RuiShengGit"},"content":"     * @param ids The ids of the tasks to set the email address for.","lastModifiedDate":"2023-04-08"},{"lineNumber":255,"author":{"gitId":"RuiShengGit"},"content":"     * @param email The email address to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":256,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":257,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":258,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":259,"author":{"gitId":"RuiShengGit"},"content":"    public String setEmail(HashSet\u003cInteger\u003e ids, String email) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":260,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setEmail(email)));","lastModifiedDate":"2023-04-06"},{"lineNumber":261,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":263,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":264,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the email address for the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":265,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":266,"author":{"gitId":"RuiShengGit"},"content":"     * @param p The predicate that tasks need to fulfil to have their email address updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":267,"author":{"gitId":"RuiShengGit"},"content":"     * @param email The email address to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":269,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":270,"author":{"gitId":"RuiShengGit"},"content":"    public String setEmail(Predicate\u003cTask\u003e p, String email) {","lastModifiedDate":"2023-04-07"},{"lineNumber":271,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setEmail(email)));","lastModifiedDate":"2023-04-07"},{"lineNumber":272,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":273,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":274,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":275,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the priority level for the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":276,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":277,"author":{"gitId":"RuiShengGit"},"content":"     * @param ids The ids of the tasks to set the priority level for.","lastModifiedDate":"2023-04-08"},{"lineNumber":278,"author":{"gitId":"RuiShengGit"},"content":"     * @param priority  The priority level to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":279,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":280,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":281,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":282,"author":{"gitId":"RuiShengGit"},"content":"    public String setPriority(HashSet\u003cInteger\u003e ids, Priority priority) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":283,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setPriority(priority)));","lastModifiedDate":"2023-04-06"},{"lineNumber":284,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":287,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the priority level for the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"RuiShengGit"},"content":"     * @param p The predicate that tasks need to fulfil to have their priority level updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":290,"author":{"gitId":"RuiShengGit"},"content":"     * @param priority The priority level to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":291,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":292,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":293,"author":{"gitId":"RuiShengGit"},"content":"    public String setPriority(Predicate\u003cTask\u003e p, Priority priority) {","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setPriority(priority)));","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":298,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the completion status for the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":299,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":300,"author":{"gitId":"RuiShengGit"},"content":"     * @param ids The ids of the tasks to set the completion status for.","lastModifiedDate":"2023-04-08"},{"lineNumber":301,"author":{"gitId":"RuiShengGit"},"content":"     * @param isDone The completion status to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":302,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":303,"author":{"gitId":"RuiShengGit"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":304,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":305,"author":{"gitId":"RuiShengGit"},"content":"    public String setDone(HashSet\u003cInteger\u003e ids, boolean isDone) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":306,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setDone(isDone)));","lastModifiedDate":"2023-04-06"},{"lineNumber":307,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":308,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":309,"author":{"gitId":"RuiShengGit"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":310,"author":{"gitId":"RuiShengGit"},"content":"     * Sets the completion status for the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":311,"author":{"gitId":"RuiShengGit"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":312,"author":{"gitId":"RuiShengGit"},"content":"     * @param p The predicate that tasks need to fulfil to have their completion status updated.","lastModifiedDate":"2023-04-08"},{"lineNumber":313,"author":{"gitId":"RuiShengGit"},"content":"     * @param isDone The completion status to set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":314,"author":{"gitId":"RuiShengGit"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":315,"author":{"gitId":"RuiShengGit"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"RuiShengGit"},"content":"    public String setDone(Predicate\u003cTask\u003e p, boolean isDone) {","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"RuiShengGit"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setDone(isDone)));","lastModifiedDate":"2023-04-07"},{"lineNumber":318,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":319,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":320,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"clement559"},"content":"     * Sets deadline for the task ids provided.","lastModifiedDate":"2023-04-08"},{"lineNumber":323,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":324,"author":{"gitId":"clement559"},"content":"     * @param ids The ids of the tasks to set the deadline for.","lastModifiedDate":"2023-04-08"},{"lineNumber":325,"author":{"gitId":"clement559"},"content":"     * @param deadline The deadline to be set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":326,"author":{"gitId":"clement559"},"content":"     * @return A stream of tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":327,"author":{"gitId":"clement559"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":328,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":329,"author":{"gitId":"clement559"},"content":"    public String setDeadline(HashSet\u003cInteger\u003e ids, LocalDateTime deadline) throws InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":330,"author":{"gitId":"clement559"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setDeadline(deadline)));","lastModifiedDate":"2023-04-06"},{"lineNumber":331,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":332,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":333,"author":{"gitId":"clement559"},"content":"    public String setDeadline(Predicate\u003cTask\u003e p, LocalDateTime deadline) {","lastModifiedDate":"2023-04-07"},{"lineNumber":334,"author":{"gitId":"clement559"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setDeadline(deadline)));","lastModifiedDate":"2023-04-07"},{"lineNumber":335,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":336,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":337,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"clement559"},"content":"     * Sets repeat duration for the task ids provided if the task contains a deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":339,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"clement559"},"content":"     * @param ids The ids of the tasks to set the repeat duration for.","lastModifiedDate":"2023-04-08"},{"lineNumber":341,"author":{"gitId":"clement559"},"content":"     * @param repeatTimes The repeat duration to be set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":342,"author":{"gitId":"clement559"},"content":"     * @return A string of all the targeted tasks","lastModifiedDate":"2023-04-08"},{"lineNumber":343,"author":{"gitId":"clement559"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":344,"author":{"gitId":"clement559"},"content":"     * @throws InvalidDateException If the task with the provided ids does not have a deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":345,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":346,"author":{"gitId":"clement559"},"content":"    public String setRepeatTimes(HashSet\u003cInteger\u003e ids, int repeatTimes)","lastModifiedDate":"2023-04-08"},{"lineNumber":347,"author":{"gitId":"clement559"},"content":"            throws InvalidDateException, InvalidIdException {","lastModifiedDate":"2023-04-06"},{"lineNumber":348,"author":{"gitId":"clement559"},"content":"        Task noDeadlineTask \u003d getTasks(ids).filter(task -\u003e task.getDeadline() \u003d\u003d null).findFirst().orElse(null);","lastModifiedDate":"2023-04-06"},{"lineNumber":349,"author":{"gitId":"clement559"},"content":"        if (noDeadlineTask !\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":350,"author":{"gitId":"clement559"},"content":"            throw new InvalidDateException(\"Task with ID \" + noDeadlineTask.id + \" has no deadline.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":351,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":352,"author":{"gitId":"clement559"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.setRepeatTimes(repeatTimes)));","lastModifiedDate":"2023-04-08"},{"lineNumber":353,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":354,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":355,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":356,"author":{"gitId":"clement559"},"content":"     * Sets repeat duration for the task ids provided if the task contains a deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":357,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":358,"author":{"gitId":"clement559"},"content":"     * @param p The ids of the tasks to set the repeat duration for.","lastModifiedDate":"2023-04-08"},{"lineNumber":359,"author":{"gitId":"clement559"},"content":"     * @param repeatTimes The repeat duration to be set for the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":360,"author":{"gitId":"clement559"},"content":"     * @return A string of all the targeted tasks","lastModifiedDate":"2023-04-08"},{"lineNumber":361,"author":{"gitId":"clement559"},"content":"     * @throws InvalidDateException If the task with the provided ids does not have a deadline.","lastModifiedDate":"2023-04-08"},{"lineNumber":362,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":363,"author":{"gitId":"clement559"},"content":"    public String setRepeatTimes(Predicate\u003cTask\u003e p, int repeatTimes) throws InvalidDateException {","lastModifiedDate":"2023-04-08"},{"lineNumber":364,"author":{"gitId":"clement559"},"content":"        Task noDeadlineTask \u003d tasks.values().stream().filter(p).","lastModifiedDate":"2023-04-06"},{"lineNumber":365,"author":{"gitId":"clement559"},"content":"                filter(task -\u003e task.getDeadline() \u003d\u003d null).findFirst().orElse(null);","lastModifiedDate":"2023-04-06"},{"lineNumber":366,"author":{"gitId":"clement559"},"content":"        if (noDeadlineTask !\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":367,"author":{"gitId":"clement559"},"content":"            throw new InvalidDateException(\"Task with ID \" + noDeadlineTask.id + \" has no deadline.\");","lastModifiedDate":"2023-04-06"},{"lineNumber":368,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":369,"author":{"gitId":"clement559"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.setRepeatTimes(repeatTimes)));","lastModifiedDate":"2023-04-08"},{"lineNumber":370,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":371,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":372,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-04-07"},{"lineNumber":373,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":374,"author":{"gitId":"jeromeongithub"},"content":"     * Adds the given tags to the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":375,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":376,"author":{"gitId":"jeromeongithub"},"content":"     * @param ids The ids of the tasks to add the tags to.","lastModifiedDate":"2023-04-08"},{"lineNumber":377,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The list of tags to add to the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":378,"author":{"gitId":"jeromeongithub"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":379,"author":{"gitId":"jeromeongithub"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":380,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":381,"author":{"gitId":"jeromeongithub"},"content":"    public String addTags(HashSet\u003cInteger\u003e ids, TreeSet\u003cString\u003e tags) throws InvalidIdException {","lastModifiedDate":"2023-04-07"},{"lineNumber":382,"author":{"gitId":"jeromeongithub"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.addTags(tags)));","lastModifiedDate":"2023-04-07"},{"lineNumber":383,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":384,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":385,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":386,"author":{"gitId":"jeromeongithub"},"content":"     * Adds the given tags to the tasks fulfilling the given predicate.","lastModifiedDate":"2023-04-08"},{"lineNumber":387,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":388,"author":{"gitId":"jeromeongithub"},"content":"     * @param p The predicate that tasks need to fulfil to have tags added to them.","lastModifiedDate":"2023-04-08"},{"lineNumber":389,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The list of tags to add to the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":390,"author":{"gitId":"jeromeongithub"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":391,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":392,"author":{"gitId":"jeromeongithub"},"content":"    public String addTags(Predicate\u003cTask\u003e p, TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":393,"author":{"gitId":"jeromeongithub"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.addTags(tags)));","lastModifiedDate":"2023-04-07"},{"lineNumber":394,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":395,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":396,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":397,"author":{"gitId":"jeromeongithub"},"content":"     * Removes the given tags from the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":398,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":399,"author":{"gitId":"jeromeongithub"},"content":"     * @param ids The ids of the tasks to remove the tags from.","lastModifiedDate":"2023-04-08"},{"lineNumber":400,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The list of tags to remove from the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":401,"author":{"gitId":"jeromeongithub"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"jeromeongithub"},"content":"     * @throws InvalidIdException If there is no task with any of the provided ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"jeromeongithub"},"content":"    public String removeTags(HashSet\u003cInteger\u003e ids, TreeSet\u003cString\u003e tags) throws InvalidIdException {","lastModifiedDate":"2023-04-07"},{"lineNumber":405,"author":{"gitId":"jeromeongithub"},"content":"        return joinStringStream(getTasks(ids).map(task -\u003e task.removeTags(tags)));","lastModifiedDate":"2023-04-07"},{"lineNumber":406,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":407,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":408,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"jeromeongithub"},"content":"     * Removes the given tags from the tasks with the given ids.","lastModifiedDate":"2023-04-08"},{"lineNumber":410,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":411,"author":{"gitId":"jeromeongithub"},"content":"     * @param p The predicate that tasks need to fulfil to have tags removed from them.","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"jeromeongithub"},"content":"     * @param tags The list of tags to remove from the tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":413,"author":{"gitId":"jeromeongithub"},"content":"     * @return A string of all the targeted tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":414,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":415,"author":{"gitId":"jeromeongithub"},"content":"    public String removeTags(Predicate\u003cTask\u003e p, TreeSet\u003cString\u003e tags) {","lastModifiedDate":"2023-04-07"},{"lineNumber":416,"author":{"gitId":"jeromeongithub"},"content":"        return joinStringStream(tasks.values().stream().filter(p).map(task -\u003e task.removeTags(tags)));","lastModifiedDate":"2023-04-07"},{"lineNumber":417,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":418,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":419,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":420,"author":{"gitId":"jeromeongithub"},"content":"     * Checks if this task list is still valid after loading it from the save file.","lastModifiedDate":"2023-04-08"},{"lineNumber":421,"author":{"gitId":"jeromeongithub"},"content":"     * Certain attributes if deleted or edited to invalid values will cause the task list to be invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":422,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":423,"author":{"gitId":"jeromeongithub"},"content":"     * @return If this task list is still valid.","lastModifiedDate":"2023-04-08"},{"lineNumber":424,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":425,"author":{"gitId":"jeromeongithub"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-04-08"},{"lineNumber":426,"author":{"gitId":"jeromeongithub"},"content":"        if (!tasks.isEmpty() \u0026\u0026 tasks.lastKey() \u003e allocatedIds) {","lastModifiedDate":"2023-04-09"},{"lineNumber":427,"author":{"gitId":"jeromeongithub"},"content":"            // Cannot have id larger than number of allocated ids","lastModifiedDate":"2023-04-08"},{"lineNumber":428,"author":{"gitId":"jeromeongithub"},"content":"            return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":429,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":430,"author":{"gitId":"jeromeongithub"},"content":"        for (Map.Entry\u003cInteger, Task\u003e e : tasks.entrySet()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":431,"author":{"gitId":"jeromeongithub"},"content":"            // Id key must match the task id","lastModifiedDate":"2023-04-08"},{"lineNumber":432,"author":{"gitId":"jeromeongithub"},"content":"            if (e.getKey() !\u003d e.getValue().getId() || !e.getValue().isValid()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":433,"author":{"gitId":"jeromeongithub"},"content":"                return false;","lastModifiedDate":"2023-04-08"},{"lineNumber":434,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":435,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-08"},{"lineNumber":436,"author":{"gitId":"jeromeongithub"},"content":"        return true;","lastModifiedDate":"2023-04-08"},{"lineNumber":437,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-08"},{"lineNumber":438,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":439,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-06"},{"lineNumber":440,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":441,"author":{"gitId":"clement559"},"content":"     * Checks through the list of tasks if there are any new repeating tasks to be created.","lastModifiedDate":"2023-04-08"},{"lineNumber":442,"author":{"gitId":"clement559"},"content":"     * Creates the new tasks if the original deadline of the task has passed.","lastModifiedDate":"2023-04-08"},{"lineNumber":443,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":444,"author":{"gitId":"clement559"},"content":"     * @param config Configuration file containing repeat frequency specified by the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":445,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":446,"author":{"gitId":"clement559"},"content":"    public void checkRepeatingTasks(Config config) {","lastModifiedDate":"2023-04-05"},{"lineNumber":447,"author":{"gitId":"clement559"},"content":"        ArrayList\u003cTask\u003e tasksToBeAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":448,"author":{"gitId":"clement559"},"content":"        for (Task task : tasks.values()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":449,"author":{"gitId":"clement559"},"content":"            int repeatTimes \u003d task.getRepeatTimes();","lastModifiedDate":"2023-04-08"},{"lineNumber":450,"author":{"gitId":"clement559"},"content":"            LocalDateTime deadline \u003d task.getDeadline();","lastModifiedDate":"2023-04-04"},{"lineNumber":451,"author":{"gitId":"clement559"},"content":"            // Check if this is a recurring task that is past its deadline","lastModifiedDate":"2023-04-04"},{"lineNumber":452,"author":{"gitId":"clement559"},"content":"            if (repeatTimes \u003d\u003d 0 || !task.isDue()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":453,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-04-04"},{"lineNumber":454,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":455,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":456,"author":{"gitId":"clement559"},"content":"            // Remove recur duration from this task to avoid duplicates on next check","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"clement559"},"content":"            task.setRepeatTimes(0);","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"clement559"},"content":"            while (repeatTimes \u003e 0 \u0026\u0026 !deadline.isAfter(LocalDateTime.now())) {","lastModifiedDate":"2023-04-08"},{"lineNumber":459,"author":{"gitId":"clement559"},"content":"                // Calculate new deadline and recur duration","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"clement559"},"content":"                deadline \u003d deadline.plusDays(config.getRepeatFrequency());","lastModifiedDate":"2023-04-05"},{"lineNumber":461,"author":{"gitId":"clement559"},"content":"                repeatTimes--;","lastModifiedDate":"2023-04-08"},{"lineNumber":462,"author":{"gitId":"clement559"},"content":"                // Hold new task in temp array to avoid concurrent modification exception","lastModifiedDate":"2023-04-04"},{"lineNumber":463,"author":{"gitId":"clement559"},"content":"                tasksToBeAdded.add(new Task(++allocatedIds, task.getDescription(), deadline,","lastModifiedDate":"2023-04-08"},{"lineNumber":464,"author":{"gitId":"clement559"},"content":"                        task.getEmail(), task.getTags(), 0, task.getPriority()));","lastModifiedDate":"2023-04-04"},{"lineNumber":465,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":466,"author":{"gitId":"clement559"},"content":"            tasksToBeAdded.get(tasksToBeAdded.size() - 1).setRepeatTimes(repeatTimes);","lastModifiedDate":"2023-04-08"},{"lineNumber":467,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":468,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":469,"author":{"gitId":"clement559"},"content":"        for (Task task : tasksToBeAdded) {","lastModifiedDate":"2023-04-04"},{"lineNumber":470,"author":{"gitId":"clement559"},"content":"            addTask(task);","lastModifiedDate":"2023-04-04"},{"lineNumber":471,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":472,"author":{"gitId":"clement559"},"content":"        config.setLastChecked(LocalDateTime.now());","lastModifiedDate":"2023-04-05"},{"lineNumber":473,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":474,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeromeongithub":68,"KedrianLoh":71,"ERJUNZE":142,"RuiShengGit":72,"clement559":121}},{"path":"src/main/java/seedu/todolist/storage/LocalDateTimeAdapter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.storage;","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":" * A class for serializing and deserializing LocalDateTime objects since gson does not support that.","lastModifiedDate":"2023-04-08"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"class LocalDateTimeAdapter implements JsonSerializer\u003cLocalDateTime\u003e, JsonDeserializer\u003cLocalDateTime\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"    public JsonElement serialize(LocalDateTime localDateTime, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"        return new JsonPrimitive(localDateTime.format(Formats.TIME_OUT_SAVE_FORMATTER));","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"    public LocalDateTime deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"            throws JsonParseException {","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"        return LocalDateTime.parse(json.getAsString(), Formats.TIME_IN_FORMATTER);","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"jeromeongithub":31}},{"path":"src/main/java/seedu/todolist/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.stream.JsonReader;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedLoadConfigException;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedLoadDataException;","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedSaveException;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"import java.io.File;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":" * A class for saving the task list as a text file and loading it.","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"public class Storage {","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"    public static final String DEFAULT_DATA_PATH \u003d \"./data.json\";","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"    public static final String DEFAULT_CONFIG_PATH \u003d \"./config.json\";","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"    public static final String INVALID_DATA_BACKUP_PATH \u003d \"./invalid_data.json\";","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"    public static final String INVALID_CONFIG_BACKUP_PATH \u003d \"./invalid_config.json\";","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"    private File dataFile;","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"    private File configFile;","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"    private Gson gson;","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"    public Storage() {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"        this(DEFAULT_DATA_PATH, DEFAULT_CONFIG_PATH);","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"    public Storage(String dataPath, String configPath) {","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"        assert dataPath !\u003d null : \"NULL filepath was given\";","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"        dataFile \u003d new File(dataPath);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"        configFile \u003d new File(configPath);","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"        gson \u003d new GsonBuilder().setPrettyPrinting().","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"                registerTypeAdapter(LocalDateTime.class, new LocalDateTimeAdapter()).create();","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"    private void writeToFile(File file, String textToAdd) throws IOException {","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"        // Try-with-resources to auto close","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"        try (FileWriter fw \u003d new FileWriter(file)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"    private void copyToBackup(File file, String backupPath) throws IOException {","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"        Files.copy(file.toPath(), Paths.get(backupPath), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"     * Writes the current task list to the local save file.","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"     * @param taskList The task list being saved.","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"     * @throws FailedSaveException If the save file cannot be saved.","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"    public void save(TaskList taskList, Config config) throws FailedSaveException {","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"            writeToFile(dataFile, gson.toJson(taskList));","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"            writeToFile(configFile, gson.toJson(config));","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"            throw new FailedSaveException();","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"     * Loads the task list from the local save file.","lastModifiedDate":"2023-04-08"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"     * @return The loaded task list if it is not empty. Otherwise, a newly created task list is returned.","lastModifiedDate":"2023-04-09"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"     * @throws FileNotFoundException If no saved file was found.","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"     * @throws FailedLoadDataException If the task list could not be loaded because the save file is invalid.","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"    public TaskList loadData() throws FileNotFoundException, FailedLoadDataException {","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"            JsonReader reader \u003d new JsonReader(new FileReader(dataFile));","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"            // if the file is not empty, set the task list as the saved task list","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"            TaskList taskList \u003d gson.fromJson(reader, TaskList.class);","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"            if (taskList \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"                return new TaskList();","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"jeromeongithub"},"content":"            if (!taskList.isValid()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":93,"author":{"gitId":"jeromeongithub"},"content":"                throw new JsonParseException(\"Save file has been modified to an invalid state!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":95,"author":{"gitId":"jeromeongithub"},"content":"            return taskList;","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"jeromeongithub"},"content":"        } catch (JsonParseException | DateTimeParseException e1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":97,"author":{"gitId":"jeromeongithub"},"content":"            try {","lastModifiedDate":"2023-04-06"},{"lineNumber":98,"author":{"gitId":"jeromeongithub"},"content":"                copyToBackup(dataFile, INVALID_DATA_BACKUP_PATH);","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"jeromeongithub"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-04-06"},{"lineNumber":100,"author":{"gitId":"jeromeongithub"},"content":"                // Do nothing if the invalid data file cannot be backed up","lastModifiedDate":"2023-04-06"},{"lineNumber":101,"author":{"gitId":"jeromeongithub"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"jeromeongithub"},"content":"            throw new FailedLoadDataException();","lastModifiedDate":"2023-04-06"},{"lineNumber":103,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"clement559"},"content":"    //@@author clement559","lastModifiedDate":"2023-04-06"},{"lineNumber":107,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":108,"author":{"gitId":"clement559"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":109,"author":{"gitId":"clement559"},"content":"     * Loads the configuration settings from the local config file.","lastModifiedDate":"2023-04-08"},{"lineNumber":110,"author":{"gitId":"clement559"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":111,"author":{"gitId":"clement559"},"content":"     * @throws FileNotFoundException If the config file cannot be found.","lastModifiedDate":"2023-04-08"},{"lineNumber":112,"author":{"gitId":"clement559"},"content":"     * @throws FailedLoadConfigException If the config filed cannot be loaded.","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"clement559"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":114,"author":{"gitId":"clement559"},"content":"    public Config loadConfig() throws FileNotFoundException, FailedLoadConfigException {","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"clement559"},"content":"            JsonReader reader \u003d new JsonReader(new FileReader(configFile));","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"clement559"},"content":"            Config config \u003d gson.fromJson(reader, Config.class);","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"clement559"},"content":"            if (config \u003d\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":119,"author":{"gitId":"clement559"},"content":"                return new Config();","lastModifiedDate":"2023-04-06"},{"lineNumber":120,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"clement559"},"content":"            if (!config.isValid()) {","lastModifiedDate":"2023-04-08"},{"lineNumber":122,"author":{"gitId":"clement559"},"content":"                throw new JsonParseException(\"Config file has been modified to an invalid state!\");","lastModifiedDate":"2023-04-08"},{"lineNumber":123,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-08"},{"lineNumber":124,"author":{"gitId":"clement559"},"content":"            return config;","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"clement559"},"content":"        } catch (JsonParseException | DateTimeParseException e1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"clement559"},"content":"                copyToBackup(configFile, INVALID_CONFIG_BACKUP_PATH);","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"clement559"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"clement559"},"content":"                // Do nothing if the invalid config file cannot be backed up","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"clement559"},"content":"            throw new FailedLoadConfigException();","lastModifiedDate":"2023-04-05"},{"lineNumber":132,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":133,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jeromeongithub":105,"clement559":29}},{"path":"src/main/java/seedu/todolist/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.ui;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"/**","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":" * Ui class for getting input from the user and displaying the program\u0027s output to the user.","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"ERJUNZE"},"content":" */","lastModifiedDate":"2023-04-08"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"public class Ui {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"    private final Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"    public void close() {","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"        input.close();","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"        return input.nextLine();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"    public boolean getUserConfirmation() {","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"        System.out.print(Messages.CONFIRM);","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"        return input.nextLine().equals(\"YES\");","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"ERJUNZE"},"content":"     * Prints out the given strings with a newline separating them.","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"     * @param strings The strings to print out.","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"    private void println(String... strings) {","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"        System.out.println(Messages.LINE);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        for (String string : strings) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"            System.out.println(string);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"        System.out.println(Messages.LINE);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"     * Generates a grammar-appropriate string based on the number of tasks in the task list,","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"     * such as \"0 tasks\", \"1 task\", \"2 tasks\".","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"     * @param taskListSize The size of the task list.","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"     * @return The task count string.","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"    private String generateTaskCountString(int taskListSize) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        return taskListSize + \" task\" + (taskListSize \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.START);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"    public void printNewConfigMessage() {","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.NEW_CONFIG);","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"    public void printLoadConfigMessage() {","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.LOAD_CONFIG);","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"    public void printNewSaveMessage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.NEW_SAVE);","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"    public void printLoadSaveMessage(int taskListSize) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.LOAD_SAVE + generateTaskCountString(taskListSize));","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.EXIT);","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"    public void printAddTaskMessage(String taskString) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.ADD_TASK, taskString);","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"    public void printMarkTaskMessage(String taskString) {","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.MARK_TASK, Messages.LINE, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"    public void printUnmarkTaskMessage(String taskString) {","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.UNMARK_TASK, Messages.LINE, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"    public void printDeleteTaskMessage(String taskString) {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.DELETE_TASK, Messages.LINE, taskString);","lastModifiedDate":"2023-04-08"},{"lineNumber":90,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"    public void printEditTaskMessage(String parameterType, String newValue, String taskString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"        println(String.format(Messages.EDIT_TASK, parameterType, newValue), Messages.LINE, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"    public void printEditTagsMessage(String action, String preposition, String tagString, String taskString) {","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"        println(String.format(Messages.EDIT_TAGS_TASK, action, tagString, preposition), taskString);","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"    public void printEditDeleteTaskMessage(String parameterType, String taskString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"        println(String.format(Messages.EDIT_DELETE_TASK, parameterType), Messages.LINE, taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"clement559"},"content":"    public void printEditConfigMessage(String taskString) {","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"        println(String.format(Messages.EDIT_CONFIG), taskString);","lastModifiedDate":"2023-04-06"},{"lineNumber":106,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"clement559"},"content":"    public void printConfigInfo(String taskString) {","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"clement559"},"content":"        println(String.format(Messages.CONFIG_INFO), taskString);","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"ERJUNZE"},"content":"    public void printFilteredNoTasksFoundMessage() {","lastModifiedDate":"2023-04-06"},{"lineNumber":113,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.FILTERED_NONE);","lastModifiedDate":"2023-04-06"},{"lineNumber":114,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":115,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":116,"author":{"gitId":"ERJUNZE"},"content":"    public void printTaskList(int taskListSize, String taskListString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ERJUNZE"},"content":"        if (taskListSize \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ERJUNZE"},"content":"            println(Messages.LIST_EMPTY);","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":120,"author":{"gitId":"ERJUNZE"},"content":"            println(Messages.LIST_TASKS + generateTaskCountString(taskListSize), Messages.LINE, taskListString);","lastModifiedDate":"2023-04-06"},{"lineNumber":121,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"ERJUNZE"},"content":"    public void printGetFullInfoMessage(String infoString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"ERJUNZE"},"content":"        println(Messages.FULL_INFO, Messages.LINE, infoString);","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"ERJUNZE"},"content":"    public void printGetTagsMessage(int tagCount, String tagsString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"ERJUNZE"},"content":"        if (tagCount \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"ERJUNZE"},"content":"            println(Messages.TAGS_EMPTY);","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"ERJUNZE"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"ERJUNZE"},"content":"            println(Messages.TAGS_INFO, tagsString);","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"ERJUNZE"},"content":"    public void printError(Exception e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"ERJUNZE"},"content":"        println(e.getMessage());","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"jeromeongithub"},"content":"    //@@author jeromeongithub","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"jeromeongithub"},"content":"    /**","lastModifiedDate":"2023-04-08"},{"lineNumber":142,"author":{"gitId":"jeromeongithub"},"content":"     * Displays a summary of tasks due this week, as well as a progress bar for those tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":143,"author":{"gitId":"jeromeongithub"},"content":"     * \"This week\" is defined as from this Monday to this Sunday.","lastModifiedDate":"2023-04-08"},{"lineNumber":144,"author":{"gitId":"jeromeongithub"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":145,"author":{"gitId":"jeromeongithub"},"content":"     * @param completedTasksThisWeek The number of tasks due this week that are completed.","lastModifiedDate":"2023-04-08"},{"lineNumber":146,"author":{"gitId":"jeromeongithub"},"content":"     * @param tasksThisWeek The total number of tasks due this week.","lastModifiedDate":"2023-04-08"},{"lineNumber":147,"author":{"gitId":"jeromeongithub"},"content":"     * @param totalSections The total number of sections in the progress bar.","lastModifiedDate":"2023-04-08"},{"lineNumber":148,"author":{"gitId":"jeromeongithub"},"content":"     * @param taskListString The string of summarised tasks.","lastModifiedDate":"2023-04-08"},{"lineNumber":149,"author":{"gitId":"jeromeongithub"},"content":"     */","lastModifiedDate":"2023-04-08"},{"lineNumber":150,"author":{"gitId":"jeromeongithub"},"content":"    public void printProgressBar(int completedTasksThisWeek, int tasksThisWeek,","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"jeromeongithub"},"content":"                                 int totalSections, String taskListString) {","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"jeromeongithub"},"content":"        if (tasksThisWeek \u003d\u003d 0) {","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"jeromeongithub"},"content":"            println(\"You have no tasks due this week!\");","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"jeromeongithub"},"content":"            return;","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"jeromeongithub"},"content":"        double progress \u003d (double) completedTasksThisWeek / tasksThisWeek;","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"jeromeongithub"},"content":"        int completedSections \u003d (int) (progress * totalSections);","lastModifiedDate":"2023-03-25"},{"lineNumber":159,"author":{"gitId":"jeromeongithub"},"content":"        int incompleteSections \u003d totalSections - completedSections;","lastModifiedDate":"2023-03-25"},{"lineNumber":160,"author":{"gitId":"jeromeongithub"},"content":"        DecimalFormat twoDecimalPlaces \u003d new DecimalFormat(\"0.00\");","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"jeromeongithub"},"content":"        String progressPercentage \u003d twoDecimalPlaces.format(100 * progress);","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"jeromeongithub"},"content":"        println(\"You have completed \" + progressPercentage + \"% of the \" + generateTaskCountString(tasksThisWeek)","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"jeromeongithub"},"content":"                + \" due this week!\", \"Progress: |\" + \"\u003d\".repeat(completedSections)","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"jeromeongithub"},"content":"                + \"-\".repeat(incompleteSections) + \"|\", Messages.LINE, taskListString);","lastModifiedDate":"2023-04-08"},{"lineNumber":165,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"RuiShengGit"},"content":"    //@@author RuiShengGit","lastModifiedDate":"2023-04-07"},{"lineNumber":168,"author":{"gitId":"RuiShengGit"},"content":"    public void printHelpList(String helpMessage) {","lastModifiedDate":"2023-04-08"},{"lineNumber":169,"author":{"gitId":"RuiShengGit"},"content":"        println(helpMessage);","lastModifiedDate":"2023-04-08"},{"lineNumber":170,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":172,"author":{"gitId":"RuiShengGit"},"content":"    public void printResetMessage(boolean reset) {","lastModifiedDate":"2023-04-07"},{"lineNumber":173,"author":{"gitId":"RuiShengGit"},"content":"        println(reset ? Messages.RESET : Messages.CANCEL);","lastModifiedDate":"2023-04-07"},{"lineNumber":174,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":175,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jeromeongithub":30,"ERJUNZE":127,"RuiShengGit":11,"clement559":7}},{"path":"src/test/java/seedu/todolist/logic/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ERJUNZE"},"content":"package seedu.todolist.logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ERJUNZE"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.constants.Formats;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidDateException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidDurationException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidEmailFormatException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidIdException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.exception.InvalidPriorityException;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.PassedDateException;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"ERJUNZE"},"content":"import seedu.todolist.model.Priority;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ERJUNZE"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ERJUNZE"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ERJUNZE"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ERJUNZE"},"content":"class ParserUtilTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ERJUNZE"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ERJUNZE"},"content":"    void parseIdTest() {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ERJUNZE"},"content":"        // Invalid ids should throw an exception","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ERJUNZE"},"content":"        final String invalidIds \u003d \"2.5 abc\";","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ERJUNZE"},"content":"        assertThrows(InvalidIdException.class, () -\u003e ParserUtil.parseId(invalidIds));","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"ERJUNZE"},"content":"        // Valid ids get parsed successfully","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ERJUNZE"},"content":"        final String validIds \u003d \"3 17 84725\";","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ERJUNZE"},"content":"        final HashSet\u003cInteger\u003e validIdHashSet \u003d new HashSet\u003c\u003e(Arrays.asList(3, 17, 84725));","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parseId(validIds), validIdHashSet);","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidIdException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Valid id was not successfully parsed.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ERJUNZE"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ERJUNZE"},"content":"    void parseDeadlineTest() {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ERJUNZE"},"content":"        // Invalid dates should throw an exception","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ERJUNZE"},"content":"        final String[] invalidDeadlines \u003d {\"30/02/2023 16:40\", \"lalala\", \"10-50-2032 22:06\", \"\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ERJUNZE"},"content":"        for (String invalidDeadline : invalidDeadlines) {","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ERJUNZE"},"content":"            assertThrows(InvalidDateException.class, () -\u003e ParserUtil.parseDeadline(invalidDeadline));","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ERJUNZE"},"content":"        // Valid dates get parsed successfully","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ERJUNZE"},"content":"        final LocalDateTime now \u003d LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ERJUNZE"},"content":"        final LocalDateTime[] validDeadlines \u003d {now.plusDays(1), now.plusYears(10)};","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ERJUNZE"},"content":"        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(Formats.TIME_IN_1);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ERJUNZE"},"content":"            for (LocalDateTime validDeadline : validDeadlines) {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ERJUNZE"},"content":"                assertEquals(ParserUtil.parseDeadline(validDeadline.format(inputFormatter)), validDeadline);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Valid deadline was not successfully parsed.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        } catch (PassedDateException e) {","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"            fail(\"Valid dateline was not successfully parsed.\");","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ERJUNZE"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ERJUNZE"},"content":"    void parseEmailTest() {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ERJUNZE"},"content":"        // Invalid emails should throw an exception","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ERJUNZE"},"content":"        final String[] invalidEmails \u003d {\"a@b@c@d.com\", \"example.com\", \"hello\", \"\", \"where@how\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ERJUNZE"},"content":"        for (String invalidEmail : invalidEmails) {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ERJUNZE"},"content":"            assertThrows(InvalidEmailFormatException.class, () -\u003e ParserUtil.parseEmail(invalidEmail));","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ERJUNZE"},"content":"        // Valid emails get parsed successfully","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ERJUNZE"},"content":"        final String[] validEmails \u003d {\"xyz@xyz.com\", \"Idk@lalala.com\", \"legit@gmail.com\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ERJUNZE"},"content":"            for (String validEmail : validEmails) {","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ERJUNZE"},"content":"                assertEquals(ParserUtil.parseEmail(validEmail), validEmail);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidEmailFormatException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Valid email address was not successfully parsed.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"ERJUNZE"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"ERJUNZE"},"content":"    void parseRepeatTimesTest() {","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"ERJUNZE"},"content":"        // Invalid repeat durations should throw an exception","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"ERJUNZE"},"content":"        final String[] invalidDurations \u003d {\"$^8g\", \"1.36\", \"vb 2s\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ERJUNZE"},"content":"        for (String invalidDuration : invalidDurations) {","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ERJUNZE"},"content":"            assertThrows(InvalidDurationException.class,","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ERJUNZE"},"content":"                    () -\u003e ParserUtil.parseRepeatTimes(invalidDuration, LocalDateTime.now()));","lastModifiedDate":"2023-04-08"},{"lineNumber":89,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"ERJUNZE"},"content":"        // If repeat duration is not provided, it should default to 0","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parseRepeatTimes(null, LocalDateTime.now()), 0);","lastModifiedDate":"2023-04-08"},{"lineNumber":94,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidDateException | InvalidDurationException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Missing repeat duration was not automatically parsed as 0.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ERJUNZE"},"content":"        // Valid repeat durations get parsed successfully","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"ERJUNZE"},"content":"        final int[] validDurations \u003d {3, 17, 84725};","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"ERJUNZE"},"content":"            for (int validDuration : validDurations) {","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"ERJUNZE"},"content":"                assertEquals(ParserUtil.parseRepeatTimes(Integer.toString(validDuration),","lastModifiedDate":"2023-04-08"},{"lineNumber":103,"author":{"gitId":"ERJUNZE"},"content":"                        LocalDateTime.now()), validDuration);","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ERJUNZE"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidDateException | InvalidDurationException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Valid repeat duration was not successfully parsed.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"ERJUNZE"},"content":"        // Missing deadline should throw an exception","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"ERJUNZE"},"content":"        for (int validDuration : validDurations) {","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"ERJUNZE"},"content":"            assertThrows(InvalidDateException.class,","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ERJUNZE"},"content":"                    () -\u003e ParserUtil.parseRepeatTimes(Integer.toString(validDuration), null));","lastModifiedDate":"2023-04-08"},{"lineNumber":113,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":116,"author":{"gitId":"ERJUNZE"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":117,"author":{"gitId":"ERJUNZE"},"content":"    void parsePriorityTest() {","lastModifiedDate":"2023-04-09"},{"lineNumber":118,"author":{"gitId":"ERJUNZE"},"content":"        // Invalid priority levels should throw an exception","lastModifiedDate":"2023-04-09"},{"lineNumber":119,"author":{"gitId":"ERJUNZE"},"content":"        final String[] invalidPriorities \u003d {\"4\", \"1.2\", \"hello\", \"?]|\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":120,"author":{"gitId":"ERJUNZE"},"content":"        for (String invalidPriority : invalidPriorities) {","lastModifiedDate":"2023-04-09"},{"lineNumber":121,"author":{"gitId":"ERJUNZE"},"content":"            assertThrows(InvalidPriorityException.class, () -\u003e ParserUtil.parsePriority(invalidPriority));","lastModifiedDate":"2023-04-09"},{"lineNumber":122,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":123,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":124,"author":{"gitId":"ERJUNZE"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":125,"author":{"gitId":"ERJUNZE"},"content":"            // No priority provided gets converted to priority level None","lastModifiedDate":"2023-04-09"},{"lineNumber":126,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parsePriority(null), Priority.NONE);","lastModifiedDate":"2023-04-09"},{"lineNumber":127,"author":{"gitId":"ERJUNZE"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":128,"author":{"gitId":"ERJUNZE"},"content":"            // Valid priority levels get parsed successfully","lastModifiedDate":"2023-04-09"},{"lineNumber":129,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parsePriority(\"0\"), Priority.NONE);","lastModifiedDate":"2023-04-09"},{"lineNumber":130,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parsePriority(\"1\"), Priority.LOW);","lastModifiedDate":"2023-04-09"},{"lineNumber":131,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parsePriority(\"2\"), Priority.MEDIUM);","lastModifiedDate":"2023-04-09"},{"lineNumber":132,"author":{"gitId":"ERJUNZE"},"content":"            assertEquals(ParserUtil.parsePriority(\"3\"), Priority.HIGH);","lastModifiedDate":"2023-04-09"},{"lineNumber":133,"author":{"gitId":"ERJUNZE"},"content":"        } catch (InvalidPriorityException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":134,"author":{"gitId":"ERJUNZE"},"content":"            fail(\"Valid priority level was not successfully parsed.\");","lastModifiedDate":"2023-04-09"},{"lineNumber":135,"author":{"gitId":"ERJUNZE"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":136,"author":{"gitId":"ERJUNZE"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":137,"author":{"gitId":"ERJUNZE"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"jeromeongithub":3,"ERJUNZE":131,"clement559":3}},{"path":"src/test/java/seedu/todolist/logic/command/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"    private static final String DATE_EXAMPLE \u003d \"06-04-2000\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"    private static final String TIME_EXAMPLE \u003d \"23:59\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    private static final String REPEAT_EXAMPLE \u003d \"0\";","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"    private TaskList testList \u003d new TaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String description, String date, String time,","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"                                                           String repeatCount) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        args.put(Flags.COMMAND_ADD, description);","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        args.put(Flags.DEADLINE, date + \" \" + time);","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        args.put(Flags.REPEAT, repeatCount);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        return args;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    public void addTask_invalidDate_throwsException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        final String[] invalidDates \u003d {\"29/02/2031\", \"493430\", \"2013-12-22\", \"1023-43-22\"};","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        for (String date : invalidDates) {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"0\", date, TIME_EXAMPLE, REPEAT_EXAMPLE);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"                Command testDelete \u003d new AddTaskCommand(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"                testDelete.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"            fail(\"An edit command was successfully constructed with invalid date: \" + date);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"    public void addTask_invalidTime_throwsException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"        final String[] invalidTimes \u003d {\"1000\", \"493430\", \"9AM\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"        for (String time : invalidTimes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"0\", DATE_EXAMPLE, time, REPEAT_EXAMPLE);","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"                Command testDelete \u003d new AddTaskCommand(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"                testDelete.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"            fail(\"An edit command was successfully constructed with invalid time: \" + time);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"clement559":60}},{"path":"src/test/java/seedu/todolist/logic/command/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"//@@author RuiShengGit","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private TaskList testList;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.COMMAND_DELETE, id);","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        return args;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        String sampleTask \u003d \"add something -due 06-04-2030 23:59\";","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    public void deleteTask_emptyId_throwsException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            Command testDelete \u003d new DeleteTaskCommand(generateInputArguments(\"\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"            testDelete.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        fail(\"A delete command was successfully constructed with missing id\");","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"    public void deleteTask_invalidId_throwsException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidId \u003d {\"1000\", \"meh\", \"52.1\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"        for (String id : invalidId) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"                Command testDelete \u003d new DeleteTaskCommand(generateInputArguments(id));","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                testDelete.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"A delete command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RuiShengGit":62}},{"path":"src/test/java/seedu/todolist/logic/command/EditDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"clement559"},"content":"//@@author clement559","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"clement559"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"clement559"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"clement559"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"clement559"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"clement559"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"clement559"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"clement559"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"clement559"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"clement559"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"clement559"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"clement559"},"content":"public class EditDeadlineCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"clement559"},"content":"    private static final String DATE_EXAMPLE \u003d \"06-04-2030\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"clement559"},"content":"    private static final String TIME_EXAMPLE \u003d \"23:59\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"clement559"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"clement559"},"content":"    private TaskList testList;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"clement559"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"clement559"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id, String date, String time) {","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"clement559"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"clement559"},"content":"        args.put(Flags.COMMAND_EDIT_DEADLINE, id);","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"clement559"},"content":"        args.put(Flags.DEADLINE, date + \" \" + time);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"clement559"},"content":"        return args;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"clement559"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"clement559"},"content":"    void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"clement559"},"content":"        String sampleTask \u003d \"add something -due 02-02-2033 18:00 -rep 0\";","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"clement559"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"clement559"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"clement559"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"clement559"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"clement559"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"clement559"},"content":"    ","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"clement559"},"content":"    public void editDeadline_invalidId_throwsException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"clement559"},"content":"        final String[] invalidIdes \u003d {\"\", \"]\", \"wq\", \"7.5\", \",3\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"clement559"},"content":"        for (String id : invalidIdes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"clement559"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(id, DATE_EXAMPLE, TIME_EXAMPLE);","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"clement559"},"content":"                Command testEdit \u003d new EditDeadlineCommand(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"clement559"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"clement559"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"clement559"},"content":"            fail(\"An edit command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"clement559"},"content":"    public void editDeadline_invalidDate_throwsException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"clement559"},"content":"        final String[] invalidDates \u003d {\"31/06/2032\", \"493430\", \"2013-12-22\", \"1023-43-22\"};","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"clement559"},"content":"        for (String date : invalidDates) {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"clement559"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"0\", date, TIME_EXAMPLE);","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"clement559"},"content":"                Command testEdit \u003d new EditDeadlineCommand(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"clement559"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"clement559"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"clement559"},"content":"            fail(\"An edit command was successfully constructed with invalid date: \" + date);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"clement559"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"clement559"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"clement559"},"content":"    public void editDeadline_invalidTime_throwsException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"clement559"},"content":"        final String[] invalidTimes \u003d {\"1000\", \"493430\", \"9AM\"};","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"clement559"},"content":"        for (String time : invalidTimes) {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"clement559"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"0\", DATE_EXAMPLE, time);","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"clement559"},"content":"            try {","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"clement559"},"content":"                Command testEdit \u003d new EditDeadlineCommand(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"clement559"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"clement559"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"clement559"},"content":"                continue;","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"clement559"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"clement559"},"content":"            fail(\"An edit command was successfully constructed with invalid time: \" + time);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"clement559"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"clement559"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"clement559"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"clement559":86}},{"path":"src/test/java/seedu/todolist/logic/command/EditEmailCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"class EditEmailCommandTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    private static final String EMAIL_EXAMPLE \u003d \"username@email.com\";","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    private TaskList testList;","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id, String email) {","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.COMMAND_EDIT_EMAIL, id);","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.EDIT, email);","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"        return args;","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        String sampleTask \u003d \"add something\";","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"    public void editEmail_invalidId_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidIdes \u003d {\"1000\", \"meh\", \"52.1\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"        for (String id : invalidIdes) {","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(id, EMAIL_EXAMPLE);","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"                Command testEdit \u003d new EditEmailCommand(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"An edit command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"    public void editEmail_invalidEmail_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidEmails \u003d {\"username_email.com\", \"username@email\", \"username@email..com\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"        for (String email : invalidEmails) {","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"1\", email);","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"                Command testEdit \u003d new EditEmailCommand(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"An edit command was successfully constructed with invalid email: \" + email);","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":73}},{"path":"src/test/java/seedu/todolist/logic/command/EditPriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"class EditPriorityCommandTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    private static final String PRIORITY_EXAMPLE \u003d \"3\";","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private TaskList testList;","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id, String priority) {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.COMMAND_EDIT_PRIORITY, id);","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.EDIT, priority);","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"        return args;","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        String sampleTask \u003d \"add something\";","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"    public void editPriority_invalidId_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidIdes \u003d {\"1000\", \"meh\", \"52.1\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        for (String id : invalidIdes) {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(id, PRIORITY_EXAMPLE);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"                Command testEdit \u003d new EditPriorityCommand(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"An edit command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"    public void editPriority_invalidPriority_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidPriorityLevels \u003d {\"{\", \"4\", \"-1\", \"High\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"        for (String priority : invalidPriorityLevels) {","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"            HashMap\u003cFlags, String\u003e args \u003d generateInputArguments(\"1\", priority);","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"                Command testEdit \u003d new EditPriorityCommand(args);","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"                testEdit.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"An edit command was successfully constructed with invalid priority: \" + priority);","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":72}},{"path":"src/test/java/seedu/todolist/logic/command/ListFullInfoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KedrianLoh"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-10"},{"lineNumber":2,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":3,"author":{"gitId":"KedrianLoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-10"},{"lineNumber":4,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.Priority;","lastModifiedDate":"2023-04-10"},{"lineNumber":7,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-10"},{"lineNumber":8,"author":{"gitId":"KedrianLoh"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-10"},{"lineNumber":9,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":10,"author":{"gitId":"KedrianLoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-10"},{"lineNumber":11,"author":{"gitId":"KedrianLoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-10"},{"lineNumber":12,"author":{"gitId":"KedrianLoh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-04-10"},{"lineNumber":13,"author":{"gitId":"KedrianLoh"},"content":"import java.util.TreeSet;","lastModifiedDate":"2023-04-10"},{"lineNumber":14,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":15,"author":{"gitId":"KedrianLoh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-10"},{"lineNumber":16,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":17,"author":{"gitId":"KedrianLoh"},"content":"class ListFullInfoCommandTest {","lastModifiedDate":"2023-04-10"},{"lineNumber":18,"author":{"gitId":"KedrianLoh"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-04-10"},{"lineNumber":19,"author":{"gitId":"KedrianLoh"},"content":"    private TaskList testList;","lastModifiedDate":"2023-04-10"},{"lineNumber":20,"author":{"gitId":"KedrianLoh"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-10"},{"lineNumber":21,"author":{"gitId":"KedrianLoh"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"KedrianLoh"},"content":"    @Test","lastModifiedDate":"2023-04-10"},{"lineNumber":23,"author":{"gitId":"KedrianLoh"},"content":"    void execute_oneID_expectFullInfo() {","lastModifiedDate":"2023-04-10"},{"lineNumber":24,"author":{"gitId":"KedrianLoh"},"content":"        LocalDate date \u003d LocalDate.of(2023,3,10);","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"KedrianLoh"},"content":"        LocalTime time \u003d LocalTime.of(15,30,45);","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"KedrianLoh"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(date,time);","lastModifiedDate":"2023-04-10"},{"lineNumber":27,"author":{"gitId":"KedrianLoh"},"content":"        TreeSet\u003cString\u003e tags \u003d new TreeSet\u003c\u003e();","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"KedrianLoh"},"content":"        tags.add(\"first\");","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"KedrianLoh"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-04-10"},{"lineNumber":30,"author":{"gitId":"KedrianLoh"},"content":"        testList.addTask(\"test1\", localDateTime, \"tester@gmail.com\", tags, 0, Priority.HIGH);","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"KedrianLoh"},"content":"        try {","lastModifiedDate":"2023-04-10"},{"lineNumber":32,"author":{"gitId":"KedrianLoh"},"content":"            parser.parseCommand(\"info 1\").execute(testList, null, ui);","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"KedrianLoh"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-10"},{"lineNumber":34,"author":{"gitId":"KedrianLoh"},"content":"            fail(\"Unable to list all information with regard to task ID: 1\");","lastModifiedDate":"2023-04-10"},{"lineNumber":35,"author":{"gitId":"KedrianLoh"},"content":"        }","lastModifiedDate":"2023-04-10"},{"lineNumber":36,"author":{"gitId":"KedrianLoh"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":37,"author":{"gitId":"KedrianLoh"},"content":"}","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"KedrianLoh":37}},{"path":"src/test/java/seedu/todolist/logic/command/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"class MarkTaskCommandTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    private TaskList testList;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id) {","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.COMMAND_MARK, id);","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        return args;","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        String sampleTask \u003d \"add something -due 06-04-2030 23:59\";","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    public void markTask_emptyId_throwException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            Command testMark \u003d new MarkTaskCommand(generateInputArguments(\"\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            testMark.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"        fail(\"A mark command was successfully constructed with missing id\");","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    public void markTask_invalidId_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidId \u003d {\"1000\", \"meh\", \"52.1\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        for (String id : invalidId) {","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                Command testMark \u003d new MarkTaskCommand(generateInputArguments(id));","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"                testMark.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"A mark command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":65}},{"path":"src/test/java/seedu/todolist/logic/command/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RuiShengGit"},"content":"package seedu.todolist.logic.command;","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"RuiShengGit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.constants.Flags;","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.exception.ToDoListException;","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"RuiShengGit"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"RuiShengGit"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"RuiShengGit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"RuiShengGit"},"content":"class UnmarkTaskCommandTest {","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"RuiShengGit"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"RuiShengGit"},"content":"    private TaskList testList;","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"RuiShengGit"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"RuiShengGit"},"content":"    private HashMap\u003cFlags, String\u003e generateInputArguments(String id) {","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"RuiShengGit"},"content":"        HashMap\u003cFlags, String\u003e args \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"RuiShengGit"},"content":"        args.put(Flags.COMMAND_UNMARK, id);","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"RuiShengGit"},"content":"        return args;","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"RuiShengGit"},"content":"    @BeforeEach","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"RuiShengGit"},"content":"    void setUp() {","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"RuiShengGit"},"content":"        String sampleTask \u003d \"add something\";","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"RuiShengGit"},"content":"        testList \u003d new TaskList();","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"RuiShengGit"},"content":"            parser.parseCommand(sampleTask).execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"Failed to initialize test task list\");","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"RuiShengGit"},"content":"    public void unmarkTask_emptyId_throwException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"RuiShengGit"},"content":"        try {","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"RuiShengGit"},"content":"            Command testUnmark \u003d new UnmarkTaskCommand(generateInputArguments(\"\"));","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"RuiShengGit"},"content":"            testUnmark.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"RuiShengGit"},"content":"        } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"RuiShengGit"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"RuiShengGit"},"content":"            return;","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"RuiShengGit"},"content":"        fail(\"An Unmark command was successfully constructed with missing id\");","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"RuiShengGit"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"RuiShengGit"},"content":"    @Test","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"RuiShengGit"},"content":"    public void unmarkTask_invalidId_throwsException() {","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"RuiShengGit"},"content":"        final String[] invalidId \u003d {\"1000\", \"meh\", \"52.1\"};","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"RuiShengGit"},"content":"        for (String id : invalidId) {","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"RuiShengGit"},"content":"            try {","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"RuiShengGit"},"content":"                Command testUnmark \u003d new UnmarkTaskCommand(generateInputArguments(id));","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"RuiShengGit"},"content":"                testUnmark.execute(testList, null, ui);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"RuiShengGit"},"content":"            } catch (ToDoListException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"RuiShengGit"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"RuiShengGit"},"content":"                continue;","lastModifiedDate":"2023-04-09"},{"lineNumber":61,"author":{"gitId":"RuiShengGit"},"content":"            }","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"RuiShengGit"},"content":"            fail(\"A Unmark command was successfully constructed with invalid id: \" + id);","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"RuiShengGit"},"content":"        }","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"RuiShengGit"},"content":"    }","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"RuiShengGit"},"content":"}","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"RuiShengGit":65}},{"path":"src/test/java/seedu/todolist/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromeongithub"},"content":"//@@author jeromeongithub","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"jeromeongithub"},"content":"package seedu.todolist.storage;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"jeromeongithub"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"jeromeongithub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedLoadDataException;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.exception.FailedSaveException;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.logic.Parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.logic.command.Command;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.Config;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.model.TaskList;","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"jeromeongithub"},"content":"import seedu.todolist.ui.Ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"jeromeongithub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"jeromeongithub"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"jeromeongithub"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"jeromeongithub"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"jeromeongithub"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"jeromeongithub"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"jeromeongithub"},"content":"class StorageTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"jeromeongithub"},"content":"    private static final String PROPER_DATA_SAVE_FILE \u003d \"./src/test/data/properDataSaveFile.json\";","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"jeromeongithub"},"content":"    private static final String PROPER_CONFIG_SAVE_FILE \u003d \"./src/test/data/properConfigSaveFile.json\";","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"jeromeongithub"},"content":"    private static final String INVALID_SAVE_FILE \u003d \"./src/test/data/invalidSaveFile.json\";","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"jeromeongithub"},"content":"    private static final String TEST_DATA_FOLDER \u003d \"./src/test/data\";","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"jeromeongithub"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"jeromeongithub"},"content":"    private Config config \u003d new Config();","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"jeromeongithub"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"jeromeongithub"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"jeromeongithub"},"content":"    private Storage storage \u003d new Storage(PROPER_DATA_SAVE_FILE, PROPER_CONFIG_SAVE_FILE);","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"jeromeongithub"},"content":"    private Gson gson \u003d new GsonBuilder().setPrettyPrinting().","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"jeromeongithub"},"content":"            registerTypeAdapter(LocalDateTime.class, new LocalDateTimeAdapter()).create();","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"jeromeongithub"},"content":"    void saveData_properFilePath_success() {","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"jeromeongithub"},"content":"            String sampleInput1 \u003d \"add bubu -due 18-02-2032 18:00 -rep 0\";","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"jeromeongithub"},"content":"            Command command1 \u003d parser.parseCommand(sampleInput1);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"jeromeongithub"},"content":"            command1.execute(taskList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"jeromeongithub"},"content":"            String sampleInput2 \u003d \"add baba -due 18-04-2033 12:00 -rep 0\";","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"jeromeongithub"},"content":"            Command command2 \u003d parser.parseCommand(sampleInput2);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"jeromeongithub"},"content":"            command2.execute(taskList, null, ui);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"jeromeongithub"},"content":"            // Save modified task list object","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"jeromeongithub"},"content":"            storage.save(taskList, config);","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"jeromeongithub"},"content":"            // convert task list object to a json string","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"jeromeongithub"},"content":"            String taskListAsJson \u003d gson.toJson(taskList);","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"jeromeongithub"},"content":"            // read PROPER_SAVE_FILE as a string","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"jeromeongithub"},"content":"            String savedTaskListString \u003d new String(Files.readAllBytes(Paths.get(PROPER_DATA_SAVE_FILE)));","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"jeromeongithub"},"content":"            // compare the 2 strings","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"jeromeongithub"},"content":"            assertEquals(taskListAsJson, savedTaskListString);","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"jeromeongithub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"jeromeongithub"},"content":"            // no exception will be thrown, so the program will not reach this line","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"jeromeongithub"},"content":"            fail();","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"jeromeongithub"},"content":"    void saveData_directoryAsFilePath_exceptionThrown() {","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"jeromeongithub"},"content":"            Storage storageDirectory \u003d new Storage(TEST_DATA_FOLDER, TEST_DATA_FOLDER);","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"jeromeongithub"},"content":"            storageDirectory.save(taskList, config);","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"jeromeongithub"},"content":"            // The test should not reach the following line","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"jeromeongithub"},"content":"            fail();","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FailedSaveException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"jeromeongithub"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"jeromeongithub"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"jeromeongithub"},"content":"    void loadData_fileWithInvalidData_exceptionThrown() {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"jeromeongithub"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"jeromeongithub"},"content":"            Storage storageInvalid \u003d new Storage(INVALID_SAVE_FILE, INVALID_SAVE_FILE);","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"jeromeongithub"},"content":"            taskList \u003d storageInvalid.loadData();","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"jeromeongithub"},"content":"            // The test should not reach the following line","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"jeromeongithub"},"content":"            fail();","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"jeromeongithub"},"content":"        } catch (FailedLoadDataException e) {","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"jeromeongithub"},"content":"            // this exception will be thrown","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"jeromeongithub"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"jeromeongithub"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"jeromeongithub"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"jeromeongithub"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"jeromeongithub":90}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"ERJUNZE"},"content":"pause","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"ERJUNZE":1,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ERJUNZE"},"content":"rm data.json","lastModifiedDate":"2023-04-08"},{"lineNumber":14,"author":{"gitId":"ERJUNZE"},"content":"rm config.json","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ERJUNZE"},"content":"diff \u003c(tr -d \u0027\\r\u0027 \u003cACTUAL.TXT) \u003c(tr -d \u0027\\r\u0027 \u003cEXPECTED.TXT)","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ERJUNZE":3,"-":21}}]
