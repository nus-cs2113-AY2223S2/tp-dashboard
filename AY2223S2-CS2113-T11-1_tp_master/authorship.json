[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :classes","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"   ","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"   ","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"   What is your name?","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"## Build automation using Gradle","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"## Testing","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"### I/O redirection tests","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"### JUnit tests","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"## Checkstyle","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"## CI using GitHub Actions","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"## Documentation","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":50,"-":14}},{"path":"src/main/java/seedu/duck/Duck.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"public class Duck {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"    /** Runs the Duck bot */","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"    private static void runDuck() throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        Ui.greetingMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"        Storage.tryLoad(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"        String line;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"        Parser.processCommand(tasks, line, in);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"        Ui.exitMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"thant"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"        runDuck();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":3,"jeraldgau":26}},{"path":"src/main/java/seedu/duck/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"public class Parser {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"     * Returns boolean value of true if input String is an integer,","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"     * else returns boolean value of false","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"     * @param word String input to check if it is an integer","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"     * @return true if input String is an integer, otherwise false","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    public static boolean isNumeric(String word) {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        int valueToConvert;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"            valueToConvert \u003d Integer.parseInt(word);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"            // Empty catch block, since the only purpose is to return false","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"            // if try block fails.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"        return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"     * Processes the user input and executes the appropriate command","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of user input","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"     * @param in The input from scanner","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"thant"},"content":"    static void processCommand(ArrayList\u003cTask\u003e tasks, String line, Scanner in) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"        while (!line.equals(\"bye\")) { // Exits the program if input is \"bye\"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"            if (line.isBlank()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"                Ui.emptyCommandMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"            } else if (line.equals(\"list\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"                // List out all the tasks added","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"                Ui.list(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"            } else if (line.equals(\"help\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"                // List out all the tasks added","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"                Ui.help();","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"unmark\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"                // Mark a task as not done","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"                TaskList.unmarkTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"                Storage.trySave(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"mark\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"                // Mark a task as done","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"                TaskList.markTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"                Storage.trySave(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"delete\") \u0026\u0026 (words.length \u003d\u003d 2) \u0026\u0026 (isNumeric(words[1]))) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"                // Delete a task","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"                TaskList.deleteTask(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"                Storage.trySave(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"            } else if (words[0].equals(\"find\") \u0026\u0026 (words.length \u003e 1)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"                // Find tasks that contain a keyword","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"                Ui.find(tasks, words);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"            } else if (words[0].equals(\"priority\") \u0026\u0026 (words.length \u003d\u003d 3)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"thant"},"content":"                // Find tasks that contain a keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"thant"},"content":"                TaskList.setPriority(tasks,words);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"thant"},"content":"                Storage.trySave(tasks);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"thant"},"content":"            } else if (words[0].equals(\"clear\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"thant"},"content":"                if (Ui.doubleCheck()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"thant"},"content":"                    // Find tasks that contain a keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"thant"},"content":"                    tasks.clear();","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"thant"},"content":"                    Task.clearCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"thant"},"content":"                    System.out.println(\"\\t Got it, all tasks have been cleared.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"thant"},"content":"                    Storage.clearTask();","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"                } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"thant"},"content":"                    System.out.println(\"\\t Process cancelled.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"thant"},"content":"                    Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"thant"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"                // Adding a task to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"                TaskList.addTask(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"                Storage.trySave(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"     * Process the array of words from the user input and extracts the","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"jeraldgau"},"content":"     * keywords into a single string to use for the find function","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"jeraldgau"},"content":"     * @return The keywords string to use for the find function","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"    static String processKeywords(String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jeraldgau"},"content":"        String rawKeyword \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"            rawKeyword +\u003d (\" \" + words[i]);","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"        String keyword \u003d rawKeyword.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"        return keyword;","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":23,"jeraldgau":85}},{"path":"src/main/java/seedu/duck/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.exception.IllegalSchoolClassException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.exception.expiredDateException;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.exception.startAfterEndException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Event;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.SchoolClass;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Todo;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"import java.io.File;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"thant"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"public class Storage {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    static final String SAVEPATH \u003d \"data/savedata.txt\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"    static final String SAVEFOLDER \u003d \"data\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"     * Load tasks from save data into the list","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"    static void loadTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"            loadDeadline(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/class\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"            loadSchoolClass(line, tasks);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/from\") || line.contains(\"/to\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"            loadEvent(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"            loadTodo(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"thant"},"content":"    static void clearTask() throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"        {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"                FileWriter fw \u003d new FileWriter(SAVEPATH, false);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"                PrintWriter pw \u003d new PrintWriter(fw, false);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"                pw.flush();","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"                pw.close();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"thant"},"content":"                fw.close();","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"thant"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"thant"},"content":"                System.out.println(\"Exception have been caught\");","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"thant"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"     * Adds a _Todo_ into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"    static void loadTodo(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"thant"},"content":"        String description \u003d line.substring(0, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"thant"},"content":"        Todo currTodo \u003d new Todo(description);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"thant"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"thant"},"content":"        currTodo.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"     * Adds an event into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"    static void loadEvent(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"        String start \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"        String end \u003d line.substring(line.indexOf(\"/to\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"thant"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3,line.indexOf(\"\u003cp\u003e\") + 4).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"jeraldgau"},"content":"        Event currEvent \u003d new Event(description, start, end);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"        currEvent.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"jeraldgau"},"content":"     * Adds a schoolClass to the list without generating messages,","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the user","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"    static void loadSchoolClass(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/class\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"jeraldgau"},"content":"        String className \u003d line.substring(line.indexOf(\"/class\") + 6, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"jeraldgau"},"content":"        String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"jeraldgau"},"content":"        String endString \u003d line.substring(line.indexOf(\"/to\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"jeraldgau"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3,line.indexOf(\"\u003cp\u003e\") + 4).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"jeraldgau"},"content":"        SchoolClass currSchoolClass \u003d new SchoolClass(className, description, startString, endString);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"jeraldgau"},"content":"        currSchoolClass.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currSchoolClass);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"jeraldgau"},"content":"     * Adds a deadline into the list without generating messages,","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"     * to be used when loading from save data.","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"    static void loadDeadline(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"jeraldgau"},"content":"        String deadline \u003d line.substring(line.indexOf(\"/by\") + 3, line.indexOf(\"\u003cp\u003e\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"thant"},"content":"        String priority \u003d line.substring(line.indexOf(\"\u003cp\u003e\") + 3,line.indexOf(\"\u003cp\u003e\") + 4).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"        Deadline currDeadline \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"thant"},"content":"        currDeadline.setPriority(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"        tasks.add(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"     * Load the task status of a task from the save data","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"jeraldgau"},"content":"     * @param doneStatus The done status of the current task","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"jeraldgau"},"content":"    static void loadTaskStatus(ArrayList\u003cTask\u003e tasks, String doneStatus) {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"jeraldgau"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber).markAsNotDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"     * Saves the tasks in the list to the save file","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"    static void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"jeraldgau"},"content":"        if (f.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"jeraldgau"},"content":"            f.delete();","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"        f.createNewFile();","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"jeraldgau"},"content":"        FileWriter fw \u003d new FileWriter(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"jeraldgau"},"content":"        for (Task currTask : tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"jeraldgau"},"content":"            fw.write(currTask.toSaveString());","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"jeraldgau"},"content":"        fw.close();","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"jeraldgau"},"content":"     * Try to save, shows error message if saving fails","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"    static void trySave(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"jeraldgau"},"content":"            save(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Saving error.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"jeraldgau"},"content":"     * Load the save data","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"jeraldgau"},"content":"    static void load(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"jeraldgau"},"content":"        File folder \u003d new File(SAVEFOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"jeraldgau"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"            new File(SAVEFOLDER).mkdir();","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"        File f \u003d new File(SAVEPATH);","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"        if (!f.exists()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"            f.createNewFile();","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"            String[] formattedInput \u003d line.split(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"jeraldgau"},"content":"            String doneStatus \u003d formattedInput[0];","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"jeraldgau"},"content":"            String command \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"jeraldgau"},"content":"            for (int i \u003d 1; i \u003c formattedInput.length; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d formattedInput[i];","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"jeraldgau"},"content":"                command +\u003d \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"            loadTask(command, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"            loadTaskStatus(tasks, doneStatus);","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"            Task.incrementCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"     * Try to load the save data, shows error message if loading fails","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"    static void tryLoad(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"jeraldgau"},"content":"            load(tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"Error loading save file.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":32,"jeraldgau":194}},{"path":"src/main/java/seedu/duck/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"import seedu.duck.exception.*;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Event;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.SchoolClass;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Todo;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"thant"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"thant"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"thant"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":" * Contains operations to manipulate the task list","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"public class TaskList {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    static void addTask(String line, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"        if (line.contains(\"/by\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"            // Adding a Deadline","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"                addDeadline(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalDeadlineException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"                Ui.deadlineErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"thant"},"content":"            } catch (expiredDateException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"                Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"thant"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"                Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/class\")){","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"            // Adding a SchoolClass","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"                addSchoolClass(line, tasks);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalSchoolClassException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"                Ui.eventErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"            } catch (expiredDateException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"                Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"            } catch (startAfterEndException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"                Ui.startAfterEndErrorMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"                Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"        } else if (line.contains(\"/from\") || line.contains(\"/to\")) {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"            // Adding an Event","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"                addEvent(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"            } catch (IllegalEventException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"                Ui.eventErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"            } catch (expiredDateException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"                Ui.expiredErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"            } catch (startAfterEndException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"                Ui.startAfterEndErrorMessage();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"                Ui.invalidDateTimeMessage();","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"            // Adding a _Todo_","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"            try {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"                addTodo(line, tasks);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"                Task.incrementCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"            } catch (IllegalTodoException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jeraldgau"},"content":"                Ui.todoErrorMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"     * Adds a _Todo_ to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"    static void addTodo(String line, ArrayList\u003cTask\u003e tasks) throws IllegalTodoException {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"        if (line.isBlank()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalTodoException();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"            Todo currTodo \u003d new Todo(line);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currTodo);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"thant"},"content":"    static void setPriority(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"thant"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"thant"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"thant"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"thant"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"thant"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"thant"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"thant"},"content":"            tasks.get(taskNumber - 1).setPriority(words[2]);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"thant"},"content":"            // Printing out marked as done message","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"thant"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"            System.out.println(\"\\t Understood. The task\u0027s new priority is:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"thant"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1).getPriority());","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"thant"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"jeraldgau"},"content":"     * Adds an event to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"thant"},"content":"    static void addEvent(String line, ArrayList\u003cTask\u003e tasks) throws IllegalEventException, startAfterEndException,","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"thant"},"content":"            expiredDateException {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"thant"},"content":"        String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"thant"},"content":"        String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"thant"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"thant"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"thant"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"thant"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"thant"},"content":"            throw new startAfterEndException();","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"thant"},"content":"        } else if (start.isBefore(LocalDateTime.now()) || end.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"thant"},"content":"            throw new expiredDateException();","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"thant"},"content":"        } else if (description.isBlank() || startString.isBlank() || endString.isBlank()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"thant"},"content":"            Event currEvent \u003d new Event(description, startString, endString);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currEvent);","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"jeraldgau"},"content":"     * Adds a schoolClass to the list","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the user","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"    static void addSchoolClass(String line, ArrayList\u003cTask\u003e tasks) throws IllegalSchoolClassException, startAfterEndException,","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"            expiredDateException {","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/class\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"jeraldgau"},"content":"        String className \u003d line.substring(line.indexOf(\"/class\") + 6, line.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"jeraldgau"},"content":"        String startString \u003d line.substring(line.indexOf(\"/from\") + 5, line.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"jeraldgau"},"content":"        String endString \u003d line.substring(line.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"jeraldgau"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"jeraldgau"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startString, dateFormat);","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"jeraldgau"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endString, dateFormat);","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"jeraldgau"},"content":"        if (start.isAfter(end)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"jeraldgau"},"content":"            throw new startAfterEndException();","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"        } else if (start.isBefore(LocalDateTime.now()) || end.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"            throw new expiredDateException();","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"        } else if (className.isBlank() || startString.isBlank() || endString.isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalSchoolClassException();","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"            SchoolClass currSchoolClass \u003d new SchoolClass(className, description, startString, endString);","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currSchoolClass);","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currSchoolClass);","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"jeraldgau"},"content":"     * Adds a deadline to the list","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"jeraldgau"},"content":"     * @param line The line of input from the user","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"thant"},"content":"    static void addDeadline(String line, ArrayList\u003cTask\u003e tasks) throws IllegalDeadlineException, expiredDateException {","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"jeraldgau"},"content":"        String description \u003d line.substring(0, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"thant"},"content":"        String deadlineString \u003d line.substring(line.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"thant"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"thant"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateFormat);","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"jeraldgau"},"content":"        //System.out.println(description.isBlank());","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"thant"},"content":"        if (description.isBlank() || deadlineString.isBlank()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"jeraldgau"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"thant"},"content":"        } else if (deadline.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"thant"},"content":"            throw new expiredDateException();","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"thant"},"content":"            Deadline currDeadline \u003d new Deadline(description, deadlineString);","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"jeraldgau"},"content":"            tasks.add(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"jeraldgau"},"content":"            Ui.addedTaskMessage(currDeadline);","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"jeraldgau"},"content":"     * Marks a task as done","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"jeraldgau"},"content":"    static void markTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as done message","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"jeraldgau"},"content":"     * Marks a task as not done","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"    static void unmarkTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"            tasks.get(taskNumber - 1).markAsNotDone();","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"            // Printing out marked as not done message","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t Understood. I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"jeraldgau"},"content":"            Ui.borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"jeraldgau"},"content":"     * Deletes a task from the list","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"jeraldgau"},"content":"    static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"jeraldgau"},"content":"        int taskNumber \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"jeraldgau"},"content":"        if (taskNumber \u003e taskCount) {","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"jeraldgau"},"content":"            // Input task number exceeds the number of tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"jeraldgau"},"content":"            Ui.exceedTaskNumberMessage(taskNumber);","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"jeraldgau"},"content":"            Task taskToDelete \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"jeraldgau"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":240,"author":{"gitId":"jeraldgau"},"content":"            Task.decrementCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"jeraldgau"},"content":"            Ui.deleteTaskMessage(taskToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":50,"jeraldgau":194}},{"path":"src/main/java/seedu/duck/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"import seedu.duck.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"thant"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"public class Ui {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"     * Prints out all currently stored tasks in the list","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    static void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"        int taskCount \u003d Task.getTaskCount();","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"     * Finds tasks in the list that contain keywords input by the user","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"     * @param tasks The array list of tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"     * @param words The array of words generated from the user input","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    static void find(ArrayList\u003cTask\u003e tasks, String[] words) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"        ArrayList\u003cTask\u003e matchingResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"        String keyword \u003d Parser.processKeywords(words);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"                matchingResults.add(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"                matchCount++;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"        printFindResults(matchingResults, matchCount);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"     * Prints the results of the find command","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"     * @param matchingResults The array list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"     * @param matchCount The number of tasks in the list that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"jeraldgau"},"content":"    private static void printFindResults(ArrayList\u003cTask\u003e matchingResults, int matchCount) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"jeraldgau"},"content":"        if (matchingResults.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"jeraldgau"},"content":"            noMatchMessage();","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"jeraldgau"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"            printMatchingList(matchingResults, matchCount);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"     * Prints the list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jeraldgau"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jeraldgau"},"content":"     * @param matchingResults The array list of tasks that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"     * @param matchCount The number of tasks in the list that contain the keywords","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"    static void printMatchingList(ArrayList\u003cTask\u003e matchingResults, int matchCount) {","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"        for (int i \u003d 0; i \u003c matchCount; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"            System.out.println(\"\\t \" + (i + 1) + \".\" + matchingResults.get(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"    /** Prints the border for opening or closing messages */","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"    static void borderLine() {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t____________________________________________________________\");","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"    private static void noMatchMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t There are no matching tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"    static void emptyCommandMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please enter a non-empty command.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"thant"},"content":"    static boolean doubleCheck(){","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"thant"},"content":"        System.out.println(\"THIS IS AN IRREVERSIBLE PROCESS. ARE YOU SURE? Y/N\");","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"thant"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"thant"},"content":"        String line;","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"thant"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"thant"},"content":"        return Objects.equals(line, \"Y\");","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"thant"},"content":"    static void help() {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （`･v･´ ）: Here are the commands you can give me:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - list: I\u0027ll list out all the tasks you have recorded.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - clear: The list will be cleared. This in an irreversible process.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - mark \u003ctask_number\u003e: I\u0027ll mark that task as done.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - unmark \u003ctask_number\u003e: I\u0027ll mark that task as undone.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - delete \u003ctask_number\u003e: I\u0027ll delete that task from your list.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t - find \u003ckeyword\u003e: I\u0027ll find the tasks in your list that contain the keyword.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - priority \u003ctask_number\u003e \u003c1/2/3\u003e: I\u0027ll set the priority of a given task as\");","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t                                   1:Low, 2:Medium and 3:High.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t - bye: I will shut down my program.\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Here are the following ways to input tasks:\");","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Deadlines: \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t            (eg. Eat bread /by 2023-03-15 2015)\");","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t    Events: \u003cdescription\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t            (eg. Meeting /from 2023-03-15 2015 /to 2023-03-15 2215)\");","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t   Classes: \u003cdescription\u003e /class \u003cclass_name\u003e /from \u003cyyyy-MM-dd HHmm\u003e /to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t            (eg. Bring laptop /class CS2113 /from 2023-03-15 1100 /to 2023-03-15 1200)\");","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t      Todo: \u003cdescription\u003e\");","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t            (eg. Water the plants) \\n\");","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （`･v･´ ）: How else may I assist you today, human?\");","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"jeraldgau"},"content":"    static void addedTaskMessage(Task currentTask) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Alright, I have added this task: \\n\\t\\t\" + currentTask);","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + (Task.getTaskCount() + 1) + \" tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"jeraldgau"},"content":"    static void deleteTaskMessage(Task taskToDelete) {","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Understood. I have removed this task:\");","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t\\t\" + taskToDelete);","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t You now have \" + Task.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"jeraldgau"},"content":"    static void exceedTaskNumberMessage(int taskNumber) {","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Task \" + taskNumber + \" does not exist.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"jeraldgau"},"content":"    static void todoErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"thant"},"content":"    static void expiredErrorMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Quack! I know humans wish to undo their past mistakes, \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"thant"},"content":"                \"but the start date has already passed!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"thant"},"content":"    static void startAfterEndErrorMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Quack! Somehow this human has time travelled, \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"thant"},"content":"                \"and the start date seems to be after the end date! \");","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"thant"},"content":"        borderLine();","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"jeraldgau"},"content":"    static void eventErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description, start time and end time\");","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"jeraldgau"},"content":"    static void deadlineErrorMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid description and deadline.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"jeraldgau"},"content":"    static void schoolClassErrorMessage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Error. Please enter a valid class name, description, start time and end time\");","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"jeraldgau"},"content":"    static void invalidDateTimeMessage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please check the inputted format human!\\n\" +","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"jeraldgau"},"content":"                \"\\t There are only 24 hours in a day in Duck World, and 12 months a year...\\n\");","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Please try again!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"jeraldgau"},"content":"    /** Prints the startup message, includes instructions on available commands */","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"jeraldgau"},"content":"    static void greetingMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （`･v･´ ）: Nice to meet you human. As you can see,  I\u0027m a Duck.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （´˘v˘´ ）: As a Duck, I can only understand simple commands. \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"thant"},"content":"                \"Human speech is so confusing!\");","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （´˘v˘´ ）: That being said, I am a smart Duck. \" +","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"thant"},"content":"                \"If you wish to know what I understand, just enter \u0027help\u0027.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"thant"},"content":"        System.out.println(\"\\t （`･v･´ ）: How may I assist you today, human?\");","lastModifiedDate":"2023-03-11"},{"lineNumber":207,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"jeraldgau"},"content":"    /** Prints the exiting message when closing the program */","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"jeraldgau"},"content":"    static void exitMessage() {","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"jeraldgau"},"content":"        System.out.println(\"\\t Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"jeraldgau"},"content":"        borderLine();","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":53,"jeraldgau":164}},{"path":"src/main/java/seedu/duck/exception/IllegalDeadlineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalDeadlineException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/IllegalEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalEventException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/IllegalSchoolClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalSchoolClassException extends Exception{","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jeraldgau":4}},{"path":"src/main/java/seedu/duck/exception/IllegalTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class IllegalTodoException extends Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":5}},{"path":"src/main/java/seedu/duck/exception/expiredDateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"public class expiredDateException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"thant":5}},{"path":"src/main/java/seedu/duck/exception/startAfterEndException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thant"},"content":"package seedu.duck.exception;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"public class startAfterEndException extends Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"thant":5}},{"path":"src/main/java/seedu/duck/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String by;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    public void setDeadline(String deadline) {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        by \u003d deadline;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return by;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /by \" + getDeadline() + \" \u003cp\u003e\" + getPriorityIndex() + System.lineSeparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":28}},{"path":"src/main/java/seedu/duck/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String start; // Start date/time","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    private String end;   // End date/time","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"        return start;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"        return end;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /from \" + getStart() + \" /to \" + getEnd() +","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"                \" \u003cp\u003e\" + getPriorityIndex() + System.lineSeparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"                + \" to: \" + end + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":40}},{"path":"src/main/java/seedu/duck/task/SchoolClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class SchoolClass extends Task{","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"    private String className; // Name of class","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    private String start; // Start date/time","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    private String end;   // End date/time","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"    public SchoolClass(String className, String description, String start, String end) {","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String getClassName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return className;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jeraldgau"},"content":"    public void setClassName(String className) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jeraldgau"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    public String getStart() {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"        return start;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jeraldgau"},"content":"    public void setStart(String start) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jeraldgau"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"    public String getEnd() {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"        return end;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"    public void setEnd(String end) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" /class \" + getClassName() + \" /from \" + getStart() + \" /to \"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"                + getEnd() + \" \u003cp\u003e\" + getPriorityIndex() + System.lineSeparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jeraldgau"},"content":"        if (getDescription().isBlank()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jeraldgau"},"content":"            return \"[C]\" + \"[\" + getStatusIcon() + \"] \" + className + \" (from: \" + start","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jeraldgau"},"content":"                    + \" to: \" + end + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jeraldgau"},"content":"        return \"[C]\" + \"[\" + getStatusIcon() + \"] \" + className + \": \" + getDescription() +","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jeraldgau"},"content":"                \" (from: \" + start + \" to: \" + end + \")\" + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jeraldgau":54}},{"path":"src/main/java/seedu/duck/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"public class Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"thant"},"content":"    private static int taskCount;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"    private String description;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"thant"},"content":"    private int priority;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"    public Task(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"thant"},"content":"        this.priority \u003d 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"thant"},"content":"    public void setPriority(String priority) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"thant"},"content":"        this.priority \u003d Integer.parseInt(priority);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"jeraldgau"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"jeraldgau"},"content":"        return this.description;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"thant"},"content":"    public static void clearCount() {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"thant"},"content":"        taskCount \u003d 0;}","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jeraldgau"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"jeraldgau"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"jeraldgau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"jeraldgau"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"jeraldgau"},"content":"        if(isDone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"jeraldgau"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"jeraldgau"},"content":"            return \"X\";","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"jeraldgau"},"content":"        return \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"thant"},"content":"    public String getPriority() {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"thant"},"content":"        if (priority \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"thant"},"content":"            return \"Low priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"thant"},"content":"        } else if(priority \u003d\u003d 2) {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"thant"},"content":"            return \"Medium priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"thant"},"content":"        } else if(priority \u003d\u003d 3) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"thant"},"content":"            // Mark done task with X","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"thant"},"content":"            return \"High priority.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"thant"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"thant"},"content":"        return \"No priority established.\";","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"thant"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"thant"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"jeraldgau"},"content":"    public int getPriorityIndex() {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jeraldgau"},"content":"        return this.priority;","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"jeraldgau"},"content":"    public static void incrementCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"jeraldgau"},"content":"        taskCount++;","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"jeraldgau"},"content":"    public static void decrementCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"jeraldgau"},"content":"        taskCount--;","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"jeraldgau"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"jeraldgau"},"content":"        return taskCount;","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"jeraldgau"},"content":"    public String getDoneConditionString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"jeraldgau"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"jeraldgau"},"content":"            return \"1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"jeraldgau"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"jeraldgau"},"content":"        return \"0\";","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"jeraldgau"},"content":"        return getDoneConditionString() + \" \" + getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"jeraldgau"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"thant":24,"jeraldgau":67}},{"path":"src/main/java/seedu/duck/task/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck.task;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"jeraldgau"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"jeraldgau"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"jeraldgau"},"content":"        super(description);","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"jeraldgau"},"content":"    public String toSaveString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"jeraldgau"},"content":"        return super.toSaveString() + \" \u003cp\u003e\" + getPriorityIndex() + System.lineSeparator();","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"jeraldgau"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"jeraldgau"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"jeraldgau"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"jeraldgau"},"content":"        return \"[T]\" + super.toString() + \" (\" + getPriority() + \")\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jeraldgau"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"jeraldgau"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"jeraldgau":18}},{"path":"src/test/java/seedu/duck/DukeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeraldgau"},"content":"package seedu.duck;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"jeraldgau"},"content":"class DuckTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"jeraldgau":2,"-":10}}]
